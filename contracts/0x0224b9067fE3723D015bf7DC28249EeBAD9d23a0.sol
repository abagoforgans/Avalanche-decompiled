contract main {




// =====================  Runtime code  =====================


#
#  - sub_19217b58(?)
#  - transferFrom(address arg1, address arg2, uint256 arg3)
#  - cashoutAll()
#  - cashoutReward(uint256 arg1)
#  - sub_7197fc9e(?)
#  - sub_f8b85ec3(?)
#
const sub_ca11899f(?) = '', 0


uint8 stor0;
uint8 stor0; offset 8
uint16 stor0;
array of struct stor1;
array of uint256 stor2;
array of uint256 stor3;
array of uint256 stor4;
array of uint256 stor5;
array of struct stor6;
array of struct stor101;
array of struct stor102;
mapping of address ownerOf;
mapping of uint256 balanceOf;
mapping of address approved;
mapping of uint8 stor106;
mapping of uint256 tokenOfOwnerByIndex;
mapping of uint256 stor152;
array of uint256 tokenByIndex;
mapping of uint256 stor154;
uint8 paused;
address owner;
uint256 stor401;
address sub_4d1c3621Address;
address liquidityPoolManagerImplementationAddress;
mapping of struct stor552;
array of struct stor553;
uint256 stor554;
uint256 stor555;
uint256 stor556;
uint256 sub_e6ae99e6;
uint256 sub_20e51fd9;
uint256 stor559;
uint256 stor560;
uint256 stor561;
uint256 stor562;
uint256 stor563;
uint256 creationMinPrice;
uint256 sub_8a0bbae4;
uint256 sub_8a99d6ef;
uint256 sub_3e1fddb9;
uint256 sub_2f0da35d;
uint256 sub_9a1172c9;
uint256 sub_43348e23;
uint256 totalValueLocked;
array of uint256 stor51848699043762354786445001410105671568266765734117956169291548475795829136640;

function getApproved(uint256 arg1) payable {
    require calldata.size - 4 >= 32
    if not ownerOf[arg1]:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721: approved query for nonexistent token'
    return approved[arg1]
}

function totalSupply() payable {
    return tokenByIndex.length
}

function sub_20e51fd9(?) payable {
    return sub_20e51fd9
}

function creationMinPrice() payable {
    return creationMinPrice
}

function sub_2f0da35d(?) payable {
    return sub_2f0da35d
}

function tokenOfOwnerByIndex(address arg1, uint256 arg2) payable {
    require calldata.size - 4 >= 64
    require arg1 == arg1
    if not arg1:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721: balance query for the zero address'
    if arg2 >= balanceOf[address(arg1)]:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721Enumerable: owner index out of bounds'
    return tokenOfOwnerByIndex[address(arg1)][arg2]
}

function sub_3e1fddb9(?) payable {
    return sub_3e1fddb9
}

function sub_43348e23(?) payable {
    return sub_43348e23
}

function sub_4d1c3621(?) payable {
    return sub_4d1c3621Address
}

function tokenByIndex(uint256 arg1) payable {
    require calldata.size - 4 >= 32
    if arg1 >= tokenByIndex.length:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721Enumerable: global index out of bounds'
    return tokenByIndex[arg1]
}

function paused() payable {
    return bool(paused)
}

function ownerOf(uint256 arg1) payable {
    require calldata.size - 4 >= 32
    if not ownerOf[arg1]:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721: owner query for nonexistent token'
    return ownerOf[arg1]
}

function balanceOf(address arg1) payable {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    if not arg1:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721: balance query for the zero address'
    return balanceOf[address(arg1)]
}

function sub_8a0bbae4(?) payable {
    return sub_8a0bbae4
}

function sub_8a99d6ef(?) payable {
    return sub_8a99d6ef
}

function owner() payable {
    return owner
}

function sub_9a1172c9(?) payable {
    return sub_9a1172c9
}

function getLiquidityPoolManagerImplementation() payable {
    return liquidityPoolManagerImplementationAddress
}

function sub_e6ae99e6(?) payable {
    return sub_e6ae99e6
}

function isApprovedForAll(address arg1, address arg2) payable {
    require calldata.size - 4 >= 64
    require arg1 == arg1
    require arg2 == arg2
    return bool(stor106[address(arg1)][address(arg2)])
}

function totalValueLocked() payable {
    return totalValueLocked
}

function _fallback() payable {
    revert
}

function renounceOwnership() payable {
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    owner = 0
    emit OwnershipTransferred(owner, 0);
}

function pause() payable {
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    if paused:
        revert with 0, 'Pausable: paused'
    paused = 1
    emit Paused(msg.sender);
}

function unpause() payable {
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    if not paused:
        revert with 0, 'Pausable: not paused'
    paused = 0
    emit Unpaused(msg.sender);
}

function sub_1db01e5d(?) payable {
    require calldata.size - 4 >= 32
    require arg1 == address(arg1)
    if not address(arg1):
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721: balance query for the zero address'
    return (balanceOf[address(arg1)] > 0)
}

function recoverLostAVAX() payable {
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    call owner with:
       value eth.balance(this.address) wei
         gas 2300 * is_zero(value) wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
}

function setApprovalForAll(address arg1, bool arg2) payable {
    require calldata.size - 4 >= 64
    require arg1 == arg1
    require arg2 == arg2
    if msg.sender == arg1:
        revert with 0, 'ERC721: approve to caller'
    stor106[address(msg.sender)][address(arg1)] = uint8(arg2)
    emit ApprovalForAll(arg2, msg.sender, arg1);
}

function sub_b34e6e9f(?) payable {
    require calldata.size - 4 >= 32
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    if arg1 > 5000:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                    'Troops: Maximum fee percent to create a Troop must not be larger than 50'
    sub_8a0bbae4 = arg1
}

function changeNodeMinPrice(uint256 arg1) payable {
    require calldata.size - 4 >= 32
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    if arg1 <= 0:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                    'Troops: Minimum price to create a Troop must be above 0'
    creationMinPrice = arg1
}

function transferOwnership(address arg1) payable {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    if not arg1:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'Ownable: new owner is the zero address'
    owner = arg1
    emit OwnershipTransferred(owner, arg1);
}

function sub_698bcd8e(?) payable {
    require calldata.size - 4 >= 32
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    if sub_e6ae99e6 > arg1:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'Troops: Reward grade for Gladiator is invalid'
    if arg1 > sub_20e51fd9:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'Troops: Reward grade for Gladiator is invalid'
    stor563 = arg1
}

function sub_59cd8843(?) payable {
    require calldata.size - 4 >= 64
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    if arg1 <= 0:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'Troops: rewardPerDay must be greater than 0'
    if arg2 <= 0:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'Troops: rewardPerDay must be greater than 0'
    sub_e6ae99e6 = arg1
    sub_20e51fd9 = arg2
}

function recoverLostTokens(address arg1, address arg2, uint256 arg3) payable {
    require calldata.size - 4 >= 96
    require arg1 == arg1
    require arg2 == arg2
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    call arg1.0xa9059cbb with:
         gas gas_remaining wei
        args address(arg2), arg3
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == bool(ext_call.return_data[0])
}

function sub_9ebf906a(?) payable {
    require calldata.size - 4 >= 32
    require arg1 == address(arg1)
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    if not ext_code.size(address(arg1)):
        if address(arg1):
            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                        'Army: You can only set 0x0 or a contract address as a new implementation'
    sub_4d1c3621Address = address(arg1)
    emit 0xa3e8afe8: sub_4d1c3621Address, address(arg1)
}

function supportsInterface(bytes4 arg1) payable {
    require calldata.size - 4 >= 32
    require arg1 == Mask(32, 224, arg1)
    if 0x780e9d6300000000000000000000000000000000000000000000000000000000 == Mask(32, 224, arg1):
        return True
    if 0x80ac58cd00000000000000000000000000000000000000000000000000000000 == Mask(32, 224, arg1):
        return True
    if 0x5b5e139f00000000000000000000000000000000000000000000000000000000 == Mask(32, 224, arg1):
        return True
    return (Mask(32, 224, arg1) == 0x1ffc9a700000000000000000000000000000000000000000000000000000000)
}

function changeLiquidityPoolManagerImplementation(address arg1) payable {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    if not ext_code.size(arg1):
        if arg1:
            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                        'LiquidityPoolManagerUpgradeable: You can only set 0x0 or a contract address as a new implementation'
    liquidityPoolManagerImplementationAddress = arg1
    emit UpdateLiquidityPoolManager(liquidityPoolManagerImplementationAddress, arg1);
}

function sub_0933ca9f(?) payable {
    require calldata.size - 4 >= 160
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    if arg1 > 5000:
        revert with 0, 'Cashout fee can never exceed 50%'
    if arg2 > 5000:
        revert with 0, 'Cashout fee can never exceed 50%'
    if arg3 > 5000:
        revert with 0, 'Cashout fee can never exceed 50%'
    if arg4 > 5000:
        revert with 0, 'Cashout fee can never exceed 50%'
    if arg5 > 5000:
        revert with 0, 'Cashout fee can never exceed 50%'
    sub_8a99d6ef = arg1
    sub_3e1fddb9 = arg2
    sub_2f0da35d = arg3
    sub_9a1172c9 = arg4
    sub_43348e23 = arg5
}

function sub_82d0dcf8(?) payable {
    require calldata.size - 4 >= 128
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    if arg1 >= arg2:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'Troops: Reward grade timestamp order is invalid'
    if arg2 >= arg3:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'Troops: Reward grade timestamp order is invalid'
    if arg3 >= arg4:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'Troops: Reward grade timestamp order is invalid'
    stor559 = arg1
    stor560 = arg2
    stor561 = arg3
    stor562 = arg4
}

function approve(address arg1, uint256 arg2) payable {
    require calldata.size - 4 >= 64
    require arg1 == arg1
    if not ownerOf[arg2]:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721: owner query for nonexistent token'
    if arg1 == ownerOf[arg2]:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721: approval to current owner'
    if ownerOf[arg2] != msg.sender:
        if not stor106[stor103[arg2]][address(msg.sender)]:
            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                        'ERC721: approve caller is not owner nor approved for all'
    approved[arg2] = arg1
    if not ownerOf[arg2]:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721: owner query for nonexistent token'
    emit Approval(ownerOf[arg2], arg1, arg2);
}

function sub_eb6cc010(?) payable {
    mem[96] = 96
    mem[128] = 0
    mem[160] = 0
    mem[192] = 0
    mem[64] = (32 * stor553.length) + 384
    mem[352] = stor553.length
    s = 384
    idx = 0
    while idx < stor553.length:
        mem[0] = 553
        _16 = mem[64]
        mem[64] = mem[64] + 64
        mem[_16] = stor553[idx].field_0
        mem[_16 + 32] = stor553[idx].field_256
        mem[s] = _16
        s = s + 32
        idx = idx + 1
        continue 
    mem[224] = 352
    mem[256] = stor554
    mem[288] = stor555
    mem[320] = stor556
    _17 = mem[64]
    mem[mem[64]] = 32
    mem[mem[64] + 32] = 128
    _19 = mem[352]
    mem[mem[64] + 160] = mem[352]
    s = mem[64] + 192
    idx = 0
    t = 384
    while idx < _19:
        _30 = mem[t]
        mem[s] = mem[mem[t]]
        mem[s + 32] = mem[_30 + 32]
        s = s + 64
        idx = idx + 1
        t = t + 32
        continue 
    mem[_17 + 64] = mem[256]
    mem[_17 + 96] = mem[288]
    mem[_17 + 128] = mem[320]
    return memory
      from mem[64]
       len _17 + (64 * _19) + -mem[64] + 192
}

function initialize() payable {
    if uint8(stor0.field_8):
        if ext_code.size(this.address):
            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'Initializable: contract is already initialized'
    else:
        if uint8(stor0.field_0):
            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'Initializable: contract is already initialized'
    if not uint8(stor0.field_8):
        uint16(stor0.field_0) = 257
        revert with 0, 'Initializable: contract is not initializing'
    if bool(stor101.length):
        if bool(stor101.length) == uint255(stor101.length) * 0.5 < 32:
            revert with 0, 34
        bool(stor101.length) = 0
        uint255(stor101.length.field_1) = 14
        Mask(112, 0, stor101.length.field_144) = Mask(112, 0, 'Army Ecosystem')
        idx = 0
        while (uint255(stor101.length) * 0.5) + 31 / 32 > idx:
            stor101[idx].field_0 = 0
            idx = idx + 1
            continue 
    else:
        if bool(stor101.length) == stor101.length.field_1 % 128 < 32:
            revert with 0, 34
        bool(stor101.length) = 0
        uint255(stor101.length.field_1) = 14
        Mask(112, 0, stor101.length.field_144) = Mask(112, 0, 'Army Ecosystem')
        idx = 0
        while stor101.length.field_1 % 128 + 31 / 32 > idx:
            stor101[idx].field_0 = 0
            idx = idx + 1
            continue 
    if bool(stor102.length):
        if bool(stor102.length) == uint255(stor102.length) * 0.5 < 32:
            revert with 0, 34
        bool(stor102.length) = 0
        uint255(stor102.length.field_1) = 5
        stor102.length.field_216 % 1099511627776 = 362158182224
        idx = 0
        while (uint255(stor102.length) * 0.5) + 31 / 32 > idx:
            stor102[idx].field_0 = 0
            idx = idx + 1
            continue 
    else:
        if bool(stor102.length) == stor102.length.field_1 % 128 < 32:
            revert with 0, 34
        bool(stor102.length) = 0
        uint255(stor102.length.field_1) = 5
        stor102.length.field_216 % 1099511627776 = 362158182224
        idx = 0
        while stor102.length.field_1 % 128 + 31 / 32 > idx:
            stor102[idx].field_0 = 0
            idx = idx + 1
            continue 
    if not uint8(stor0.field_8):
        revert with 0, 'Initializable: contract is not initializing'
    owner = msg.sender
    emit OwnershipTransferred(owner, msg.sender);
    stor401 = 1
    paused = 0
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    sub_e6ae99e6 = 28935
    sub_20e51fd9 = 46299
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    if sub_e6ae99e6 > 40509:
        revert with 0, 'Troops: Reward grade for Gladiator is invalid'
    if 40509 > sub_20e51fd9:
        revert with 0, 'Troops: Reward grade for Gladiator is invalid'
    stor563 = 40509
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    stor559 = 72 * 24 * 3600
    stor560 = 168 * 24 * 3600
    stor561 = 720 * 24 * 3600
    stor562 = 240 * 10^6 * 24 * 3600
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    creationMinPrice = 20000 * 10^18
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    sub_8a0bbae4 = 3000
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    sub_8a99d6ef = 5000
    sub_3e1fddb9 = 4500
    sub_2f0da35d = 4000
    sub_9a1172c9 = 3000
    sub_43348e23 = 3000
    if not uint8(stor0.field_8):
        uint8(stor0.field_8) = 0
}

function name() payable {
    if bool(stor101.length):
        if bool(stor101.length) == uint255(stor101.length) * 0.5 < 32:
            revert with 0, 34
        if bool(stor101.length):
            if bool(stor101.length) == uint255(stor101.length) * 0.5 < 32:
                revert with 0, 34
            if Mask(256, -1, stor101.length):
                if 31 < uint255(stor101.length) * 0.5:
                    mem[128] = uint256(stor101.field_0)
                    idx = 128
                    s = 0
                    while (uint255(stor101.length) * 0.5) + 96 > idx:
                        mem[idx + 32] = stor101[s].field_256
                        idx = idx + 32
                        s = s + 1
                        continue 
                    return Array(len=2 * Mask(256, -1, stor101.length), data=mem[128 len ceil32(uint255(stor101.length) * 0.5)])
                mem[128] = 256 * Mask(248, 0, stor101.length.field_8)
        else:
            if bool(stor101.length) == stor101.length.field_1 % 128 < 32:
                revert with 0, 34
            if stor101.length.field_1 % 128:
                if 31 < stor101.length.field_1 % 128:
                    mem[128] = uint256(stor101.field_0)
                    idx = 128
                    s = 0
                    while stor101.length.field_1 % 128 + 96 > idx:
                        mem[idx + 32] = stor101[s].field_256
                        idx = idx + 32
                        s = s + 1
                        continue 
                    return Array(len=2 * Mask(256, -1, stor101.length), data=mem[128 len ceil32(uint255(stor101.length) * 0.5)])
                mem[128] = 256 * Mask(248, 0, stor101.length.field_8)
        mem[ceil32(uint255(stor101.length) * 0.5) + 192 len ceil32(uint255(stor101.length) * 0.5)] = mem[128 len ceil32(uint255(stor101.length) * 0.5)]
        if ceil32(uint255(stor101.length) * 0.5) > uint255(stor101.length) * 0.5:
            mem[(uint255(stor101.length) * 0.5) + ceil32(uint255(stor101.length) * 0.5) + 192] = 0
        return Array(len=2 * Mask(256, -1, stor101.length), data=mem[128 len ceil32(uint255(stor101.length) * 0.5)], mem[(2 * ceil32(uint255(stor101.length) * 0.5)) + 192 len 2 * ceil32(uint255(stor101.length) * 0.5)]), 
    if bool(stor101.length) == stor101.length.field_1 % 128 < 32:
        revert with 0, 34
    if bool(stor101.length):
        if bool(stor101.length) == uint255(stor101.length) * 0.5 < 32:
            revert with 0, 34
        if Mask(256, -1, stor101.length):
            if 31 < uint255(stor101.length) * 0.5:
                mem[128] = uint256(stor101.field_0)
                idx = 128
                s = 0
                while (uint255(stor101.length) * 0.5) + 96 > idx:
                    mem[idx + 32] = stor101[s].field_256
                    idx = idx + 32
                    s = s + 1
                    continue 
                return Array(len=stor101.length % 128, data=mem[128 len ceil32(stor101.length.field_1 % 128)])
            mem[128] = 256 * Mask(248, 0, stor101.length.field_8)
    else:
        if bool(stor101.length) == stor101.length.field_1 % 128 < 32:
            revert with 0, 34
        if stor101.length.field_1 % 128:
            if 31 < stor101.length.field_1 % 128:
                mem[128] = uint256(stor101.field_0)
                idx = 128
                s = 0
                while stor101.length.field_1 % 128 + 96 > idx:
                    mem[idx + 32] = stor101[s].field_256
                    idx = idx + 32
                    s = s + 1
                    continue 
                return Array(len=stor101.length % 128, data=mem[128 len ceil32(stor101.length.field_1 % 128)])
            mem[128] = 256 * Mask(248, 0, stor101.length.field_8)
    mem[ceil32(stor101.length.field_1 % 128) + 192 len ceil32(stor101.length.field_1 % 128)] = mem[128 len ceil32(stor101.length.field_1 % 128)]
    if ceil32(stor101.length.field_1 % 128) > stor101.length.field_1 % 128:
        mem[stor101.length.field_1 % 128 + ceil32(stor101.length.field_1 % 128) + 192] = 0
    return Array(len=stor101.length % 128, data=mem[128 len ceil32(stor101.length.field_1 % 128)], mem[(2 * ceil32(stor101.length.field_1 % 128)) + 192 len 2 * ceil32(stor101.length.field_1 % 128)]), 
}

function symbol() payable {
    if bool(stor102.length):
        if bool(stor102.length) == uint255(stor102.length) * 0.5 < 32:
            revert with 0, 34
        if bool(stor102.length):
            if bool(stor102.length) == uint255(stor102.length) * 0.5 < 32:
                revert with 0, 34
            if Mask(256, -1, stor102.length):
                if 31 < uint255(stor102.length) * 0.5:
                    mem[128] = uint256(stor102.field_0)
                    idx = 128
                    s = 0
                    while (uint255(stor102.length) * 0.5) + 96 > idx:
                        mem[idx + 32] = stor102[s].field_256
                        idx = idx + 32
                        s = s + 1
                        continue 
                    return Array(len=2 * Mask(256, -1, stor102.length), data=mem[128 len ceil32(uint255(stor102.length) * 0.5)])
                mem[128] = 256 * Mask(248, 0, stor102.length.field_8)
        else:
            if bool(stor102.length) == stor102.length.field_1 % 128 < 32:
                revert with 0, 34
            if stor102.length.field_1 % 128:
                if 31 < stor102.length.field_1 % 128:
                    mem[128] = uint256(stor102.field_0)
                    idx = 128
                    s = 0
                    while stor102.length.field_1 % 128 + 96 > idx:
                        mem[idx + 32] = stor102[s].field_256
                        idx = idx + 32
                        s = s + 1
                        continue 
                    return Array(len=2 * Mask(256, -1, stor102.length), data=mem[128 len ceil32(uint255(stor102.length) * 0.5)])
                mem[128] = 256 * Mask(248, 0, stor102.length.field_8)
        mem[ceil32(uint255(stor102.length) * 0.5) + 192 len ceil32(uint255(stor102.length) * 0.5)] = mem[128 len ceil32(uint255(stor102.length) * 0.5)]
        if ceil32(uint255(stor102.length) * 0.5) > uint255(stor102.length) * 0.5:
            mem[(uint255(stor102.length) * 0.5) + ceil32(uint255(stor102.length) * 0.5) + 192] = 0
        return Array(len=2 * Mask(256, -1, stor102.length), data=mem[128 len ceil32(uint255(stor102.length) * 0.5)], mem[(2 * ceil32(uint255(stor102.length) * 0.5)) + 192 len 2 * ceil32(uint255(stor102.length) * 0.5)]), 
    if bool(stor102.length) == stor102.length.field_1 % 128 < 32:
        revert with 0, 34
    if bool(stor102.length):
        if bool(stor102.length) == uint255(stor102.length) * 0.5 < 32:
            revert with 0, 34
        if Mask(256, -1, stor102.length):
            if 31 < uint255(stor102.length) * 0.5:
                mem[128] = uint256(stor102.field_0)
                idx = 128
                s = 0
                while (uint255(stor102.length) * 0.5) + 96 > idx:
                    mem[idx + 32] = stor102[s].field_256
                    idx = idx + 32
                    s = s + 1
                    continue 
                return Array(len=stor102.length % 128, data=mem[128 len ceil32(stor102.length.field_1 % 128)])
            mem[128] = 256 * Mask(248, 0, stor102.length.field_8)
    else:
        if bool(stor102.length) == stor102.length.field_1 % 128 < 32:
            revert with 0, 34
        if stor102.length.field_1 % 128:
            if 31 < stor102.length.field_1 % 128:
                mem[128] = uint256(stor102.field_0)
                idx = 128
                s = 0
                while stor102.length.field_1 % 128 + 96 > idx:
                    mem[idx + 32] = stor102[s].field_256
                    idx = idx + 32
                    s = s + 1
                    continue 
                return Array(len=stor102.length % 128, data=mem[128 len ceil32(stor102.length.field_1 % 128)])
            mem[128] = 256 * Mask(248, 0, stor102.length.field_8)
    mem[ceil32(stor102.length.field_1 % 128) + 192 len ceil32(stor102.length.field_1 % 128)] = mem[128 len ceil32(stor102.length.field_1 % 128)]
    if ceil32(stor102.length.field_1 % 128) > stor102.length.field_1 % 128:
        mem[stor102.length.field_1 % 128 + ceil32(stor102.length.field_1 % 128) + 192] = 0
    return Array(len=stor102.length % 128, data=mem[128 len ceil32(stor102.length.field_1 % 128)], mem[(2 * ceil32(stor102.length.field_1 % 128)) + 192 len 2 * ceil32(stor102.length.field_1 % 128)]), 
}

function calculateTotalDailyEmission() payable {
    if stor563 and 24 * 3600 > -1 / stor563:
        revert with 0, 17
    if 24 * 3600 * stor563 and stor556 > -1 / 24 * 3600 * stor563:
        revert with 0, 17
    if not stor553.length:
        return (24 * 3600 * stor563 * stor556 / 10^11)
    if stor553.length < 1:
        revert with 0, 17
    if stor553.length - 1 >= stor553.length:
        revert with 0, 50
    if stor553[stor553.length - 1].field_256 > block.timestamp:
        return (24 * 3600 * stor563 * stor556 / 10^11)
    if sub_20e51fd9 and 24 * 3600 > -1 / sub_20e51fd9:
        revert with 0, 17
    if 24 * 3600 * sub_20e51fd9 and stor555 > -1 / 24 * 3600 * sub_20e51fd9:
        revert with 0, 17
    if 24 * 3600 * stor563 * stor556 > !(24 * 3600 * sub_20e51fd9 * stor555):
        revert with 0, 17
    idx = stor554
    while idx < stor553.length:
        mem[0] = 553
        if stor553[idx].field_256 != 0:
            if stor553[idx].field_256 > -7776001:
                revert with 0, 17
            if stor553[idx].field_256 + (2160 * 24 * 3600) <= block.timestamp:
                if sub_20e51fd9 and 24 * 3600 > -1 / sub_20e51fd9:
                    revert with 0, 17
                if 24 * 3600 * sub_20e51fd9 and stor553[idx].field_0 > -1 / 24 * 3600 * sub_20e51fd9:
                    revert with 0, 17
                if (24 * 3600 * stor563 * stor556) + (24 * 3600 * sub_20e51fd9 * stor555) > !(24 * 3600 * sub_20e51fd9 * stor553[idx].field_0):
                    revert with 0, 17
            else:
                if block.timestamp > -86401:
                    revert with 0, 17
                if stor553[idx].field_256 > -7776001:
                    revert with 0, 17
                if stor553[idx].field_256 > -7776001:
                    revert with 0, 17
                if stor553[idx].field_256 + (2160 * 24 * 3600) < block.timestamp:
                    revert with 0, 17
                if stor553[idx].field_256 + (2160 * 24 * 3600) <= block.timestamp + (24 * 3600):
                    if sub_20e51fd9 < sub_e6ae99e6:
                        revert with 0, 17
                    if sub_20e51fd9 - sub_e6ae99e6 and stor553[idx].field_256 + -block.timestamp + (2160 * 24 * 3600) > -1 / sub_20e51fd9 - sub_e6ae99e6:
                        revert with 0, 17
                    if sub_20e51fd9 < (2160 * 24 * 3600 * sub_20e51fd9) + (stor553[idx].field_256 * sub_20e51fd9) - (block.timestamp * sub_20e51fd9) - (2160 * 24 * 3600 * sub_e6ae99e6) - (stor553[idx].field_256 * sub_e6ae99e6) + (block.timestamp * sub_e6ae99e6) / 2160 * 24 * 3600:
                        revert with 0, 17
                    if 24 * 3600 < stor553[idx].field_256 + -block.timestamp + (2160 * 24 * 3600):
                        revert with 0, 17
                    if sub_20e51fd9 and -stor553[idx].field_256 + block.timestamp - (2136 * 24 * 3600) > -1 / sub_20e51fd9:
                        revert with 0, 17
                    if sub_20e51fd9 > !(sub_20e51fd9 - ((2160 * 24 * 3600 * sub_20e51fd9) + (stor553[idx].field_256 * sub_20e51fd9) - (block.timestamp * sub_20e51fd9) - (2160 * 24 * 3600 * sub_e6ae99e6) - (stor553[idx].field_256 * sub_e6ae99e6) + (block.timestamp * sub_e6ae99e6) / 2160 * 24 * 3600)):
                        revert with 0, 17
                    if (2 * sub_20e51fd9) - ((2160 * 24 * 3600 * sub_20e51fd9) + (stor553[idx].field_256 * sub_20e51fd9) - (block.timestamp * sub_20e51fd9) - (2160 * 24 * 3600 * sub_e6ae99e6) - (stor553[idx].field_256 * sub_e6ae99e6) + (block.timestamp * sub_e6ae99e6) / 2160 * 24 * 3600) and stor553[idx].field_256 + -block.timestamp + (2160 * 24 * 3600) > -1 / (2 * sub_20e51fd9) - ((2160 * 24 * 3600 * sub_20e51fd9) + (stor553[idx].field_256 * sub_20e51fd9) - (block.timestamp * sub_20e51fd9) - (2160 * 24 * 3600 * sub_e6ae99e6) - (stor553[idx].field_256 * sub_e6ae99e6) + (block.timestamp * sub_e6ae99e6) / 2160 * 24 * 3600):
                        revert with 0, 17
                    if (2 * 2160 * 24 * 3600 * sub_20e51fd9) + (2 * stor553[idx].field_256 * sub_20e51fd9) + (2 * -1 * block.timestamp * sub_20e51fd9) - (2160 * 24 * 3600 * (2160 * 24 * 3600 * sub_20e51fd9) + (stor553[idx].field_256 * sub_20e51fd9) - (block.timestamp * sub_20e51fd9) - (2160 * 24 * 3600 * sub_e6ae99e6) - (stor553[idx].field_256 * sub_e6ae99e6) + (block.timestamp * sub_e6ae99e6) / 2160 * 24 * 3600) - (stor553[idx].field_256 * (2160 * 24 * 3600 * sub_20e51fd9) + (stor553[idx].field_256 * sub_20e51fd9) - (block.timestamp * sub_20e51fd9) - (2160 * 24 * 3600 * sub_e6ae99e6) - (stor553[idx].field_256 * sub_e6ae99e6) + (block.timestamp * sub_e6ae99e6) / 2160 * 24 * 3600) + (block.timestamp * (2160 * 24 * 3600 * sub_20e51fd9) + (stor553[idx].field_256 * sub_20e51fd9) - (block.timestamp * sub_20e51fd9) - (2160 * 24 * 3600 * sub_e6ae99e6) - (stor553[idx].field_256 * sub_e6ae99e6) + (block.timestamp * sub_e6ae99e6) / 2160 * 24 * 3600) / 2 > !((-7689600 * sub_20e51fd9) - (stor553[idx].field_256 * sub_20e51fd9) + (block.timestamp * sub_20e51fd9)):
                        revert with 0, 17
                    if ((2 * 2160 * 24 * 3600 * sub_20e51fd9) + (2 * stor553[idx].field_256 * sub_20e51fd9) + (2 * -1 * block.timestamp * sub_20e51fd9) - (2160 * 24 * 3600 * (2160 * 24 * 3600 * sub_20e51fd9) + (stor553[idx].field_256 * sub_20e51fd9) - (block.timestamp * sub_20e51fd9) - (2160 * 24 * 3600 * sub_e6ae99e6) - (stor553[idx].field_256 * sub_e6ae99e6) + (block.timestamp * sub_e6ae99e6) / 2160 * 24 * 3600) - (stor553[idx].field_256 * (2160 * 24 * 3600 * sub_20e51fd9) + (stor553[idx].field_256 * sub_20e51fd9) - (block.timestamp * sub_20e51fd9) - (2160 * 24 * 3600 * sub_e6ae99e6) - (stor553[idx].field_256 * sub_e6ae99e6) + (block.timestamp * sub_e6ae99e6) / 2160 * 24 * 3600) + (block.timestamp * (2160 * 24 * 3600 * sub_20e51fd9) + (stor553[idx].field_256 * sub_20e51fd9) - (block.timestamp * sub_20e51fd9) - (2160 * 24 * 3600 * sub_e6ae99e6) - (stor553[idx].field_256 * sub_e6ae99e6) + (block.timestamp * sub_e6ae99e6) / 2160 * 24 * 3600) / 2) - (2136 * 24 * 3600 * sub_20e51fd9) - (stor553[idx].field_256 * sub_20e51fd9) + (block.timestamp * sub_20e51fd9) and stor553[idx].field_0 > -1 / ((2 * 2160 * 24 * 3600 * sub_20e51fd9) + (2 * stor553[idx].field_256 * sub_20e51fd9) + (2 * -1 * block.timestamp * sub_20e51fd9) - (2160 * 24 * 3600 * (2160 * 24 * 3600 * sub_20e51fd9) + (stor553[idx].field_256 * sub_20e51fd9) - (block.timestamp * sub_20e51fd9) - (2160 * 24 * 3600 * sub_e6ae99e6) - (stor553[idx].field_256 * sub_e6ae99e6) + (block.timestamp * sub_e6ae99e6) / 2160 * 24 * 3600) - (stor553[idx].field_256 * (2160 * 24 * 3600 * sub_20e51fd9) + (stor553[idx].field_256 * sub_20e51fd9) - (block.timestamp * sub_20e51fd9) - (2160 * 24 * 3600 * sub_e6ae99e6) - (stor553[idx].field_256 * sub_e6ae99e6) + (block.timestamp * sub_e6ae99e6) / 2160 * 24 * 3600) + (block.timestamp * (2160 * 24 * 3600 * sub_20e51fd9) + (stor553[idx].field_256 * sub_20e51fd9) - (block.timestamp * sub_20e51fd9) - (2160 * 24 * 3600 * sub_e6ae99e6) - (stor553[idx].field_256 * sub_e6ae99e6) + (block.timestamp * sub_e6ae99e6) / 2160 * 24 * 3600) / 2) - (2136 * 24 * 3600 * sub_20e51fd9) - (stor553[idx].field_256 * sub_20e51fd9) + (block.timestamp * sub_20e51fd9):
                        revert with 0, 17
                    if (24 * 3600 * stor563 * stor556) + (24 * 3600 * sub_20e51fd9 * stor555) > !(((2 * 2160 * 24 * 3600 * sub_20e51fd9) + (2 * stor553[idx].field_256 * sub_20e51fd9) + (2 * -1 * block.timestamp * sub_20e51fd9) - (2160 * 24 * 3600 * (2160 * 24 * 3600 * sub_20e51fd9) + (stor553[idx].field_256 * sub_20e51fd9) - (block.timestamp * sub_20e51fd9) - (2160 * 24 * 3600 * sub_e6ae99e6) - (stor553[idx].field_256 * sub_e6ae99e6) + (block.timestamp * sub_e6ae99e6) / 2160 * 24 * 3600) - (stor553[idx].field_256 * (2160 * 24 * 3600 * sub_20e51fd9) + (stor553[idx].field_256 * sub_20e51fd9) - (block.timestamp * sub_20e51fd9) - (2160 * 24 * 3600 * sub_e6ae99e6) - (stor553[idx].field_256 * sub_e6ae99e6) + (block.timestamp * sub_e6ae99e6) / 2160 * 24 * 3600) + (block.timestamp * (2160 * 24 * 3600 * sub_20e51fd9) + (stor553[idx].field_256 * sub_20e51fd9) - (block.timestamp * sub_20e51fd9) - (2160 * 24 * 3600 * sub_e6ae99e6) - (stor553[idx].field_256 * sub_e6ae99e6) + (block.timestamp * sub_e6ae99e6) / 2160 * 24 * 3600) / 2 * stor553[idx].field_0) - (2136 * 24 * 3600 * sub_20e51fd9 * stor553[idx].field_0) - (stor553[idx].field_256 * sub_20e51fd9 * stor553[idx].field_0) + (block.timestamp * sub_20e51fd9 * stor553[idx].field_0)):
                        revert with 0, 17
                else:
                    if stor553[idx].field_256 + -block.timestamp + (2160 * 24 * 3600) < 24 * 3600:
                        revert with 0, 17
                    if sub_20e51fd9 < sub_e6ae99e6:
                        revert with 0, 17
                    if sub_20e51fd9 - sub_e6ae99e6 and stor553[idx].field_256 + -block.timestamp + (2136 * 24 * 3600) > -1 / sub_20e51fd9 - sub_e6ae99e6:
                        revert with 0, 17
                    if sub_20e51fd9 < (2136 * 24 * 3600 * sub_20e51fd9) + (stor553[idx].field_256 * sub_20e51fd9) - (block.timestamp * sub_20e51fd9) - (2136 * 24 * 3600 * sub_e6ae99e6) - (stor553[idx].field_256 * sub_e6ae99e6) + (block.timestamp * sub_e6ae99e6) / 2160 * 24 * 3600:
                        revert with 0, 17
                    if stor553[idx].field_256 + -block.timestamp + (2136 * 24 * 3600) > -86401:
                        revert with 0, 17
                    if sub_20e51fd9 < sub_e6ae99e6:
                        revert with 0, 17
                    if sub_20e51fd9 - sub_e6ae99e6 and stor553[idx].field_256 + -block.timestamp + (2160 * 24 * 3600) > -1 / sub_20e51fd9 - sub_e6ae99e6:
                        revert with 0, 17
                    if sub_20e51fd9 < (2160 * 24 * 3600 * sub_20e51fd9) + (stor553[idx].field_256 * sub_20e51fd9) - (block.timestamp * sub_20e51fd9) - (2160 * 24 * 3600 * sub_e6ae99e6) - (stor553[idx].field_256 * sub_e6ae99e6) + (block.timestamp * sub_e6ae99e6) / 2160 * 24 * 3600:
                        revert with 0, 17
                    if sub_20e51fd9 - ((2160 * 24 * 3600 * sub_20e51fd9) + (stor553[idx].field_256 * sub_20e51fd9) - (block.timestamp * sub_20e51fd9) - (2160 * 24 * 3600 * sub_e6ae99e6) - (stor553[idx].field_256 * sub_e6ae99e6) + (block.timestamp * sub_e6ae99e6) / 2160 * 24 * 3600) > !(sub_20e51fd9 - ((2136 * 24 * 3600 * sub_20e51fd9) + (stor553[idx].field_256 * sub_20e51fd9) - (block.timestamp * sub_20e51fd9) - (2136 * 24 * 3600 * sub_e6ae99e6) - (stor553[idx].field_256 * sub_e6ae99e6) + (block.timestamp * sub_e6ae99e6) / 2160 * 24 * 3600)):
                        revert with 0, 17
                    if (2 * sub_20e51fd9) - ((2160 * 24 * 3600 * sub_20e51fd9) + (stor553[idx].field_256 * sub_20e51fd9) - (block.timestamp * sub_20e51fd9) - (2160 * 24 * 3600 * sub_e6ae99e6) - (stor553[idx].field_256 * sub_e6ae99e6) + (block.timestamp * sub_e6ae99e6) / 2160 * 24 * 3600) - ((2136 * 24 * 3600 * sub_20e51fd9) + (stor553[idx].field_256 * sub_20e51fd9) - (block.timestamp * sub_20e51fd9) - (2136 * 24 * 3600 * sub_e6ae99e6) - (stor553[idx].field_256 * sub_e6ae99e6) + (block.timestamp * sub_e6ae99e6) / 2160 * 24 * 3600) and 24 * 3600 > -1 / (2 * sub_20e51fd9) - ((2160 * 24 * 3600 * sub_20e51fd9) + (stor553[idx].field_256 * sub_20e51fd9) - (block.timestamp * sub_20e51fd9) - (2160 * 24 * 3600 * sub_e6ae99e6) - (stor553[idx].field_256 * sub_e6ae99e6) + (block.timestamp * sub_e6ae99e6) / 2160 * 24 * 3600) - ((2136 * 24 * 3600 * sub_20e51fd9) + (stor553[idx].field_256 * sub_20e51fd9) - (block.timestamp * sub_20e51fd9) - (2136 * 24 * 3600 * sub_e6ae99e6) - (stor553[idx].field_256 * sub_e6ae99e6) + (block.timestamp * sub_e6ae99e6) / 2160 * 24 * 3600):
                        revert with 0, 17
                    if Mask(255, 1, (48 * 24 * 3600 * sub_20e51fd9) - (24 * 3600 * (2160 * 24 * 3600 * sub_20e51fd9) + (stor553[idx].field_256 * sub_20e51fd9) - (block.timestamp * sub_20e51fd9) - (2160 * 24 * 3600 * sub_e6ae99e6) - (stor553[idx].field_256 * sub_e6ae99e6) + (block.timestamp * sub_e6ae99e6) / 2160 * 24 * 3600) - (24 * 3600 * (2136 * 24 * 3600 * sub_20e51fd9) + (stor553[idx].field_256 * sub_20e51fd9) - (block.timestamp * sub_20e51fd9) - (2136 * 24 * 3600 * sub_e6ae99e6) - (stor553[idx].field_256 * sub_e6ae99e6) + (block.timestamp * sub_e6ae99e6) / 2160 * 24 * 3600)) and stor553[idx].field_0 > -1 / (48 * 24 * 3600 * sub_20e51fd9) - (24 * 3600 * (2160 * 24 * 3600 * sub_20e51fd9) + (stor553[idx].field_256 * sub_20e51fd9) - (block.timestamp * sub_20e51fd9) - (2160 * 24 * 3600 * sub_e6ae99e6) - (stor553[idx].field_256 * sub_e6ae99e6) + (block.timestamp * sub_e6ae99e6) / 2160 * 24 * 3600) - (24 * 3600 * (2136 * 24 * 3600 * sub_20e51fd9) + (stor553[idx].field_256 * sub_20e51fd9) - (block.timestamp * sub_20e51fd9) - (2136 * 24 * 3600 * sub_e6ae99e6) - (stor553[idx].field_256 * sub_e6ae99e6) + (block.timestamp * sub_e6ae99e6) / 2160 * 24 * 3600) / 2:
                        revert with 0, 17
                    if (24 * 3600 * stor563 * stor556) + (24 * 3600 * sub_20e51fd9 * stor555) > !((48 * 24 * 3600 * sub_20e51fd9) - (24 * 3600 * (2160 * 24 * 3600 * sub_20e51fd9) + (stor553[idx].field_256 * sub_20e51fd9) - (block.timestamp * sub_20e51fd9) - (2160 * 24 * 3600 * sub_e6ae99e6) - (stor553[idx].field_256 * sub_e6ae99e6) + (block.timestamp * sub_e6ae99e6) / 2160 * 24 * 3600) - (24 * 3600 * (2136 * 24 * 3600 * sub_20e51fd9) + (stor553[idx].field_256 * sub_20e51fd9) - (block.timestamp * sub_20e51fd9) - (2136 * 24 * 3600 * sub_e6ae99e6) - (stor553[idx].field_256 * sub_e6ae99e6) + (block.timestamp * sub_e6ae99e6) / 2160 * 24 * 3600) / 2 * stor553[idx].field_0):
                        revert with 0, 17
        if idx == -1:
            revert with 0, 17
        idx = idx + 1
        continue 
    return ((24 * 3600 * stor563 * stor556) + (24 * 3600 * sub_20e51fd9 * stor555) / 10^11)
}

function sub_0e127233(?) payable {
    require calldata.size - 4 >= 32
    require arg1 == address(arg1)
    if not address(arg1):
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721: balance query for the zero address'
    mem[0] = address(arg1)
    mem[32] = 104
    if balanceOf[address(arg1)] > test266151307():
        revert with 0, 65
    mem[96] = balanceOf[address(arg1)]
    mem[64] = (32 * balanceOf[address(arg1)]) + 128
    if not balanceOf[address(arg1)]:
        idx = 0
        while idx < balanceOf[address(arg1)]:
            if not address(arg1):
                revert with 0, 'ERC721: balance query for the zero address'
            if idx >= balanceOf[address(arg1)]:
                revert with 0, 'ERC721Enumerable: owner index out of bounds'
            if tokenOfOwnerByIndex[address(arg1)][idx] <= 0:
                revert with 0, 'Troops: Id must be higher than zero'
            mem[0] = tokenOfOwnerByIndex[address(arg1)][idx]
            mem[32] = 552
            _166 = mem[64]
            mem[64] = mem[64] + 256
            mem[_166] = stor552[stor151[address(arg1)][idx]].field_0
            if bool(stor552[stor151[address(arg1)][idx]].field_256):
                if bool(stor552[stor151[address(arg1)][idx]].field_256) == uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5 < 32:
                    revert with 0, 34
                _173 = mem[64]
                mem[64] = mem[64] + ceil32(uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5) + 32
                mem[_173] = uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5
                if bool(stor552[stor151[address(arg1)][idx]].field_256):
                    if bool(stor552[stor151[address(arg1)][idx]].field_256) == uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5 < 32:
                        revert with 0, 34
                    if Mask(256, -1, stor552[stor151[address(arg1)][idx]].field_256):
                        if 31 >= uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5:
                            mem[_173 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg1)][idx]].field_264)
                        else:
                            mem[0] = sha3(tokenOfOwnerByIndex[address(arg1)][idx], 552) + 1
                            mem[_173 + 32] = stor552[stor151[address(arg1)][idx]][1].field_0
                            s = _173 + 32
                            t = sha3(sha3(tokenOfOwnerByIndex[address(arg1)][idx], 552) + 1)
                            while _173 + (uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5) > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                else:
                    if bool(stor552[stor151[address(arg1)][idx]].field_256) == stor552[stor151[address(arg1)][idx]].field_257 % 128 < 32:
                        revert with 0, 34
                    if stor552[stor151[address(arg1)][idx]].field_257 % 128:
                        if 31 >= stor552[stor151[address(arg1)][idx]].field_257 % 128:
                            mem[_173 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg1)][idx]].field_264)
                        else:
                            mem[0] = sha3(tokenOfOwnerByIndex[address(arg1)][idx], 552) + 1
                            mem[_173 + 32] = stor552[stor151[address(arg1)][idx]][1].field_0
                            s = _173 + 32
                            t = sha3(sha3(tokenOfOwnerByIndex[address(arg1)][idx], 552) + 1)
                            while _173 + stor552[stor151[address(arg1)][idx]].field_257 % 128 > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                mem[_166 + 32] = _173
            else:
                if bool(stor552[stor151[address(arg1)][idx]].field_256) == stor552[stor151[address(arg1)][idx]].field_257 % 128 < 32:
                    revert with 0, 34
                _175 = mem[64]
                mem[64] = mem[64] + ceil32(stor552[stor151[address(arg1)][idx]].field_257 % 128) + 32
                mem[_175] = stor552[stor151[address(arg1)][idx]].field_257 % 128
                if bool(stor552[stor151[address(arg1)][idx]].field_256):
                    if bool(stor552[stor151[address(arg1)][idx]].field_256) == uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5 < 32:
                        revert with 0, 34
                    if Mask(256, -1, stor552[stor151[address(arg1)][idx]].field_256):
                        if 31 >= uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5:
                            mem[_175 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg1)][idx]].field_264)
                        else:
                            mem[0] = sha3(tokenOfOwnerByIndex[address(arg1)][idx], 552) + 1
                            mem[_175 + 32] = stor552[stor151[address(arg1)][idx]][1].field_0
                            s = _175 + 32
                            t = sha3(sha3(tokenOfOwnerByIndex[address(arg1)][idx], 552) + 1)
                            while _175 + (uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5) > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                else:
                    if bool(stor552[stor151[address(arg1)][idx]].field_256) == stor552[stor151[address(arg1)][idx]].field_257 % 128 < 32:
                        revert with 0, 34
                    if stor552[stor151[address(arg1)][idx]].field_257 % 128:
                        if 31 >= stor552[stor151[address(arg1)][idx]].field_257 % 128:
                            mem[_175 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg1)][idx]].field_264)
                        else:
                            mem[0] = sha3(tokenOfOwnerByIndex[address(arg1)][idx], 552) + 1
                            mem[_175 + 32] = stor552[stor151[address(arg1)][idx]][1].field_0
                            s = _175 + 32
                            t = sha3(sha3(tokenOfOwnerByIndex[address(arg1)][idx], 552) + 1)
                            while _175 + stor552[stor151[address(arg1)][idx]].field_257 % 128 > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                mem[_166 + 32] = _175
            mem[_166 + 64] = stor552[stor151[address(arg1)][idx]].field_512
            mem[_166 + 96] = stor552[stor151[address(arg1)][idx]].field_768
            mem[_166 + 128] = stor552[stor151[address(arg1)][idx]].field_1024
            mem[_166 + 160] = stor552[stor151[address(arg1)][idx]].field_1280
            mem[_166 + 192] = bool(uint8(stor552[stor151[address(arg1)][idx]].field_1536))
            mem[_166 + 224] = bool(uint8(stor552[stor151[address(arg1)][idx]].field_1544))
            if not uint8(stor552[stor151[address(arg1)][idx]].field_1536):
                revert with 0, 'Troops: This troop doesn't exist'
            if idx >= mem[96]:
                revert with 0, 50
            mem[(32 * idx) + 128] = tokenOfOwnerByIndex[address(arg1)][idx]
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            continue 
    else:
        mem[128 len 32 * balanceOf[address(arg1)]] = call.data[calldata.size len 32 * balanceOf[address(arg1)]]
        idx = 0
        while idx < balanceOf[address(arg1)]:
            if not address(arg1):
                revert with 0, 'ERC721: balance query for the zero address'
            if idx >= balanceOf[address(arg1)]:
                revert with 0, 'ERC721Enumerable: owner index out of bounds'
            if tokenOfOwnerByIndex[address(arg1)][idx] <= 0:
                revert with 0, 'Troops: Id must be higher than zero'
            mem[0] = tokenOfOwnerByIndex[address(arg1)][idx]
            mem[32] = 552
            _169 = mem[64]
            mem[64] = mem[64] + 256
            mem[_169] = stor552[stor151[address(arg1)][idx]].field_0
            if bool(stor552[stor151[address(arg1)][idx]].field_256):
                if bool(stor552[stor151[address(arg1)][idx]].field_256) == uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5 < 32:
                    revert with 0, 34
                _174 = mem[64]
                mem[64] = mem[64] + ceil32(uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5) + 32
                mem[_174] = uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5
                if bool(stor552[stor151[address(arg1)][idx]].field_256):
                    if bool(stor552[stor151[address(arg1)][idx]].field_256) == uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5 < 32:
                        revert with 0, 34
                    if Mask(256, -1, stor552[stor151[address(arg1)][idx]].field_256):
                        if 31 >= uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5:
                            mem[_174 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg1)][idx]].field_264)
                        else:
                            mem[0] = sha3(tokenOfOwnerByIndex[address(arg1)][idx], 552) + 1
                            mem[_174 + 32] = stor552[stor151[address(arg1)][idx]][1].field_0
                            s = _174 + 32
                            t = sha3(sha3(tokenOfOwnerByIndex[address(arg1)][idx], 552) + 1)
                            while _174 + (uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5) > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                else:
                    if bool(stor552[stor151[address(arg1)][idx]].field_256) == stor552[stor151[address(arg1)][idx]].field_257 % 128 < 32:
                        revert with 0, 34
                    if stor552[stor151[address(arg1)][idx]].field_257 % 128:
                        if 31 >= stor552[stor151[address(arg1)][idx]].field_257 % 128:
                            mem[_174 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg1)][idx]].field_264)
                        else:
                            mem[0] = sha3(tokenOfOwnerByIndex[address(arg1)][idx], 552) + 1
                            mem[_174 + 32] = stor552[stor151[address(arg1)][idx]][1].field_0
                            s = _174 + 32
                            t = sha3(sha3(tokenOfOwnerByIndex[address(arg1)][idx], 552) + 1)
                            while _174 + stor552[stor151[address(arg1)][idx]].field_257 % 128 > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                mem[_169 + 32] = _174
            else:
                if bool(stor552[stor151[address(arg1)][idx]].field_256) == stor552[stor151[address(arg1)][idx]].field_257 % 128 < 32:
                    revert with 0, 34
                _176 = mem[64]
                mem[64] = mem[64] + ceil32(stor552[stor151[address(arg1)][idx]].field_257 % 128) + 32
                mem[_176] = stor552[stor151[address(arg1)][idx]].field_257 % 128
                if bool(stor552[stor151[address(arg1)][idx]].field_256):
                    if bool(stor552[stor151[address(arg1)][idx]].field_256) == uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5 < 32:
                        revert with 0, 34
                    if Mask(256, -1, stor552[stor151[address(arg1)][idx]].field_256):
                        if 31 >= uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5:
                            mem[_176 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg1)][idx]].field_264)
                        else:
                            mem[0] = sha3(tokenOfOwnerByIndex[address(arg1)][idx], 552) + 1
                            mem[_176 + 32] = stor552[stor151[address(arg1)][idx]][1].field_0
                            s = _176 + 32
                            t = sha3(sha3(tokenOfOwnerByIndex[address(arg1)][idx], 552) + 1)
                            while _176 + (uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5) > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                else:
                    if bool(stor552[stor151[address(arg1)][idx]].field_256) == stor552[stor151[address(arg1)][idx]].field_257 % 128 < 32:
                        revert with 0, 34
                    if stor552[stor151[address(arg1)][idx]].field_257 % 128:
                        if 31 >= stor552[stor151[address(arg1)][idx]].field_257 % 128:
                            mem[_176 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg1)][idx]].field_264)
                        else:
                            mem[0] = sha3(tokenOfOwnerByIndex[address(arg1)][idx], 552) + 1
                            mem[_176 + 32] = stor552[stor151[address(arg1)][idx]][1].field_0
                            s = _176 + 32
                            t = sha3(sha3(tokenOfOwnerByIndex[address(arg1)][idx], 552) + 1)
                            while _176 + stor552[stor151[address(arg1)][idx]].field_257 % 128 > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                mem[_169 + 32] = _176
            mem[_169 + 64] = stor552[stor151[address(arg1)][idx]].field_512
            mem[_169 + 96] = stor552[stor151[address(arg1)][idx]].field_768
            mem[_169 + 128] = stor552[stor151[address(arg1)][idx]].field_1024
            mem[_169 + 160] = stor552[stor151[address(arg1)][idx]].field_1280
            mem[_169 + 192] = bool(uint8(stor552[stor151[address(arg1)][idx]].field_1536))
            mem[_169 + 224] = bool(uint8(stor552[stor151[address(arg1)][idx]].field_1544))
            if not uint8(stor552[stor151[address(arg1)][idx]].field_1536):
                revert with 0, 'Troops: This troop doesn't exist'
            if idx >= mem[96]:
                revert with 0, 50
            mem[(32 * idx) + 128] = tokenOfOwnerByIndex[address(arg1)][idx]
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            continue 
    mem[mem[64]] = 32
    mem[mem[64] + 32] = mem[96]
    mem[mem[64] + 64 len 32 * mem[96]] = mem[128 len 32 * mem[96]]
    return 32, mem[mem[64] + 32 len (32 * mem[96]) + 32]
}

function sub_8b4ed2d7(?) payable {
    require calldata.size - 4 >= 64
    require arg1 == address(arg1)
    if not address(arg1):
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721: balance query for the zero address'
    if balanceOf[address(arg1)] > test266151307():
        revert with 0, 65
    mem[96] = balanceOf[address(arg1)]
    mem[64] = (32 * balanceOf[address(arg1)]) + 128
    if not balanceOf[address(arg1)]:
        idx = 0
        while idx < balanceOf[address(arg1)]:
            if not address(arg1):
                revert with 0, 'ERC721: balance query for the zero address'
            if idx >= balanceOf[address(arg1)]:
                revert with 0, 'ERC721Enumerable: owner index out of bounds'
            if tokenOfOwnerByIndex[address(arg1)][idx] <= 0:
                revert with 0, 'Troops: Id must be higher than zero'
            mem[0] = tokenOfOwnerByIndex[address(arg1)][idx]
            mem[32] = 552
            _177 = mem[64]
            mem[64] = mem[64] + 256
            mem[_177] = stor552[stor151[address(arg1)][idx]].field_0
            if bool(stor552[stor151[address(arg1)][idx]].field_256):
                if bool(stor552[stor151[address(arg1)][idx]].field_256) == uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5 < 32:
                    revert with 0, 34
                _185 = mem[64]
                mem[64] = mem[64] + ceil32(uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5) + 32
                mem[_185] = uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5
                if bool(stor552[stor151[address(arg1)][idx]].field_256):
                    if bool(stor552[stor151[address(arg1)][idx]].field_256) == uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5 < 32:
                        revert with 0, 34
                    if Mask(256, -1, stor552[stor151[address(arg1)][idx]].field_256):
                        if 31 >= uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5:
                            mem[_185 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg1)][idx]].field_264)
                        else:
                            mem[0] = sha3(tokenOfOwnerByIndex[address(arg1)][idx], 552) + 1
                            mem[_185 + 32] = stor552[stor151[address(arg1)][idx]][1].field_0
                            s = _185 + 32
                            t = sha3(sha3(tokenOfOwnerByIndex[address(arg1)][idx], 552) + 1)
                            while _185 + (uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5) > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                else:
                    if bool(stor552[stor151[address(arg1)][idx]].field_256) == stor552[stor151[address(arg1)][idx]].field_257 % 128 < 32:
                        revert with 0, 34
                    if stor552[stor151[address(arg1)][idx]].field_257 % 128:
                        if 31 >= stor552[stor151[address(arg1)][idx]].field_257 % 128:
                            mem[_185 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg1)][idx]].field_264)
                        else:
                            mem[0] = sha3(tokenOfOwnerByIndex[address(arg1)][idx], 552) + 1
                            mem[_185 + 32] = stor552[stor151[address(arg1)][idx]][1].field_0
                            s = _185 + 32
                            t = sha3(sha3(tokenOfOwnerByIndex[address(arg1)][idx], 552) + 1)
                            while _185 + stor552[stor151[address(arg1)][idx]].field_257 % 128 > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                mem[_177 + 32] = _185
            else:
                if bool(stor552[stor151[address(arg1)][idx]].field_256) == stor552[stor151[address(arg1)][idx]].field_257 % 128 < 32:
                    revert with 0, 34
                _187 = mem[64]
                mem[64] = mem[64] + ceil32(stor552[stor151[address(arg1)][idx]].field_257 % 128) + 32
                mem[_187] = stor552[stor151[address(arg1)][idx]].field_257 % 128
                if bool(stor552[stor151[address(arg1)][idx]].field_256):
                    if bool(stor552[stor151[address(arg1)][idx]].field_256) == uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5 < 32:
                        revert with 0, 34
                    if Mask(256, -1, stor552[stor151[address(arg1)][idx]].field_256):
                        if 31 >= uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5:
                            mem[_187 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg1)][idx]].field_264)
                        else:
                            mem[0] = sha3(tokenOfOwnerByIndex[address(arg1)][idx], 552) + 1
                            mem[_187 + 32] = stor552[stor151[address(arg1)][idx]][1].field_0
                            s = _187 + 32
                            t = sha3(sha3(tokenOfOwnerByIndex[address(arg1)][idx], 552) + 1)
                            while _187 + (uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5) > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                else:
                    if bool(stor552[stor151[address(arg1)][idx]].field_256) == stor552[stor151[address(arg1)][idx]].field_257 % 128 < 32:
                        revert with 0, 34
                    if stor552[stor151[address(arg1)][idx]].field_257 % 128:
                        if 31 >= stor552[stor151[address(arg1)][idx]].field_257 % 128:
                            mem[_187 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg1)][idx]].field_264)
                        else:
                            mem[0] = sha3(tokenOfOwnerByIndex[address(arg1)][idx], 552) + 1
                            mem[_187 + 32] = stor552[stor151[address(arg1)][idx]][1].field_0
                            s = _187 + 32
                            t = sha3(sha3(tokenOfOwnerByIndex[address(arg1)][idx], 552) + 1)
                            while _187 + stor552[stor151[address(arg1)][idx]].field_257 % 128 > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                mem[_177 + 32] = _187
            mem[_177 + 64] = stor552[stor151[address(arg1)][idx]].field_512
            mem[_177 + 96] = stor552[stor151[address(arg1)][idx]].field_768
            mem[_177 + 128] = stor552[stor151[address(arg1)][idx]].field_1024
            mem[_177 + 160] = stor552[stor151[address(arg1)][idx]].field_1280
            mem[_177 + 192] = bool(uint8(stor552[stor151[address(arg1)][idx]].field_1536))
            mem[_177 + 224] = bool(uint8(stor552[stor151[address(arg1)][idx]].field_1544))
            if not uint8(stor552[stor151[address(arg1)][idx]].field_1536):
                revert with 0, 'Troops: This troop doesn't exist'
            if idx >= mem[96]:
                revert with 0, 50
            mem[(32 * idx) + 128] = tokenOfOwnerByIndex[address(arg1)][idx]
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            continue 
    else:
        mem[128 len 32 * balanceOf[address(arg1)]] = call.data[calldata.size len 32 * balanceOf[address(arg1)]]
        idx = 0
        while idx < balanceOf[address(arg1)]:
            if not address(arg1):
                revert with 0, 'ERC721: balance query for the zero address'
            if idx >= balanceOf[address(arg1)]:
                revert with 0, 'ERC721Enumerable: owner index out of bounds'
            if tokenOfOwnerByIndex[address(arg1)][idx] <= 0:
                revert with 0, 'Troops: Id must be higher than zero'
            mem[0] = tokenOfOwnerByIndex[address(arg1)][idx]
            mem[32] = 552
            _181 = mem[64]
            mem[64] = mem[64] + 256
            mem[_181] = stor552[stor151[address(arg1)][idx]].field_0
            if bool(stor552[stor151[address(arg1)][idx]].field_256):
                if bool(stor552[stor151[address(arg1)][idx]].field_256) == uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5 < 32:
                    revert with 0, 34
                _186 = mem[64]
                mem[64] = mem[64] + ceil32(uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5) + 32
                mem[_186] = uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5
                if bool(stor552[stor151[address(arg1)][idx]].field_256):
                    if bool(stor552[stor151[address(arg1)][idx]].field_256) == uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5 < 32:
                        revert with 0, 34
                    if Mask(256, -1, stor552[stor151[address(arg1)][idx]].field_256):
                        if 31 >= uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5:
                            mem[_186 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg1)][idx]].field_264)
                        else:
                            mem[0] = sha3(tokenOfOwnerByIndex[address(arg1)][idx], 552) + 1
                            mem[_186 + 32] = stor552[stor151[address(arg1)][idx]][1].field_0
                            s = _186 + 32
                            t = sha3(sha3(tokenOfOwnerByIndex[address(arg1)][idx], 552) + 1)
                            while _186 + (uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5) > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                else:
                    if bool(stor552[stor151[address(arg1)][idx]].field_256) == stor552[stor151[address(arg1)][idx]].field_257 % 128 < 32:
                        revert with 0, 34
                    if stor552[stor151[address(arg1)][idx]].field_257 % 128:
                        if 31 >= stor552[stor151[address(arg1)][idx]].field_257 % 128:
                            mem[_186 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg1)][idx]].field_264)
                        else:
                            mem[0] = sha3(tokenOfOwnerByIndex[address(arg1)][idx], 552) + 1
                            mem[_186 + 32] = stor552[stor151[address(arg1)][idx]][1].field_0
                            s = _186 + 32
                            t = sha3(sha3(tokenOfOwnerByIndex[address(arg1)][idx], 552) + 1)
                            while _186 + stor552[stor151[address(arg1)][idx]].field_257 % 128 > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                mem[_181 + 32] = _186
            else:
                if bool(stor552[stor151[address(arg1)][idx]].field_256) == stor552[stor151[address(arg1)][idx]].field_257 % 128 < 32:
                    revert with 0, 34
                _188 = mem[64]
                mem[64] = mem[64] + ceil32(stor552[stor151[address(arg1)][idx]].field_257 % 128) + 32
                mem[_188] = stor552[stor151[address(arg1)][idx]].field_257 % 128
                if bool(stor552[stor151[address(arg1)][idx]].field_256):
                    if bool(stor552[stor151[address(arg1)][idx]].field_256) == uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5 < 32:
                        revert with 0, 34
                    if Mask(256, -1, stor552[stor151[address(arg1)][idx]].field_256):
                        if 31 >= uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5:
                            mem[_188 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg1)][idx]].field_264)
                        else:
                            mem[0] = sha3(tokenOfOwnerByIndex[address(arg1)][idx], 552) + 1
                            mem[_188 + 32] = stor552[stor151[address(arg1)][idx]][1].field_0
                            s = _188 + 32
                            t = sha3(sha3(tokenOfOwnerByIndex[address(arg1)][idx], 552) + 1)
                            while _188 + (uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5) > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                else:
                    if bool(stor552[stor151[address(arg1)][idx]].field_256) == stor552[stor151[address(arg1)][idx]].field_257 % 128 < 32:
                        revert with 0, 34
                    if stor552[stor151[address(arg1)][idx]].field_257 % 128:
                        if 31 >= stor552[stor151[address(arg1)][idx]].field_257 % 128:
                            mem[_188 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg1)][idx]].field_264)
                        else:
                            mem[0] = sha3(tokenOfOwnerByIndex[address(arg1)][idx], 552) + 1
                            mem[_188 + 32] = stor552[stor151[address(arg1)][idx]][1].field_0
                            s = _188 + 32
                            t = sha3(sha3(tokenOfOwnerByIndex[address(arg1)][idx], 552) + 1)
                            while _188 + stor552[stor151[address(arg1)][idx]].field_257 % 128 > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                mem[_181 + 32] = _188
            mem[_181 + 64] = stor552[stor151[address(arg1)][idx]].field_512
            mem[_181 + 96] = stor552[stor151[address(arg1)][idx]].field_768
            mem[_181 + 128] = stor552[stor151[address(arg1)][idx]].field_1024
            mem[_181 + 160] = stor552[stor151[address(arg1)][idx]].field_1280
            mem[_181 + 192] = bool(uint8(stor552[stor151[address(arg1)][idx]].field_1536))
            mem[_181 + 224] = bool(uint8(stor552[stor151[address(arg1)][idx]].field_1544))
            if not uint8(stor552[stor151[address(arg1)][idx]].field_1536):
                revert with 0, 'Troops: This troop doesn't exist'
            if idx >= mem[96]:
                revert with 0, 50
            mem[(32 * idx) + 128] = tokenOfOwnerByIndex[address(arg1)][idx]
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            continue 
    idx = 0
    while idx < mem[96]:
        if idx >= mem[96]:
            revert with 0, 50
        if mem[(32 * idx) + 128] == arg2:
            return 1
        if idx == -1:
            revert with 0, 17
        idx = idx + 1
        continue 
    return 0
}

function tokenURI(uint256 arg1) payable {
    require calldata.size - 4 >= 32
    if bool(stor552[arg1].field_256):
        if bool(stor552[arg1].field_256) == uint255(stor552[arg1].field_256) * 0.5 < 32:
            revert with 0, 34
        if bool(stor552[arg1].field_256):
            if bool(stor552[arg1].field_256) == uint255(stor552[arg1].field_256) * 0.5 < 32:
                revert with 0, 34
            if Mask(256, -1, stor552[arg1].field_256):
                if 31 < uint255(stor552[arg1].field_256) * 0.5:
                    idx = 384
                    s = 0
                    while (uint255(stor552[arg1].field_256) * 0.5) + 352 > idx:
                        mem[idx + 32] = stor552[arg1][s + 1].field_256
                        idx = idx + 32
                        s = s + 1
                        continue 
        else:
            if bool(stor552[arg1].field_256) == stor552[arg1].field_257 % 128 < 32:
                revert with 0, 34
            if stor552[arg1].field_257 % 128:
                if 31 < stor552[arg1].field_257 % 128:
                    idx = 384
                    s = 0
                    while stor552[arg1].field_257 % 128 + 352 > idx:
                        mem[idx + 32] = stor552[arg1][s + 1].field_256
                        idx = idx + 32
                        s = s + 1
                        continue 
        if 1 == bool(uint8(stor552[arg1].field_1544)):
            return 32, 74, 
                   0x4568747470733a2f2f697066732e696e667572612e696f2f697066732f516d567878784b443847634575326665557062324a653344487151344b437851487443674e5a4837557968636e, mem[ceil32(uint255(stor552[arg1].field_256) * 0.5) + 490 len 22] >> 336,
                   0
        if bool(stor552[arg1].field_256):
            if bool(stor552[arg1].field_256) == uint255(stor552[arg1].field_256) * 0.5 < 32:
                revert with 0, 34
            if bool(stor552[arg1].field_256):
                if bool(stor552[arg1].field_256) == uint255(stor552[arg1].field_256) * 0.5 < 32:
                    revert with 0, 34
                if Mask(256, -1, stor552[arg1].field_256):
                    if 31 < uint255(stor552[arg1].field_256) * 0.5:
                        idx = ceil32(uint255(stor552[arg1].field_256) * 0.5) + 672
                        s = 0
                        while ceil32(uint255(stor552[arg1].field_256) * 0.5) + (uint255(stor552[arg1].field_256) * 0.5) + 640 > idx:
                            mem[idx + 32] = stor552[arg1][s + 1].field_256
                            idx = idx + 32
                            s = s + 1
                            continue 
            else:
                if bool(stor552[arg1].field_256) == stor552[arg1].field_257 % 128 < 32:
                    revert with 0, 34
                if stor552[arg1].field_257 % 128:
                    if 31 < stor552[arg1].field_257 % 128:
                        idx = ceil32(uint255(stor552[arg1].field_256) * 0.5) + 672
                        s = 0
                        while ceil32(uint255(stor552[arg1].field_256) * 0.5) + stor552[arg1].field_257 % 128 + 640 > idx:
                            mem[idx + 32] = stor552[arg1][s + 1].field_256
                            idx = idx + 32
                            s = s + 1
                            continue 
            if stor552[arg1].field_768 > !stor559:
                revert with 0, 17
            if block.timestamp <= stor552[arg1].field_768 + stor559:
                return 32, 74, 
                       0x3668747470733a2f2f697066732e696e667572612e696f2f697066732f516d5a4c474c646a7575443754416375587848444b685a63374b643237766434744b4570525a65713965624d34, mem[(2 * ceil32(uint255(stor552[arg1].field_256) * 0.5)) + 778 len 22] >> 336,
                       0
            if stor552[arg1].field_768 > !stor560:
                revert with 0, 17
            if block.timestamp <= stor552[arg1].field_768 + stor560:
                return 32, 74, 
                       0xfe68747470733a2f2f697066732e696e667572612e696f2f697066732f516d61705a565678384758754c6d6857554144686145764e6a6e6d426138597634794c7754446f455238594854, mem[(2 * ceil32(uint255(stor552[arg1].field_256) * 0.5)) + 778 len 22] >> 336,
                       0
            if stor552[arg1].field_768 > !stor561:
                revert with 0, 17
            if block.timestamp > stor552[arg1].field_768 + stor561:
                return 32, 74, 
                       0x4468747470733a2f2f697066732e696e667572612e696f2f697066732f516d5250516b565a663550796a7663774a414337326b4a51696a79446734587a54435a706e7a647a7652727772, mem[(2 * ceil32(uint255(stor552[arg1].field_256) * 0.5)) + 778 len 22] >> 336,
                       0
            return 32, 74, 
                   0x4e68747470733a2f2f697066732e696e667572612e696f2f697066732f516d57513443754e743832687a52757a74514c5076674d697a3454683456724e506b707971597a597337766134, mem[(2 * ceil32(uint255(stor552[arg1].field_256) * 0.5)) + 778 len 22] >> 336,
                   0
        if bool(stor552[arg1].field_256) == stor552[arg1].field_257 % 128 < 32:
            revert with 0, 34
        if bool(stor552[arg1].field_256):
            if bool(stor552[arg1].field_256) == uint255(stor552[arg1].field_256) * 0.5 < 32:
                revert with 0, 34
            if Mask(256, -1, stor552[arg1].field_256):
                if 31 < uint255(stor552[arg1].field_256) * 0.5:
                    idx = ceil32(uint255(stor552[arg1].field_256) * 0.5) + 672
                    s = 0
                    while ceil32(uint255(stor552[arg1].field_256) * 0.5) + (uint255(stor552[arg1].field_256) * 0.5) + 640 > idx:
                        mem[idx + 32] = stor552[arg1][s + 1].field_256
                        idx = idx + 32
                        s = s + 1
                        continue 
        else:
            if bool(stor552[arg1].field_256) == stor552[arg1].field_257 % 128 < 32:
                revert with 0, 34
            if stor552[arg1].field_257 % 128:
                if 31 < stor552[arg1].field_257 % 128:
                    idx = ceil32(uint255(stor552[arg1].field_256) * 0.5) + 672
                    s = 0
                    while ceil32(uint255(stor552[arg1].field_256) * 0.5) + stor552[arg1].field_257 % 128 + 640 > idx:
                        mem[idx + 32] = stor552[arg1][s + 1].field_256
                        idx = idx + 32
                        s = s + 1
                        continue 
        if stor552[arg1].field_768 > !stor559:
            revert with 0, 17
        if block.timestamp <= stor552[arg1].field_768 + stor559:
            return 32, 74, 
                   0x3668747470733a2f2f697066732e696e667572612e696f2f697066732f516d5a4c474c646a7575443754416375587848444b685a63374b643237766434744b4570525a65713965624d34, mem[ceil32(uint255(stor552[arg1].field_256) * 0.5) + ceil32(stor552[arg1].field_257 % 128) + 778 len 22] >> 336,
                   0
        if stor552[arg1].field_768 > !stor560:
            revert with 0, 17
        if block.timestamp <= stor552[arg1].field_768 + stor560:
            return 32, 74, 
                   0xfe68747470733a2f2f697066732e696e667572612e696f2f697066732f516d61705a565678384758754c6d6857554144686145764e6a6e6d426138597634794c7754446f455238594854, mem[ceil32(uint255(stor552[arg1].field_256) * 0.5) + ceil32(stor552[arg1].field_257 % 128) + 778 len 22] >> 336,
                   0
        if stor552[arg1].field_768 > !stor561:
            revert with 0, 17
        if block.timestamp > stor552[arg1].field_768 + stor561:
            return 32, 74, 
                   0x4468747470733a2f2f697066732e696e667572612e696f2f697066732f516d5250516b565a663550796a7663774a414337326b4a51696a79446734587a54435a706e7a647a7652727772, mem[ceil32(uint255(stor552[arg1].field_256) * 0.5) + ceil32(stor552[arg1].field_257 % 128) + 778 len 22] >> 336,
                   0
        return 32, 74, 
               0x4e68747470733a2f2f697066732e696e667572612e696f2f697066732f516d57513443754e743832687a52757a74514c5076674d697a3454683456724e506b707971597a597337766134, mem[ceil32(uint255(stor552[arg1].field_256) * 0.5) + ceil32(stor552[arg1].field_257 % 128) + 778 len 22] >> 336,
               0
    if bool(stor552[arg1].field_256) == stor552[arg1].field_257 % 128 < 32:
        revert with 0, 34
    if bool(stor552[arg1].field_256):
        if bool(stor552[arg1].field_256) == uint255(stor552[arg1].field_256) * 0.5 < 32:
            revert with 0, 34
        if Mask(256, -1, stor552[arg1].field_256):
            if 31 < uint255(stor552[arg1].field_256) * 0.5:
                idx = 384
                s = 0
                while (uint255(stor552[arg1].field_256) * 0.5) + 352 > idx:
                    mem[idx + 32] = stor552[arg1][s + 1].field_256
                    idx = idx + 32
                    s = s + 1
                    continue 
    else:
        if bool(stor552[arg1].field_256) == stor552[arg1].field_257 % 128 < 32:
            revert with 0, 34
        if stor552[arg1].field_257 % 128:
            if 31 < stor552[arg1].field_257 % 128:
                idx = 384
                s = 0
                while stor552[arg1].field_257 % 128 + 352 > idx:
                    mem[idx + 32] = stor552[arg1][s + 1].field_256
                    idx = idx + 32
                    s = s + 1
                    continue 
    if 1 == bool(uint8(stor552[arg1].field_1544)):
        return 32, 74, 
               0x4568747470733a2f2f697066732e696e667572612e696f2f697066732f516d567878784b443847634575326665557062324a653344487151344b437851487443674e5a4837557968636e, mem[ceil32(stor552[arg1].field_257 % 128) + 490 len 22] >> 336,
               0
    if bool(stor552[arg1].field_256):
        if bool(stor552[arg1].field_256) == uint255(stor552[arg1].field_256) * 0.5 < 32:
            revert with 0, 34
        if bool(stor552[arg1].field_256):
            if bool(stor552[arg1].field_256) == uint255(stor552[arg1].field_256) * 0.5 < 32:
                revert with 0, 34
            if Mask(256, -1, stor552[arg1].field_256):
                if 31 < uint255(stor552[arg1].field_256) * 0.5:
                    idx = ceil32(stor552[arg1].field_257 % 128) + 672
                    s = 0
                    while ceil32(stor552[arg1].field_257 % 128) + (uint255(stor552[arg1].field_256) * 0.5) + 640 > idx:
                        mem[idx + 32] = stor552[arg1][s + 1].field_256
                        idx = idx + 32
                        s = s + 1
                        continue 
        else:
            if bool(stor552[arg1].field_256) == stor552[arg1].field_257 % 128 < 32:
                revert with 0, 34
            if stor552[arg1].field_257 % 128:
                if 31 < stor552[arg1].field_257 % 128:
                    idx = ceil32(stor552[arg1].field_257 % 128) + 672
                    s = 0
                    while ceil32(stor552[arg1].field_257 % 128) + stor552[arg1].field_257 % 128 + 640 > idx:
                        mem[idx + 32] = stor552[arg1][s + 1].field_256
                        idx = idx + 32
                        s = s + 1
                        continue 
        if stor552[arg1].field_768 > !stor559:
            revert with 0, 17
        if block.timestamp <= stor552[arg1].field_768 + stor559:
            return 32, 74, 
                   0x3668747470733a2f2f697066732e696e667572612e696f2f697066732f516d5a4c474c646a7575443754416375587848444b685a63374b643237766434744b4570525a65713965624d34, mem[ceil32(stor552[arg1].field_257 % 128) + ceil32(uint255(stor552[arg1].field_256) * 0.5) + 778 len 22] >> 336,
                   0
        if stor552[arg1].field_768 > !stor560:
            revert with 0, 17
        if block.timestamp <= stor552[arg1].field_768 + stor560:
            return 32, 74, 
                   0xfe68747470733a2f2f697066732e696e667572612e696f2f697066732f516d61705a565678384758754c6d6857554144686145764e6a6e6d426138597634794c7754446f455238594854, mem[ceil32(stor552[arg1].field_257 % 128) + ceil32(uint255(stor552[arg1].field_256) * 0.5) + 778 len 22] >> 336,
                   0
        if stor552[arg1].field_768 > !stor561:
            revert with 0, 17
        if block.timestamp > stor552[arg1].field_768 + stor561:
            return 32, 74, 
                   0x4468747470733a2f2f697066732e696e667572612e696f2f697066732f516d5250516b565a663550796a7663774a414337326b4a51696a79446734587a54435a706e7a647a7652727772, mem[ceil32(stor552[arg1].field_257 % 128) + ceil32(uint255(stor552[arg1].field_256) * 0.5) + 778 len 22] >> 336,
                   0
        return 32, 74, 
               0x4e68747470733a2f2f697066732e696e667572612e696f2f697066732f516d57513443754e743832687a52757a74514c5076674d697a3454683456724e506b707971597a597337766134, mem[ceil32(stor552[arg1].field_257 % 128) + ceil32(uint255(stor552[arg1].field_256) * 0.5) + 778 len 22] >> 336,
               0
    if bool(stor552[arg1].field_256) == stor552[arg1].field_257 % 128 < 32:
        revert with 0, 34
    if bool(stor552[arg1].field_256):
        if bool(stor552[arg1].field_256) == uint255(stor552[arg1].field_256) * 0.5 < 32:
            revert with 0, 34
        if Mask(256, -1, stor552[arg1].field_256):
            if 31 < uint255(stor552[arg1].field_256) * 0.5:
                idx = ceil32(stor552[arg1].field_257 % 128) + 672
                s = 0
                while ceil32(stor552[arg1].field_257 % 128) + (uint255(stor552[arg1].field_256) * 0.5) + 640 > idx:
                    mem[idx + 32] = stor552[arg1][s + 1].field_256
                    idx = idx + 32
                    s = s + 1
                    continue 
    else:
        if bool(stor552[arg1].field_256) == stor552[arg1].field_257 % 128 < 32:
            revert with 0, 34
        if stor552[arg1].field_257 % 128:
            if 31 < stor552[arg1].field_257 % 128:
                idx = ceil32(stor552[arg1].field_257 % 128) + 672
                s = 0
                while ceil32(stor552[arg1].field_257 % 128) + stor552[arg1].field_257 % 128 + 640 > idx:
                    mem[idx + 32] = stor552[arg1][s + 1].field_256
                    idx = idx + 32
                    s = s + 1
                    continue 
    if stor552[arg1].field_768 > !stor559:
        revert with 0, 17
    if block.timestamp <= stor552[arg1].field_768 + stor559:
        return 32, 74, 
               0x3668747470733a2f2f697066732e696e667572612e696f2f697066732f516d5a4c474c646a7575443754416375587848444b685a63374b643237766434744b4570525a65713965624d34, mem[(2 * ceil32(stor552[arg1].field_257 % 128)) + 778 len 22] >> 336,
               0
    if stor552[arg1].field_768 > !stor560:
        revert with 0, 17
    if block.timestamp <= stor552[arg1].field_768 + stor560:
        return 32, 74, 
               0xfe68747470733a2f2f697066732e696e667572612e696f2f697066732f516d61705a565678384758754c6d6857554144686145764e6a6e6d426138597634794c7754446f455238594854, mem[(2 * ceil32(stor552[arg1].field_257 % 128)) + 778 len 22] >> 336,
               0
    if stor552[arg1].field_768 > !stor561:
        revert with 0, 17
    if block.timestamp > stor552[arg1].field_768 + stor561:
        return 32, 74, 
               0x4468747470733a2f2f697066732e696e667572612e696f2f697066732f516d5250516b565a663550796a7663774a414337326b4a51696a79446734587a54435a706e7a647a7652727772, mem[(2 * ceil32(stor552[arg1].field_257 % 128)) + 778 len 22] >> 336,
               0
    return 32, 74, 
           0x4e68747470733a2f2f697066732e696e667572612e696f2f697066732f516d57513443754e743832687a52757a74514c5076674d697a3454683456724e506b707971597a597337766134, mem[(2 * ceil32(stor552[arg1].field_257 % 128)) + 778 len 22] >> 336,
           0
}

function isNameAvailable(address arg1, string arg2) payable {
    require calldata.size - 4 >= 64
    require arg1 == arg1
    require arg2 <= test266151307()
    require arg2 + 35 < calldata.size
    if arg2.length > test266151307():
        revert with 0, 65
    if ceil32(ceil32(arg2.length)) + 97 < 96 or ceil32(ceil32(arg2.length)) + 97 > test266151307():
        revert with 0, 65
    mem[96] = arg2.length
    require arg2 + arg2.length + 36 <= calldata.size
    mem[128 len arg2.length] = arg2[all]
    mem[arg2.length + 128] = 0
    if not arg1:
        revert with 0, 'ERC721: balance query for the zero address'
    mem[0] = arg1
    mem[32] = 104
    if balanceOf[address(arg1)] > test266151307():
        revert with 0, 65
    mem[ceil32(ceil32(arg2.length)) + 97] = balanceOf[address(arg1)]
    mem[64] = ceil32(ceil32(arg2.length)) + (32 * balanceOf[address(arg1)]) + 129
    if not balanceOf[address(arg1)]:
        idx = 0
        while idx < balanceOf[address(arg1)]:
            if not arg1:
                revert with 0, 'ERC721: balance query for the zero address'
            if idx >= balanceOf[address(arg1)]:
                revert with 0, 'ERC721Enumerable: owner index out of bounds'
            if tokenOfOwnerByIndex[address(arg1)][idx] <= 0:
                revert with 0, 'Troops: Id must be higher than zero'
            mem[0] = tokenOfOwnerByIndex[address(arg1)][idx]
            mem[32] = 552
            _360 = mem[64]
            mem[64] = mem[64] + 256
            mem[_360] = stor552[stor151[address(arg1)][idx]].field_0
            if bool(stor552[stor151[address(arg1)][idx]].field_256):
                if bool(stor552[stor151[address(arg1)][idx]].field_256) == uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5 < 32:
                    revert with 0, 34
                _370 = mem[64]
                mem[64] = mem[64] + ceil32(uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5) + 32
                mem[_370] = uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5
                if bool(stor552[stor151[address(arg1)][idx]].field_256):
                    if bool(stor552[stor151[address(arg1)][idx]].field_256) == uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5 < 32:
                        revert with 0, 34
                    if Mask(256, -1, stor552[stor151[address(arg1)][idx]].field_256):
                        if 31 >= uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5:
                            mem[_370 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg1)][idx]].field_264)
                        else:
                            mem[0] = sha3(tokenOfOwnerByIndex[address(arg1)][idx], 552) + 1
                            mem[_370 + 32] = stor552[stor151[address(arg1)][idx]][1].field_0
                            s = _370 + 32
                            t = sha3(sha3(tokenOfOwnerByIndex[address(arg1)][idx], 552) + 1)
                            while _370 + (uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5) > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                else:
                    if bool(stor552[stor151[address(arg1)][idx]].field_256) == stor552[stor151[address(arg1)][idx]].field_257 % 128 < 32:
                        revert with 0, 34
                    if stor552[stor151[address(arg1)][idx]].field_257 % 128:
                        if 31 >= stor552[stor151[address(arg1)][idx]].field_257 % 128:
                            mem[_370 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg1)][idx]].field_264)
                        else:
                            mem[0] = sha3(tokenOfOwnerByIndex[address(arg1)][idx], 552) + 1
                            mem[_370 + 32] = stor552[stor151[address(arg1)][idx]][1].field_0
                            s = _370 + 32
                            t = sha3(sha3(tokenOfOwnerByIndex[address(arg1)][idx], 552) + 1)
                            while _370 + stor552[stor151[address(arg1)][idx]].field_257 % 128 > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                mem[_360 + 32] = _370
            else:
                if bool(stor552[stor151[address(arg1)][idx]].field_256) == stor552[stor151[address(arg1)][idx]].field_257 % 128 < 32:
                    revert with 0, 34
                _377 = mem[64]
                mem[64] = mem[64] + ceil32(stor552[stor151[address(arg1)][idx]].field_257 % 128) + 32
                mem[_377] = stor552[stor151[address(arg1)][idx]].field_257 % 128
                if bool(stor552[stor151[address(arg1)][idx]].field_256):
                    if bool(stor552[stor151[address(arg1)][idx]].field_256) == uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5 < 32:
                        revert with 0, 34
                    if Mask(256, -1, stor552[stor151[address(arg1)][idx]].field_256):
                        if 31 >= uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5:
                            mem[_377 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg1)][idx]].field_264)
                        else:
                            mem[0] = sha3(tokenOfOwnerByIndex[address(arg1)][idx], 552) + 1
                            mem[_377 + 32] = stor552[stor151[address(arg1)][idx]][1].field_0
                            s = _377 + 32
                            t = sha3(sha3(tokenOfOwnerByIndex[address(arg1)][idx], 552) + 1)
                            while _377 + (uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5) > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                else:
                    if bool(stor552[stor151[address(arg1)][idx]].field_256) == stor552[stor151[address(arg1)][idx]].field_257 % 128 < 32:
                        revert with 0, 34
                    if stor552[stor151[address(arg1)][idx]].field_257 % 128:
                        if 31 >= stor552[stor151[address(arg1)][idx]].field_257 % 128:
                            mem[_377 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg1)][idx]].field_264)
                        else:
                            mem[0] = sha3(tokenOfOwnerByIndex[address(arg1)][idx], 552) + 1
                            mem[_377 + 32] = stor552[stor151[address(arg1)][idx]][1].field_0
                            s = _377 + 32
                            t = sha3(sha3(tokenOfOwnerByIndex[address(arg1)][idx], 552) + 1)
                            while _377 + stor552[stor151[address(arg1)][idx]].field_257 % 128 > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                mem[_360 + 32] = _377
            mem[_360 + 64] = stor552[stor151[address(arg1)][idx]].field_512
            mem[_360 + 96] = stor552[stor151[address(arg1)][idx]].field_768
            mem[_360 + 128] = stor552[stor151[address(arg1)][idx]].field_1024
            mem[_360 + 160] = stor552[stor151[address(arg1)][idx]].field_1280
            mem[_360 + 192] = bool(uint8(stor552[stor151[address(arg1)][idx]].field_1536))
            mem[_360 + 224] = bool(uint8(stor552[stor151[address(arg1)][idx]].field_1544))
            if not uint8(stor552[stor151[address(arg1)][idx]].field_1536):
                revert with 0, 'Troops: This troop doesn't exist'
            if idx >= mem[ceil32(ceil32(arg2.length)) + 97]:
                revert with 0, 50
            mem[(32 * idx) + ceil32(ceil32(arg2.length)) + 129] = tokenOfOwnerByIndex[address(arg1)][idx]
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            continue 
        _654 = mem[ceil32(ceil32(arg2.length)) + 97]
        idx = 0
        while idx < _654:
            if idx >= mem[ceil32(ceil32(arg2.length)) + 97]:
                revert with 0, 50
            mem[0] = mem[(32 * idx) + ceil32(ceil32(arg2.length)) + 129]
            mem[32] = 552
            _660 = sha3(mem[(32 * idx) + ceil32(ceil32(arg2.length)) + 129], 552)
            _661 = mem[64]
            mem[64] = mem[64] + 256
            mem[_661] = stor552[mem[(32 * idx) + ceil32(ceil32(arg2.length)) + 129]].field_0
            if bool(stor1[_660].field_0):
                if bool(stor1[_660].field_0) == uint255(stor1[_660].field_0) * 0.5 < 32:
                    revert with 0, 34
                _692 = mem[64]
                mem[64] = mem[64] + ceil32(uint255(stor1[_660].field_0) * 0.5) + 32
                mem[_692] = uint255(stor1[_660].field_0) * 0.5
                if bool(stor1[_660].field_0):
                    if bool(stor1[_660].field_0) == uint255(stor1[_660].field_0) * 0.5 < 32:
                        revert with 0, 34
                    if Mask(256, -1, stor1[_660].field_0):
                        if 31 >= uint255(stor1[_660].field_0) * 0.5:
                            mem[_692 + 32] = 256 * Mask(248, 0, stor1[_660].field_8)
                        else:
                            mem[0] = _660 + 1
                            mem[_692 + 32] = stor[sha3(_660 + 1)]
                            s = _692 + 32
                            t = sha3(_660 + 1)
                            while _692 + (uint255(stor1[_660].field_0) * 0.5) > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                else:
                    if bool(stor1[_660].field_0) == stor1[_660].field_1 % 128 < 32:
                        revert with 0, 34
                    if stor1[_660].field_1 % 128:
                        if 31 >= stor1[_660].field_1 % 128:
                            mem[_692 + 32] = 256 * Mask(248, 0, stor1[_660].field_8)
                        else:
                            mem[0] = _660 + 1
                            mem[_692 + 32] = stor[sha3(_660 + 1)]
                            s = _692 + 32
                            t = sha3(_660 + 1)
                            while _692 + stor1[_660].field_1 % 128 > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                mem[_661 + 32] = _692
                mem[_661 + 64] = stor2[_660]
                mem[_661 + 96] = stor3[_660]
                mem[_661 + 128] = stor4[_660]
                mem[_661 + 160] = stor5[_660]
                mem[_661 + 192] = bool(uint8(stor6[_660].field_0))
                mem[_661 + 224] = bool(uint8(stor6[_660].field_8))
                if sha3(mem[128 len mem[96]]) == sha3(mem[_692 + 32 len uint255(stor1[_660].field_0) * 0.5]):
                    return 0
            else:
                if bool(stor1[_660].field_0) == stor1[_660].field_1 % 128 < 32:
                    revert with 0, 34
                _694 = mem[64]
                mem[64] = mem[64] + ceil32(stor1[_660].field_1 % 128) + 32
                mem[_694] = stor1[_660].field_1 % 128
                if bool(stor1[_660].field_0):
                    if bool(stor1[_660].field_0) == uint255(stor1[_660].field_0) * 0.5 < 32:
                        revert with 0, 34
                    if Mask(256, -1, stor1[_660].field_0):
                        if 31 >= uint255(stor1[_660].field_0) * 0.5:
                            mem[_694 + 32] = 256 * Mask(248, 0, stor1[_660].field_8)
                        else:
                            mem[0] = _660 + 1
                            mem[_694 + 32] = stor[sha3(_660 + 1)]
                            s = _694 + 32
                            t = sha3(_660 + 1)
                            while _694 + (uint255(stor1[_660].field_0) * 0.5) > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                else:
                    if bool(stor1[_660].field_0) == stor1[_660].field_1 % 128 < 32:
                        revert with 0, 34
                    if stor1[_660].field_1 % 128:
                        if 31 >= stor1[_660].field_1 % 128:
                            mem[_694 + 32] = 256 * Mask(248, 0, stor1[_660].field_8)
                        else:
                            mem[0] = _660 + 1
                            mem[_694 + 32] = stor[sha3(_660 + 1)]
                            s = _694 + 32
                            t = sha3(_660 + 1)
                            while _694 + stor1[_660].field_1 % 128 > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                mem[_661 + 32] = _694
                mem[_661 + 64] = stor2[_660]
                mem[_661 + 96] = stor3[_660]
                mem[_661 + 128] = stor4[_660]
                mem[_661 + 160] = stor5[_660]
                mem[_661 + 192] = bool(uint8(stor6[_660].field_0))
                mem[_661 + 224] = bool(uint8(stor6[_660].field_8))
                if sha3(mem[128 len mem[96]]) == sha3(mem[_694 + 32 len stor1[_660].field_1 % 128]):
                    return 0
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            continue 
    else:
        mem[ceil32(ceil32(arg2.length)) + 129 len 32 * balanceOf[address(arg1)]] = call.data[calldata.size len 32 * balanceOf[address(arg1)]]
        idx = 0
        while idx < balanceOf[address(arg1)]:
            if not arg1:
                revert with 0, 'ERC721: balance query for the zero address'
            if idx >= balanceOf[address(arg1)]:
                revert with 0, 'ERC721Enumerable: owner index out of bounds'
            if tokenOfOwnerByIndex[address(arg1)][idx] <= 0:
                revert with 0, 'Troops: Id must be higher than zero'
            mem[0] = tokenOfOwnerByIndex[address(arg1)][idx]
            mem[32] = 552
            _364 = mem[64]
            mem[64] = mem[64] + 256
            mem[_364] = stor552[stor151[address(arg1)][idx]].field_0
            if bool(stor552[stor151[address(arg1)][idx]].field_256):
                if bool(stor552[stor151[address(arg1)][idx]].field_256) == uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5 < 32:
                    revert with 0, 34
                _371 = mem[64]
                mem[64] = mem[64] + ceil32(uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5) + 32
                mem[_371] = uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5
                if bool(stor552[stor151[address(arg1)][idx]].field_256):
                    if bool(stor552[stor151[address(arg1)][idx]].field_256) == uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5 < 32:
                        revert with 0, 34
                    if Mask(256, -1, stor552[stor151[address(arg1)][idx]].field_256):
                        if 31 >= uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5:
                            mem[_371 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg1)][idx]].field_264)
                        else:
                            mem[0] = sha3(tokenOfOwnerByIndex[address(arg1)][idx], 552) + 1
                            mem[_371 + 32] = stor552[stor151[address(arg1)][idx]][1].field_0
                            s = _371 + 32
                            t = sha3(sha3(tokenOfOwnerByIndex[address(arg1)][idx], 552) + 1)
                            while _371 + (uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5) > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                else:
                    if bool(stor552[stor151[address(arg1)][idx]].field_256) == stor552[stor151[address(arg1)][idx]].field_257 % 128 < 32:
                        revert with 0, 34
                    if stor552[stor151[address(arg1)][idx]].field_257 % 128:
                        if 31 >= stor552[stor151[address(arg1)][idx]].field_257 % 128:
                            mem[_371 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg1)][idx]].field_264)
                        else:
                            mem[0] = sha3(tokenOfOwnerByIndex[address(arg1)][idx], 552) + 1
                            mem[_371 + 32] = stor552[stor151[address(arg1)][idx]][1].field_0
                            s = _371 + 32
                            t = sha3(sha3(tokenOfOwnerByIndex[address(arg1)][idx], 552) + 1)
                            while _371 + stor552[stor151[address(arg1)][idx]].field_257 % 128 > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                mem[_364 + 32] = _371
            else:
                if bool(stor552[stor151[address(arg1)][idx]].field_256) == stor552[stor151[address(arg1)][idx]].field_257 % 128 < 32:
                    revert with 0, 34
                _383 = mem[64]
                mem[64] = mem[64] + ceil32(stor552[stor151[address(arg1)][idx]].field_257 % 128) + 32
                mem[_383] = stor552[stor151[address(arg1)][idx]].field_257 % 128
                if bool(stor552[stor151[address(arg1)][idx]].field_256):
                    if bool(stor552[stor151[address(arg1)][idx]].field_256) == uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5 < 32:
                        revert with 0, 34
                    if Mask(256, -1, stor552[stor151[address(arg1)][idx]].field_256):
                        if 31 >= uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5:
                            mem[_383 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg1)][idx]].field_264)
                        else:
                            mem[0] = sha3(tokenOfOwnerByIndex[address(arg1)][idx], 552) + 1
                            mem[_383 + 32] = stor552[stor151[address(arg1)][idx]][1].field_0
                            s = _383 + 32
                            t = sha3(sha3(tokenOfOwnerByIndex[address(arg1)][idx], 552) + 1)
                            while _383 + (uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5) > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                else:
                    if bool(stor552[stor151[address(arg1)][idx]].field_256) == stor552[stor151[address(arg1)][idx]].field_257 % 128 < 32:
                        revert with 0, 34
                    if stor552[stor151[address(arg1)][idx]].field_257 % 128:
                        if 31 >= stor552[stor151[address(arg1)][idx]].field_257 % 128:
                            mem[_383 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg1)][idx]].field_264)
                        else:
                            mem[0] = sha3(tokenOfOwnerByIndex[address(arg1)][idx], 552) + 1
                            mem[_383 + 32] = stor552[stor151[address(arg1)][idx]][1].field_0
                            s = _383 + 32
                            t = sha3(sha3(tokenOfOwnerByIndex[address(arg1)][idx], 552) + 1)
                            while _383 + stor552[stor151[address(arg1)][idx]].field_257 % 128 > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                mem[_364 + 32] = _383
            mem[_364 + 64] = stor552[stor151[address(arg1)][idx]].field_512
            mem[_364 + 96] = stor552[stor151[address(arg1)][idx]].field_768
            mem[_364 + 128] = stor552[stor151[address(arg1)][idx]].field_1024
            mem[_364 + 160] = stor552[stor151[address(arg1)][idx]].field_1280
            mem[_364 + 192] = bool(uint8(stor552[stor151[address(arg1)][idx]].field_1536))
            mem[_364 + 224] = bool(uint8(stor552[stor151[address(arg1)][idx]].field_1544))
            if not uint8(stor552[stor151[address(arg1)][idx]].field_1536):
                revert with 0, 'Troops: This troop doesn't exist'
            if idx >= mem[ceil32(ceil32(arg2.length)) + 97]:
                revert with 0, 50
            mem[(32 * idx) + ceil32(ceil32(arg2.length)) + 129] = tokenOfOwnerByIndex[address(arg1)][idx]
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            continue 
        _655 = mem[ceil32(ceil32(arg2.length)) + 97]
        idx = 0
        while idx < _655:
            if idx >= mem[ceil32(ceil32(arg2.length)) + 97]:
                revert with 0, 50
            mem[0] = mem[(32 * idx) + ceil32(ceil32(arg2.length)) + 129]
            mem[32] = 552
            _668 = sha3(mem[(32 * idx) + ceil32(ceil32(arg2.length)) + 129], 552)
            _669 = mem[64]
            mem[64] = mem[64] + 256
            mem[_669] = stor552[mem[(32 * idx) + ceil32(ceil32(arg2.length)) + 129]].field_0
            if bool(stor1[_668].field_0):
                if bool(stor1[_668].field_0) == uint255(stor1[_668].field_0) * 0.5 < 32:
                    revert with 0, 34
                _693 = mem[64]
                mem[64] = mem[64] + ceil32(uint255(stor1[_668].field_0) * 0.5) + 32
                mem[_693] = uint255(stor1[_668].field_0) * 0.5
                if bool(stor1[_668].field_0):
                    if bool(stor1[_668].field_0) == uint255(stor1[_668].field_0) * 0.5 < 32:
                        revert with 0, 34
                    if Mask(256, -1, stor1[_668].field_0):
                        if 31 >= uint255(stor1[_668].field_0) * 0.5:
                            mem[_693 + 32] = 256 * Mask(248, 0, stor1[_668].field_8)
                        else:
                            mem[0] = _668 + 1
                            mem[_693 + 32] = stor[sha3(_668 + 1)]
                            s = _693 + 32
                            t = sha3(_668 + 1)
                            while _693 + (uint255(stor1[_668].field_0) * 0.5) > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                else:
                    if bool(stor1[_668].field_0) == stor1[_668].field_1 % 128 < 32:
                        revert with 0, 34
                    if stor1[_668].field_1 % 128:
                        if 31 >= stor1[_668].field_1 % 128:
                            mem[_693 + 32] = 256 * Mask(248, 0, stor1[_668].field_8)
                        else:
                            mem[0] = _668 + 1
                            mem[_693 + 32] = stor[sha3(_668 + 1)]
                            s = _693 + 32
                            t = sha3(_668 + 1)
                            while _693 + stor1[_668].field_1 % 128 > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                mem[_669 + 32] = _693
                mem[_669 + 64] = stor2[_668]
                mem[_669 + 96] = stor3[_668]
                mem[_669 + 128] = stor4[_668]
                mem[_669 + 160] = stor5[_668]
                mem[_669 + 192] = bool(uint8(stor6[_668].field_0))
                mem[_669 + 224] = bool(uint8(stor6[_668].field_8))
                if sha3(mem[128 len mem[96]]) == sha3(mem[_693 + 32 len uint255(stor1[_668].field_0) * 0.5]):
                    return 0
            else:
                if bool(stor1[_668].field_0) == stor1[_668].field_1 % 128 < 32:
                    revert with 0, 34
                _699 = mem[64]
                mem[64] = mem[64] + ceil32(stor1[_668].field_1 % 128) + 32
                mem[_699] = stor1[_668].field_1 % 128
                if bool(stor1[_668].field_0):
                    if bool(stor1[_668].field_0) == uint255(stor1[_668].field_0) * 0.5 < 32:
                        revert with 0, 34
                    if Mask(256, -1, stor1[_668].field_0):
                        if 31 >= uint255(stor1[_668].field_0) * 0.5:
                            mem[_699 + 32] = 256 * Mask(248, 0, stor1[_668].field_8)
                        else:
                            mem[0] = _668 + 1
                            mem[_699 + 32] = stor[sha3(_668 + 1)]
                            s = _699 + 32
                            t = sha3(_668 + 1)
                            while _699 + (uint255(stor1[_668].field_0) * 0.5) > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                else:
                    if bool(stor1[_668].field_0) == stor1[_668].field_1 % 128 < 32:
                        revert with 0, 34
                    if stor1[_668].field_1 % 128:
                        if 31 >= stor1[_668].field_1 % 128:
                            mem[_699 + 32] = 256 * Mask(248, 0, stor1[_668].field_8)
                        else:
                            mem[0] = _668 + 1
                            mem[_699 + 32] = stor[sha3(_668 + 1)]
                            s = _699 + 32
                            t = sha3(_668 + 1)
                            while _699 + stor1[_668].field_1 % 128 > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                mem[_669 + 32] = _699
                mem[_669 + 64] = stor2[_668]
                mem[_669 + 96] = stor3[_668]
                mem[_669 + 128] = stor4[_668]
                mem[_669 + 160] = stor5[_668]
                mem[_669 + 192] = bool(uint8(stor6[_668].field_0))
                mem[_669 + 224] = bool(uint8(stor6[_668].field_8))
                if sha3(mem[128 len mem[96]]) == sha3(mem[_699 + 32 len stor1[_668].field_1 % 128]):
                    return 0
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            continue 
    return 1
}

function safeTransferFrom(address arg1, address arg2, uint256 arg3) payable {
    require calldata.size - 4 >= 96
    require arg1 == arg1
    require arg2 == arg2
    mem[96] = 0
    if not ownerOf[arg3]:
        revert with 0, 'ERC721: operator query for nonexistent token'
    if not ownerOf[arg3]:
        revert with 0, 'ERC721: owner query for nonexistent token'
    if msg.sender == ownerOf[arg3]:
        if not ownerOf[arg3]:
            revert with 0, 'ERC721: owner query for nonexistent token'
        if ownerOf[arg3] != arg1:
            revert with 0, 'ERC721: transfer from incorrect owner'
        if not arg2:
            revert with 0, 'ERC721: transfer to the zero address'
        if paused:
            revert with 0, 'Pausable: paused'
        if not arg2:
            if not arg1:
                stor154[arg3] = tokenByIndex.length
                tokenByIndex.length++
                stor72A1[stor153.length] = arg3
            else:
                if arg1 != arg2:
                    if not arg1:
                        revert with 0, 'ERC721: balance query for the zero address'
                    if balanceOf[address(arg1)] < 1:
                        revert with 0, 17
                    if balanceOf[address(arg1)] - 1 != stor152[arg3]:
                        tokenOfOwnerByIndex[address(arg1)][stor152[arg3]] = tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1]
                        stor152[stor151[address(arg1)][stor104[address(arg1)] - 1]] = stor152[arg3]
                    stor152[arg3] = 0
                    tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
            if arg2:
                if arg2 != arg1:
                    if not arg2:
                        revert with 0, 'ERC721: balance query for the zero address'
                    tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                    stor152[arg3] = balanceOf[address(arg2)]
            else:
                if tokenByIndex.length < 1:
                    revert with 0, 17
                if tokenByIndex.length - 1 >= tokenByIndex.length:
                    revert with 0, 50
                if stor154[arg3] >= tokenByIndex.length:
                    revert with 0, 50
                tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                stor154[stor153[stor153.length]] = stor154[arg3]
                stor154[arg3] = 0
                if not tokenByIndex.length:
                    revert with 0, 49
                tokenByIndex[tokenByIndex.length] = 0
                tokenByIndex.length--
            approved[arg3] = 0
            if not ownerOf[arg3]:
                revert with 0, 'ERC721: owner query for nonexistent token'
            emit Approval(ownerOf[arg3], 0, arg3);
            if balanceOf[address(arg1)] < 1:
                revert with 0, 17
            balanceOf[address(arg1)]--
            if balanceOf[address(arg2)] > -2:
                revert with 0, 17
            balanceOf[address(arg2)]++
            ownerOf[arg3] = arg2
            emit Transfer(arg1, arg2, arg3);
            if ext_code.size(arg2):
                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                     gas gas_remaining wei
                    args 0, uint32(msg.sender), address(arg1), arg3, 128, 0
                if not ext_call.success:
                    if not return_data.size:
                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                    if not return_data.size:
                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
        else:
            if owner == arg2:
                if not arg1:
                    stor154[arg3] = tokenByIndex.length
                    tokenByIndex.length++
                    stor72A1[stor153.length] = arg3
                else:
                    if arg1 != arg2:
                        if not arg1:
                            revert with 0, 'ERC721: balance query for the zero address'
                        if balanceOf[address(arg1)] < 1:
                            revert with 0, 17
                        if balanceOf[address(arg1)] - 1 != stor152[arg3]:
                            tokenOfOwnerByIndex[address(arg1)][stor152[arg3]] = tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1]
                            stor152[stor151[address(arg1)][stor104[address(arg1)] - 1]] = stor152[arg3]
                        stor152[arg3] = 0
                        tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                if arg2:
                    if arg2 != arg1:
                        if not arg2:
                            revert with 0, 'ERC721: balance query for the zero address'
                        tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                        stor152[arg3] = balanceOf[address(arg2)]
                else:
                    if tokenByIndex.length < 1:
                        revert with 0, 17
                    if tokenByIndex.length - 1 >= tokenByIndex.length:
                        revert with 0, 50
                    if stor154[arg3] >= tokenByIndex.length:
                        revert with 0, 50
                    tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                    stor154[stor153[stor153.length]] = stor154[arg3]
                    stor154[arg3] = 0
                    if not tokenByIndex.length:
                        revert with 0, 49
                    tokenByIndex[tokenByIndex.length] = 0
                    tokenByIndex.length--
                approved[arg3] = 0
                if not ownerOf[arg3]:
                    revert with 0, 'ERC721: owner query for nonexistent token'
                emit Approval(ownerOf[arg3], 0, arg3);
                if balanceOf[address(arg1)] < 1:
                    revert with 0, 17
                balanceOf[address(arg1)]--
                if balanceOf[address(arg2)] > -2:
                    revert with 0, 17
                balanceOf[address(arg2)]++
                ownerOf[arg3] = arg2
                emit Transfer(arg1, arg2, arg3);
                if ext_code.size(arg2):
                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                         gas gas_remaining wei
                        args 0, uint32(msg.sender), address(arg1), arg3, 128, 0
                    if not ext_call.success:
                        if not return_data.size:
                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                        if not return_data.size:
                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                    if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
            else:
                if bool(uint8(stor552[arg3].field_1536)) != 1:
                    if not arg1:
                        stor154[arg3] = tokenByIndex.length
                        tokenByIndex.length++
                        stor72A1[stor153.length] = arg3
                    else:
                        if arg1 != arg2:
                            if not arg1:
                                revert with 0, 'ERC721: balance query for the zero address'
                            if balanceOf[address(arg1)] < 1:
                                revert with 0, 17
                            if balanceOf[address(arg1)] - 1 != stor152[arg3]:
                                tokenOfOwnerByIndex[address(arg1)][stor152[arg3]] = tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1]
                                stor152[stor151[address(arg1)][stor104[address(arg1)] - 1]] = stor152[arg3]
                            stor152[arg3] = 0
                            tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                    if arg2:
                        if arg2 != arg1:
                            if not arg2:
                                revert with 0, 'ERC721: balance query for the zero address'
                            tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                            stor152[arg3] = balanceOf[address(arg2)]
                    else:
                        if tokenByIndex.length < 1:
                            revert with 0, 17
                        if tokenByIndex.length - 1 >= tokenByIndex.length:
                            revert with 0, 50
                        if stor154[arg3] >= tokenByIndex.length:
                            revert with 0, 50
                        tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                        stor154[stor153[stor153.length]] = stor154[arg3]
                        stor154[arg3] = 0
                        if not tokenByIndex.length:
                            revert with 0, 49
                        tokenByIndex[tokenByIndex.length] = 0
                        tokenByIndex.length--
                    approved[arg3] = 0
                    if not ownerOf[arg3]:
                        revert with 0, 'ERC721: owner query for nonexistent token'
                    emit Approval(ownerOf[arg3], 0, arg3);
                    if balanceOf[address(arg1)] < 1:
                        revert with 0, 17
                    balanceOf[address(arg1)]--
                    if balanceOf[address(arg2)] > -2:
                        revert with 0, 17
                    balanceOf[address(arg2)]++
                    ownerOf[arg3] = arg2
                    emit Transfer(arg1, arg2, arg3);
                    if ext_code.size(arg2):
                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                             gas gas_remaining wei
                            args 0, uint32(msg.sender), address(arg1), arg3, 128, 0
                        if not ext_call.success:
                            if not return_data.size:
                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                            if not return_data.size:
                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                        if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                else:
                    if bool(uint8(stor552[arg3].field_1544)) != 1:
                        if not arg1:
                            stor154[arg3] = tokenByIndex.length
                            tokenByIndex.length++
                            stor72A1[stor153.length] = arg3
                        else:
                            if arg1 != arg2:
                                if not arg1:
                                    revert with 0, 'ERC721: balance query for the zero address'
                                if balanceOf[address(arg1)] < 1:
                                    revert with 0, 17
                                if balanceOf[address(arg1)] - 1 != stor152[arg3]:
                                    tokenOfOwnerByIndex[address(arg1)][stor152[arg3]] = tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1]
                                    stor152[stor151[address(arg1)][stor104[address(arg1)] - 1]] = stor152[arg3]
                                stor152[arg3] = 0
                                tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                        if arg2:
                            if arg2 != arg1:
                                if not arg2:
                                    revert with 0, 'ERC721: balance query for the zero address'
                                tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                stor152[arg3] = balanceOf[address(arg2)]
                        else:
                            if tokenByIndex.length < 1:
                                revert with 0, 17
                            if tokenByIndex.length - 1 >= tokenByIndex.length:
                                revert with 0, 50
                            if stor154[arg3] >= tokenByIndex.length:
                                revert with 0, 50
                            tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                            stor154[stor153[stor153.length]] = stor154[arg3]
                            stor154[arg3] = 0
                            if not tokenByIndex.length:
                                revert with 0, 49
                            tokenByIndex[tokenByIndex.length] = 0
                            tokenByIndex.length--
                        approved[arg3] = 0
                        if not ownerOf[arg3]:
                            revert with 0, 'ERC721: owner query for nonexistent token'
                        emit Approval(ownerOf[arg3], 0, arg3);
                        if balanceOf[address(arg1)] < 1:
                            revert with 0, 17
                        balanceOf[address(arg1)]--
                        if balanceOf[address(arg2)] > -2:
                            revert with 0, 17
                        balanceOf[address(arg2)]++
                        ownerOf[arg3] = arg2
                        emit Transfer(arg1, arg2, arg3);
                        if ext_code.size(arg2):
                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, uint32(msg.sender), address(arg1), arg3, 128, 0
                            if not ext_call.success:
                                if not return_data.size:
                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                if not return_data.size:
                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                            if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                    else:
                        if not liquidityPoolManagerImplementationAddress:
                            if not arg2:
                                revert with 0, 'ERC721: balance query for the zero address'
                            if balanceOf[address(arg2)] > test266151307():
                                revert with 0, 65
                            mem[128] = balanceOf[address(arg2)]
                            mem[64] = (32 * balanceOf[address(arg2)]) + 160
                            if not balanceOf[address(arg2)]:
                                idx = 0
                                while idx < balanceOf[address(arg2)]:
                                    if not arg2:
                                        revert with 0, 'ERC721: balance query for the zero address'
                                    if idx >= balanceOf[address(arg2)]:
                                        revert with 0, 'ERC721Enumerable: owner index out of bounds'
                                    if tokenOfOwnerByIndex[address(arg2)][idx] <= 0:
                                        revert with 0, 'Troops: Id must be higher than zero'
                                    mem[0] = tokenOfOwnerByIndex[address(arg2)][idx]
                                    mem[32] = 552
                                    _17852 = mem[64]
                                    mem[64] = mem[64] + 256
                                    mem[_17852] = stor552[stor151[address(arg2)][idx]].field_0
                                    if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                            revert with 0, 34
                                        _20612 = mem[64]
                                        mem[64] = mem[64] + ceil32(uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) + 32
                                        mem[_20612] = uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                                revert with 0, 34
                                            if Mask(256, -1, stor552[stor151[address(arg2)][idx]].field_256):
                                                if 31 >= uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5:
                                                    mem[_20612 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                else:
                                                    mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                    mem[_20612 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                    s = _20612 + 32
                                                    t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                    while _20612 + (uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) > s:
                                                        mem[s + 32] = stor1[t].field_0
                                                        s = s + 32
                                                        t = t + 1
                                                        continue 
                                        else:
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                                revert with 0, 34
                                            if stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                if 31 >= stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                    mem[_20612 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                else:
                                                    mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                    mem[_20612 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                    s = _20612 + 32
                                                    t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                    while _20612 + stor552[stor151[address(arg2)][idx]].field_257 % 128 > s:
                                                        mem[s + 32] = stor1[t].field_0
                                                        s = s + 32
                                                        t = t + 1
                                                        continue 
                                        mem[_17852 + 32] = _20612
                                    else:
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                            revert with 0, 34
                                        _20639 = mem[64]
                                        mem[64] = mem[64] + ceil32(stor552[stor151[address(arg2)][idx]].field_257 % 128) + 32
                                        mem[_20639] = stor552[stor151[address(arg2)][idx]].field_257 % 128
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                                revert with 0, 34
                                            if Mask(256, -1, stor552[stor151[address(arg2)][idx]].field_256):
                                                if 31 >= uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5:
                                                    mem[_20639 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                else:
                                                    mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                    mem[_20639 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                    s = _20639 + 32
                                                    t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                    while _20639 + (uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) > s:
                                                        mem[s + 32] = stor1[t].field_0
                                                        s = s + 32
                                                        t = t + 1
                                                        continue 
                                        else:
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                                revert with 0, 34
                                            if stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                if 31 >= stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                    mem[_20639 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                else:
                                                    mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                    mem[_20639 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                    s = _20639 + 32
                                                    t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                    while _20639 + stor552[stor151[address(arg2)][idx]].field_257 % 128 > s:
                                                        mem[s + 32] = stor1[t].field_0
                                                        s = s + 32
                                                        t = t + 1
                                                        continue 
                                        mem[_17852 + 32] = _20639
                                    mem[_17852 + 64] = stor552[stor151[address(arg2)][idx]].field_512
                                    mem[_17852 + 96] = stor552[stor151[address(arg2)][idx]].field_768
                                    mem[_17852 + 128] = stor552[stor151[address(arg2)][idx]].field_1024
                                    mem[_17852 + 160] = stor552[stor151[address(arg2)][idx]].field_1280
                                    mem[_17852 + 192] = bool(uint8(stor552[stor151[address(arg2)][idx]].field_1536))
                                    mem[_17852 + 224] = bool(uint8(stor552[stor151[address(arg2)][idx]].field_1544))
                                    if not uint8(stor552[stor151[address(arg2)][idx]].field_1536):
                                        revert with 0, 'Troops: This troop doesn't exist'
                                    if idx >= mem[128]:
                                        revert with 0, 50
                                    mem[(32 * idx) + 160] = tokenOfOwnerByIndex[address(arg2)][idx]
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    continue 
                                idx = 0
                                s = 0
                                while idx < mem[128]:
                                    if idx >= mem[128]:
                                        revert with 0, 50
                                    mem[0] = mem[(32 * idx) + 160]
                                    mem[32] = 552
                                    if not uint8(stor552[mem[(32 * idx) + 160]].field_1544):
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = s
                                        continue 
                                    if s == -1:
                                        revert with 0, 17
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    s = s + 1
                                    continue 
                                if s >= 2:
                                    revert with 0, 'Each holder can not hold more than 2 Gladiators'
                                if not arg1:
                                    stor154[arg3] = tokenByIndex.length
                                    tokenByIndex.length++
                                    stor72A1[stor153.length] = arg3
                                    if arg2:
                                        if arg2 == arg1:
                                            approved[arg3] = 0
                                            if not ownerOf[arg3]:
                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                            emit Approval(ownerOf[arg3], 0, arg3);
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            balanceOf[address(arg1)]--
                                            if balanceOf[address(arg2)] > -2:
                                                revert with 0, 17
                                            balanceOf[address(arg2)]++
                                            mem[0] = arg3
                                            mem[32] = 103
                                            ownerOf[arg3] = arg2
                                            emit Transfer(arg1, arg2, arg3);
                                            if ext_code.size(arg2):
                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = msg.sender
                                                mem[mem[64] + 36] = arg1
                                                mem[mem[64] + 68] = arg3
                                                mem[mem[64] + 100] = 128
                                                mem[mem[64] + 132] = mem[96]
                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                if ceil32(mem[96]) <= mem[96]:
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _35977 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_35977] == Mask(32, 224, mem[_35977])
                                                    if Mask(32, 224, mem[_35977]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    mem[mem[96] + mem[64] + 164] = 0
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _35978 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_35978] == Mask(32, 224, mem[_35978])
                                                    if Mask(32, 224, mem[_35978]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            if not arg2:
                                                revert with 0, 'ERC721: balance query for the zero address'
                                            tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                            stor152[arg3] = balanceOf[address(arg2)]
                                            approved[arg3] = 0
                                            if not ownerOf[arg3]:
                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                            emit Approval(ownerOf[arg3], 0, arg3);
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            balanceOf[address(arg1)]--
                                            if balanceOf[address(arg2)] > -2:
                                                revert with 0, 17
                                            balanceOf[address(arg2)]++
                                            mem[0] = arg3
                                            mem[32] = 103
                                            ownerOf[arg3] = arg2
                                            emit Transfer(arg1, arg2, arg3);
                                            if ext_code.size(arg2):
                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = msg.sender
                                                mem[mem[64] + 36] = arg1
                                                mem[mem[64] + 68] = arg3
                                                mem[mem[64] + 100] = 128
                                                mem[mem[64] + 132] = mem[96]
                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                if ceil32(mem[96]) <= mem[96]:
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _35979 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_35979] == Mask(32, 224, mem[_35979])
                                                    if Mask(32, 224, mem[_35979]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    mem[mem[96] + mem[64] + 164] = 0
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _35980 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_35980] == Mask(32, 224, mem[_35980])
                                                    if Mask(32, 224, mem[_35980]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                    else:
                                        if tokenByIndex.length < 1:
                                            revert with 0, 17
                                        if tokenByIndex.length - 1 >= tokenByIndex.length:
                                            revert with 0, 50
                                        if stor154[arg3] >= tokenByIndex.length:
                                            revert with 0, 50
                                        tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                        stor154[stor153[stor153.length]] = stor154[arg3]
                                        stor154[arg3] = 0
                                        if not tokenByIndex.length:
                                            revert with 0, 49
                                        tokenByIndex[tokenByIndex.length] = 0
                                        tokenByIndex.length--
                                        approved[arg3] = 0
                                        if not ownerOf[arg3]:
                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                        emit Approval(ownerOf[arg3], 0, arg3);
                                        if balanceOf[address(arg1)] < 1:
                                            revert with 0, 17
                                        balanceOf[address(arg1)]--
                                        if balanceOf[address(arg2)] > -2:
                                            revert with 0, 17
                                        balanceOf[address(arg2)]++
                                        mem[0] = arg3
                                        mem[32] = 103
                                        ownerOf[arg3] = arg2
                                        emit Transfer(arg1, arg2, arg3);
                                        if ext_code.size(arg2):
                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = msg.sender
                                            mem[mem[64] + 36] = arg1
                                            mem[mem[64] + 68] = arg3
                                            mem[mem[64] + 100] = 128
                                            mem[mem[64] + 132] = mem[96]
                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                            if ceil32(mem[96]) <= mem[96]:
                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    if not return_data.size:
                                                        if not mem[96]:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with memory
                                                          from 128
                                                           len mem[96]
                                                    if not return_data.size:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _35981 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                require mem[_35981] == Mask(32, 224, mem[_35981])
                                                if Mask(32, 224, mem[_35981]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                mem[mem[96] + mem[64] + 164] = 0
                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    if not return_data.size:
                                                        if not mem[96]:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with memory
                                                          from 128
                                                           len mem[96]
                                                    if not return_data.size:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _35982 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                require mem[_35982] == Mask(32, 224, mem[_35982])
                                                if Mask(32, 224, mem[_35982]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                else:
                                    if arg1 == arg2:
                                        if arg2:
                                            if arg2 == arg1:
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _35959 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_35959] == Mask(32, 224, mem[_35959])
                                                        if Mask(32, 224, mem[_35959]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[96] + mem[64] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _35960 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_35960] == Mask(32, 224, mem[_35960])
                                                        if Mask(32, 224, mem[_35960]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if not arg2:
                                                    revert with 0, 'ERC721: balance query for the zero address'
                                                tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                stor152[arg3] = balanceOf[address(arg2)]
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _35961 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_35961] == Mask(32, 224, mem[_35961])
                                                        if Mask(32, 224, mem[_35961]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[96] + mem[64] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _35962 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_35962] == Mask(32, 224, mem[_35962])
                                                        if Mask(32, 224, mem[_35962]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            if tokenByIndex.length < 1:
                                                revert with 0, 17
                                            if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                revert with 0, 50
                                            if stor154[arg3] >= tokenByIndex.length:
                                                revert with 0, 50
                                            tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                            stor154[stor153[stor153.length]] = stor154[arg3]
                                            stor154[arg3] = 0
                                            if not tokenByIndex.length:
                                                revert with 0, 49
                                            tokenByIndex[tokenByIndex.length] = 0
                                            tokenByIndex.length--
                                            approved[arg3] = 0
                                            if not ownerOf[arg3]:
                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                            emit Approval(ownerOf[arg3], 0, arg3);
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            balanceOf[address(arg1)]--
                                            if balanceOf[address(arg2)] > -2:
                                                revert with 0, 17
                                            balanceOf[address(arg2)]++
                                            mem[0] = arg3
                                            mem[32] = 103
                                            ownerOf[arg3] = arg2
                                            emit Transfer(arg1, arg2, arg3);
                                            if ext_code.size(arg2):
                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = msg.sender
                                                mem[mem[64] + 36] = arg1
                                                mem[mem[64] + 68] = arg3
                                                mem[mem[64] + 100] = 128
                                                mem[mem[64] + 132] = mem[96]
                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                if ceil32(mem[96]) <= mem[96]:
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _35963 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_35963] == Mask(32, 224, mem[_35963])
                                                    if Mask(32, 224, mem[_35963]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    mem[mem[96] + mem[64] + 164] = 0
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _35964 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_35964] == Mask(32, 224, mem[_35964])
                                                    if Mask(32, 224, mem[_35964]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                    else:
                                        if not arg1:
                                            revert with 0, 'ERC721: balance query for the zero address'
                                        if balanceOf[address(arg1)] < 1:
                                            revert with 0, 17
                                        if balanceOf[address(arg1)] - 1 == stor152[arg3]:
                                            stor152[arg3] = 0
                                            tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                                            if arg2:
                                                if arg2 == arg1:
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _35965 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_35965] == Mask(32, 224, mem[_35965])
                                                            if Mask(32, 224, mem[_35965]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _35966 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_35966] == Mask(32, 224, mem[_35966])
                                                            if Mask(32, 224, mem[_35966]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    if not arg2:
                                                        revert with 0, 'ERC721: balance query for the zero address'
                                                    tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                    stor152[arg3] = balanceOf[address(arg2)]
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _35967 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_35967] == Mask(32, 224, mem[_35967])
                                                            if Mask(32, 224, mem[_35967]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _35968 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_35968] == Mask(32, 224, mem[_35968])
                                                            if Mask(32, 224, mem[_35968]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if tokenByIndex.length < 1:
                                                    revert with 0, 17
                                                if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                    revert with 0, 50
                                                if stor154[arg3] >= tokenByIndex.length:
                                                    revert with 0, 50
                                                tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                stor154[stor153[stor153.length]] = stor154[arg3]
                                                stor154[arg3] = 0
                                                if not tokenByIndex.length:
                                                    revert with 0, 49
                                                tokenByIndex[tokenByIndex.length] = 0
                                                tokenByIndex.length--
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _35969 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_35969] == Mask(32, 224, mem[_35969])
                                                        if Mask(32, 224, mem[_35969]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[96] + mem[64] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _35970 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_35970] == Mask(32, 224, mem[_35970])
                                                        if Mask(32, 224, mem[_35970]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            tokenOfOwnerByIndex[address(arg1)][stor152[arg3]] = tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1]
                                            stor152[stor151[address(arg1)][stor104[address(arg1)] - 1]] = stor152[arg3]
                                            stor152[arg3] = 0
                                            tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                                            if arg2:
                                                if arg2 == arg1:
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _35971 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_35971] == Mask(32, 224, mem[_35971])
                                                            if Mask(32, 224, mem[_35971]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _35972 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_35972] == Mask(32, 224, mem[_35972])
                                                            if Mask(32, 224, mem[_35972]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    if not arg2:
                                                        revert with 0, 'ERC721: balance query for the zero address'
                                                    tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                    stor152[arg3] = balanceOf[address(arg2)]
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _35973 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_35973] == Mask(32, 224, mem[_35973])
                                                            if Mask(32, 224, mem[_35973]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _35974 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_35974] == Mask(32, 224, mem[_35974])
                                                            if Mask(32, 224, mem[_35974]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if tokenByIndex.length < 1:
                                                    revert with 0, 17
                                                if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                    revert with 0, 50
                                                if stor154[arg3] >= tokenByIndex.length:
                                                    revert with 0, 50
                                                tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                stor154[stor153[stor153.length]] = stor154[arg3]
                                                stor154[arg3] = 0
                                                if not tokenByIndex.length:
                                                    revert with 0, 49
                                                tokenByIndex[tokenByIndex.length] = 0
                                                tokenByIndex.length--
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _35975 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_35975] == Mask(32, 224, mem[_35975])
                                                        if Mask(32, 224, mem[_35975]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[96] + mem[64] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _35976 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_35976] == Mask(32, 224, mem[_35976])
                                                        if Mask(32, 224, mem[_35976]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                            else:
                                mem[160 len 32 * balanceOf[address(arg2)]] = call.data[calldata.size len 32 * balanceOf[address(arg2)]]
                                idx = 0
                                while idx < balanceOf[address(arg2)]:
                                    if not arg2:
                                        revert with 0, 'ERC721: balance query for the zero address'
                                    if idx >= balanceOf[address(arg2)]:
                                        revert with 0, 'ERC721Enumerable: owner index out of bounds'
                                    if tokenOfOwnerByIndex[address(arg2)][idx] <= 0:
                                        revert with 0, 'Troops: Id must be higher than zero'
                                    mem[0] = tokenOfOwnerByIndex[address(arg2)][idx]
                                    mem[32] = 552
                                    _17855 = mem[64]
                                    mem[64] = mem[64] + 256
                                    mem[_17855] = stor552[stor151[address(arg2)][idx]].field_0
                                    if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                            revert with 0, 34
                                        _20614 = mem[64]
                                        mem[64] = mem[64] + ceil32(uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) + 32
                                        mem[_20614] = uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                                revert with 0, 34
                                            if Mask(256, -1, stor552[stor151[address(arg2)][idx]].field_256):
                                                if 31 >= uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5:
                                                    mem[_20614 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                else:
                                                    mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                    mem[_20614 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                    s = _20614 + 32
                                                    t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                    while _20614 + (uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) > s:
                                                        mem[s + 32] = stor1[t].field_0
                                                        s = s + 32
                                                        t = t + 1
                                                        continue 
                                        else:
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                                revert with 0, 34
                                            if stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                if 31 >= stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                    mem[_20614 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                else:
                                                    mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                    mem[_20614 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                    s = _20614 + 32
                                                    t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                    while _20614 + stor552[stor151[address(arg2)][idx]].field_257 % 128 > s:
                                                        mem[s + 32] = stor1[t].field_0
                                                        s = s + 32
                                                        t = t + 1
                                                        continue 
                                        mem[_17855 + 32] = _20614
                                    else:
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                            revert with 0, 34
                                        _20644 = mem[64]
                                        mem[64] = mem[64] + ceil32(stor552[stor151[address(arg2)][idx]].field_257 % 128) + 32
                                        mem[_20644] = stor552[stor151[address(arg2)][idx]].field_257 % 128
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                                revert with 0, 34
                                            if Mask(256, -1, stor552[stor151[address(arg2)][idx]].field_256):
                                                if 31 >= uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5:
                                                    mem[_20644 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                else:
                                                    mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                    mem[_20644 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                    s = _20644 + 32
                                                    t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                    while _20644 + (uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) > s:
                                                        mem[s + 32] = stor1[t].field_0
                                                        s = s + 32
                                                        t = t + 1
                                                        continue 
                                        else:
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                                revert with 0, 34
                                            if stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                if 31 >= stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                    mem[_20644 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                else:
                                                    mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                    mem[_20644 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                    s = _20644 + 32
                                                    t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                    while _20644 + stor552[stor151[address(arg2)][idx]].field_257 % 128 > s:
                                                        mem[s + 32] = stor1[t].field_0
                                                        s = s + 32
                                                        t = t + 1
                                                        continue 
                                        mem[_17855 + 32] = _20644
                                    mem[_17855 + 64] = stor552[stor151[address(arg2)][idx]].field_512
                                    mem[_17855 + 96] = stor552[stor151[address(arg2)][idx]].field_768
                                    mem[_17855 + 128] = stor552[stor151[address(arg2)][idx]].field_1024
                                    mem[_17855 + 160] = stor552[stor151[address(arg2)][idx]].field_1280
                                    mem[_17855 + 192] = bool(uint8(stor552[stor151[address(arg2)][idx]].field_1536))
                                    mem[_17855 + 224] = bool(uint8(stor552[stor151[address(arg2)][idx]].field_1544))
                                    if not uint8(stor552[stor151[address(arg2)][idx]].field_1536):
                                        revert with 0, 'Troops: This troop doesn't exist'
                                    if idx >= mem[128]:
                                        revert with 0, 50
                                    mem[(32 * idx) + 160] = tokenOfOwnerByIndex[address(arg2)][idx]
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    continue 
                                idx = 0
                                s = 0
                                while idx < mem[128]:
                                    if idx >= mem[128]:
                                        revert with 0, 50
                                    mem[0] = mem[(32 * idx) + 160]
                                    mem[32] = 552
                                    if not uint8(stor552[mem[(32 * idx) + 160]].field_1544):
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = s
                                        continue 
                                    if s == -1:
                                        revert with 0, 17
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    s = s + 1
                                    continue 
                                if s >= 2:
                                    revert with 0, 'Each holder can not hold more than 2 Gladiators'
                                if not arg1:
                                    stor154[arg3] = tokenByIndex.length
                                    tokenByIndex.length++
                                    stor72A1[stor153.length] = arg3
                                    if arg2:
                                        if arg2 == arg1:
                                            approved[arg3] = 0
                                            if not ownerOf[arg3]:
                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                            emit Approval(ownerOf[arg3], 0, arg3);
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            balanceOf[address(arg1)]--
                                            if balanceOf[address(arg2)] > -2:
                                                revert with 0, 17
                                            balanceOf[address(arg2)]++
                                            mem[0] = arg3
                                            mem[32] = 103
                                            ownerOf[arg3] = arg2
                                            emit Transfer(arg1, arg2, arg3);
                                            if ext_code.size(arg2):
                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = msg.sender
                                                mem[mem[64] + 36] = arg1
                                                mem[mem[64] + 68] = arg3
                                                mem[mem[64] + 100] = 128
                                                mem[mem[64] + 132] = mem[96]
                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                if ceil32(mem[96]) <= mem[96]:
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _36001 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_36001] == Mask(32, 224, mem[_36001])
                                                    if Mask(32, 224, mem[_36001]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    mem[mem[96] + mem[64] + 164] = 0
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _36002 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_36002] == Mask(32, 224, mem[_36002])
                                                    if Mask(32, 224, mem[_36002]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            if not arg2:
                                                revert with 0, 'ERC721: balance query for the zero address'
                                            tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                            stor152[arg3] = balanceOf[address(arg2)]
                                            approved[arg3] = 0
                                            if not ownerOf[arg3]:
                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                            emit Approval(ownerOf[arg3], 0, arg3);
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            balanceOf[address(arg1)]--
                                            if balanceOf[address(arg2)] > -2:
                                                revert with 0, 17
                                            balanceOf[address(arg2)]++
                                            mem[0] = arg3
                                            mem[32] = 103
                                            ownerOf[arg3] = arg2
                                            emit Transfer(arg1, arg2, arg3);
                                            if ext_code.size(arg2):
                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = msg.sender
                                                mem[mem[64] + 36] = arg1
                                                mem[mem[64] + 68] = arg3
                                                mem[mem[64] + 100] = 128
                                                mem[mem[64] + 132] = mem[96]
                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                if ceil32(mem[96]) <= mem[96]:
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _36003 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_36003] == Mask(32, 224, mem[_36003])
                                                    if Mask(32, 224, mem[_36003]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    mem[mem[96] + mem[64] + 164] = 0
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _36004 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_36004] == Mask(32, 224, mem[_36004])
                                                    if Mask(32, 224, mem[_36004]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                    else:
                                        if tokenByIndex.length < 1:
                                            revert with 0, 17
                                        if tokenByIndex.length - 1 >= tokenByIndex.length:
                                            revert with 0, 50
                                        if stor154[arg3] >= tokenByIndex.length:
                                            revert with 0, 50
                                        tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                        stor154[stor153[stor153.length]] = stor154[arg3]
                                        stor154[arg3] = 0
                                        if not tokenByIndex.length:
                                            revert with 0, 49
                                        tokenByIndex[tokenByIndex.length] = 0
                                        tokenByIndex.length--
                                        approved[arg3] = 0
                                        if not ownerOf[arg3]:
                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                        emit Approval(ownerOf[arg3], 0, arg3);
                                        if balanceOf[address(arg1)] < 1:
                                            revert with 0, 17
                                        balanceOf[address(arg1)]--
                                        if balanceOf[address(arg2)] > -2:
                                            revert with 0, 17
                                        balanceOf[address(arg2)]++
                                        mem[0] = arg3
                                        mem[32] = 103
                                        ownerOf[arg3] = arg2
                                        emit Transfer(arg1, arg2, arg3);
                                        if ext_code.size(arg2):
                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = msg.sender
                                            mem[mem[64] + 36] = arg1
                                            mem[mem[64] + 68] = arg3
                                            mem[mem[64] + 100] = 128
                                            mem[mem[64] + 132] = mem[96]
                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                            if ceil32(mem[96]) <= mem[96]:
                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    if not return_data.size:
                                                        if not mem[96]:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with memory
                                                          from 128
                                                           len mem[96]
                                                    if not return_data.size:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _36005 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                require mem[_36005] == Mask(32, 224, mem[_36005])
                                                if Mask(32, 224, mem[_36005]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                mem[mem[96] + mem[64] + 164] = 0
                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    if not return_data.size:
                                                        if not mem[96]:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with memory
                                                          from 128
                                                           len mem[96]
                                                    if not return_data.size:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _36006 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                require mem[_36006] == Mask(32, 224, mem[_36006])
                                                if Mask(32, 224, mem[_36006]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                else:
                                    if arg1 == arg2:
                                        if arg2:
                                            if arg2 == arg1:
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _35983 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_35983] == Mask(32, 224, mem[_35983])
                                                        if Mask(32, 224, mem[_35983]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[96] + mem[64] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _35984 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_35984] == Mask(32, 224, mem[_35984])
                                                        if Mask(32, 224, mem[_35984]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if not arg2:
                                                    revert with 0, 'ERC721: balance query for the zero address'
                                                tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                stor152[arg3] = balanceOf[address(arg2)]
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _35985 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_35985] == Mask(32, 224, mem[_35985])
                                                        if Mask(32, 224, mem[_35985]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[96] + mem[64] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _35986 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_35986] == Mask(32, 224, mem[_35986])
                                                        if Mask(32, 224, mem[_35986]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            if tokenByIndex.length < 1:
                                                revert with 0, 17
                                            if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                revert with 0, 50
                                            if stor154[arg3] >= tokenByIndex.length:
                                                revert with 0, 50
                                            tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                            stor154[stor153[stor153.length]] = stor154[arg3]
                                            stor154[arg3] = 0
                                            if not tokenByIndex.length:
                                                revert with 0, 49
                                            tokenByIndex[tokenByIndex.length] = 0
                                            tokenByIndex.length--
                                            approved[arg3] = 0
                                            if not ownerOf[arg3]:
                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                            emit Approval(ownerOf[arg3], 0, arg3);
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            balanceOf[address(arg1)]--
                                            if balanceOf[address(arg2)] > -2:
                                                revert with 0, 17
                                            balanceOf[address(arg2)]++
                                            mem[0] = arg3
                                            mem[32] = 103
                                            ownerOf[arg3] = arg2
                                            emit Transfer(arg1, arg2, arg3);
                                            if ext_code.size(arg2):
                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = msg.sender
                                                mem[mem[64] + 36] = arg1
                                                mem[mem[64] + 68] = arg3
                                                mem[mem[64] + 100] = 128
                                                mem[mem[64] + 132] = mem[96]
                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                if ceil32(mem[96]) <= mem[96]:
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _35987 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_35987] == Mask(32, 224, mem[_35987])
                                                    if Mask(32, 224, mem[_35987]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    mem[mem[96] + mem[64] + 164] = 0
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _35988 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_35988] == Mask(32, 224, mem[_35988])
                                                    if Mask(32, 224, mem[_35988]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                    else:
                                        if not arg1:
                                            revert with 0, 'ERC721: balance query for the zero address'
                                        if balanceOf[address(arg1)] < 1:
                                            revert with 0, 17
                                        if balanceOf[address(arg1)] - 1 == stor152[arg3]:
                                            stor152[arg3] = 0
                                            tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                                            if arg2:
                                                if arg2 == arg1:
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _35989 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_35989] == Mask(32, 224, mem[_35989])
                                                            if Mask(32, 224, mem[_35989]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _35990 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_35990] == Mask(32, 224, mem[_35990])
                                                            if Mask(32, 224, mem[_35990]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    if not arg2:
                                                        revert with 0, 'ERC721: balance query for the zero address'
                                                    tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                    stor152[arg3] = balanceOf[address(arg2)]
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _35991 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_35991] == Mask(32, 224, mem[_35991])
                                                            if Mask(32, 224, mem[_35991]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _35992 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_35992] == Mask(32, 224, mem[_35992])
                                                            if Mask(32, 224, mem[_35992]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if tokenByIndex.length < 1:
                                                    revert with 0, 17
                                                if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                    revert with 0, 50
                                                if stor154[arg3] >= tokenByIndex.length:
                                                    revert with 0, 50
                                                tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                stor154[stor153[stor153.length]] = stor154[arg3]
                                                stor154[arg3] = 0
                                                if not tokenByIndex.length:
                                                    revert with 0, 49
                                                tokenByIndex[tokenByIndex.length] = 0
                                                tokenByIndex.length--
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _35993 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_35993] == Mask(32, 224, mem[_35993])
                                                        if Mask(32, 224, mem[_35993]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[96] + mem[64] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _35994 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_35994] == Mask(32, 224, mem[_35994])
                                                        if Mask(32, 224, mem[_35994]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            tokenOfOwnerByIndex[address(arg1)][stor152[arg3]] = tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1]
                                            stor152[stor151[address(arg1)][stor104[address(arg1)] - 1]] = stor152[arg3]
                                            stor152[arg3] = 0
                                            tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                                            if arg2:
                                                if arg2 == arg1:
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _35995 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_35995] == Mask(32, 224, mem[_35995])
                                                            if Mask(32, 224, mem[_35995]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _35996 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_35996] == Mask(32, 224, mem[_35996])
                                                            if Mask(32, 224, mem[_35996]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    if not arg2:
                                                        revert with 0, 'ERC721: balance query for the zero address'
                                                    tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                    stor152[arg3] = balanceOf[address(arg2)]
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _35997 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_35997] == Mask(32, 224, mem[_35997])
                                                            if Mask(32, 224, mem[_35997]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _35998 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_35998] == Mask(32, 224, mem[_35998])
                                                            if Mask(32, 224, mem[_35998]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if tokenByIndex.length < 1:
                                                    revert with 0, 17
                                                if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                    revert with 0, 50
                                                if stor154[arg3] >= tokenByIndex.length:
                                                    revert with 0, 50
                                                tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                stor154[stor153[stor153.length]] = stor154[arg3]
                                                stor154[arg3] = 0
                                                if not tokenByIndex.length:
                                                    revert with 0, 49
                                                tokenByIndex[tokenByIndex.length] = 0
                                                tokenByIndex.length--
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _35999 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_35999] == Mask(32, 224, mem[_35999])
                                                        if Mask(32, 224, mem[_35999]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[96] + mem[64] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _36000 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_36000] == Mask(32, 224, mem[_36000])
                                                        if Mask(32, 224, mem[_36000]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                        else:
                            mem[132] = arg2
                            staticcall liquidityPoolManagerImplementationAddress.0xb278110f with:
                                    gas gas_remaining wei
                                   args arg2
                            mem[128] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            if ext_call.return_data[0]:
                                if not arg1:
                                    stor154[arg3] = tokenByIndex.length
                                    tokenByIndex.length++
                                    stor72A1[stor153.length] = arg3
                                else:
                                    if arg1 != arg2:
                                        if not arg1:
                                            revert with 0, 'ERC721: balance query for the zero address'
                                        if balanceOf[address(arg1)] < 1:
                                            revert with 0, 17
                                        if balanceOf[address(arg1)] - 1 != stor152[arg3]:
                                            tokenOfOwnerByIndex[address(arg1)][stor152[arg3]] = tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1]
                                            stor152[stor151[address(arg1)][stor104[address(arg1)] - 1]] = stor152[arg3]
                                        stor152[arg3] = 0
                                        tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                                if arg2:
                                    if arg2 != arg1:
                                        if not arg2:
                                            revert with 0, 'ERC721: balance query for the zero address'
                                        tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                        stor152[arg3] = balanceOf[address(arg2)]
                                else:
                                    if tokenByIndex.length < 1:
                                        revert with 0, 17
                                    if tokenByIndex.length - 1 >= tokenByIndex.length:
                                        revert with 0, 50
                                    if stor154[arg3] >= tokenByIndex.length:
                                        revert with 0, 50
                                    tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                    stor154[stor153[stor153.length]] = stor154[arg3]
                                    stor154[arg3] = 0
                                    if not tokenByIndex.length:
                                        revert with 0, 49
                                    tokenByIndex[tokenByIndex.length] = 0
                                    tokenByIndex.length--
                                approved[arg3] = 0
                                if not ownerOf[arg3]:
                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                emit Approval(ownerOf[arg3], 0, arg3);
                                if balanceOf[address(arg1)] < 1:
                                    revert with 0, 17
                                balanceOf[address(arg1)]--
                                if balanceOf[address(arg2)] > -2:
                                    revert with 0, 17
                                balanceOf[address(arg2)]++
                                ownerOf[arg3] = arg2
                                emit Transfer(arg1, arg2, arg3);
                                if ext_code.size(arg2):
                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args msg.sender, address(arg1), arg3, 128, 0
                                    if not ext_call.success:
                                        if not return_data.size:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        if not return_data.size:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                    if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                            else:
                                if not arg2:
                                    revert with 0, 'ERC721: balance query for the zero address'
                                if balanceOf[address(arg2)] > test266151307():
                                    revert with 0, 65
                                mem[ceil32(return_data.size) + 128] = balanceOf[address(arg2)]
                                mem[64] = ceil32(return_data.size) + (32 * balanceOf[address(arg2)]) + 160
                                if not balanceOf[address(arg2)]:
                                    idx = 0
                                    while idx < balanceOf[address(arg2)]:
                                        if not arg2:
                                            revert with 0, 'ERC721: balance query for the zero address'
                                        if idx >= balanceOf[address(arg2)]:
                                            revert with 0, 'ERC721Enumerable: owner index out of bounds'
                                        if tokenOfOwnerByIndex[address(arg2)][idx] <= 0:
                                            revert with 0, 'Troops: Id must be higher than zero'
                                        mem[0] = tokenOfOwnerByIndex[address(arg2)][idx]
                                        mem[32] = 552
                                        _17906 = mem[64]
                                        mem[64] = mem[64] + 256
                                        mem[_17906] = stor552[stor151[address(arg2)][idx]].field_0
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                                revert with 0, 34
                                            _20616 = mem[64]
                                            mem[64] = mem[64] + ceil32(uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) + 32
                                            mem[_20616] = uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                                if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                                    revert with 0, 34
                                                if Mask(256, -1, stor552[stor151[address(arg2)][idx]].field_256):
                                                    if 31 >= uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5:
                                                        mem[_20616 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                    else:
                                                        mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                        mem[_20616 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                        s = _20616 + 32
                                                        t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                        while _20616 + (uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) > s:
                                                            mem[s + 32] = stor1[t].field_0
                                                            s = s + 32
                                                            t = t + 1
                                                            continue 
                                            else:
                                                if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                                    revert with 0, 34
                                                if stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                    if 31 >= stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                        mem[_20616 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                    else:
                                                        mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                        mem[_20616 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                        s = _20616 + 32
                                                        t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                        while _20616 + stor552[stor151[address(arg2)][idx]].field_257 % 128 > s:
                                                            mem[s + 32] = stor1[t].field_0
                                                            s = s + 32
                                                            t = t + 1
                                                            continue 
                                            mem[_17906 + 32] = _20616
                                        else:
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                                revert with 0, 34
                                            _20649 = mem[64]
                                            mem[64] = mem[64] + ceil32(stor552[stor151[address(arg2)][idx]].field_257 % 128) + 32
                                            mem[_20649] = stor552[stor151[address(arg2)][idx]].field_257 % 128
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                                if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                                    revert with 0, 34
                                                if Mask(256, -1, stor552[stor151[address(arg2)][idx]].field_256):
                                                    if 31 >= uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5:
                                                        mem[_20649 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                    else:
                                                        mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                        mem[_20649 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                        s = _20649 + 32
                                                        t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                        while _20649 + (uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) > s:
                                                            mem[s + 32] = stor1[t].field_0
                                                            s = s + 32
                                                            t = t + 1
                                                            continue 
                                            else:
                                                if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                                    revert with 0, 34
                                                if stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                    if 31 >= stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                        mem[_20649 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                    else:
                                                        mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                        mem[_20649 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                        s = _20649 + 32
                                                        t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                        while _20649 + stor552[stor151[address(arg2)][idx]].field_257 % 128 > s:
                                                            mem[s + 32] = stor1[t].field_0
                                                            s = s + 32
                                                            t = t + 1
                                                            continue 
                                            mem[_17906 + 32] = _20649
                                        mem[_17906 + 64] = stor552[stor151[address(arg2)][idx]].field_512
                                        mem[_17906 + 96] = stor552[stor151[address(arg2)][idx]].field_768
                                        mem[_17906 + 128] = stor552[stor151[address(arg2)][idx]].field_1024
                                        mem[_17906 + 160] = stor552[stor151[address(arg2)][idx]].field_1280
                                        mem[_17906 + 192] = bool(uint8(stor552[stor151[address(arg2)][idx]].field_1536))
                                        mem[_17906 + 224] = bool(uint8(stor552[stor151[address(arg2)][idx]].field_1544))
                                        if not uint8(stor552[stor151[address(arg2)][idx]].field_1536):
                                            revert with 0, 'Troops: This troop doesn't exist'
                                        if idx >= mem[ceil32(return_data.size) + 128]:
                                            revert with 0, 50
                                        mem[(32 * idx) + ceil32(return_data.size) + 160] = tokenOfOwnerByIndex[address(arg2)][idx]
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        continue 
                                    idx = 0
                                    s = 0
                                    while idx < mem[ceil32(return_data.size) + 128]:
                                        if idx >= mem[ceil32(return_data.size) + 128]:
                                            revert with 0, 50
                                        mem[0] = mem[(32 * idx) + ceil32(return_data.size) + 160]
                                        mem[32] = 552
                                        if not uint8(stor552[mem[(32 * idx) + ceil32(return_data.size) + 160]].field_1544):
                                            if idx == -1:
                                                revert with 0, 17
                                            idx = idx + 1
                                            s = s
                                            continue 
                                        if s == -1:
                                            revert with 0, 17
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = s + 1
                                        continue 
                                    if s >= 2:
                                        revert with 0, 'Each holder can not hold more than 2 Gladiators'
                                    if not arg1:
                                        stor154[arg3] = tokenByIndex.length
                                        tokenByIndex.length++
                                        stor72A1[stor153.length] = arg3
                                        if arg2:
                                            if arg2 == arg1:
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _36025 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_36025] == Mask(32, 224, mem[_36025])
                                                        if Mask(32, 224, mem[_36025]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[96] + mem[64] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _36026 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_36026] == Mask(32, 224, mem[_36026])
                                                        if Mask(32, 224, mem[_36026]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if not arg2:
                                                    revert with 0, 'ERC721: balance query for the zero address'
                                                tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                stor152[arg3] = balanceOf[address(arg2)]
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _36027 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_36027] == Mask(32, 224, mem[_36027])
                                                        if Mask(32, 224, mem[_36027]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[96] + mem[64] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _36028 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_36028] == Mask(32, 224, mem[_36028])
                                                        if Mask(32, 224, mem[_36028]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            if tokenByIndex.length < 1:
                                                revert with 0, 17
                                            if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                revert with 0, 50
                                            if stor154[arg3] >= tokenByIndex.length:
                                                revert with 0, 50
                                            tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                            stor154[stor153[stor153.length]] = stor154[arg3]
                                            stor154[arg3] = 0
                                            if not tokenByIndex.length:
                                                revert with 0, 49
                                            tokenByIndex[tokenByIndex.length] = 0
                                            tokenByIndex.length--
                                            approved[arg3] = 0
                                            if not ownerOf[arg3]:
                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                            emit Approval(ownerOf[arg3], 0, arg3);
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            balanceOf[address(arg1)]--
                                            if balanceOf[address(arg2)] > -2:
                                                revert with 0, 17
                                            balanceOf[address(arg2)]++
                                            mem[0] = arg3
                                            mem[32] = 103
                                            ownerOf[arg3] = arg2
                                            emit Transfer(arg1, arg2, arg3);
                                            if ext_code.size(arg2):
                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = msg.sender
                                                mem[mem[64] + 36] = arg1
                                                mem[mem[64] + 68] = arg3
                                                mem[mem[64] + 100] = 128
                                                mem[mem[64] + 132] = mem[96]
                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                if ceil32(mem[96]) <= mem[96]:
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _36029 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_36029] == Mask(32, 224, mem[_36029])
                                                    if Mask(32, 224, mem[_36029]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    mem[mem[96] + mem[64] + 164] = 0
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _36030 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_36030] == Mask(32, 224, mem[_36030])
                                                    if Mask(32, 224, mem[_36030]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                    else:
                                        if arg1 == arg2:
                                            if arg2:
                                                if arg2 == arg1:
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _36007 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_36007] == Mask(32, 224, mem[_36007])
                                                            if Mask(32, 224, mem[_36007]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _36008 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_36008] == Mask(32, 224, mem[_36008])
                                                            if Mask(32, 224, mem[_36008]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    if not arg2:
                                                        revert with 0, 'ERC721: balance query for the zero address'
                                                    tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                    stor152[arg3] = balanceOf[address(arg2)]
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _36009 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_36009] == Mask(32, 224, mem[_36009])
                                                            if Mask(32, 224, mem[_36009]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _36010 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_36010] == Mask(32, 224, mem[_36010])
                                                            if Mask(32, 224, mem[_36010]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if tokenByIndex.length < 1:
                                                    revert with 0, 17
                                                if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                    revert with 0, 50
                                                if stor154[arg3] >= tokenByIndex.length:
                                                    revert with 0, 50
                                                tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                stor154[stor153[stor153.length]] = stor154[arg3]
                                                stor154[arg3] = 0
                                                if not tokenByIndex.length:
                                                    revert with 0, 49
                                                tokenByIndex[tokenByIndex.length] = 0
                                                tokenByIndex.length--
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _36011 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_36011] == Mask(32, 224, mem[_36011])
                                                        if Mask(32, 224, mem[_36011]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[96] + mem[64] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _36012 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_36012] == Mask(32, 224, mem[_36012])
                                                        if Mask(32, 224, mem[_36012]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            if not arg1:
                                                revert with 0, 'ERC721: balance query for the zero address'
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            if balanceOf[address(arg1)] - 1 == stor152[arg3]:
                                                stor152[arg3] = 0
                                                tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                                                if arg2:
                                                    if arg2 == arg1:
                                                        approved[arg3] = 0
                                                        if not ownerOf[arg3]:
                                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                                        emit Approval(ownerOf[arg3], 0, arg3);
                                                        if balanceOf[address(arg1)] < 1:
                                                            revert with 0, 17
                                                        balanceOf[address(arg1)]--
                                                        if balanceOf[address(arg2)] > -2:
                                                            revert with 0, 17
                                                        balanceOf[address(arg2)]++
                                                        mem[0] = arg3
                                                        mem[32] = 103
                                                        ownerOf[arg3] = arg2
                                                        emit Transfer(arg1, arg2, arg3);
                                                        if ext_code.size(arg2):
                                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = msg.sender
                                                            mem[mem[64] + 36] = arg1
                                                            mem[mem[64] + 68] = arg3
                                                            mem[mem[64] + 100] = 128
                                                            mem[mem[64] + 132] = mem[96]
                                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                            if ceil32(mem[96]) <= mem[96]:
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _36013 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_36013] == Mask(32, 224, mem[_36013])
                                                                if Mask(32, 224, mem[_36013]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            else:
                                                                mem[mem[96] + mem[64] + 164] = 0
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _36014 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_36014] == Mask(32, 224, mem[_36014])
                                                                if Mask(32, 224, mem[_36014]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        if not arg2:
                                                            revert with 0, 'ERC721: balance query for the zero address'
                                                        tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                        stor152[arg3] = balanceOf[address(arg2)]
                                                        approved[arg3] = 0
                                                        if not ownerOf[arg3]:
                                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                                        emit Approval(ownerOf[arg3], 0, arg3);
                                                        if balanceOf[address(arg1)] < 1:
                                                            revert with 0, 17
                                                        balanceOf[address(arg1)]--
                                                        if balanceOf[address(arg2)] > -2:
                                                            revert with 0, 17
                                                        balanceOf[address(arg2)]++
                                                        mem[0] = arg3
                                                        mem[32] = 103
                                                        ownerOf[arg3] = arg2
                                                        emit Transfer(arg1, arg2, arg3);
                                                        if ext_code.size(arg2):
                                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = msg.sender
                                                            mem[mem[64] + 36] = arg1
                                                            mem[mem[64] + 68] = arg3
                                                            mem[mem[64] + 100] = 128
                                                            mem[mem[64] + 132] = mem[96]
                                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                            if ceil32(mem[96]) <= mem[96]:
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _36015 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_36015] == Mask(32, 224, mem[_36015])
                                                                if Mask(32, 224, mem[_36015]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            else:
                                                                mem[mem[96] + mem[64] + 164] = 0
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _36016 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_36016] == Mask(32, 224, mem[_36016])
                                                                if Mask(32, 224, mem[_36016]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    if tokenByIndex.length < 1:
                                                        revert with 0, 17
                                                    if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                        revert with 0, 50
                                                    if stor154[arg3] >= tokenByIndex.length:
                                                        revert with 0, 50
                                                    tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                    stor154[stor153[stor153.length]] = stor154[arg3]
                                                    stor154[arg3] = 0
                                                    if not tokenByIndex.length:
                                                        revert with 0, 49
                                                    tokenByIndex[tokenByIndex.length] = 0
                                                    tokenByIndex.length--
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _36017 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_36017] == Mask(32, 224, mem[_36017])
                                                            if Mask(32, 224, mem[_36017]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _36018 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_36018] == Mask(32, 224, mem[_36018])
                                                            if Mask(32, 224, mem[_36018]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                tokenOfOwnerByIndex[address(arg1)][stor152[arg3]] = tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1]
                                                stor152[stor151[address(arg1)][stor104[address(arg1)] - 1]] = stor152[arg3]
                                                stor152[arg3] = 0
                                                tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                                                if arg2:
                                                    if arg2 == arg1:
                                                        approved[arg3] = 0
                                                        if not ownerOf[arg3]:
                                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                                        emit Approval(ownerOf[arg3], 0, arg3);
                                                        if balanceOf[address(arg1)] < 1:
                                                            revert with 0, 17
                                                        balanceOf[address(arg1)]--
                                                        if balanceOf[address(arg2)] > -2:
                                                            revert with 0, 17
                                                        balanceOf[address(arg2)]++
                                                        mem[0] = arg3
                                                        mem[32] = 103
                                                        ownerOf[arg3] = arg2
                                                        emit Transfer(arg1, arg2, arg3);
                                                        if ext_code.size(arg2):
                                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = msg.sender
                                                            mem[mem[64] + 36] = arg1
                                                            mem[mem[64] + 68] = arg3
                                                            mem[mem[64] + 100] = 128
                                                            mem[mem[64] + 132] = mem[96]
                                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                            if ceil32(mem[96]) <= mem[96]:
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _36019 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_36019] == Mask(32, 224, mem[_36019])
                                                                if Mask(32, 224, mem[_36019]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            else:
                                                                mem[mem[96] + mem[64] + 164] = 0
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _36020 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_36020] == Mask(32, 224, mem[_36020])
                                                                if Mask(32, 224, mem[_36020]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        if not arg2:
                                                            revert with 0, 'ERC721: balance query for the zero address'
                                                        tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                        stor152[arg3] = balanceOf[address(arg2)]
                                                        approved[arg3] = 0
                                                        if not ownerOf[arg3]:
                                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                                        emit Approval(ownerOf[arg3], 0, arg3);
                                                        if balanceOf[address(arg1)] < 1:
                                                            revert with 0, 17
                                                        balanceOf[address(arg1)]--
                                                        if balanceOf[address(arg2)] > -2:
                                                            revert with 0, 17
                                                        balanceOf[address(arg2)]++
                                                        mem[0] = arg3
                                                        mem[32] = 103
                                                        ownerOf[arg3] = arg2
                                                        emit Transfer(arg1, arg2, arg3);
                                                        if ext_code.size(arg2):
                                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = msg.sender
                                                            mem[mem[64] + 36] = arg1
                                                            mem[mem[64] + 68] = arg3
                                                            mem[mem[64] + 100] = 128
                                                            mem[mem[64] + 132] = mem[96]
                                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                            if ceil32(mem[96]) <= mem[96]:
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _36021 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_36021] == Mask(32, 224, mem[_36021])
                                                                if Mask(32, 224, mem[_36021]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            else:
                                                                mem[mem[96] + mem[64] + 164] = 0
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _36022 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_36022] == Mask(32, 224, mem[_36022])
                                                                if Mask(32, 224, mem[_36022]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    if tokenByIndex.length < 1:
                                                        revert with 0, 17
                                                    if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                        revert with 0, 50
                                                    if stor154[arg3] >= tokenByIndex.length:
                                                        revert with 0, 50
                                                    tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                    stor154[stor153[stor153.length]] = stor154[arg3]
                                                    stor154[arg3] = 0
                                                    if not tokenByIndex.length:
                                                        revert with 0, 49
                                                    tokenByIndex[tokenByIndex.length] = 0
                                                    tokenByIndex.length--
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _36023 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_36023] == Mask(32, 224, mem[_36023])
                                                            if Mask(32, 224, mem[_36023]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _36024 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_36024] == Mask(32, 224, mem[_36024])
                                                            if Mask(32, 224, mem[_36024]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                else:
                                    mem[ceil32(return_data.size) + 160 len 32 * balanceOf[address(arg2)]] = call.data[calldata.size len 32 * balanceOf[address(arg2)]]
                                    idx = 0
                                    while idx < balanceOf[address(arg2)]:
                                        if not arg2:
                                            revert with 0, 'ERC721: balance query for the zero address'
                                        if idx >= balanceOf[address(arg2)]:
                                            revert with 0, 'ERC721Enumerable: owner index out of bounds'
                                        if tokenOfOwnerByIndex[address(arg2)][idx] <= 0:
                                            revert with 0, 'Troops: Id must be higher than zero'
                                        mem[0] = tokenOfOwnerByIndex[address(arg2)][idx]
                                        mem[32] = 552
                                        _17909 = mem[64]
                                        mem[64] = mem[64] + 256
                                        mem[_17909] = stor552[stor151[address(arg2)][idx]].field_0
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                                revert with 0, 34
                                            _20618 = mem[64]
                                            mem[64] = mem[64] + ceil32(uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) + 32
                                            mem[_20618] = uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                                if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                                    revert with 0, 34
                                                if Mask(256, -1, stor552[stor151[address(arg2)][idx]].field_256):
                                                    if 31 >= uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5:
                                                        mem[_20618 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                    else:
                                                        mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                        mem[_20618 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                        s = _20618 + 32
                                                        t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                        while _20618 + (uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) > s:
                                                            mem[s + 32] = stor1[t].field_0
                                                            s = s + 32
                                                            t = t + 1
                                                            continue 
                                            else:
                                                if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                                    revert with 0, 34
                                                if stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                    if 31 >= stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                        mem[_20618 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                    else:
                                                        mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                        mem[_20618 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                        s = _20618 + 32
                                                        t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                        while _20618 + stor552[stor151[address(arg2)][idx]].field_257 % 128 > s:
                                                            mem[s + 32] = stor1[t].field_0
                                                            s = s + 32
                                                            t = t + 1
                                                            continue 
                                            mem[_17909 + 32] = _20618
                                        else:
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                                revert with 0, 34
                                            _20654 = mem[64]
                                            mem[64] = mem[64] + ceil32(stor552[stor151[address(arg2)][idx]].field_257 % 128) + 32
                                            mem[_20654] = stor552[stor151[address(arg2)][idx]].field_257 % 128
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                                if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                                    revert with 0, 34
                                                if Mask(256, -1, stor552[stor151[address(arg2)][idx]].field_256):
                                                    if 31 >= uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5:
                                                        mem[_20654 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                    else:
                                                        mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                        mem[_20654 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                        s = _20654 + 32
                                                        t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                        while _20654 + (uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) > s:
                                                            mem[s + 32] = stor1[t].field_0
                                                            s = s + 32
                                                            t = t + 1
                                                            continue 
                                            else:
                                                if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                                    revert with 0, 34
                                                if stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                    if 31 >= stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                        mem[_20654 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                    else:
                                                        mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                        mem[_20654 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                        s = _20654 + 32
                                                        t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                        while _20654 + stor552[stor151[address(arg2)][idx]].field_257 % 128 > s:
                                                            mem[s + 32] = stor1[t].field_0
                                                            s = s + 32
                                                            t = t + 1
                                                            continue 
                                            mem[_17909 + 32] = _20654
                                        mem[_17909 + 64] = stor552[stor151[address(arg2)][idx]].field_512
                                        mem[_17909 + 96] = stor552[stor151[address(arg2)][idx]].field_768
                                        mem[_17909 + 128] = stor552[stor151[address(arg2)][idx]].field_1024
                                        mem[_17909 + 160] = stor552[stor151[address(arg2)][idx]].field_1280
                                        mem[_17909 + 192] = bool(uint8(stor552[stor151[address(arg2)][idx]].field_1536))
                                        mem[_17909 + 224] = bool(uint8(stor552[stor151[address(arg2)][idx]].field_1544))
                                        if not uint8(stor552[stor151[address(arg2)][idx]].field_1536):
                                            revert with 0, 'Troops: This troop doesn't exist'
                                        if idx >= mem[ceil32(return_data.size) + 128]:
                                            revert with 0, 50
                                        mem[(32 * idx) + ceil32(return_data.size) + 160] = tokenOfOwnerByIndex[address(arg2)][idx]
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        continue 
                                    idx = 0
                                    s = 0
                                    while idx < mem[ceil32(return_data.size) + 128]:
                                        if idx >= mem[ceil32(return_data.size) + 128]:
                                            revert with 0, 50
                                        mem[0] = mem[(32 * idx) + ceil32(return_data.size) + 160]
                                        mem[32] = 552
                                        if not uint8(stor552[mem[(32 * idx) + ceil32(return_data.size) + 160]].field_1544):
                                            if idx == -1:
                                                revert with 0, 17
                                            idx = idx + 1
                                            s = s
                                            continue 
                                        if s == -1:
                                            revert with 0, 17
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = s + 1
                                        continue 
                                    if s >= 2:
                                        revert with 0, 'Each holder can not hold more than 2 Gladiators'
                                    if not arg1:
                                        stor154[arg3] = tokenByIndex.length
                                        tokenByIndex.length++
                                        stor72A1[stor153.length] = arg3
                                        if arg2:
                                            if arg2 == arg1:
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _36049 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_36049] == Mask(32, 224, mem[_36049])
                                                        if Mask(32, 224, mem[_36049]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[96] + mem[64] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _36050 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_36050] == Mask(32, 224, mem[_36050])
                                                        if Mask(32, 224, mem[_36050]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if not arg2:
                                                    revert with 0, 'ERC721: balance query for the zero address'
                                                tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                stor152[arg3] = balanceOf[address(arg2)]
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _36051 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_36051] == Mask(32, 224, mem[_36051])
                                                        if Mask(32, 224, mem[_36051]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[96] + mem[64] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _36052 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_36052] == Mask(32, 224, mem[_36052])
                                                        if Mask(32, 224, mem[_36052]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            if tokenByIndex.length < 1:
                                                revert with 0, 17
                                            if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                revert with 0, 50
                                            if stor154[arg3] >= tokenByIndex.length:
                                                revert with 0, 50
                                            tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                            stor154[stor153[stor153.length]] = stor154[arg3]
                                            stor154[arg3] = 0
                                            if not tokenByIndex.length:
                                                revert with 0, 49
                                            tokenByIndex[tokenByIndex.length] = 0
                                            tokenByIndex.length--
                                            approved[arg3] = 0
                                            if not ownerOf[arg3]:
                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                            emit Approval(ownerOf[arg3], 0, arg3);
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            balanceOf[address(arg1)]--
                                            if balanceOf[address(arg2)] > -2:
                                                revert with 0, 17
                                            balanceOf[address(arg2)]++
                                            mem[0] = arg3
                                            mem[32] = 103
                                            ownerOf[arg3] = arg2
                                            emit Transfer(arg1, arg2, arg3);
                                            if ext_code.size(arg2):
                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = msg.sender
                                                mem[mem[64] + 36] = arg1
                                                mem[mem[64] + 68] = arg3
                                                mem[mem[64] + 100] = 128
                                                mem[mem[64] + 132] = mem[96]
                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                if ceil32(mem[96]) <= mem[96]:
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _36053 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_36053] == Mask(32, 224, mem[_36053])
                                                    if Mask(32, 224, mem[_36053]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    mem[mem[96] + mem[64] + 164] = 0
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _36054 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_36054] == Mask(32, 224, mem[_36054])
                                                    if Mask(32, 224, mem[_36054]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                    else:
                                        if arg1 == arg2:
                                            if arg2:
                                                if arg2 == arg1:
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _36031 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_36031] == Mask(32, 224, mem[_36031])
                                                            if Mask(32, 224, mem[_36031]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _36032 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_36032] == Mask(32, 224, mem[_36032])
                                                            if Mask(32, 224, mem[_36032]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    if not arg2:
                                                        revert with 0, 'ERC721: balance query for the zero address'
                                                    tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                    stor152[arg3] = balanceOf[address(arg2)]
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _36033 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_36033] == Mask(32, 224, mem[_36033])
                                                            if Mask(32, 224, mem[_36033]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _36034 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_36034] == Mask(32, 224, mem[_36034])
                                                            if Mask(32, 224, mem[_36034]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if tokenByIndex.length < 1:
                                                    revert with 0, 17
                                                if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                    revert with 0, 50
                                                if stor154[arg3] >= tokenByIndex.length:
                                                    revert with 0, 50
                                                tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                stor154[stor153[stor153.length]] = stor154[arg3]
                                                stor154[arg3] = 0
                                                if not tokenByIndex.length:
                                                    revert with 0, 49
                                                tokenByIndex[tokenByIndex.length] = 0
                                                tokenByIndex.length--
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _36035 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_36035] == Mask(32, 224, mem[_36035])
                                                        if Mask(32, 224, mem[_36035]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[96] + mem[64] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _36036 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_36036] == Mask(32, 224, mem[_36036])
                                                        if Mask(32, 224, mem[_36036]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            if not arg1:
                                                revert with 0, 'ERC721: balance query for the zero address'
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            if balanceOf[address(arg1)] - 1 == stor152[arg3]:
                                                stor152[arg3] = 0
                                                tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                                                if arg2:
                                                    if arg2 == arg1:
                                                        approved[arg3] = 0
                                                        if not ownerOf[arg3]:
                                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                                        emit Approval(ownerOf[arg3], 0, arg3);
                                                        if balanceOf[address(arg1)] < 1:
                                                            revert with 0, 17
                                                        balanceOf[address(arg1)]--
                                                        if balanceOf[address(arg2)] > -2:
                                                            revert with 0, 17
                                                        balanceOf[address(arg2)]++
                                                        mem[0] = arg3
                                                        mem[32] = 103
                                                        ownerOf[arg3] = arg2
                                                        emit Transfer(arg1, arg2, arg3);
                                                        if ext_code.size(arg2):
                                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = msg.sender
                                                            mem[mem[64] + 36] = arg1
                                                            mem[mem[64] + 68] = arg3
                                                            mem[mem[64] + 100] = 128
                                                            mem[mem[64] + 132] = mem[96]
                                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                            if ceil32(mem[96]) <= mem[96]:
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _36037 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_36037] == Mask(32, 224, mem[_36037])
                                                                if Mask(32, 224, mem[_36037]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            else:
                                                                mem[mem[96] + mem[64] + 164] = 0
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _36038 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_36038] == Mask(32, 224, mem[_36038])
                                                                if Mask(32, 224, mem[_36038]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        if not arg2:
                                                            revert with 0, 'ERC721: balance query for the zero address'
                                                        tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                        stor152[arg3] = balanceOf[address(arg2)]
                                                        approved[arg3] = 0
                                                        if not ownerOf[arg3]:
                                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                                        emit Approval(ownerOf[arg3], 0, arg3);
                                                        if balanceOf[address(arg1)] < 1:
                                                            revert with 0, 17
                                                        balanceOf[address(arg1)]--
                                                        if balanceOf[address(arg2)] > -2:
                                                            revert with 0, 17
                                                        balanceOf[address(arg2)]++
                                                        mem[0] = arg3
                                                        mem[32] = 103
                                                        ownerOf[arg3] = arg2
                                                        emit Transfer(arg1, arg2, arg3);
                                                        if ext_code.size(arg2):
                                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = msg.sender
                                                            mem[mem[64] + 36] = arg1
                                                            mem[mem[64] + 68] = arg3
                                                            mem[mem[64] + 100] = 128
                                                            mem[mem[64] + 132] = mem[96]
                                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                            if ceil32(mem[96]) <= mem[96]:
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _36039 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_36039] == Mask(32, 224, mem[_36039])
                                                                if Mask(32, 224, mem[_36039]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            else:
                                                                mem[mem[96] + mem[64] + 164] = 0
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _36040 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_36040] == Mask(32, 224, mem[_36040])
                                                                if Mask(32, 224, mem[_36040]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    if tokenByIndex.length < 1:
                                                        revert with 0, 17
                                                    if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                        revert with 0, 50
                                                    if stor154[arg3] >= tokenByIndex.length:
                                                        revert with 0, 50
                                                    tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                    stor154[stor153[stor153.length]] = stor154[arg3]
                                                    stor154[arg3] = 0
                                                    if not tokenByIndex.length:
                                                        revert with 0, 49
                                                    tokenByIndex[tokenByIndex.length] = 0
                                                    tokenByIndex.length--
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _36041 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_36041] == Mask(32, 224, mem[_36041])
                                                            if Mask(32, 224, mem[_36041]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _36042 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_36042] == Mask(32, 224, mem[_36042])
                                                            if Mask(32, 224, mem[_36042]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                tokenOfOwnerByIndex[address(arg1)][stor152[arg3]] = tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1]
                                                stor152[stor151[address(arg1)][stor104[address(arg1)] - 1]] = stor152[arg3]
                                                stor152[arg3] = 0
                                                tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                                                if arg2:
                                                    if arg2 == arg1:
                                                        approved[arg3] = 0
                                                        if not ownerOf[arg3]:
                                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                                        emit Approval(ownerOf[arg3], 0, arg3);
                                                        if balanceOf[address(arg1)] < 1:
                                                            revert with 0, 17
                                                        balanceOf[address(arg1)]--
                                                        if balanceOf[address(arg2)] > -2:
                                                            revert with 0, 17
                                                        balanceOf[address(arg2)]++
                                                        mem[0] = arg3
                                                        mem[32] = 103
                                                        ownerOf[arg3] = arg2
                                                        emit Transfer(arg1, arg2, arg3);
                                                        if ext_code.size(arg2):
                                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = msg.sender
                                                            mem[mem[64] + 36] = arg1
                                                            mem[mem[64] + 68] = arg3
                                                            mem[mem[64] + 100] = 128
                                                            mem[mem[64] + 132] = mem[96]
                                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                            if ceil32(mem[96]) <= mem[96]:
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _36043 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_36043] == Mask(32, 224, mem[_36043])
                                                                if Mask(32, 224, mem[_36043]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            else:
                                                                mem[mem[96] + mem[64] + 164] = 0
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _36044 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_36044] == Mask(32, 224, mem[_36044])
                                                                if Mask(32, 224, mem[_36044]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        if not arg2:
                                                            revert with 0, 'ERC721: balance query for the zero address'
                                                        tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                        stor152[arg3] = balanceOf[address(arg2)]
                                                        approved[arg3] = 0
                                                        if not ownerOf[arg3]:
                                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                                        emit Approval(ownerOf[arg3], 0, arg3);
                                                        if balanceOf[address(arg1)] < 1:
                                                            revert with 0, 17
                                                        balanceOf[address(arg1)]--
                                                        if balanceOf[address(arg2)] > -2:
                                                            revert with 0, 17
                                                        balanceOf[address(arg2)]++
                                                        mem[0] = arg3
                                                        mem[32] = 103
                                                        ownerOf[arg3] = arg2
                                                        emit Transfer(arg1, arg2, arg3);
                                                        if ext_code.size(arg2):
                                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = msg.sender
                                                            mem[mem[64] + 36] = arg1
                                                            mem[mem[64] + 68] = arg3
                                                            mem[mem[64] + 100] = 128
                                                            mem[mem[64] + 132] = mem[96]
                                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                            if ceil32(mem[96]) <= mem[96]:
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _36045 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_36045] == Mask(32, 224, mem[_36045])
                                                                if Mask(32, 224, mem[_36045]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            else:
                                                                mem[mem[96] + mem[64] + 164] = 0
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _36046 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_36046] == Mask(32, 224, mem[_36046])
                                                                if Mask(32, 224, mem[_36046]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    if tokenByIndex.length < 1:
                                                        revert with 0, 17
                                                    if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                        revert with 0, 50
                                                    if stor154[arg3] >= tokenByIndex.length:
                                                        revert with 0, 50
                                                    tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                    stor154[stor153[stor153.length]] = stor154[arg3]
                                                    stor154[arg3] = 0
                                                    if not tokenByIndex.length:
                                                        revert with 0, 49
                                                    tokenByIndex[tokenByIndex.length] = 0
                                                    tokenByIndex.length--
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _36047 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_36047] == Mask(32, 224, mem[_36047])
                                                            if Mask(32, 224, mem[_36047]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _36048 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_36048] == Mask(32, 224, mem[_36048])
                                                            if Mask(32, 224, mem[_36048]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
    else:
        if not ownerOf[arg3]:
            revert with 0, 'ERC721: approved query for nonexistent token'
        if approved[arg3] == msg.sender:
            if not ownerOf[arg3]:
                revert with 0, 'ERC721: owner query for nonexistent token'
            if ownerOf[arg3] != arg1:
                revert with 0, 'ERC721: transfer from incorrect owner'
            if not arg2:
                revert with 0, 'ERC721: transfer to the zero address'
            if paused:
                revert with 0, 'Pausable: paused'
            if not arg2:
                if not arg1:
                    stor154[arg3] = tokenByIndex.length
                    tokenByIndex.length++
                    stor72A1[stor153.length] = arg3
                else:
                    if arg1 != arg2:
                        if not arg1:
                            revert with 0, 'ERC721: balance query for the zero address'
                        if balanceOf[address(arg1)] < 1:
                            revert with 0, 17
                        if balanceOf[address(arg1)] - 1 != stor152[arg3]:
                            tokenOfOwnerByIndex[address(arg1)][stor152[arg3]] = tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1]
                            stor152[stor151[address(arg1)][stor104[address(arg1)] - 1]] = stor152[arg3]
                        stor152[arg3] = 0
                        tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                if arg2:
                    if arg2 != arg1:
                        if not arg2:
                            revert with 0, 'ERC721: balance query for the zero address'
                        tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                        stor152[arg3] = balanceOf[address(arg2)]
                else:
                    if tokenByIndex.length < 1:
                        revert with 0, 17
                    if tokenByIndex.length - 1 >= tokenByIndex.length:
                        revert with 0, 50
                    if stor154[arg3] >= tokenByIndex.length:
                        revert with 0, 50
                    tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                    stor154[stor153[stor153.length]] = stor154[arg3]
                    stor154[arg3] = 0
                    if not tokenByIndex.length:
                        revert with 0, 49
                    tokenByIndex[tokenByIndex.length] = 0
                    tokenByIndex.length--
                approved[arg3] = 0
                if not ownerOf[arg3]:
                    revert with 0, 'ERC721: owner query for nonexistent token'
                emit Approval(ownerOf[arg3], 0, arg3);
                if balanceOf[address(arg1)] < 1:
                    revert with 0, 17
                balanceOf[address(arg1)]--
                if balanceOf[address(arg2)] > -2:
                    revert with 0, 17
                balanceOf[address(arg2)]++
                ownerOf[arg3] = arg2
                emit Transfer(arg1, arg2, arg3);
                if ext_code.size(arg2):
                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                         gas gas_remaining wei
                        args 0, uint32(msg.sender), address(arg1), arg3, 128, 0
                    if not ext_call.success:
                        if not return_data.size:
                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                        if not return_data.size:
                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                    if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
            else:
                if owner == arg2:
                    if not arg1:
                        stor154[arg3] = tokenByIndex.length
                        tokenByIndex.length++
                        stor72A1[stor153.length] = arg3
                    else:
                        if arg1 != arg2:
                            if not arg1:
                                revert with 0, 'ERC721: balance query for the zero address'
                            if balanceOf[address(arg1)] < 1:
                                revert with 0, 17
                            if balanceOf[address(arg1)] - 1 != stor152[arg3]:
                                tokenOfOwnerByIndex[address(arg1)][stor152[arg3]] = tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1]
                                stor152[stor151[address(arg1)][stor104[address(arg1)] - 1]] = stor152[arg3]
                            stor152[arg3] = 0
                            tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                    if arg2:
                        if arg2 != arg1:
                            if not arg2:
                                revert with 0, 'ERC721: balance query for the zero address'
                            tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                            stor152[arg3] = balanceOf[address(arg2)]
                    else:
                        if tokenByIndex.length < 1:
                            revert with 0, 17
                        if tokenByIndex.length - 1 >= tokenByIndex.length:
                            revert with 0, 50
                        if stor154[arg3] >= tokenByIndex.length:
                            revert with 0, 50
                        tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                        stor154[stor153[stor153.length]] = stor154[arg3]
                        stor154[arg3] = 0
                        if not tokenByIndex.length:
                            revert with 0, 49
                        tokenByIndex[tokenByIndex.length] = 0
                        tokenByIndex.length--
                    approved[arg3] = 0
                    if not ownerOf[arg3]:
                        revert with 0, 'ERC721: owner query for nonexistent token'
                    emit Approval(ownerOf[arg3], 0, arg3);
                    if balanceOf[address(arg1)] < 1:
                        revert with 0, 17
                    balanceOf[address(arg1)]--
                    if balanceOf[address(arg2)] > -2:
                        revert with 0, 17
                    balanceOf[address(arg2)]++
                    ownerOf[arg3] = arg2
                    emit Transfer(arg1, arg2, arg3);
                    if ext_code.size(arg2):
                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                             gas gas_remaining wei
                            args 0, uint32(msg.sender), address(arg1), arg3, 128, 0
                        if not ext_call.success:
                            if not return_data.size:
                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                            if not return_data.size:
                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                        if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                else:
                    if bool(uint8(stor552[arg3].field_1536)) != 1:
                        if not arg1:
                            stor154[arg3] = tokenByIndex.length
                            tokenByIndex.length++
                            stor72A1[stor153.length] = arg3
                        else:
                            if arg1 != arg2:
                                if not arg1:
                                    revert with 0, 'ERC721: balance query for the zero address'
                                if balanceOf[address(arg1)] < 1:
                                    revert with 0, 17
                                if balanceOf[address(arg1)] - 1 != stor152[arg3]:
                                    tokenOfOwnerByIndex[address(arg1)][stor152[arg3]] = tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1]
                                    stor152[stor151[address(arg1)][stor104[address(arg1)] - 1]] = stor152[arg3]
                                stor152[arg3] = 0
                                tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                        if arg2:
                            if arg2 != arg1:
                                if not arg2:
                                    revert with 0, 'ERC721: balance query for the zero address'
                                tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                stor152[arg3] = balanceOf[address(arg2)]
                        else:
                            if tokenByIndex.length < 1:
                                revert with 0, 17
                            if tokenByIndex.length - 1 >= tokenByIndex.length:
                                revert with 0, 50
                            if stor154[arg3] >= tokenByIndex.length:
                                revert with 0, 50
                            tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                            stor154[stor153[stor153.length]] = stor154[arg3]
                            stor154[arg3] = 0
                            if not tokenByIndex.length:
                                revert with 0, 49
                            tokenByIndex[tokenByIndex.length] = 0
                            tokenByIndex.length--
                        approved[arg3] = 0
                        if not ownerOf[arg3]:
                            revert with 0, 'ERC721: owner query for nonexistent token'
                        emit Approval(ownerOf[arg3], 0, arg3);
                        if balanceOf[address(arg1)] < 1:
                            revert with 0, 17
                        balanceOf[address(arg1)]--
                        if balanceOf[address(arg2)] > -2:
                            revert with 0, 17
                        balanceOf[address(arg2)]++
                        ownerOf[arg3] = arg2
                        emit Transfer(arg1, arg2, arg3);
                        if ext_code.size(arg2):
                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, uint32(msg.sender), address(arg1), arg3, 128, 0
                            if not ext_call.success:
                                if not return_data.size:
                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                if not return_data.size:
                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                            if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                    else:
                        if bool(uint8(stor552[arg3].field_1544)) != 1:
                            if not arg1:
                                stor154[arg3] = tokenByIndex.length
                                tokenByIndex.length++
                                stor72A1[stor153.length] = arg3
                            else:
                                if arg1 != arg2:
                                    if not arg1:
                                        revert with 0, 'ERC721: balance query for the zero address'
                                    if balanceOf[address(arg1)] < 1:
                                        revert with 0, 17
                                    if balanceOf[address(arg1)] - 1 != stor152[arg3]:
                                        tokenOfOwnerByIndex[address(arg1)][stor152[arg3]] = tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1]
                                        stor152[stor151[address(arg1)][stor104[address(arg1)] - 1]] = stor152[arg3]
                                    stor152[arg3] = 0
                                    tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                            if arg2:
                                if arg2 != arg1:
                                    if not arg2:
                                        revert with 0, 'ERC721: balance query for the zero address'
                                    tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                    stor152[arg3] = balanceOf[address(arg2)]
                            else:
                                if tokenByIndex.length < 1:
                                    revert with 0, 17
                                if tokenByIndex.length - 1 >= tokenByIndex.length:
                                    revert with 0, 50
                                if stor154[arg3] >= tokenByIndex.length:
                                    revert with 0, 50
                                tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                stor154[stor153[stor153.length]] = stor154[arg3]
                                stor154[arg3] = 0
                                if not tokenByIndex.length:
                                    revert with 0, 49
                                tokenByIndex[tokenByIndex.length] = 0
                                tokenByIndex.length--
                            approved[arg3] = 0
                            if not ownerOf[arg3]:
                                revert with 0, 'ERC721: owner query for nonexistent token'
                            emit Approval(ownerOf[arg3], 0, arg3);
                            if balanceOf[address(arg1)] < 1:
                                revert with 0, 17
                            balanceOf[address(arg1)]--
                            if balanceOf[address(arg2)] > -2:
                                revert with 0, 17
                            balanceOf[address(arg2)]++
                            ownerOf[arg3] = arg2
                            emit Transfer(arg1, arg2, arg3);
                            if ext_code.size(arg2):
                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, uint32(msg.sender), address(arg1), arg3, 128, 0
                                if not ext_call.success:
                                    if not return_data.size:
                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                    if not return_data.size:
                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                        else:
                            if not liquidityPoolManagerImplementationAddress:
                                if not arg2:
                                    revert with 0, 'ERC721: balance query for the zero address'
                                if balanceOf[address(arg2)] > test266151307():
                                    revert with 0, 65
                                mem[128] = balanceOf[address(arg2)]
                                mem[64] = (32 * balanceOf[address(arg2)]) + 160
                                if not balanceOf[address(arg2)]:
                                    idx = 0
                                    while idx < balanceOf[address(arg2)]:
                                        if not arg2:
                                            revert with 0, 'ERC721: balance query for the zero address'
                                        if idx >= balanceOf[address(arg2)]:
                                            revert with 0, 'ERC721Enumerable: owner index out of bounds'
                                        if tokenOfOwnerByIndex[address(arg2)][idx] <= 0:
                                            revert with 0, 'Troops: Id must be higher than zero'
                                        mem[0] = tokenOfOwnerByIndex[address(arg2)][idx]
                                        mem[32] = 552
                                        _18104 = mem[64]
                                        mem[64] = mem[64] + 256
                                        mem[_18104] = stor552[stor151[address(arg2)][idx]].field_0
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                                revert with 0, 34
                                            _20620 = mem[64]
                                            mem[64] = mem[64] + ceil32(uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) + 32
                                            mem[_20620] = uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                                if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                                    revert with 0, 34
                                                if Mask(256, -1, stor552[stor151[address(arg2)][idx]].field_256):
                                                    if 31 >= uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5:
                                                        mem[_20620 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                    else:
                                                        mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                        mem[_20620 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                        s = _20620 + 32
                                                        t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                        while _20620 + (uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) > s:
                                                            mem[s + 32] = stor1[t].field_0
                                                            s = s + 32
                                                            t = t + 1
                                                            continue 
                                            else:
                                                if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                                    revert with 0, 34
                                                if stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                    if 31 >= stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                        mem[_20620 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                    else:
                                                        mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                        mem[_20620 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                        s = _20620 + 32
                                                        t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                        while _20620 + stor552[stor151[address(arg2)][idx]].field_257 % 128 > s:
                                                            mem[s + 32] = stor1[t].field_0
                                                            s = s + 32
                                                            t = t + 1
                                                            continue 
                                            mem[_18104 + 32] = _20620
                                        else:
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                                revert with 0, 34
                                            _20659 = mem[64]
                                            mem[64] = mem[64] + ceil32(stor552[stor151[address(arg2)][idx]].field_257 % 128) + 32
                                            mem[_20659] = stor552[stor151[address(arg2)][idx]].field_257 % 128
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                                if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                                    revert with 0, 34
                                                if Mask(256, -1, stor552[stor151[address(arg2)][idx]].field_256):
                                                    if 31 >= uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5:
                                                        mem[_20659 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                    else:
                                                        mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                        mem[_20659 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                        s = _20659 + 32
                                                        t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                        while _20659 + (uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) > s:
                                                            mem[s + 32] = stor1[t].field_0
                                                            s = s + 32
                                                            t = t + 1
                                                            continue 
                                            else:
                                                if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                                    revert with 0, 34
                                                if stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                    if 31 >= stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                        mem[_20659 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                    else:
                                                        mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                        mem[_20659 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                        s = _20659 + 32
                                                        t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                        while _20659 + stor552[stor151[address(arg2)][idx]].field_257 % 128 > s:
                                                            mem[s + 32] = stor1[t].field_0
                                                            s = s + 32
                                                            t = t + 1
                                                            continue 
                                            mem[_18104 + 32] = _20659
                                        mem[_18104 + 64] = stor552[stor151[address(arg2)][idx]].field_512
                                        mem[_18104 + 96] = stor552[stor151[address(arg2)][idx]].field_768
                                        mem[_18104 + 128] = stor552[stor151[address(arg2)][idx]].field_1024
                                        mem[_18104 + 160] = stor552[stor151[address(arg2)][idx]].field_1280
                                        mem[_18104 + 192] = bool(uint8(stor552[stor151[address(arg2)][idx]].field_1536))
                                        mem[_18104 + 224] = bool(uint8(stor552[stor151[address(arg2)][idx]].field_1544))
                                        if not uint8(stor552[stor151[address(arg2)][idx]].field_1536):
                                            revert with 0, 'Troops: This troop doesn't exist'
                                        if idx >= mem[128]:
                                            revert with 0, 50
                                        mem[(32 * idx) + 160] = tokenOfOwnerByIndex[address(arg2)][idx]
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        continue 
                                    idx = 0
                                    s = 0
                                    while idx < mem[128]:
                                        if idx >= mem[128]:
                                            revert with 0, 50
                                        mem[0] = mem[(32 * idx) + 160]
                                        mem[32] = 552
                                        if not uint8(stor552[mem[(32 * idx) + 160]].field_1544):
                                            if idx == -1:
                                                revert with 0, 17
                                            idx = idx + 1
                                            s = s
                                            continue 
                                        if s == -1:
                                            revert with 0, 17
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = s + 1
                                        continue 
                                    if s >= 2:
                                        revert with 0, 'Each holder can not hold more than 2 Gladiators'
                                    if not arg1:
                                        stor154[arg3] = tokenByIndex.length
                                        tokenByIndex.length++
                                        stor72A1[stor153.length] = arg3
                                        if arg2:
                                            if arg2 == arg1:
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _36073 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_36073] == Mask(32, 224, mem[_36073])
                                                        if Mask(32, 224, mem[_36073]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[96] + mem[64] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _36074 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_36074] == Mask(32, 224, mem[_36074])
                                                        if Mask(32, 224, mem[_36074]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if not arg2:
                                                    revert with 0, 'ERC721: balance query for the zero address'
                                                tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                stor152[arg3] = balanceOf[address(arg2)]
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _36075 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_36075] == Mask(32, 224, mem[_36075])
                                                        if Mask(32, 224, mem[_36075]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[96] + mem[64] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _36076 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_36076] == Mask(32, 224, mem[_36076])
                                                        if Mask(32, 224, mem[_36076]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            if tokenByIndex.length < 1:
                                                revert with 0, 17
                                            if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                revert with 0, 50
                                            if stor154[arg3] >= tokenByIndex.length:
                                                revert with 0, 50
                                            tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                            stor154[stor153[stor153.length]] = stor154[arg3]
                                            stor154[arg3] = 0
                                            if not tokenByIndex.length:
                                                revert with 0, 49
                                            tokenByIndex[tokenByIndex.length] = 0
                                            tokenByIndex.length--
                                            approved[arg3] = 0
                                            if not ownerOf[arg3]:
                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                            emit Approval(ownerOf[arg3], 0, arg3);
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            balanceOf[address(arg1)]--
                                            if balanceOf[address(arg2)] > -2:
                                                revert with 0, 17
                                            balanceOf[address(arg2)]++
                                            mem[0] = arg3
                                            mem[32] = 103
                                            ownerOf[arg3] = arg2
                                            emit Transfer(arg1, arg2, arg3);
                                            if ext_code.size(arg2):
                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = msg.sender
                                                mem[mem[64] + 36] = arg1
                                                mem[mem[64] + 68] = arg3
                                                mem[mem[64] + 100] = 128
                                                mem[mem[64] + 132] = mem[96]
                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                if ceil32(mem[96]) <= mem[96]:
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _36077 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_36077] == Mask(32, 224, mem[_36077])
                                                    if Mask(32, 224, mem[_36077]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    mem[mem[96] + mem[64] + 164] = 0
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _36078 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_36078] == Mask(32, 224, mem[_36078])
                                                    if Mask(32, 224, mem[_36078]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                    else:
                                        if arg1 == arg2:
                                            if arg2:
                                                if arg2 == arg1:
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _36055 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_36055] == Mask(32, 224, mem[_36055])
                                                            if Mask(32, 224, mem[_36055]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _36056 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_36056] == Mask(32, 224, mem[_36056])
                                                            if Mask(32, 224, mem[_36056]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    if not arg2:
                                                        revert with 0, 'ERC721: balance query for the zero address'
                                                    tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                    stor152[arg3] = balanceOf[address(arg2)]
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _36057 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_36057] == Mask(32, 224, mem[_36057])
                                                            if Mask(32, 224, mem[_36057]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _36058 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_36058] == Mask(32, 224, mem[_36058])
                                                            if Mask(32, 224, mem[_36058]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if tokenByIndex.length < 1:
                                                    revert with 0, 17
                                                if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                    revert with 0, 50
                                                if stor154[arg3] >= tokenByIndex.length:
                                                    revert with 0, 50
                                                tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                stor154[stor153[stor153.length]] = stor154[arg3]
                                                stor154[arg3] = 0
                                                if not tokenByIndex.length:
                                                    revert with 0, 49
                                                tokenByIndex[tokenByIndex.length] = 0
                                                tokenByIndex.length--
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _36059 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_36059] == Mask(32, 224, mem[_36059])
                                                        if Mask(32, 224, mem[_36059]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[96] + mem[64] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _36060 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_36060] == Mask(32, 224, mem[_36060])
                                                        if Mask(32, 224, mem[_36060]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            if not arg1:
                                                revert with 0, 'ERC721: balance query for the zero address'
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            if balanceOf[address(arg1)] - 1 == stor152[arg3]:
                                                stor152[arg3] = 0
                                                tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                                                if arg2:
                                                    if arg2 == arg1:
                                                        approved[arg3] = 0
                                                        if not ownerOf[arg3]:
                                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                                        emit Approval(ownerOf[arg3], 0, arg3);
                                                        if balanceOf[address(arg1)] < 1:
                                                            revert with 0, 17
                                                        balanceOf[address(arg1)]--
                                                        if balanceOf[address(arg2)] > -2:
                                                            revert with 0, 17
                                                        balanceOf[address(arg2)]++
                                                        mem[0] = arg3
                                                        mem[32] = 103
                                                        ownerOf[arg3] = arg2
                                                        emit Transfer(arg1, arg2, arg3);
                                                        if ext_code.size(arg2):
                                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = msg.sender
                                                            mem[mem[64] + 36] = arg1
                                                            mem[mem[64] + 68] = arg3
                                                            mem[mem[64] + 100] = 128
                                                            mem[mem[64] + 132] = mem[96]
                                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                            if ceil32(mem[96]) <= mem[96]:
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _36061 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_36061] == Mask(32, 224, mem[_36061])
                                                                if Mask(32, 224, mem[_36061]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            else:
                                                                mem[mem[96] + mem[64] + 164] = 0
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _36062 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_36062] == Mask(32, 224, mem[_36062])
                                                                if Mask(32, 224, mem[_36062]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        if not arg2:
                                                            revert with 0, 'ERC721: balance query for the zero address'
                                                        tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                        stor152[arg3] = balanceOf[address(arg2)]
                                                        approved[arg3] = 0
                                                        if not ownerOf[arg3]:
                                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                                        emit Approval(ownerOf[arg3], 0, arg3);
                                                        if balanceOf[address(arg1)] < 1:
                                                            revert with 0, 17
                                                        balanceOf[address(arg1)]--
                                                        if balanceOf[address(arg2)] > -2:
                                                            revert with 0, 17
                                                        balanceOf[address(arg2)]++
                                                        mem[0] = arg3
                                                        mem[32] = 103
                                                        ownerOf[arg3] = arg2
                                                        emit Transfer(arg1, arg2, arg3);
                                                        if ext_code.size(arg2):
                                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = msg.sender
                                                            mem[mem[64] + 36] = arg1
                                                            mem[mem[64] + 68] = arg3
                                                            mem[mem[64] + 100] = 128
                                                            mem[mem[64] + 132] = mem[96]
                                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                            if ceil32(mem[96]) <= mem[96]:
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _36063 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_36063] == Mask(32, 224, mem[_36063])
                                                                if Mask(32, 224, mem[_36063]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            else:
                                                                mem[mem[96] + mem[64] + 164] = 0
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _36064 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_36064] == Mask(32, 224, mem[_36064])
                                                                if Mask(32, 224, mem[_36064]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    if tokenByIndex.length < 1:
                                                        revert with 0, 17
                                                    if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                        revert with 0, 50
                                                    if stor154[arg3] >= tokenByIndex.length:
                                                        revert with 0, 50
                                                    tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                    stor154[stor153[stor153.length]] = stor154[arg3]
                                                    stor154[arg3] = 0
                                                    if not tokenByIndex.length:
                                                        revert with 0, 49
                                                    tokenByIndex[tokenByIndex.length] = 0
                                                    tokenByIndex.length--
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _36065 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_36065] == Mask(32, 224, mem[_36065])
                                                            if Mask(32, 224, mem[_36065]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _36066 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_36066] == Mask(32, 224, mem[_36066])
                                                            if Mask(32, 224, mem[_36066]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                tokenOfOwnerByIndex[address(arg1)][stor152[arg3]] = tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1]
                                                stor152[stor151[address(arg1)][stor104[address(arg1)] - 1]] = stor152[arg3]
                                                stor152[arg3] = 0
                                                tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                                                if arg2:
                                                    if arg2 == arg1:
                                                        approved[arg3] = 0
                                                        if not ownerOf[arg3]:
                                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                                        emit Approval(ownerOf[arg3], 0, arg3);
                                                        if balanceOf[address(arg1)] < 1:
                                                            revert with 0, 17
                                                        balanceOf[address(arg1)]--
                                                        if balanceOf[address(arg2)] > -2:
                                                            revert with 0, 17
                                                        balanceOf[address(arg2)]++
                                                        mem[0] = arg3
                                                        mem[32] = 103
                                                        ownerOf[arg3] = arg2
                                                        emit Transfer(arg1, arg2, arg3);
                                                        if ext_code.size(arg2):
                                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = msg.sender
                                                            mem[mem[64] + 36] = arg1
                                                            mem[mem[64] + 68] = arg3
                                                            mem[mem[64] + 100] = 128
                                                            mem[mem[64] + 132] = mem[96]
                                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                            if ceil32(mem[96]) <= mem[96]:
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _36067 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_36067] == Mask(32, 224, mem[_36067])
                                                                if Mask(32, 224, mem[_36067]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            else:
                                                                mem[mem[96] + mem[64] + 164] = 0
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _36068 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_36068] == Mask(32, 224, mem[_36068])
                                                                if Mask(32, 224, mem[_36068]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        if not arg2:
                                                            revert with 0, 'ERC721: balance query for the zero address'
                                                        tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                        stor152[arg3] = balanceOf[address(arg2)]
                                                        approved[arg3] = 0
                                                        if not ownerOf[arg3]:
                                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                                        emit Approval(ownerOf[arg3], 0, arg3);
                                                        if balanceOf[address(arg1)] < 1:
                                                            revert with 0, 17
                                                        balanceOf[address(arg1)]--
                                                        if balanceOf[address(arg2)] > -2:
                                                            revert with 0, 17
                                                        balanceOf[address(arg2)]++
                                                        mem[0] = arg3
                                                        mem[32] = 103
                                                        ownerOf[arg3] = arg2
                                                        emit Transfer(arg1, arg2, arg3);
                                                        if ext_code.size(arg2):
                                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = msg.sender
                                                            mem[mem[64] + 36] = arg1
                                                            mem[mem[64] + 68] = arg3
                                                            mem[mem[64] + 100] = 128
                                                            mem[mem[64] + 132] = mem[96]
                                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                            if ceil32(mem[96]) <= mem[96]:
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _36069 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_36069] == Mask(32, 224, mem[_36069])
                                                                if Mask(32, 224, mem[_36069]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            else:
                                                                mem[mem[96] + mem[64] + 164] = 0
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _36070 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_36070] == Mask(32, 224, mem[_36070])
                                                                if Mask(32, 224, mem[_36070]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    if tokenByIndex.length < 1:
                                                        revert with 0, 17
                                                    if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                        revert with 0, 50
                                                    if stor154[arg3] >= tokenByIndex.length:
                                                        revert with 0, 50
                                                    tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                    stor154[stor153[stor153.length]] = stor154[arg3]
                                                    stor154[arg3] = 0
                                                    if not tokenByIndex.length:
                                                        revert with 0, 49
                                                    tokenByIndex[tokenByIndex.length] = 0
                                                    tokenByIndex.length--
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _36071 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_36071] == Mask(32, 224, mem[_36071])
                                                            if Mask(32, 224, mem[_36071]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _36072 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_36072] == Mask(32, 224, mem[_36072])
                                                            if Mask(32, 224, mem[_36072]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                else:
                                    mem[160 len 32 * balanceOf[address(arg2)]] = call.data[calldata.size len 32 * balanceOf[address(arg2)]]
                                    idx = 0
                                    while idx < balanceOf[address(arg2)]:
                                        if not arg2:
                                            revert with 0, 'ERC721: balance query for the zero address'
                                        if idx >= balanceOf[address(arg2)]:
                                            revert with 0, 'ERC721Enumerable: owner index out of bounds'
                                        if tokenOfOwnerByIndex[address(arg2)][idx] <= 0:
                                            revert with 0, 'Troops: Id must be higher than zero'
                                        mem[0] = tokenOfOwnerByIndex[address(arg2)][idx]
                                        mem[32] = 552
                                        _18107 = mem[64]
                                        mem[64] = mem[64] + 256
                                        mem[_18107] = stor552[stor151[address(arg2)][idx]].field_0
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                                revert with 0, 34
                                            _20622 = mem[64]
                                            mem[64] = mem[64] + ceil32(uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) + 32
                                            mem[_20622] = uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                                if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                                    revert with 0, 34
                                                if Mask(256, -1, stor552[stor151[address(arg2)][idx]].field_256):
                                                    if 31 >= uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5:
                                                        mem[_20622 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                    else:
                                                        mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                        mem[_20622 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                        s = _20622 + 32
                                                        t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                        while _20622 + (uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) > s:
                                                            mem[s + 32] = stor1[t].field_0
                                                            s = s + 32
                                                            t = t + 1
                                                            continue 
                                            else:
                                                if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                                    revert with 0, 34
                                                if stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                    if 31 >= stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                        mem[_20622 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                    else:
                                                        mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                        mem[_20622 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                        s = _20622 + 32
                                                        t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                        while _20622 + stor552[stor151[address(arg2)][idx]].field_257 % 128 > s:
                                                            mem[s + 32] = stor1[t].field_0
                                                            s = s + 32
                                                            t = t + 1
                                                            continue 
                                            mem[_18107 + 32] = _20622
                                        else:
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                                revert with 0, 34
                                            _20664 = mem[64]
                                            mem[64] = mem[64] + ceil32(stor552[stor151[address(arg2)][idx]].field_257 % 128) + 32
                                            mem[_20664] = stor552[stor151[address(arg2)][idx]].field_257 % 128
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                                if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                                    revert with 0, 34
                                                if Mask(256, -1, stor552[stor151[address(arg2)][idx]].field_256):
                                                    if 31 >= uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5:
                                                        mem[_20664 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                    else:
                                                        mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                        mem[_20664 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                        s = _20664 + 32
                                                        t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                        while _20664 + (uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) > s:
                                                            mem[s + 32] = stor1[t].field_0
                                                            s = s + 32
                                                            t = t + 1
                                                            continue 
                                            else:
                                                if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                                    revert with 0, 34
                                                if stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                    if 31 >= stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                        mem[_20664 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                    else:
                                                        mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                        mem[_20664 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                        s = _20664 + 32
                                                        t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                        while _20664 + stor552[stor151[address(arg2)][idx]].field_257 % 128 > s:
                                                            mem[s + 32] = stor1[t].field_0
                                                            s = s + 32
                                                            t = t + 1
                                                            continue 
                                            mem[_18107 + 32] = _20664
                                        mem[_18107 + 64] = stor552[stor151[address(arg2)][idx]].field_512
                                        mem[_18107 + 96] = stor552[stor151[address(arg2)][idx]].field_768
                                        mem[_18107 + 128] = stor552[stor151[address(arg2)][idx]].field_1024
                                        mem[_18107 + 160] = stor552[stor151[address(arg2)][idx]].field_1280
                                        mem[_18107 + 192] = bool(uint8(stor552[stor151[address(arg2)][idx]].field_1536))
                                        mem[_18107 + 224] = bool(uint8(stor552[stor151[address(arg2)][idx]].field_1544))
                                        if not uint8(stor552[stor151[address(arg2)][idx]].field_1536):
                                            revert with 0, 'Troops: This troop doesn't exist'
                                        if idx >= mem[128]:
                                            revert with 0, 50
                                        mem[(32 * idx) + 160] = tokenOfOwnerByIndex[address(arg2)][idx]
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        continue 
                                    idx = 0
                                    s = 0
                                    while idx < mem[128]:
                                        if idx >= mem[128]:
                                            revert with 0, 50
                                        mem[0] = mem[(32 * idx) + 160]
                                        mem[32] = 552
                                        if not uint8(stor552[mem[(32 * idx) + 160]].field_1544):
                                            if idx == -1:
                                                revert with 0, 17
                                            idx = idx + 1
                                            s = s
                                            continue 
                                        if s == -1:
                                            revert with 0, 17
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = s + 1
                                        continue 
                                    if s >= 2:
                                        revert with 0, 'Each holder can not hold more than 2 Gladiators'
                                    if not arg1:
                                        stor154[arg3] = tokenByIndex.length
                                        tokenByIndex.length++
                                        stor72A1[stor153.length] = arg3
                                        if arg2:
                                            if arg2 == arg1:
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _36097 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_36097] == Mask(32, 224, mem[_36097])
                                                        if Mask(32, 224, mem[_36097]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[96] + mem[64] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _36098 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_36098] == Mask(32, 224, mem[_36098])
                                                        if Mask(32, 224, mem[_36098]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if not arg2:
                                                    revert with 0, 'ERC721: balance query for the zero address'
                                                tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                stor152[arg3] = balanceOf[address(arg2)]
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _36099 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_36099] == Mask(32, 224, mem[_36099])
                                                        if Mask(32, 224, mem[_36099]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[96] + mem[64] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _36100 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_36100] == Mask(32, 224, mem[_36100])
                                                        if Mask(32, 224, mem[_36100]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            if tokenByIndex.length < 1:
                                                revert with 0, 17
                                            if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                revert with 0, 50
                                            if stor154[arg3] >= tokenByIndex.length:
                                                revert with 0, 50
                                            tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                            stor154[stor153[stor153.length]] = stor154[arg3]
                                            stor154[arg3] = 0
                                            if not tokenByIndex.length:
                                                revert with 0, 49
                                            tokenByIndex[tokenByIndex.length] = 0
                                            tokenByIndex.length--
                                            approved[arg3] = 0
                                            if not ownerOf[arg3]:
                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                            emit Approval(ownerOf[arg3], 0, arg3);
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            balanceOf[address(arg1)]--
                                            if balanceOf[address(arg2)] > -2:
                                                revert with 0, 17
                                            balanceOf[address(arg2)]++
                                            mem[0] = arg3
                                            mem[32] = 103
                                            ownerOf[arg3] = arg2
                                            emit Transfer(arg1, arg2, arg3);
                                            if ext_code.size(arg2):
                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = msg.sender
                                                mem[mem[64] + 36] = arg1
                                                mem[mem[64] + 68] = arg3
                                                mem[mem[64] + 100] = 128
                                                mem[mem[64] + 132] = mem[96]
                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                if ceil32(mem[96]) <= mem[96]:
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _36101 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_36101] == Mask(32, 224, mem[_36101])
                                                    if Mask(32, 224, mem[_36101]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    mem[mem[96] + mem[64] + 164] = 0
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _36102 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_36102] == Mask(32, 224, mem[_36102])
                                                    if Mask(32, 224, mem[_36102]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                    else:
                                        if arg1 == arg2:
                                            if arg2:
                                                if arg2 == arg1:
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _36079 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_36079] == Mask(32, 224, mem[_36079])
                                                            if Mask(32, 224, mem[_36079]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _36080 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_36080] == Mask(32, 224, mem[_36080])
                                                            if Mask(32, 224, mem[_36080]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    if not arg2:
                                                        revert with 0, 'ERC721: balance query for the zero address'
                                                    tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                    stor152[arg3] = balanceOf[address(arg2)]
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _36081 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_36081] == Mask(32, 224, mem[_36081])
                                                            if Mask(32, 224, mem[_36081]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _36082 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_36082] == Mask(32, 224, mem[_36082])
                                                            if Mask(32, 224, mem[_36082]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if tokenByIndex.length < 1:
                                                    revert with 0, 17
                                                if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                    revert with 0, 50
                                                if stor154[arg3] >= tokenByIndex.length:
                                                    revert with 0, 50
                                                tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                stor154[stor153[stor153.length]] = stor154[arg3]
                                                stor154[arg3] = 0
                                                if not tokenByIndex.length:
                                                    revert with 0, 49
                                                tokenByIndex[tokenByIndex.length] = 0
                                                tokenByIndex.length--
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _36083 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_36083] == Mask(32, 224, mem[_36083])
                                                        if Mask(32, 224, mem[_36083]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[96] + mem[64] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _36084 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_36084] == Mask(32, 224, mem[_36084])
                                                        if Mask(32, 224, mem[_36084]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            if not arg1:
                                                revert with 0, 'ERC721: balance query for the zero address'
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            if balanceOf[address(arg1)] - 1 == stor152[arg3]:
                                                stor152[arg3] = 0
                                                tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                                                if arg2:
                                                    if arg2 == arg1:
                                                        approved[arg3] = 0
                                                        if not ownerOf[arg3]:
                                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                                        emit Approval(ownerOf[arg3], 0, arg3);
                                                        if balanceOf[address(arg1)] < 1:
                                                            revert with 0, 17
                                                        balanceOf[address(arg1)]--
                                                        if balanceOf[address(arg2)] > -2:
                                                            revert with 0, 17
                                                        balanceOf[address(arg2)]++
                                                        mem[0] = arg3
                                                        mem[32] = 103
                                                        ownerOf[arg3] = arg2
                                                        emit Transfer(arg1, arg2, arg3);
                                                        if ext_code.size(arg2):
                                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = msg.sender
                                                            mem[mem[64] + 36] = arg1
                                                            mem[mem[64] + 68] = arg3
                                                            mem[mem[64] + 100] = 128
                                                            mem[mem[64] + 132] = mem[96]
                                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                            if ceil32(mem[96]) <= mem[96]:
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _36085 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_36085] == Mask(32, 224, mem[_36085])
                                                                if Mask(32, 224, mem[_36085]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            else:
                                                                mem[mem[96] + mem[64] + 164] = 0
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _36086 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_36086] == Mask(32, 224, mem[_36086])
                                                                if Mask(32, 224, mem[_36086]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        if not arg2:
                                                            revert with 0, 'ERC721: balance query for the zero address'
                                                        tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                        stor152[arg3] = balanceOf[address(arg2)]
                                                        approved[arg3] = 0
                                                        if not ownerOf[arg3]:
                                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                                        emit Approval(ownerOf[arg3], 0, arg3);
                                                        if balanceOf[address(arg1)] < 1:
                                                            revert with 0, 17
                                                        balanceOf[address(arg1)]--
                                                        if balanceOf[address(arg2)] > -2:
                                                            revert with 0, 17
                                                        balanceOf[address(arg2)]++
                                                        mem[0] = arg3
                                                        mem[32] = 103
                                                        ownerOf[arg3] = arg2
                                                        emit Transfer(arg1, arg2, arg3);
                                                        if ext_code.size(arg2):
                                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = msg.sender
                                                            mem[mem[64] + 36] = arg1
                                                            mem[mem[64] + 68] = arg3
                                                            mem[mem[64] + 100] = 128
                                                            mem[mem[64] + 132] = mem[96]
                                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                            if ceil32(mem[96]) <= mem[96]:
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _36087 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_36087] == Mask(32, 224, mem[_36087])
                                                                if Mask(32, 224, mem[_36087]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            else:
                                                                mem[mem[96] + mem[64] + 164] = 0
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _36088 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_36088] == Mask(32, 224, mem[_36088])
                                                                if Mask(32, 224, mem[_36088]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    if tokenByIndex.length < 1:
                                                        revert with 0, 17
                                                    if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                        revert with 0, 50
                                                    if stor154[arg3] >= tokenByIndex.length:
                                                        revert with 0, 50
                                                    tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                    stor154[stor153[stor153.length]] = stor154[arg3]
                                                    stor154[arg3] = 0
                                                    if not tokenByIndex.length:
                                                        revert with 0, 49
                                                    tokenByIndex[tokenByIndex.length] = 0
                                                    tokenByIndex.length--
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _36089 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_36089] == Mask(32, 224, mem[_36089])
                                                            if Mask(32, 224, mem[_36089]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _36090 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_36090] == Mask(32, 224, mem[_36090])
                                                            if Mask(32, 224, mem[_36090]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                tokenOfOwnerByIndex[address(arg1)][stor152[arg3]] = tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1]
                                                stor152[stor151[address(arg1)][stor104[address(arg1)] - 1]] = stor152[arg3]
                                                stor152[arg3] = 0
                                                tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                                                if arg2:
                                                    if arg2 == arg1:
                                                        approved[arg3] = 0
                                                        if not ownerOf[arg3]:
                                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                                        emit Approval(ownerOf[arg3], 0, arg3);
                                                        if balanceOf[address(arg1)] < 1:
                                                            revert with 0, 17
                                                        balanceOf[address(arg1)]--
                                                        if balanceOf[address(arg2)] > -2:
                                                            revert with 0, 17
                                                        balanceOf[address(arg2)]++
                                                        mem[0] = arg3
                                                        mem[32] = 103
                                                        ownerOf[arg3] = arg2
                                                        emit Transfer(arg1, arg2, arg3);
                                                        if ext_code.size(arg2):
                                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = msg.sender
                                                            mem[mem[64] + 36] = arg1
                                                            mem[mem[64] + 68] = arg3
                                                            mem[mem[64] + 100] = 128
                                                            mem[mem[64] + 132] = mem[96]
                                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                            if ceil32(mem[96]) <= mem[96]:
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _36091 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_36091] == Mask(32, 224, mem[_36091])
                                                                if Mask(32, 224, mem[_36091]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            else:
                                                                mem[mem[96] + mem[64] + 164] = 0
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _36092 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_36092] == Mask(32, 224, mem[_36092])
                                                                if Mask(32, 224, mem[_36092]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        if not arg2:
                                                            revert with 0, 'ERC721: balance query for the zero address'
                                                        tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                        stor152[arg3] = balanceOf[address(arg2)]
                                                        approved[arg3] = 0
                                                        if not ownerOf[arg3]:
                                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                                        emit Approval(ownerOf[arg3], 0, arg3);
                                                        if balanceOf[address(arg1)] < 1:
                                                            revert with 0, 17
                                                        balanceOf[address(arg1)]--
                                                        if balanceOf[address(arg2)] > -2:
                                                            revert with 0, 17
                                                        balanceOf[address(arg2)]++
                                                        mem[0] = arg3
                                                        mem[32] = 103
                                                        ownerOf[arg3] = arg2
                                                        emit Transfer(arg1, arg2, arg3);
                                                        if ext_code.size(arg2):
                                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = msg.sender
                                                            mem[mem[64] + 36] = arg1
                                                            mem[mem[64] + 68] = arg3
                                                            mem[mem[64] + 100] = 128
                                                            mem[mem[64] + 132] = mem[96]
                                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                            if ceil32(mem[96]) <= mem[96]:
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _36093 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_36093] == Mask(32, 224, mem[_36093])
                                                                if Mask(32, 224, mem[_36093]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            else:
                                                                mem[mem[96] + mem[64] + 164] = 0
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _36094 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_36094] == Mask(32, 224, mem[_36094])
                                                                if Mask(32, 224, mem[_36094]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    if tokenByIndex.length < 1:
                                                        revert with 0, 17
                                                    if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                        revert with 0, 50
                                                    if stor154[arg3] >= tokenByIndex.length:
                                                        revert with 0, 50
                                                    tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                    stor154[stor153[stor153.length]] = stor154[arg3]
                                                    stor154[arg3] = 0
                                                    if not tokenByIndex.length:
                                                        revert with 0, 49
                                                    tokenByIndex[tokenByIndex.length] = 0
                                                    tokenByIndex.length--
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _36095 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_36095] == Mask(32, 224, mem[_36095])
                                                            if Mask(32, 224, mem[_36095]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _36096 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_36096] == Mask(32, 224, mem[_36096])
                                                            if Mask(32, 224, mem[_36096]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                            else:
                                mem[132] = arg2
                                staticcall liquidityPoolManagerImplementationAddress.0xb278110f with:
                                        gas gas_remaining wei
                                       args arg2
                                mem[128] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                if ext_call.return_data[0]:
                                    if not arg1:
                                        stor154[arg3] = tokenByIndex.length
                                        tokenByIndex.length++
                                        stor72A1[stor153.length] = arg3
                                    else:
                                        if arg1 != arg2:
                                            if not arg1:
                                                revert with 0, 'ERC721: balance query for the zero address'
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            if balanceOf[address(arg1)] - 1 != stor152[arg3]:
                                                tokenOfOwnerByIndex[address(arg1)][stor152[arg3]] = tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1]
                                                stor152[stor151[address(arg1)][stor104[address(arg1)] - 1]] = stor152[arg3]
                                            stor152[arg3] = 0
                                            tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                                    if arg2:
                                        if arg2 != arg1:
                                            if not arg2:
                                                revert with 0, 'ERC721: balance query for the zero address'
                                            tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                            stor152[arg3] = balanceOf[address(arg2)]
                                    else:
                                        if tokenByIndex.length < 1:
                                            revert with 0, 17
                                        if tokenByIndex.length - 1 >= tokenByIndex.length:
                                            revert with 0, 50
                                        if stor154[arg3] >= tokenByIndex.length:
                                            revert with 0, 50
                                        tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                        stor154[stor153[stor153.length]] = stor154[arg3]
                                        stor154[arg3] = 0
                                        if not tokenByIndex.length:
                                            revert with 0, 49
                                        tokenByIndex[tokenByIndex.length] = 0
                                        tokenByIndex.length--
                                    approved[arg3] = 0
                                    if not ownerOf[arg3]:
                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                    emit Approval(ownerOf[arg3], 0, arg3);
                                    if balanceOf[address(arg1)] < 1:
                                        revert with 0, 17
                                    balanceOf[address(arg1)]--
                                    if balanceOf[address(arg2)] > -2:
                                        revert with 0, 17
                                    balanceOf[address(arg2)]++
                                    ownerOf[arg3] = arg2
                                    emit Transfer(arg1, arg2, arg3);
                                    if ext_code.size(arg2):
                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args msg.sender, address(arg1), arg3, 128, 0
                                        if not ext_call.success:
                                            if not return_data.size:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            if not return_data.size:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                        if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                else:
                                    if not arg2:
                                        revert with 0, 'ERC721: balance query for the zero address'
                                    if balanceOf[address(arg2)] > test266151307():
                                        revert with 0, 65
                                    mem[ceil32(return_data.size) + 128] = balanceOf[address(arg2)]
                                    mem[64] = ceil32(return_data.size) + (32 * balanceOf[address(arg2)]) + 160
                                    if not balanceOf[address(arg2)]:
                                        idx = 0
                                        while idx < balanceOf[address(arg2)]:
                                            if not arg2:
                                                revert with 0, 'ERC721: balance query for the zero address'
                                            if idx >= balanceOf[address(arg2)]:
                                                revert with 0, 'ERC721Enumerable: owner index out of bounds'
                                            if tokenOfOwnerByIndex[address(arg2)][idx] <= 0:
                                                revert with 0, 'Troops: Id must be higher than zero'
                                            mem[0] = tokenOfOwnerByIndex[address(arg2)][idx]
                                            mem[32] = 552
                                            _18158 = mem[64]
                                            mem[64] = mem[64] + 256
                                            mem[_18158] = stor552[stor151[address(arg2)][idx]].field_0
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                                if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                                    revert with 0, 34
                                                _20624 = mem[64]
                                                mem[64] = mem[64] + ceil32(uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) + 32
                                                mem[_20624] = uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5
                                                if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                                    if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                                        revert with 0, 34
                                                    if Mask(256, -1, stor552[stor151[address(arg2)][idx]].field_256):
                                                        if 31 >= uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5:
                                                            mem[_20624 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                        else:
                                                            mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                            mem[_20624 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                            s = _20624 + 32
                                                            t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                            while _20624 + (uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) > s:
                                                                mem[s + 32] = stor1[t].field_0
                                                                s = s + 32
                                                                t = t + 1
                                                                continue 
                                                else:
                                                    if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                                        revert with 0, 34
                                                    if stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                        if 31 >= stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                            mem[_20624 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                        else:
                                                            mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                            mem[_20624 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                            s = _20624 + 32
                                                            t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                            while _20624 + stor552[stor151[address(arg2)][idx]].field_257 % 128 > s:
                                                                mem[s + 32] = stor1[t].field_0
                                                                s = s + 32
                                                                t = t + 1
                                                                continue 
                                                mem[_18158 + 32] = _20624
                                            else:
                                                if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                                    revert with 0, 34
                                                _20669 = mem[64]
                                                mem[64] = mem[64] + ceil32(stor552[stor151[address(arg2)][idx]].field_257 % 128) + 32
                                                mem[_20669] = stor552[stor151[address(arg2)][idx]].field_257 % 128
                                                if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                                    if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                                        revert with 0, 34
                                                    if Mask(256, -1, stor552[stor151[address(arg2)][idx]].field_256):
                                                        if 31 >= uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5:
                                                            mem[_20669 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                        else:
                                                            mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                            mem[_20669 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                            s = _20669 + 32
                                                            t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                            while _20669 + (uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) > s:
                                                                mem[s + 32] = stor1[t].field_0
                                                                s = s + 32
                                                                t = t + 1
                                                                continue 
                                                else:
                                                    if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                                        revert with 0, 34
                                                    if stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                        if 31 >= stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                            mem[_20669 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                        else:
                                                            mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                            mem[_20669 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                            s = _20669 + 32
                                                            t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                            while _20669 + stor552[stor151[address(arg2)][idx]].field_257 % 128 > s:
                                                                mem[s + 32] = stor1[t].field_0
                                                                s = s + 32
                                                                t = t + 1
                                                                continue 
                                                mem[_18158 + 32] = _20669
                                            mem[_18158 + 64] = stor552[stor151[address(arg2)][idx]].field_512
                                            mem[_18158 + 96] = stor552[stor151[address(arg2)][idx]].field_768
                                            mem[_18158 + 128] = stor552[stor151[address(arg2)][idx]].field_1024
                                            mem[_18158 + 160] = stor552[stor151[address(arg2)][idx]].field_1280
                                            mem[_18158 + 192] = bool(uint8(stor552[stor151[address(arg2)][idx]].field_1536))
                                            mem[_18158 + 224] = bool(uint8(stor552[stor151[address(arg2)][idx]].field_1544))
                                            if not uint8(stor552[stor151[address(arg2)][idx]].field_1536):
                                                revert with 0, 'Troops: This troop doesn't exist'
                                            if idx >= mem[ceil32(return_data.size) + 128]:
                                                revert with 0, 50
                                            mem[(32 * idx) + ceil32(return_data.size) + 160] = tokenOfOwnerByIndex[address(arg2)][idx]
                                            if idx == -1:
                                                revert with 0, 17
                                            idx = idx + 1
                                            continue 
                                        idx = 0
                                        s = 0
                                        while idx < mem[ceil32(return_data.size) + 128]:
                                            if idx >= mem[ceil32(return_data.size) + 128]:
                                                revert with 0, 50
                                            mem[0] = mem[(32 * idx) + ceil32(return_data.size) + 160]
                                            mem[32] = 552
                                            if not uint8(stor552[mem[(32 * idx) + ceil32(return_data.size) + 160]].field_1544):
                                                if idx == -1:
                                                    revert with 0, 17
                                                idx = idx + 1
                                                s = s
                                                continue 
                                            if s == -1:
                                                revert with 0, 17
                                            if idx == -1:
                                                revert with 0, 17
                                            idx = idx + 1
                                            s = s + 1
                                            continue 
                                        if s >= 2:
                                            revert with 0, 'Each holder can not hold more than 2 Gladiators'
                                        if not arg1:
                                            stor154[arg3] = tokenByIndex.length
                                            tokenByIndex.length++
                                            stor72A1[stor153.length] = arg3
                                            if arg2:
                                                if arg2 == arg1:
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _36121 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_36121] == Mask(32, 224, mem[_36121])
                                                            if Mask(32, 224, mem[_36121]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _36122 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_36122] == Mask(32, 224, mem[_36122])
                                                            if Mask(32, 224, mem[_36122]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    if not arg2:
                                                        revert with 0, 'ERC721: balance query for the zero address'
                                                    tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                    stor152[arg3] = balanceOf[address(arg2)]
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _36123 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_36123] == Mask(32, 224, mem[_36123])
                                                            if Mask(32, 224, mem[_36123]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _36124 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_36124] == Mask(32, 224, mem[_36124])
                                                            if Mask(32, 224, mem[_36124]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if tokenByIndex.length < 1:
                                                    revert with 0, 17
                                                if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                    revert with 0, 50
                                                if stor154[arg3] >= tokenByIndex.length:
                                                    revert with 0, 50
                                                tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                stor154[stor153[stor153.length]] = stor154[arg3]
                                                stor154[arg3] = 0
                                                if not tokenByIndex.length:
                                                    revert with 0, 49
                                                tokenByIndex[tokenByIndex.length] = 0
                                                tokenByIndex.length--
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _36125 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_36125] == Mask(32, 224, mem[_36125])
                                                        if Mask(32, 224, mem[_36125]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[96] + mem[64] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _36126 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_36126] == Mask(32, 224, mem[_36126])
                                                        if Mask(32, 224, mem[_36126]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            if arg1 == arg2:
                                                if arg2:
                                                    if arg2 == arg1:
                                                        approved[arg3] = 0
                                                        if not ownerOf[arg3]:
                                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                                        emit Approval(ownerOf[arg3], 0, arg3);
                                                        if balanceOf[address(arg1)] < 1:
                                                            revert with 0, 17
                                                        balanceOf[address(arg1)]--
                                                        if balanceOf[address(arg2)] > -2:
                                                            revert with 0, 17
                                                        balanceOf[address(arg2)]++
                                                        mem[0] = arg3
                                                        mem[32] = 103
                                                        ownerOf[arg3] = arg2
                                                        emit Transfer(arg1, arg2, arg3);
                                                        if ext_code.size(arg2):
                                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = msg.sender
                                                            mem[mem[64] + 36] = arg1
                                                            mem[mem[64] + 68] = arg3
                                                            mem[mem[64] + 100] = 128
                                                            mem[mem[64] + 132] = mem[96]
                                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                            if ceil32(mem[96]) <= mem[96]:
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _36103 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_36103] == Mask(32, 224, mem[_36103])
                                                                if Mask(32, 224, mem[_36103]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            else:
                                                                mem[mem[96] + mem[64] + 164] = 0
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _36104 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_36104] == Mask(32, 224, mem[_36104])
                                                                if Mask(32, 224, mem[_36104]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        if not arg2:
                                                            revert with 0, 'ERC721: balance query for the zero address'
                                                        tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                        stor152[arg3] = balanceOf[address(arg2)]
                                                        approved[arg3] = 0
                                                        if not ownerOf[arg3]:
                                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                                        emit Approval(ownerOf[arg3], 0, arg3);
                                                        if balanceOf[address(arg1)] < 1:
                                                            revert with 0, 17
                                                        balanceOf[address(arg1)]--
                                                        if balanceOf[address(arg2)] > -2:
                                                            revert with 0, 17
                                                        balanceOf[address(arg2)]++
                                                        mem[0] = arg3
                                                        mem[32] = 103
                                                        ownerOf[arg3] = arg2
                                                        emit Transfer(arg1, arg2, arg3);
                                                        if ext_code.size(arg2):
                                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = msg.sender
                                                            mem[mem[64] + 36] = arg1
                                                            mem[mem[64] + 68] = arg3
                                                            mem[mem[64] + 100] = 128
                                                            mem[mem[64] + 132] = mem[96]
                                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                            if ceil32(mem[96]) <= mem[96]:
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _36105 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_36105] == Mask(32, 224, mem[_36105])
                                                                if Mask(32, 224, mem[_36105]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            else:
                                                                mem[mem[96] + mem[64] + 164] = 0
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _36106 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_36106] == Mask(32, 224, mem[_36106])
                                                                if Mask(32, 224, mem[_36106]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    if tokenByIndex.length < 1:
                                                        revert with 0, 17
                                                    if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                        revert with 0, 50
                                                    if stor154[arg3] >= tokenByIndex.length:
                                                        revert with 0, 50
                                                    tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                    stor154[stor153[stor153.length]] = stor154[arg3]
                                                    stor154[arg3] = 0
                                                    if not tokenByIndex.length:
                                                        revert with 0, 49
                                                    tokenByIndex[tokenByIndex.length] = 0
                                                    tokenByIndex.length--
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _36107 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_36107] == Mask(32, 224, mem[_36107])
                                                            if Mask(32, 224, mem[_36107]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _36108 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_36108] == Mask(32, 224, mem[_36108])
                                                            if Mask(32, 224, mem[_36108]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if not arg1:
                                                    revert with 0, 'ERC721: balance query for the zero address'
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                if balanceOf[address(arg1)] - 1 == stor152[arg3]:
                                                    stor152[arg3] = 0
                                                    tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                                                    if arg2:
                                                        if arg2 == arg1:
                                                            approved[arg3] = 0
                                                            if not ownerOf[arg3]:
                                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                                            emit Approval(ownerOf[arg3], 0, arg3);
                                                            if balanceOf[address(arg1)] < 1:
                                                                revert with 0, 17
                                                            balanceOf[address(arg1)]--
                                                            if balanceOf[address(arg2)] > -2:
                                                                revert with 0, 17
                                                            balanceOf[address(arg2)]++
                                                            mem[0] = arg3
                                                            mem[32] = 103
                                                            ownerOf[arg3] = arg2
                                                            emit Transfer(arg1, arg2, arg3);
                                                            if ext_code.size(arg2):
                                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = msg.sender
                                                                mem[mem[64] + 36] = arg1
                                                                mem[mem[64] + 68] = arg3
                                                                mem[mem[64] + 100] = 128
                                                                mem[mem[64] + 132] = mem[96]
                                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                                if ceil32(mem[96]) <= mem[96]:
                                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                         gas gas_remaining wei
                                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                    mem[mem[64]] = ext_call.return_data[0]
                                                                    if not ext_call.success:
                                                                        if not return_data.size:
                                                                            if not mem[96]:
                                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                            revert with memory
                                                                              from 128
                                                                               len mem[96]
                                                                        if not return_data.size:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    _36109 = mem[64]
                                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                                    require return_data.size >= 32
                                                                    require mem[_36109] == Mask(32, 224, mem[_36109])
                                                                    if Mask(32, 224, mem[_36109]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                else:
                                                                    mem[mem[96] + mem[64] + 164] = 0
                                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                         gas gas_remaining wei
                                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                    mem[mem[64]] = ext_call.return_data[0]
                                                                    if not ext_call.success:
                                                                        if not return_data.size:
                                                                            if not mem[96]:
                                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                            revert with memory
                                                                              from 128
                                                                               len mem[96]
                                                                        if not return_data.size:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    _36110 = mem[64]
                                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                                    require return_data.size >= 32
                                                                    require mem[_36110] == Mask(32, 224, mem[_36110])
                                                                    if Mask(32, 224, mem[_36110]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            if not arg2:
                                                                revert with 0, 'ERC721: balance query for the zero address'
                                                            tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                            stor152[arg3] = balanceOf[address(arg2)]
                                                            approved[arg3] = 0
                                                            if not ownerOf[arg3]:
                                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                                            emit Approval(ownerOf[arg3], 0, arg3);
                                                            if balanceOf[address(arg1)] < 1:
                                                                revert with 0, 17
                                                            balanceOf[address(arg1)]--
                                                            if balanceOf[address(arg2)] > -2:
                                                                revert with 0, 17
                                                            balanceOf[address(arg2)]++
                                                            mem[0] = arg3
                                                            mem[32] = 103
                                                            ownerOf[arg3] = arg2
                                                            emit Transfer(arg1, arg2, arg3);
                                                            if ext_code.size(arg2):
                                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = msg.sender
                                                                mem[mem[64] + 36] = arg1
                                                                mem[mem[64] + 68] = arg3
                                                                mem[mem[64] + 100] = 128
                                                                mem[mem[64] + 132] = mem[96]
                                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                                if ceil32(mem[96]) <= mem[96]:
                                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                         gas gas_remaining wei
                                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                    mem[mem[64]] = ext_call.return_data[0]
                                                                    if not ext_call.success:
                                                                        if not return_data.size:
                                                                            if not mem[96]:
                                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                            revert with memory
                                                                              from 128
                                                                               len mem[96]
                                                                        if not return_data.size:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    _36111 = mem[64]
                                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                                    require return_data.size >= 32
                                                                    require mem[_36111] == Mask(32, 224, mem[_36111])
                                                                    if Mask(32, 224, mem[_36111]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                else:
                                                                    mem[mem[96] + mem[64] + 164] = 0
                                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                         gas gas_remaining wei
                                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                    mem[mem[64]] = ext_call.return_data[0]
                                                                    if not ext_call.success:
                                                                        if not return_data.size:
                                                                            if not mem[96]:
                                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                            revert with memory
                                                                              from 128
                                                                               len mem[96]
                                                                        if not return_data.size:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    _36112 = mem[64]
                                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                                    require return_data.size >= 32
                                                                    require mem[_36112] == Mask(32, 224, mem[_36112])
                                                                    if Mask(32, 224, mem[_36112]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        if tokenByIndex.length < 1:
                                                            revert with 0, 17
                                                        if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                            revert with 0, 50
                                                        if stor154[arg3] >= tokenByIndex.length:
                                                            revert with 0, 50
                                                        tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                        stor154[stor153[stor153.length]] = stor154[arg3]
                                                        stor154[arg3] = 0
                                                        if not tokenByIndex.length:
                                                            revert with 0, 49
                                                        tokenByIndex[tokenByIndex.length] = 0
                                                        tokenByIndex.length--
                                                        approved[arg3] = 0
                                                        if not ownerOf[arg3]:
                                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                                        emit Approval(ownerOf[arg3], 0, arg3);
                                                        if balanceOf[address(arg1)] < 1:
                                                            revert with 0, 17
                                                        balanceOf[address(arg1)]--
                                                        if balanceOf[address(arg2)] > -2:
                                                            revert with 0, 17
                                                        balanceOf[address(arg2)]++
                                                        mem[0] = arg3
                                                        mem[32] = 103
                                                        ownerOf[arg3] = arg2
                                                        emit Transfer(arg1, arg2, arg3);
                                                        if ext_code.size(arg2):
                                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = msg.sender
                                                            mem[mem[64] + 36] = arg1
                                                            mem[mem[64] + 68] = arg3
                                                            mem[mem[64] + 100] = 128
                                                            mem[mem[64] + 132] = mem[96]
                                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                            if ceil32(mem[96]) <= mem[96]:
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _36113 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_36113] == Mask(32, 224, mem[_36113])
                                                                if Mask(32, 224, mem[_36113]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            else:
                                                                mem[mem[96] + mem[64] + 164] = 0
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _36114 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_36114] == Mask(32, 224, mem[_36114])
                                                                if Mask(32, 224, mem[_36114]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    tokenOfOwnerByIndex[address(arg1)][stor152[arg3]] = tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1]
                                                    stor152[stor151[address(arg1)][stor104[address(arg1)] - 1]] = stor152[arg3]
                                                    stor152[arg3] = 0
                                                    tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                                                    if arg2:
                                                        if arg2 == arg1:
                                                            approved[arg3] = 0
                                                            if not ownerOf[arg3]:
                                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                                            emit Approval(ownerOf[arg3], 0, arg3);
                                                            if balanceOf[address(arg1)] < 1:
                                                                revert with 0, 17
                                                            balanceOf[address(arg1)]--
                                                            if balanceOf[address(arg2)] > -2:
                                                                revert with 0, 17
                                                            balanceOf[address(arg2)]++
                                                            mem[0] = arg3
                                                            mem[32] = 103
                                                            ownerOf[arg3] = arg2
                                                            emit Transfer(arg1, arg2, arg3);
                                                            if ext_code.size(arg2):
                                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = msg.sender
                                                                mem[mem[64] + 36] = arg1
                                                                mem[mem[64] + 68] = arg3
                                                                mem[mem[64] + 100] = 128
                                                                mem[mem[64] + 132] = mem[96]
                                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                                if ceil32(mem[96]) <= mem[96]:
                                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                         gas gas_remaining wei
                                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                    mem[mem[64]] = ext_call.return_data[0]
                                                                    if not ext_call.success:
                                                                        if not return_data.size:
                                                                            if not mem[96]:
                                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                            revert with memory
                                                                              from 128
                                                                               len mem[96]
                                                                        if not return_data.size:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    _36115 = mem[64]
                                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                                    require return_data.size >= 32
                                                                    require mem[_36115] == Mask(32, 224, mem[_36115])
                                                                    if Mask(32, 224, mem[_36115]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                else:
                                                                    mem[mem[96] + mem[64] + 164] = 0
                                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                         gas gas_remaining wei
                                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                    mem[mem[64]] = ext_call.return_data[0]
                                                                    if not ext_call.success:
                                                                        if not return_data.size:
                                                                            if not mem[96]:
                                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                            revert with memory
                                                                              from 128
                                                                               len mem[96]
                                                                        if not return_data.size:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    _36116 = mem[64]
                                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                                    require return_data.size >= 32
                                                                    require mem[_36116] == Mask(32, 224, mem[_36116])
                                                                    if Mask(32, 224, mem[_36116]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            if not arg2:
                                                                revert with 0, 'ERC721: balance query for the zero address'
                                                            tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                            stor152[arg3] = balanceOf[address(arg2)]
                                                            approved[arg3] = 0
                                                            if not ownerOf[arg3]:
                                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                                            emit Approval(ownerOf[arg3], 0, arg3);
                                                            if balanceOf[address(arg1)] < 1:
                                                                revert with 0, 17
                                                            balanceOf[address(arg1)]--
                                                            if balanceOf[address(arg2)] > -2:
                                                                revert with 0, 17
                                                            balanceOf[address(arg2)]++
                                                            mem[0] = arg3
                                                            mem[32] = 103
                                                            ownerOf[arg3] = arg2
                                                            emit Transfer(arg1, arg2, arg3);
                                                            if ext_code.size(arg2):
                                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = msg.sender
                                                                mem[mem[64] + 36] = arg1
                                                                mem[mem[64] + 68] = arg3
                                                                mem[mem[64] + 100] = 128
                                                                mem[mem[64] + 132] = mem[96]
                                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                                if ceil32(mem[96]) <= mem[96]:
                                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                         gas gas_remaining wei
                                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                    mem[mem[64]] = ext_call.return_data[0]
                                                                    if not ext_call.success:
                                                                        if not return_data.size:
                                                                            if not mem[96]:
                                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                            revert with memory
                                                                              from 128
                                                                               len mem[96]
                                                                        if not return_data.size:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    _36117 = mem[64]
                                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                                    require return_data.size >= 32
                                                                    require mem[_36117] == Mask(32, 224, mem[_36117])
                                                                    if Mask(32, 224, mem[_36117]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                else:
                                                                    mem[mem[96] + mem[64] + 164] = 0
                                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                         gas gas_remaining wei
                                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                    mem[mem[64]] = ext_call.return_data[0]
                                                                    if not ext_call.success:
                                                                        if not return_data.size:
                                                                            if not mem[96]:
                                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                            revert with memory
                                                                              from 128
                                                                               len mem[96]
                                                                        if not return_data.size:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    _36118 = mem[64]
                                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                                    require return_data.size >= 32
                                                                    require mem[_36118] == Mask(32, 224, mem[_36118])
                                                                    if Mask(32, 224, mem[_36118]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        if tokenByIndex.length < 1:
                                                            revert with 0, 17
                                                        if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                            revert with 0, 50
                                                        if stor154[arg3] >= tokenByIndex.length:
                                                            revert with 0, 50
                                                        tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                        stor154[stor153[stor153.length]] = stor154[arg3]
                                                        stor154[arg3] = 0
                                                        if not tokenByIndex.length:
                                                            revert with 0, 49
                                                        tokenByIndex[tokenByIndex.length] = 0
                                                        tokenByIndex.length--
                                                        approved[arg3] = 0
                                                        if not ownerOf[arg3]:
                                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                                        emit Approval(ownerOf[arg3], 0, arg3);
                                                        if balanceOf[address(arg1)] < 1:
                                                            revert with 0, 17
                                                        balanceOf[address(arg1)]--
                                                        if balanceOf[address(arg2)] > -2:
                                                            revert with 0, 17
                                                        balanceOf[address(arg2)]++
                                                        mem[0] = arg3
                                                        mem[32] = 103
                                                        ownerOf[arg3] = arg2
                                                        emit Transfer(arg1, arg2, arg3);
                                                        if ext_code.size(arg2):
                                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = msg.sender
                                                            mem[mem[64] + 36] = arg1
                                                            mem[mem[64] + 68] = arg3
                                                            mem[mem[64] + 100] = 128
                                                            mem[mem[64] + 132] = mem[96]
                                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                            if ceil32(mem[96]) <= mem[96]:
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _36119 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_36119] == Mask(32, 224, mem[_36119])
                                                                if Mask(32, 224, mem[_36119]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            else:
                                                                mem[mem[96] + mem[64] + 164] = 0
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _36120 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_36120] == Mask(32, 224, mem[_36120])
                                                                if Mask(32, 224, mem[_36120]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                    else:
                                        mem[ceil32(return_data.size) + 160 len 32 * balanceOf[address(arg2)]] = call.data[calldata.size len 32 * balanceOf[address(arg2)]]
                                        idx = 0
                                        while idx < balanceOf[address(arg2)]:
                                            if not arg2:
                                                revert with 0, 'ERC721: balance query for the zero address'
                                            if idx >= balanceOf[address(arg2)]:
                                                revert with 0, 'ERC721Enumerable: owner index out of bounds'
                                            if tokenOfOwnerByIndex[address(arg2)][idx] <= 0:
                                                revert with 0, 'Troops: Id must be higher than zero'
                                            mem[0] = tokenOfOwnerByIndex[address(arg2)][idx]
                                            mem[32] = 552
                                            _18161 = mem[64]
                                            mem[64] = mem[64] + 256
                                            mem[_18161] = stor552[stor151[address(arg2)][idx]].field_0
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                                if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                                    revert with 0, 34
                                                _20626 = mem[64]
                                                mem[64] = mem[64] + ceil32(uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) + 32
                                                mem[_20626] = uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5
                                                if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                                    if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                                        revert with 0, 34
                                                    if Mask(256, -1, stor552[stor151[address(arg2)][idx]].field_256):
                                                        if 31 >= uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5:
                                                            mem[_20626 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                        else:
                                                            mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                            mem[_20626 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                            s = _20626 + 32
                                                            t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                            while _20626 + (uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) > s:
                                                                mem[s + 32] = stor1[t].field_0
                                                                s = s + 32
                                                                t = t + 1
                                                                continue 
                                                else:
                                                    if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                                        revert with 0, 34
                                                    if stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                        if 31 >= stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                            mem[_20626 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                        else:
                                                            mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                            mem[_20626 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                            s = _20626 + 32
                                                            t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                            while _20626 + stor552[stor151[address(arg2)][idx]].field_257 % 128 > s:
                                                                mem[s + 32] = stor1[t].field_0
                                                                s = s + 32
                                                                t = t + 1
                                                                continue 
                                                mem[_18161 + 32] = _20626
                                            else:
                                                if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                                    revert with 0, 34
                                                _20674 = mem[64]
                                                mem[64] = mem[64] + ceil32(stor552[stor151[address(arg2)][idx]].field_257 % 128) + 32
                                                mem[_20674] = stor552[stor151[address(arg2)][idx]].field_257 % 128
                                                if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                                    if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                                        revert with 0, 34
                                                    if Mask(256, -1, stor552[stor151[address(arg2)][idx]].field_256):
                                                        if 31 >= uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5:
                                                            mem[_20674 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                        else:
                                                            mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                            mem[_20674 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                            s = _20674 + 32
                                                            t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                            while _20674 + (uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) > s:
                                                                mem[s + 32] = stor1[t].field_0
                                                                s = s + 32
                                                                t = t + 1
                                                                continue 
                                                else:
                                                    if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                                        revert with 0, 34
                                                    if stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                        if 31 >= stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                            mem[_20674 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                        else:
                                                            mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                            mem[_20674 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                            s = _20674 + 32
                                                            t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                            while _20674 + stor552[stor151[address(arg2)][idx]].field_257 % 128 > s:
                                                                mem[s + 32] = stor1[t].field_0
                                                                s = s + 32
                                                                t = t + 1
                                                                continue 
                                                mem[_18161 + 32] = _20674
                                            mem[_18161 + 64] = stor552[stor151[address(arg2)][idx]].field_512
                                            mem[_18161 + 96] = stor552[stor151[address(arg2)][idx]].field_768
                                            mem[_18161 + 128] = stor552[stor151[address(arg2)][idx]].field_1024
                                            mem[_18161 + 160] = stor552[stor151[address(arg2)][idx]].field_1280
                                            mem[_18161 + 192] = bool(uint8(stor552[stor151[address(arg2)][idx]].field_1536))
                                            mem[_18161 + 224] = bool(uint8(stor552[stor151[address(arg2)][idx]].field_1544))
                                            if not uint8(stor552[stor151[address(arg2)][idx]].field_1536):
                                                revert with 0, 'Troops: This troop doesn't exist'
                                            if idx >= mem[ceil32(return_data.size) + 128]:
                                                revert with 0, 50
                                            mem[(32 * idx) + ceil32(return_data.size) + 160] = tokenOfOwnerByIndex[address(arg2)][idx]
                                            if idx == -1:
                                                revert with 0, 17
                                            idx = idx + 1
                                            continue 
                                        idx = 0
                                        s = 0
                                        while idx < mem[ceil32(return_data.size) + 128]:
                                            if idx >= mem[ceil32(return_data.size) + 128]:
                                                revert with 0, 50
                                            mem[0] = mem[(32 * idx) + ceil32(return_data.size) + 160]
                                            mem[32] = 552
                                            if not uint8(stor552[mem[(32 * idx) + ceil32(return_data.size) + 160]].field_1544):
                                                if idx == -1:
                                                    revert with 0, 17
                                                idx = idx + 1
                                                s = s
                                                continue 
                                            if s == -1:
                                                revert with 0, 17
                                            if idx == -1:
                                                revert with 0, 17
                                            idx = idx + 1
                                            s = s + 1
                                            continue 
                                        if s >= 2:
                                            revert with 0, 'Each holder can not hold more than 2 Gladiators'
                                        if not arg1:
                                            stor154[arg3] = tokenByIndex.length
                                            tokenByIndex.length++
                                            stor72A1[stor153.length] = arg3
                                            if arg2:
                                                if arg2 == arg1:
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _36145 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_36145] == Mask(32, 224, mem[_36145])
                                                            if Mask(32, 224, mem[_36145]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _36146 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_36146] == Mask(32, 224, mem[_36146])
                                                            if Mask(32, 224, mem[_36146]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    if not arg2:
                                                        revert with 0, 'ERC721: balance query for the zero address'
                                                    tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                    stor152[arg3] = balanceOf[address(arg2)]
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _36147 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_36147] == Mask(32, 224, mem[_36147])
                                                            if Mask(32, 224, mem[_36147]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _36148 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_36148] == Mask(32, 224, mem[_36148])
                                                            if Mask(32, 224, mem[_36148]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if tokenByIndex.length < 1:
                                                    revert with 0, 17
                                                if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                    revert with 0, 50
                                                if stor154[arg3] >= tokenByIndex.length:
                                                    revert with 0, 50
                                                tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                stor154[stor153[stor153.length]] = stor154[arg3]
                                                stor154[arg3] = 0
                                                if not tokenByIndex.length:
                                                    revert with 0, 49
                                                tokenByIndex[tokenByIndex.length] = 0
                                                tokenByIndex.length--
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _36149 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_36149] == Mask(32, 224, mem[_36149])
                                                        if Mask(32, 224, mem[_36149]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[96] + mem[64] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _36150 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_36150] == Mask(32, 224, mem[_36150])
                                                        if Mask(32, 224, mem[_36150]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            if arg1 == arg2:
                                                if arg2:
                                                    if arg2 == arg1:
                                                        approved[arg3] = 0
                                                        if not ownerOf[arg3]:
                                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                                        emit Approval(ownerOf[arg3], 0, arg3);
                                                        if balanceOf[address(arg1)] < 1:
                                                            revert with 0, 17
                                                        balanceOf[address(arg1)]--
                                                        if balanceOf[address(arg2)] > -2:
                                                            revert with 0, 17
                                                        balanceOf[address(arg2)]++
                                                        mem[0] = arg3
                                                        mem[32] = 103
                                                        ownerOf[arg3] = arg2
                                                        emit Transfer(arg1, arg2, arg3);
                                                        if ext_code.size(arg2):
                                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = msg.sender
                                                            mem[mem[64] + 36] = arg1
                                                            mem[mem[64] + 68] = arg3
                                                            mem[mem[64] + 100] = 128
                                                            mem[mem[64] + 132] = mem[96]
                                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                            if ceil32(mem[96]) <= mem[96]:
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _36127 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_36127] == Mask(32, 224, mem[_36127])
                                                                if Mask(32, 224, mem[_36127]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            else:
                                                                mem[mem[96] + mem[64] + 164] = 0
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _36128 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_36128] == Mask(32, 224, mem[_36128])
                                                                if Mask(32, 224, mem[_36128]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        if not arg2:
                                                            revert with 0, 'ERC721: balance query for the zero address'
                                                        tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                        stor152[arg3] = balanceOf[address(arg2)]
                                                        approved[arg3] = 0
                                                        if not ownerOf[arg3]:
                                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                                        emit Approval(ownerOf[arg3], 0, arg3);
                                                        if balanceOf[address(arg1)] < 1:
                                                            revert with 0, 17
                                                        balanceOf[address(arg1)]--
                                                        if balanceOf[address(arg2)] > -2:
                                                            revert with 0, 17
                                                        balanceOf[address(arg2)]++
                                                        mem[0] = arg3
                                                        mem[32] = 103
                                                        ownerOf[arg3] = arg2
                                                        emit Transfer(arg1, arg2, arg3);
                                                        if ext_code.size(arg2):
                                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = msg.sender
                                                            mem[mem[64] + 36] = arg1
                                                            mem[mem[64] + 68] = arg3
                                                            mem[mem[64] + 100] = 128
                                                            mem[mem[64] + 132] = mem[96]
                                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                            if ceil32(mem[96]) <= mem[96]:
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _36129 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_36129] == Mask(32, 224, mem[_36129])
                                                                if Mask(32, 224, mem[_36129]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            else:
                                                                mem[mem[96] + mem[64] + 164] = 0
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _36130 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_36130] == Mask(32, 224, mem[_36130])
                                                                if Mask(32, 224, mem[_36130]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    if tokenByIndex.length < 1:
                                                        revert with 0, 17
                                                    if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                        revert with 0, 50
                                                    if stor154[arg3] >= tokenByIndex.length:
                                                        revert with 0, 50
                                                    tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                    stor154[stor153[stor153.length]] = stor154[arg3]
                                                    stor154[arg3] = 0
                                                    if not tokenByIndex.length:
                                                        revert with 0, 49
                                                    tokenByIndex[tokenByIndex.length] = 0
                                                    tokenByIndex.length--
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _36131 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_36131] == Mask(32, 224, mem[_36131])
                                                            if Mask(32, 224, mem[_36131]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _36132 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_36132] == Mask(32, 224, mem[_36132])
                                                            if Mask(32, 224, mem[_36132]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if not arg1:
                                                    revert with 0, 'ERC721: balance query for the zero address'
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                if balanceOf[address(arg1)] - 1 == stor152[arg3]:
                                                    stor152[arg3] = 0
                                                    tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                                                    if arg2:
                                                        if arg2 == arg1:
                                                            approved[arg3] = 0
                                                            if not ownerOf[arg3]:
                                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                                            emit Approval(ownerOf[arg3], 0, arg3);
                                                            if balanceOf[address(arg1)] < 1:
                                                                revert with 0, 17
                                                            balanceOf[address(arg1)]--
                                                            if balanceOf[address(arg2)] > -2:
                                                                revert with 0, 17
                                                            balanceOf[address(arg2)]++
                                                            mem[0] = arg3
                                                            mem[32] = 103
                                                            ownerOf[arg3] = arg2
                                                            emit Transfer(arg1, arg2, arg3);
                                                            if ext_code.size(arg2):
                                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = msg.sender
                                                                mem[mem[64] + 36] = arg1
                                                                mem[mem[64] + 68] = arg3
                                                                mem[mem[64] + 100] = 128
                                                                mem[mem[64] + 132] = mem[96]
                                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                                if ceil32(mem[96]) <= mem[96]:
                                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                         gas gas_remaining wei
                                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                    mem[mem[64]] = ext_call.return_data[0]
                                                                    if not ext_call.success:
                                                                        if not return_data.size:
                                                                            if not mem[96]:
                                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                            revert with memory
                                                                              from 128
                                                                               len mem[96]
                                                                        if not return_data.size:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    _36133 = mem[64]
                                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                                    require return_data.size >= 32
                                                                    require mem[_36133] == Mask(32, 224, mem[_36133])
                                                                    if Mask(32, 224, mem[_36133]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                else:
                                                                    mem[mem[96] + mem[64] + 164] = 0
                                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                         gas gas_remaining wei
                                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                    mem[mem[64]] = ext_call.return_data[0]
                                                                    if not ext_call.success:
                                                                        if not return_data.size:
                                                                            if not mem[96]:
                                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                            revert with memory
                                                                              from 128
                                                                               len mem[96]
                                                                        if not return_data.size:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    _36134 = mem[64]
                                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                                    require return_data.size >= 32
                                                                    require mem[_36134] == Mask(32, 224, mem[_36134])
                                                                    if Mask(32, 224, mem[_36134]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            if not arg2:
                                                                revert with 0, 'ERC721: balance query for the zero address'
                                                            tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                            stor152[arg3] = balanceOf[address(arg2)]
                                                            approved[arg3] = 0
                                                            if not ownerOf[arg3]:
                                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                                            emit Approval(ownerOf[arg3], 0, arg3);
                                                            if balanceOf[address(arg1)] < 1:
                                                                revert with 0, 17
                                                            balanceOf[address(arg1)]--
                                                            if balanceOf[address(arg2)] > -2:
                                                                revert with 0, 17
                                                            balanceOf[address(arg2)]++
                                                            mem[0] = arg3
                                                            mem[32] = 103
                                                            ownerOf[arg3] = arg2
                                                            emit Transfer(arg1, arg2, arg3);
                                                            if ext_code.size(arg2):
                                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = msg.sender
                                                                mem[mem[64] + 36] = arg1
                                                                mem[mem[64] + 68] = arg3
                                                                mem[mem[64] + 100] = 128
                                                                mem[mem[64] + 132] = mem[96]
                                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                                if ceil32(mem[96]) <= mem[96]:
                                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                         gas gas_remaining wei
                                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                    mem[mem[64]] = ext_call.return_data[0]
                                                                    if not ext_call.success:
                                                                        if not return_data.size:
                                                                            if not mem[96]:
                                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                            revert with memory
                                                                              from 128
                                                                               len mem[96]
                                                                        if not return_data.size:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    _36135 = mem[64]
                                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                                    require return_data.size >= 32
                                                                    require mem[_36135] == Mask(32, 224, mem[_36135])
                                                                    if Mask(32, 224, mem[_36135]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                else:
                                                                    mem[mem[96] + mem[64] + 164] = 0
                                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                         gas gas_remaining wei
                                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                    mem[mem[64]] = ext_call.return_data[0]
                                                                    if not ext_call.success:
                                                                        if not return_data.size:
                                                                            if not mem[96]:
                                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                            revert with memory
                                                                              from 128
                                                                               len mem[96]
                                                                        if not return_data.size:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    _36136 = mem[64]
                                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                                    require return_data.size >= 32
                                                                    require mem[_36136] == Mask(32, 224, mem[_36136])
                                                                    if Mask(32, 224, mem[_36136]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        if tokenByIndex.length < 1:
                                                            revert with 0, 17
                                                        if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                            revert with 0, 50
                                                        if stor154[arg3] >= tokenByIndex.length:
                                                            revert with 0, 50
                                                        tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                        stor154[stor153[stor153.length]] = stor154[arg3]
                                                        stor154[arg3] = 0
                                                        if not tokenByIndex.length:
                                                            revert with 0, 49
                                                        tokenByIndex[tokenByIndex.length] = 0
                                                        tokenByIndex.length--
                                                        approved[arg3] = 0
                                                        if not ownerOf[arg3]:
                                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                                        emit Approval(ownerOf[arg3], 0, arg3);
                                                        if balanceOf[address(arg1)] < 1:
                                                            revert with 0, 17
                                                        balanceOf[address(arg1)]--
                                                        if balanceOf[address(arg2)] > -2:
                                                            revert with 0, 17
                                                        balanceOf[address(arg2)]++
                                                        mem[0] = arg3
                                                        mem[32] = 103
                                                        ownerOf[arg3] = arg2
                                                        emit Transfer(arg1, arg2, arg3);
                                                        if ext_code.size(arg2):
                                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = msg.sender
                                                            mem[mem[64] + 36] = arg1
                                                            mem[mem[64] + 68] = arg3
                                                            mem[mem[64] + 100] = 128
                                                            mem[mem[64] + 132] = mem[96]
                                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                            if ceil32(mem[96]) <= mem[96]:
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _36137 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_36137] == Mask(32, 224, mem[_36137])
                                                                if Mask(32, 224, mem[_36137]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            else:
                                                                mem[mem[96] + mem[64] + 164] = 0
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _36138 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_36138] == Mask(32, 224, mem[_36138])
                                                                if Mask(32, 224, mem[_36138]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    tokenOfOwnerByIndex[address(arg1)][stor152[arg3]] = tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1]
                                                    stor152[stor151[address(arg1)][stor104[address(arg1)] - 1]] = stor152[arg3]
                                                    stor152[arg3] = 0
                                                    tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                                                    if arg2:
                                                        if arg2 == arg1:
                                                            approved[arg3] = 0
                                                            if not ownerOf[arg3]:
                                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                                            emit Approval(ownerOf[arg3], 0, arg3);
                                                            if balanceOf[address(arg1)] < 1:
                                                                revert with 0, 17
                                                            balanceOf[address(arg1)]--
                                                            if balanceOf[address(arg2)] > -2:
                                                                revert with 0, 17
                                                            balanceOf[address(arg2)]++
                                                            mem[0] = arg3
                                                            mem[32] = 103
                                                            ownerOf[arg3] = arg2
                                                            emit Transfer(arg1, arg2, arg3);
                                                            if ext_code.size(arg2):
                                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = msg.sender
                                                                mem[mem[64] + 36] = arg1
                                                                mem[mem[64] + 68] = arg3
                                                                mem[mem[64] + 100] = 128
                                                                mem[mem[64] + 132] = mem[96]
                                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                                if ceil32(mem[96]) <= mem[96]:
                                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                         gas gas_remaining wei
                                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                    mem[mem[64]] = ext_call.return_data[0]
                                                                    if not ext_call.success:
                                                                        if not return_data.size:
                                                                            if not mem[96]:
                                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                            revert with memory
                                                                              from 128
                                                                               len mem[96]
                                                                        if not return_data.size:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    _36139 = mem[64]
                                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                                    require return_data.size >= 32
                                                                    require mem[_36139] == Mask(32, 224, mem[_36139])
                                                                    if Mask(32, 224, mem[_36139]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                else:
                                                                    mem[mem[96] + mem[64] + 164] = 0
                                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                         gas gas_remaining wei
                                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                    mem[mem[64]] = ext_call.return_data[0]
                                                                    if not ext_call.success:
                                                                        if not return_data.size:
                                                                            if not mem[96]:
                                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                            revert with memory
                                                                              from 128
                                                                               len mem[96]
                                                                        if not return_data.size:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    _36140 = mem[64]
                                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                                    require return_data.size >= 32
                                                                    require mem[_36140] == Mask(32, 224, mem[_36140])
                                                                    if Mask(32, 224, mem[_36140]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            if not arg2:
                                                                revert with 0, 'ERC721: balance query for the zero address'
                                                            tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                            stor152[arg3] = balanceOf[address(arg2)]
                                                            approved[arg3] = 0
                                                            if not ownerOf[arg3]:
                                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                                            emit Approval(ownerOf[arg3], 0, arg3);
                                                            if balanceOf[address(arg1)] < 1:
                                                                revert with 0, 17
                                                            balanceOf[address(arg1)]--
                                                            if balanceOf[address(arg2)] > -2:
                                                                revert with 0, 17
                                                            balanceOf[address(arg2)]++
                                                            mem[0] = arg3
                                                            mem[32] = 103
                                                            ownerOf[arg3] = arg2
                                                            emit Transfer(arg1, arg2, arg3);
                                                            if ext_code.size(arg2):
                                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = msg.sender
                                                                mem[mem[64] + 36] = arg1
                                                                mem[mem[64] + 68] = arg3
                                                                mem[mem[64] + 100] = 128
                                                                mem[mem[64] + 132] = mem[96]
                                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                                if ceil32(mem[96]) <= mem[96]:
                                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                         gas gas_remaining wei
                                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                    mem[mem[64]] = ext_call.return_data[0]
                                                                    if not ext_call.success:
                                                                        if not return_data.size:
                                                                            if not mem[96]:
                                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                            revert with memory
                                                                              from 128
                                                                               len mem[96]
                                                                        if not return_data.size:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    _36141 = mem[64]
                                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                                    require return_data.size >= 32
                                                                    require mem[_36141] == Mask(32, 224, mem[_36141])
                                                                    if Mask(32, 224, mem[_36141]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                else:
                                                                    mem[mem[96] + mem[64] + 164] = 0
                                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                         gas gas_remaining wei
                                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                    mem[mem[64]] = ext_call.return_data[0]
                                                                    if not ext_call.success:
                                                                        if not return_data.size:
                                                                            if not mem[96]:
                                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                            revert with memory
                                                                              from 128
                                                                               len mem[96]
                                                                        if not return_data.size:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    _36142 = mem[64]
                                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                                    require return_data.size >= 32
                                                                    require mem[_36142] == Mask(32, 224, mem[_36142])
                                                                    if Mask(32, 224, mem[_36142]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        if tokenByIndex.length < 1:
                                                            revert with 0, 17
                                                        if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                            revert with 0, 50
                                                        if stor154[arg3] >= tokenByIndex.length:
                                                            revert with 0, 50
                                                        tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                        stor154[stor153[stor153.length]] = stor154[arg3]
                                                        stor154[arg3] = 0
                                                        if not tokenByIndex.length:
                                                            revert with 0, 49
                                                        tokenByIndex[tokenByIndex.length] = 0
                                                        tokenByIndex.length--
                                                        approved[arg3] = 0
                                                        if not ownerOf[arg3]:
                                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                                        emit Approval(ownerOf[arg3], 0, arg3);
                                                        if balanceOf[address(arg1)] < 1:
                                                            revert with 0, 17
                                                        balanceOf[address(arg1)]--
                                                        if balanceOf[address(arg2)] > -2:
                                                            revert with 0, 17
                                                        balanceOf[address(arg2)]++
                                                        mem[0] = arg3
                                                        mem[32] = 103
                                                        ownerOf[arg3] = arg2
                                                        emit Transfer(arg1, arg2, arg3);
                                                        if ext_code.size(arg2):
                                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = msg.sender
                                                            mem[mem[64] + 36] = arg1
                                                            mem[mem[64] + 68] = arg3
                                                            mem[mem[64] + 100] = 128
                                                            mem[mem[64] + 132] = mem[96]
                                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                            if ceil32(mem[96]) <= mem[96]:
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _36143 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_36143] == Mask(32, 224, mem[_36143])
                                                                if Mask(32, 224, mem[_36143]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            else:
                                                                mem[mem[96] + mem[64] + 164] = 0
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _36144 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_36144] == Mask(32, 224, mem[_36144])
                                                                if Mask(32, 224, mem[_36144]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
        else:
            if not stor106[stor103[arg3]][address(msg.sender)]:
                revert with 0, 'ERC721: transfer caller is not owner nor approved'
            if not ownerOf[arg3]:
                revert with 0, 'ERC721: owner query for nonexistent token'
            if ownerOf[arg3] != arg1:
                revert with 0, 'ERC721: transfer from incorrect owner'
            if not arg2:
                revert with 0, 'ERC721: transfer to the zero address'
            if paused:
                revert with 0, 'Pausable: paused'
            if not arg2:
                if not arg1:
                    stor154[arg3] = tokenByIndex.length
                    tokenByIndex.length++
                    stor72A1[stor153.length] = arg3
                else:
                    if arg1 != arg2:
                        if not arg1:
                            revert with 0, 'ERC721: balance query for the zero address'
                        if balanceOf[address(arg1)] < 1:
                            revert with 0, 17
                        if balanceOf[address(arg1)] - 1 != stor152[arg3]:
                            tokenOfOwnerByIndex[address(arg1)][stor152[arg3]] = tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1]
                            stor152[stor151[address(arg1)][stor104[address(arg1)] - 1]] = stor152[arg3]
                        stor152[arg3] = 0
                        tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                if arg2:
                    if arg2 != arg1:
                        if not arg2:
                            revert with 0, 'ERC721: balance query for the zero address'
                        tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                        stor152[arg3] = balanceOf[address(arg2)]
                else:
                    if tokenByIndex.length < 1:
                        revert with 0, 17
                    if tokenByIndex.length - 1 >= tokenByIndex.length:
                        revert with 0, 50
                    if stor154[arg3] >= tokenByIndex.length:
                        revert with 0, 50
                    tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                    stor154[stor153[stor153.length]] = stor154[arg3]
                    stor154[arg3] = 0
                    if not tokenByIndex.length:
                        revert with 0, 49
                    tokenByIndex[tokenByIndex.length] = 0
                    tokenByIndex.length--
                approved[arg3] = 0
                if not ownerOf[arg3]:
                    revert with 0, 'ERC721: owner query for nonexistent token'
                emit Approval(ownerOf[arg3], 0, arg3);
                if balanceOf[address(arg1)] < 1:
                    revert with 0, 17
                balanceOf[address(arg1)]--
                if balanceOf[address(arg2)] > -2:
                    revert with 0, 17
                balanceOf[address(arg2)]++
                ownerOf[arg3] = arg2
                emit Transfer(arg1, arg2, arg3);
                if ext_code.size(arg2):
                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                         gas gas_remaining wei
                        args 0, uint32(msg.sender), address(arg1), arg3, 128, 0
                    if not ext_call.success:
                        if not return_data.size:
                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                        if not return_data.size:
                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                    if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
            else:
                if owner == arg2:
                    if not arg1:
                        stor154[arg3] = tokenByIndex.length
                        tokenByIndex.length++
                        stor72A1[stor153.length] = arg3
                    else:
                        if arg1 != arg2:
                            if not arg1:
                                revert with 0, 'ERC721: balance query for the zero address'
                            if balanceOf[address(arg1)] < 1:
                                revert with 0, 17
                            if balanceOf[address(arg1)] - 1 != stor152[arg3]:
                                tokenOfOwnerByIndex[address(arg1)][stor152[arg3]] = tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1]
                                stor152[stor151[address(arg1)][stor104[address(arg1)] - 1]] = stor152[arg3]
                            stor152[arg3] = 0
                            tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                    if arg2:
                        if arg2 != arg1:
                            if not arg2:
                                revert with 0, 'ERC721: balance query for the zero address'
                            tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                            stor152[arg3] = balanceOf[address(arg2)]
                    else:
                        if tokenByIndex.length < 1:
                            revert with 0, 17
                        if tokenByIndex.length - 1 >= tokenByIndex.length:
                            revert with 0, 50
                        if stor154[arg3] >= tokenByIndex.length:
                            revert with 0, 50
                        tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                        stor154[stor153[stor153.length]] = stor154[arg3]
                        stor154[arg3] = 0
                        if not tokenByIndex.length:
                            revert with 0, 49
                        tokenByIndex[tokenByIndex.length] = 0
                        tokenByIndex.length--
                    approved[arg3] = 0
                    if not ownerOf[arg3]:
                        revert with 0, 'ERC721: owner query for nonexistent token'
                    emit Approval(ownerOf[arg3], 0, arg3);
                    if balanceOf[address(arg1)] < 1:
                        revert with 0, 17
                    balanceOf[address(arg1)]--
                    if balanceOf[address(arg2)] > -2:
                        revert with 0, 17
                    balanceOf[address(arg2)]++
                    ownerOf[arg3] = arg2
                    emit Transfer(arg1, arg2, arg3);
                    if ext_code.size(arg2):
                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                             gas gas_remaining wei
                            args 0, uint32(msg.sender), address(arg1), arg3, 128, 0
                        if not ext_call.success:
                            if not return_data.size:
                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                            if not return_data.size:
                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                        if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                else:
                    if bool(uint8(stor552[arg3].field_1536)) != 1:
                        if not arg1:
                            stor154[arg3] = tokenByIndex.length
                            tokenByIndex.length++
                            stor72A1[stor153.length] = arg3
                        else:
                            if arg1 != arg2:
                                if not arg1:
                                    revert with 0, 'ERC721: balance query for the zero address'
                                if balanceOf[address(arg1)] < 1:
                                    revert with 0, 17
                                if balanceOf[address(arg1)] - 1 != stor152[arg3]:
                                    tokenOfOwnerByIndex[address(arg1)][stor152[arg3]] = tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1]
                                    stor152[stor151[address(arg1)][stor104[address(arg1)] - 1]] = stor152[arg3]
                                stor152[arg3] = 0
                                tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                        if arg2:
                            if arg2 != arg1:
                                if not arg2:
                                    revert with 0, 'ERC721: balance query for the zero address'
                                tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                stor152[arg3] = balanceOf[address(arg2)]
                        else:
                            if tokenByIndex.length < 1:
                                revert with 0, 17
                            if tokenByIndex.length - 1 >= tokenByIndex.length:
                                revert with 0, 50
                            if stor154[arg3] >= tokenByIndex.length:
                                revert with 0, 50
                            tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                            stor154[stor153[stor153.length]] = stor154[arg3]
                            stor154[arg3] = 0
                            if not tokenByIndex.length:
                                revert with 0, 49
                            tokenByIndex[tokenByIndex.length] = 0
                            tokenByIndex.length--
                        approved[arg3] = 0
                        if not ownerOf[arg3]:
                            revert with 0, 'ERC721: owner query for nonexistent token'
                        emit Approval(ownerOf[arg3], 0, arg3);
                        if balanceOf[address(arg1)] < 1:
                            revert with 0, 17
                        balanceOf[address(arg1)]--
                        if balanceOf[address(arg2)] > -2:
                            revert with 0, 17
                        balanceOf[address(arg2)]++
                        ownerOf[arg3] = arg2
                        emit Transfer(arg1, arg2, arg3);
                        if ext_code.size(arg2):
                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, uint32(msg.sender), address(arg1), arg3, 128, 0
                            if not ext_call.success:
                                if not return_data.size:
                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                if not return_data.size:
                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                            if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                    else:
                        if bool(uint8(stor552[arg3].field_1544)) != 1:
                            if not arg1:
                                stor154[arg3] = tokenByIndex.length
                                tokenByIndex.length++
                                stor72A1[stor153.length] = arg3
                            else:
                                if arg1 != arg2:
                                    if not arg1:
                                        revert with 0, 'ERC721: balance query for the zero address'
                                    if balanceOf[address(arg1)] < 1:
                                        revert with 0, 17
                                    if balanceOf[address(arg1)] - 1 != stor152[arg3]:
                                        tokenOfOwnerByIndex[address(arg1)][stor152[arg3]] = tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1]
                                        stor152[stor151[address(arg1)][stor104[address(arg1)] - 1]] = stor152[arg3]
                                    stor152[arg3] = 0
                                    tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                            if arg2:
                                if arg2 != arg1:
                                    if not arg2:
                                        revert with 0, 'ERC721: balance query for the zero address'
                                    tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                    stor152[arg3] = balanceOf[address(arg2)]
                            else:
                                if tokenByIndex.length < 1:
                                    revert with 0, 17
                                if tokenByIndex.length - 1 >= tokenByIndex.length:
                                    revert with 0, 50
                                if stor154[arg3] >= tokenByIndex.length:
                                    revert with 0, 50
                                tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                stor154[stor153[stor153.length]] = stor154[arg3]
                                stor154[arg3] = 0
                                if not tokenByIndex.length:
                                    revert with 0, 49
                                tokenByIndex[tokenByIndex.length] = 0
                                tokenByIndex.length--
                            approved[arg3] = 0
                            if not ownerOf[arg3]:
                                revert with 0, 'ERC721: owner query for nonexistent token'
                            emit Approval(ownerOf[arg3], 0, arg3);
                            if balanceOf[address(arg1)] < 1:
                                revert with 0, 17
                            balanceOf[address(arg1)]--
                            if balanceOf[address(arg2)] > -2:
                                revert with 0, 17
                            balanceOf[address(arg2)]++
                            ownerOf[arg3] = arg2
                            emit Transfer(arg1, arg2, arg3);
                            if ext_code.size(arg2):
                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, uint32(msg.sender), address(arg1), arg3, 128, 0
                                if not ext_call.success:
                                    if not return_data.size:
                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                    if not return_data.size:
                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                        else:
                            if not liquidityPoolManagerImplementationAddress:
                                if not arg2:
                                    revert with 0, 'ERC721: balance query for the zero address'
                                if balanceOf[address(arg2)] > test266151307():
                                    revert with 0, 65
                                mem[128] = balanceOf[address(arg2)]
                                mem[64] = (32 * balanceOf[address(arg2)]) + 160
                                if not balanceOf[address(arg2)]:
                                    idx = 0
                                    while idx < balanceOf[address(arg2)]:
                                        if not arg2:
                                            revert with 0, 'ERC721: balance query for the zero address'
                                        if idx >= balanceOf[address(arg2)]:
                                            revert with 0, 'ERC721Enumerable: owner index out of bounds'
                                        if tokenOfOwnerByIndex[address(arg2)][idx] <= 0:
                                            revert with 0, 'Troops: Id must be higher than zero'
                                        mem[0] = tokenOfOwnerByIndex[address(arg2)][idx]
                                        mem[32] = 552
                                        _18356 = mem[64]
                                        mem[64] = mem[64] + 256
                                        mem[_18356] = stor552[stor151[address(arg2)][idx]].field_0
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                                revert with 0, 34
                                            _20628 = mem[64]
                                            mem[64] = mem[64] + ceil32(uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) + 32
                                            mem[_20628] = uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                                if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                                    revert with 0, 34
                                                if Mask(256, -1, stor552[stor151[address(arg2)][idx]].field_256):
                                                    if 31 >= uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5:
                                                        mem[_20628 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                    else:
                                                        mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                        mem[_20628 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                        s = _20628 + 32
                                                        t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                        while _20628 + (uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) > s:
                                                            mem[s + 32] = stor1[t].field_0
                                                            s = s + 32
                                                            t = t + 1
                                                            continue 
                                            else:
                                                if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                                    revert with 0, 34
                                                if stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                    if 31 >= stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                        mem[_20628 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                    else:
                                                        mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                        mem[_20628 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                        s = _20628 + 32
                                                        t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                        while _20628 + stor552[stor151[address(arg2)][idx]].field_257 % 128 > s:
                                                            mem[s + 32] = stor1[t].field_0
                                                            s = s + 32
                                                            t = t + 1
                                                            continue 
                                            mem[_18356 + 32] = _20628
                                        else:
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                                revert with 0, 34
                                            _20679 = mem[64]
                                            mem[64] = mem[64] + ceil32(stor552[stor151[address(arg2)][idx]].field_257 % 128) + 32
                                            mem[_20679] = stor552[stor151[address(arg2)][idx]].field_257 % 128
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                                if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                                    revert with 0, 34
                                                if Mask(256, -1, stor552[stor151[address(arg2)][idx]].field_256):
                                                    if 31 >= uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5:
                                                        mem[_20679 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                    else:
                                                        mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                        mem[_20679 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                        s = _20679 + 32
                                                        t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                        while _20679 + (uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) > s:
                                                            mem[s + 32] = stor1[t].field_0
                                                            s = s + 32
                                                            t = t + 1
                                                            continue 
                                            else:
                                                if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                                    revert with 0, 34
                                                if stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                    if 31 >= stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                        mem[_20679 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                    else:
                                                        mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                        mem[_20679 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                        s = _20679 + 32
                                                        t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                        while _20679 + stor552[stor151[address(arg2)][idx]].field_257 % 128 > s:
                                                            mem[s + 32] = stor1[t].field_0
                                                            s = s + 32
                                                            t = t + 1
                                                            continue 
                                            mem[_18356 + 32] = _20679
                                        mem[_18356 + 64] = stor552[stor151[address(arg2)][idx]].field_512
                                        mem[_18356 + 96] = stor552[stor151[address(arg2)][idx]].field_768
                                        mem[_18356 + 128] = stor552[stor151[address(arg2)][idx]].field_1024
                                        mem[_18356 + 160] = stor552[stor151[address(arg2)][idx]].field_1280
                                        mem[_18356 + 192] = bool(uint8(stor552[stor151[address(arg2)][idx]].field_1536))
                                        mem[_18356 + 224] = bool(uint8(stor552[stor151[address(arg2)][idx]].field_1544))
                                        if not uint8(stor552[stor151[address(arg2)][idx]].field_1536):
                                            revert with 0, 'Troops: This troop doesn't exist'
                                        if idx >= mem[128]:
                                            revert with 0, 50
                                        mem[(32 * idx) + 160] = tokenOfOwnerByIndex[address(arg2)][idx]
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        continue 
                                    idx = 0
                                    s = 0
                                    while idx < mem[128]:
                                        if idx >= mem[128]:
                                            revert with 0, 50
                                        mem[0] = mem[(32 * idx) + 160]
                                        mem[32] = 552
                                        if not uint8(stor552[mem[(32 * idx) + 160]].field_1544):
                                            if idx == -1:
                                                revert with 0, 17
                                            idx = idx + 1
                                            s = s
                                            continue 
                                        if s == -1:
                                            revert with 0, 17
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = s + 1
                                        continue 
                                    if s >= 2:
                                        revert with 0, 'Each holder can not hold more than 2 Gladiators'
                                    if not arg1:
                                        stor154[arg3] = tokenByIndex.length
                                        tokenByIndex.length++
                                        stor72A1[stor153.length] = arg3
                                        if arg2:
                                            if arg2 == arg1:
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _36169 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_36169] == Mask(32, 224, mem[_36169])
                                                        if Mask(32, 224, mem[_36169]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[96] + mem[64] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _36170 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_36170] == Mask(32, 224, mem[_36170])
                                                        if Mask(32, 224, mem[_36170]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if not arg2:
                                                    revert with 0, 'ERC721: balance query for the zero address'
                                                tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                stor152[arg3] = balanceOf[address(arg2)]
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _36171 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_36171] == Mask(32, 224, mem[_36171])
                                                        if Mask(32, 224, mem[_36171]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[96] + mem[64] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _36172 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_36172] == Mask(32, 224, mem[_36172])
                                                        if Mask(32, 224, mem[_36172]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            if tokenByIndex.length < 1:
                                                revert with 0, 17
                                            if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                revert with 0, 50
                                            if stor154[arg3] >= tokenByIndex.length:
                                                revert with 0, 50
                                            tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                            stor154[stor153[stor153.length]] = stor154[arg3]
                                            stor154[arg3] = 0
                                            if not tokenByIndex.length:
                                                revert with 0, 49
                                            tokenByIndex[tokenByIndex.length] = 0
                                            tokenByIndex.length--
                                            approved[arg3] = 0
                                            if not ownerOf[arg3]:
                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                            emit Approval(ownerOf[arg3], 0, arg3);
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            balanceOf[address(arg1)]--
                                            if balanceOf[address(arg2)] > -2:
                                                revert with 0, 17
                                            balanceOf[address(arg2)]++
                                            mem[0] = arg3
                                            mem[32] = 103
                                            ownerOf[arg3] = arg2
                                            emit Transfer(arg1, arg2, arg3);
                                            if ext_code.size(arg2):
                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = msg.sender
                                                mem[mem[64] + 36] = arg1
                                                mem[mem[64] + 68] = arg3
                                                mem[mem[64] + 100] = 128
                                                mem[mem[64] + 132] = mem[96]
                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                if ceil32(mem[96]) <= mem[96]:
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _36173 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_36173] == Mask(32, 224, mem[_36173])
                                                    if Mask(32, 224, mem[_36173]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    mem[mem[96] + mem[64] + 164] = 0
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _36174 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_36174] == Mask(32, 224, mem[_36174])
                                                    if Mask(32, 224, mem[_36174]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                    else:
                                        if arg1 == arg2:
                                            if arg2:
                                                if arg2 == arg1:
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _36151 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_36151] == Mask(32, 224, mem[_36151])
                                                            if Mask(32, 224, mem[_36151]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _36152 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_36152] == Mask(32, 224, mem[_36152])
                                                            if Mask(32, 224, mem[_36152]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    if not arg2:
                                                        revert with 0, 'ERC721: balance query for the zero address'
                                                    tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                    stor152[arg3] = balanceOf[address(arg2)]
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _36153 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_36153] == Mask(32, 224, mem[_36153])
                                                            if Mask(32, 224, mem[_36153]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _36154 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_36154] == Mask(32, 224, mem[_36154])
                                                            if Mask(32, 224, mem[_36154]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if tokenByIndex.length < 1:
                                                    revert with 0, 17
                                                if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                    revert with 0, 50
                                                if stor154[arg3] >= tokenByIndex.length:
                                                    revert with 0, 50
                                                tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                stor154[stor153[stor153.length]] = stor154[arg3]
                                                stor154[arg3] = 0
                                                if not tokenByIndex.length:
                                                    revert with 0, 49
                                                tokenByIndex[tokenByIndex.length] = 0
                                                tokenByIndex.length--
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _36155 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_36155] == Mask(32, 224, mem[_36155])
                                                        if Mask(32, 224, mem[_36155]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[96] + mem[64] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _36156 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_36156] == Mask(32, 224, mem[_36156])
                                                        if Mask(32, 224, mem[_36156]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            if not arg1:
                                                revert with 0, 'ERC721: balance query for the zero address'
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            if balanceOf[address(arg1)] - 1 == stor152[arg3]:
                                                stor152[arg3] = 0
                                                tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                                                if arg2:
                                                    if arg2 == arg1:
                                                        approved[arg3] = 0
                                                        if not ownerOf[arg3]:
                                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                                        emit Approval(ownerOf[arg3], 0, arg3);
                                                        if balanceOf[address(arg1)] < 1:
                                                            revert with 0, 17
                                                        balanceOf[address(arg1)]--
                                                        if balanceOf[address(arg2)] > -2:
                                                            revert with 0, 17
                                                        balanceOf[address(arg2)]++
                                                        mem[0] = arg3
                                                        mem[32] = 103
                                                        ownerOf[arg3] = arg2
                                                        emit Transfer(arg1, arg2, arg3);
                                                        if ext_code.size(arg2):
                                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = msg.sender
                                                            mem[mem[64] + 36] = arg1
                                                            mem[mem[64] + 68] = arg3
                                                            mem[mem[64] + 100] = 128
                                                            mem[mem[64] + 132] = mem[96]
                                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                            if ceil32(mem[96]) <= mem[96]:
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _36157 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_36157] == Mask(32, 224, mem[_36157])
                                                                if Mask(32, 224, mem[_36157]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            else:
                                                                mem[mem[96] + mem[64] + 164] = 0
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _36158 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_36158] == Mask(32, 224, mem[_36158])
                                                                if Mask(32, 224, mem[_36158]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        if not arg2:
                                                            revert with 0, 'ERC721: balance query for the zero address'
                                                        tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                        stor152[arg3] = balanceOf[address(arg2)]
                                                        approved[arg3] = 0
                                                        if not ownerOf[arg3]:
                                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                                        emit Approval(ownerOf[arg3], 0, arg3);
                                                        if balanceOf[address(arg1)] < 1:
                                                            revert with 0, 17
                                                        balanceOf[address(arg1)]--
                                                        if balanceOf[address(arg2)] > -2:
                                                            revert with 0, 17
                                                        balanceOf[address(arg2)]++
                                                        mem[0] = arg3
                                                        mem[32] = 103
                                                        ownerOf[arg3] = arg2
                                                        emit Transfer(arg1, arg2, arg3);
                                                        if ext_code.size(arg2):
                                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = msg.sender
                                                            mem[mem[64] + 36] = arg1
                                                            mem[mem[64] + 68] = arg3
                                                            mem[mem[64] + 100] = 128
                                                            mem[mem[64] + 132] = mem[96]
                                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                            if ceil32(mem[96]) <= mem[96]:
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _36159 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_36159] == Mask(32, 224, mem[_36159])
                                                                if Mask(32, 224, mem[_36159]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            else:
                                                                mem[mem[96] + mem[64] + 164] = 0
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _36160 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_36160] == Mask(32, 224, mem[_36160])
                                                                if Mask(32, 224, mem[_36160]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    if tokenByIndex.length < 1:
                                                        revert with 0, 17
                                                    if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                        revert with 0, 50
                                                    if stor154[arg3] >= tokenByIndex.length:
                                                        revert with 0, 50
                                                    tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                    stor154[stor153[stor153.length]] = stor154[arg3]
                                                    stor154[arg3] = 0
                                                    if not tokenByIndex.length:
                                                        revert with 0, 49
                                                    tokenByIndex[tokenByIndex.length] = 0
                                                    tokenByIndex.length--
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _36161 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_36161] == Mask(32, 224, mem[_36161])
                                                            if Mask(32, 224, mem[_36161]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _36162 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_36162] == Mask(32, 224, mem[_36162])
                                                            if Mask(32, 224, mem[_36162]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                tokenOfOwnerByIndex[address(arg1)][stor152[arg3]] = tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1]
                                                stor152[stor151[address(arg1)][stor104[address(arg1)] - 1]] = stor152[arg3]
                                                stor152[arg3] = 0
                                                tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                                                if arg2:
                                                    if arg2 == arg1:
                                                        approved[arg3] = 0
                                                        if not ownerOf[arg3]:
                                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                                        emit Approval(ownerOf[arg3], 0, arg3);
                                                        if balanceOf[address(arg1)] < 1:
                                                            revert with 0, 17
                                                        balanceOf[address(arg1)]--
                                                        if balanceOf[address(arg2)] > -2:
                                                            revert with 0, 17
                                                        balanceOf[address(arg2)]++
                                                        mem[0] = arg3
                                                        mem[32] = 103
                                                        ownerOf[arg3] = arg2
                                                        emit Transfer(arg1, arg2, arg3);
                                                        if ext_code.size(arg2):
                                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = msg.sender
                                                            mem[mem[64] + 36] = arg1
                                                            mem[mem[64] + 68] = arg3
                                                            mem[mem[64] + 100] = 128
                                                            mem[mem[64] + 132] = mem[96]
                                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                            if ceil32(mem[96]) <= mem[96]:
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _36163 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_36163] == Mask(32, 224, mem[_36163])
                                                                if Mask(32, 224, mem[_36163]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            else:
                                                                mem[mem[96] + mem[64] + 164] = 0
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _36164 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_36164] == Mask(32, 224, mem[_36164])
                                                                if Mask(32, 224, mem[_36164]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        if not arg2:
                                                            revert with 0, 'ERC721: balance query for the zero address'
                                                        tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                        stor152[arg3] = balanceOf[address(arg2)]
                                                        approved[arg3] = 0
                                                        if not ownerOf[arg3]:
                                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                                        emit Approval(ownerOf[arg3], 0, arg3);
                                                        if balanceOf[address(arg1)] < 1:
                                                            revert with 0, 17
                                                        balanceOf[address(arg1)]--
                                                        if balanceOf[address(arg2)] > -2:
                                                            revert with 0, 17
                                                        balanceOf[address(arg2)]++
                                                        mem[0] = arg3
                                                        mem[32] = 103
                                                        ownerOf[arg3] = arg2
                                                        emit Transfer(arg1, arg2, arg3);
                                                        if ext_code.size(arg2):
                                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = msg.sender
                                                            mem[mem[64] + 36] = arg1
                                                            mem[mem[64] + 68] = arg3
                                                            mem[mem[64] + 100] = 128
                                                            mem[mem[64] + 132] = mem[96]
                                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                            if ceil32(mem[96]) <= mem[96]:
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _36165 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_36165] == Mask(32, 224, mem[_36165])
                                                                if Mask(32, 224, mem[_36165]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            else:
                                                                mem[mem[96] + mem[64] + 164] = 0
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _36166 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_36166] == Mask(32, 224, mem[_36166])
                                                                if Mask(32, 224, mem[_36166]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    if tokenByIndex.length < 1:
                                                        revert with 0, 17
                                                    if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                        revert with 0, 50
                                                    if stor154[arg3] >= tokenByIndex.length:
                                                        revert with 0, 50
                                                    tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                    stor154[stor153[stor153.length]] = stor154[arg3]
                                                    stor154[arg3] = 0
                                                    if not tokenByIndex.length:
                                                        revert with 0, 49
                                                    tokenByIndex[tokenByIndex.length] = 0
                                                    tokenByIndex.length--
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _36167 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_36167] == Mask(32, 224, mem[_36167])
                                                            if Mask(32, 224, mem[_36167]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _36168 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_36168] == Mask(32, 224, mem[_36168])
                                                            if Mask(32, 224, mem[_36168]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                else:
                                    mem[160 len 32 * balanceOf[address(arg2)]] = call.data[calldata.size len 32 * balanceOf[address(arg2)]]
                                    idx = 0
                                    while idx < balanceOf[address(arg2)]:
                                        if not arg2:
                                            revert with 0, 'ERC721: balance query for the zero address'
                                        if idx >= balanceOf[address(arg2)]:
                                            revert with 0, 'ERC721Enumerable: owner index out of bounds'
                                        if tokenOfOwnerByIndex[address(arg2)][idx] <= 0:
                                            revert with 0, 'Troops: Id must be higher than zero'
                                        mem[0] = tokenOfOwnerByIndex[address(arg2)][idx]
                                        mem[32] = 552
                                        _18359 = mem[64]
                                        mem[64] = mem[64] + 256
                                        mem[_18359] = stor552[stor151[address(arg2)][idx]].field_0
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                                revert with 0, 34
                                            _20630 = mem[64]
                                            mem[64] = mem[64] + ceil32(uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) + 32
                                            mem[_20630] = uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                                if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                                    revert with 0, 34
                                                if Mask(256, -1, stor552[stor151[address(arg2)][idx]].field_256):
                                                    if 31 >= uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5:
                                                        mem[_20630 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                    else:
                                                        mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                        mem[_20630 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                        s = _20630 + 32
                                                        t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                        while _20630 + (uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) > s:
                                                            mem[s + 32] = stor1[t].field_0
                                                            s = s + 32
                                                            t = t + 1
                                                            continue 
                                            else:
                                                if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                                    revert with 0, 34
                                                if stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                    if 31 >= stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                        mem[_20630 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                    else:
                                                        mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                        mem[_20630 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                        s = _20630 + 32
                                                        t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                        while _20630 + stor552[stor151[address(arg2)][idx]].field_257 % 128 > s:
                                                            mem[s + 32] = stor1[t].field_0
                                                            s = s + 32
                                                            t = t + 1
                                                            continue 
                                            mem[_18359 + 32] = _20630
                                        else:
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                                revert with 0, 34
                                            _20684 = mem[64]
                                            mem[64] = mem[64] + ceil32(stor552[stor151[address(arg2)][idx]].field_257 % 128) + 32
                                            mem[_20684] = stor552[stor151[address(arg2)][idx]].field_257 % 128
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                                if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                                    revert with 0, 34
                                                if Mask(256, -1, stor552[stor151[address(arg2)][idx]].field_256):
                                                    if 31 >= uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5:
                                                        mem[_20684 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                    else:
                                                        mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                        mem[_20684 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                        s = _20684 + 32
                                                        t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                        while _20684 + (uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) > s:
                                                            mem[s + 32] = stor1[t].field_0
                                                            s = s + 32
                                                            t = t + 1
                                                            continue 
                                            else:
                                                if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                                    revert with 0, 34
                                                if stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                    if 31 >= stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                        mem[_20684 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                    else:
                                                        mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                        mem[_20684 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                        s = _20684 + 32
                                                        t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                        while _20684 + stor552[stor151[address(arg2)][idx]].field_257 % 128 > s:
                                                            mem[s + 32] = stor1[t].field_0
                                                            s = s + 32
                                                            t = t + 1
                                                            continue 
                                            mem[_18359 + 32] = _20684
                                        mem[_18359 + 64] = stor552[stor151[address(arg2)][idx]].field_512
                                        mem[_18359 + 96] = stor552[stor151[address(arg2)][idx]].field_768
                                        mem[_18359 + 128] = stor552[stor151[address(arg2)][idx]].field_1024
                                        mem[_18359 + 160] = stor552[stor151[address(arg2)][idx]].field_1280
                                        mem[_18359 + 192] = bool(uint8(stor552[stor151[address(arg2)][idx]].field_1536))
                                        mem[_18359 + 224] = bool(uint8(stor552[stor151[address(arg2)][idx]].field_1544))
                                        if not uint8(stor552[stor151[address(arg2)][idx]].field_1536):
                                            revert with 0, 'Troops: This troop doesn't exist'
                                        if idx >= mem[128]:
                                            revert with 0, 50
                                        mem[(32 * idx) + 160] = tokenOfOwnerByIndex[address(arg2)][idx]
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        continue 
                                    idx = 0
                                    s = 0
                                    while idx < mem[128]:
                                        if idx >= mem[128]:
                                            revert with 0, 50
                                        mem[0] = mem[(32 * idx) + 160]
                                        mem[32] = 552
                                        if not uint8(stor552[mem[(32 * idx) + 160]].field_1544):
                                            if idx == -1:
                                                revert with 0, 17
                                            idx = idx + 1
                                            s = s
                                            continue 
                                        if s == -1:
                                            revert with 0, 17
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = s + 1
                                        continue 
                                    if s >= 2:
                                        revert with 0, 'Each holder can not hold more than 2 Gladiators'
                                    if not arg1:
                                        stor154[arg3] = tokenByIndex.length
                                        tokenByIndex.length++
                                        stor72A1[stor153.length] = arg3
                                        if arg2:
                                            if arg2 == arg1:
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _36193 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_36193] == Mask(32, 224, mem[_36193])
                                                        if Mask(32, 224, mem[_36193]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[96] + mem[64] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _36194 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_36194] == Mask(32, 224, mem[_36194])
                                                        if Mask(32, 224, mem[_36194]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if not arg2:
                                                    revert with 0, 'ERC721: balance query for the zero address'
                                                tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                stor152[arg3] = balanceOf[address(arg2)]
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _36195 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_36195] == Mask(32, 224, mem[_36195])
                                                        if Mask(32, 224, mem[_36195]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[96] + mem[64] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _36196 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_36196] == Mask(32, 224, mem[_36196])
                                                        if Mask(32, 224, mem[_36196]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            if tokenByIndex.length < 1:
                                                revert with 0, 17
                                            if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                revert with 0, 50
                                            if stor154[arg3] >= tokenByIndex.length:
                                                revert with 0, 50
                                            tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                            stor154[stor153[stor153.length]] = stor154[arg3]
                                            stor154[arg3] = 0
                                            if not tokenByIndex.length:
                                                revert with 0, 49
                                            tokenByIndex[tokenByIndex.length] = 0
                                            tokenByIndex.length--
                                            approved[arg3] = 0
                                            if not ownerOf[arg3]:
                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                            emit Approval(ownerOf[arg3], 0, arg3);
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            balanceOf[address(arg1)]--
                                            if balanceOf[address(arg2)] > -2:
                                                revert with 0, 17
                                            balanceOf[address(arg2)]++
                                            mem[0] = arg3
                                            mem[32] = 103
                                            ownerOf[arg3] = arg2
                                            emit Transfer(arg1, arg2, arg3);
                                            if ext_code.size(arg2):
                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = msg.sender
                                                mem[mem[64] + 36] = arg1
                                                mem[mem[64] + 68] = arg3
                                                mem[mem[64] + 100] = 128
                                                mem[mem[64] + 132] = mem[96]
                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                if ceil32(mem[96]) <= mem[96]:
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _36197 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_36197] == Mask(32, 224, mem[_36197])
                                                    if Mask(32, 224, mem[_36197]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    mem[mem[96] + mem[64] + 164] = 0
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _36198 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_36198] == Mask(32, 224, mem[_36198])
                                                    if Mask(32, 224, mem[_36198]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                    else:
                                        if arg1 == arg2:
                                            if arg2:
                                                if arg2 == arg1:
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _36175 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_36175] == Mask(32, 224, mem[_36175])
                                                            if Mask(32, 224, mem[_36175]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _36176 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_36176] == Mask(32, 224, mem[_36176])
                                                            if Mask(32, 224, mem[_36176]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    if not arg2:
                                                        revert with 0, 'ERC721: balance query for the zero address'
                                                    tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                    stor152[arg3] = balanceOf[address(arg2)]
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _36177 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_36177] == Mask(32, 224, mem[_36177])
                                                            if Mask(32, 224, mem[_36177]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _36178 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_36178] == Mask(32, 224, mem[_36178])
                                                            if Mask(32, 224, mem[_36178]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if tokenByIndex.length < 1:
                                                    revert with 0, 17
                                                if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                    revert with 0, 50
                                                if stor154[arg3] >= tokenByIndex.length:
                                                    revert with 0, 50
                                                tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                stor154[stor153[stor153.length]] = stor154[arg3]
                                                stor154[arg3] = 0
                                                if not tokenByIndex.length:
                                                    revert with 0, 49
                                                tokenByIndex[tokenByIndex.length] = 0
                                                tokenByIndex.length--
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _36179 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_36179] == Mask(32, 224, mem[_36179])
                                                        if Mask(32, 224, mem[_36179]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[96] + mem[64] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _36180 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_36180] == Mask(32, 224, mem[_36180])
                                                        if Mask(32, 224, mem[_36180]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            if not arg1:
                                                revert with 0, 'ERC721: balance query for the zero address'
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            if balanceOf[address(arg1)] - 1 == stor152[arg3]:
                                                stor152[arg3] = 0
                                                tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                                                if arg2:
                                                    if arg2 == arg1:
                                                        approved[arg3] = 0
                                                        if not ownerOf[arg3]:
                                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                                        emit Approval(ownerOf[arg3], 0, arg3);
                                                        if balanceOf[address(arg1)] < 1:
                                                            revert with 0, 17
                                                        balanceOf[address(arg1)]--
                                                        if balanceOf[address(arg2)] > -2:
                                                            revert with 0, 17
                                                        balanceOf[address(arg2)]++
                                                        mem[0] = arg3
                                                        mem[32] = 103
                                                        ownerOf[arg3] = arg2
                                                        emit Transfer(arg1, arg2, arg3);
                                                        if ext_code.size(arg2):
                                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = msg.sender
                                                            mem[mem[64] + 36] = arg1
                                                            mem[mem[64] + 68] = arg3
                                                            mem[mem[64] + 100] = 128
                                                            mem[mem[64] + 132] = mem[96]
                                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                            if ceil32(mem[96]) <= mem[96]:
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _36181 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_36181] == Mask(32, 224, mem[_36181])
                                                                if Mask(32, 224, mem[_36181]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            else:
                                                                mem[mem[96] + mem[64] + 164] = 0
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _36182 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_36182] == Mask(32, 224, mem[_36182])
                                                                if Mask(32, 224, mem[_36182]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        if not arg2:
                                                            revert with 0, 'ERC721: balance query for the zero address'
                                                        tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                        stor152[arg3] = balanceOf[address(arg2)]
                                                        approved[arg3] = 0
                                                        if not ownerOf[arg3]:
                                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                                        emit Approval(ownerOf[arg3], 0, arg3);
                                                        if balanceOf[address(arg1)] < 1:
                                                            revert with 0, 17
                                                        balanceOf[address(arg1)]--
                                                        if balanceOf[address(arg2)] > -2:
                                                            revert with 0, 17
                                                        balanceOf[address(arg2)]++
                                                        mem[0] = arg3
                                                        mem[32] = 103
                                                        ownerOf[arg3] = arg2
                                                        emit Transfer(arg1, arg2, arg3);
                                                        if ext_code.size(arg2):
                                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = msg.sender
                                                            mem[mem[64] + 36] = arg1
                                                            mem[mem[64] + 68] = arg3
                                                            mem[mem[64] + 100] = 128
                                                            mem[mem[64] + 132] = mem[96]
                                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                            if ceil32(mem[96]) <= mem[96]:
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _36183 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_36183] == Mask(32, 224, mem[_36183])
                                                                if Mask(32, 224, mem[_36183]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            else:
                                                                mem[mem[96] + mem[64] + 164] = 0
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _36184 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_36184] == Mask(32, 224, mem[_36184])
                                                                if Mask(32, 224, mem[_36184]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    if tokenByIndex.length < 1:
                                                        revert with 0, 17
                                                    if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                        revert with 0, 50
                                                    if stor154[arg3] >= tokenByIndex.length:
                                                        revert with 0, 50
                                                    tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                    stor154[stor153[stor153.length]] = stor154[arg3]
                                                    stor154[arg3] = 0
                                                    if not tokenByIndex.length:
                                                        revert with 0, 49
                                                    tokenByIndex[tokenByIndex.length] = 0
                                                    tokenByIndex.length--
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _36185 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_36185] == Mask(32, 224, mem[_36185])
                                                            if Mask(32, 224, mem[_36185]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _36186 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_36186] == Mask(32, 224, mem[_36186])
                                                            if Mask(32, 224, mem[_36186]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                tokenOfOwnerByIndex[address(arg1)][stor152[arg3]] = tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1]
                                                stor152[stor151[address(arg1)][stor104[address(arg1)] - 1]] = stor152[arg3]
                                                stor152[arg3] = 0
                                                tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                                                if arg2:
                                                    if arg2 == arg1:
                                                        approved[arg3] = 0
                                                        if not ownerOf[arg3]:
                                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                                        emit Approval(ownerOf[arg3], 0, arg3);
                                                        if balanceOf[address(arg1)] < 1:
                                                            revert with 0, 17
                                                        balanceOf[address(arg1)]--
                                                        if balanceOf[address(arg2)] > -2:
                                                            revert with 0, 17
                                                        balanceOf[address(arg2)]++
                                                        mem[0] = arg3
                                                        mem[32] = 103
                                                        ownerOf[arg3] = arg2
                                                        emit Transfer(arg1, arg2, arg3);
                                                        if ext_code.size(arg2):
                                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = msg.sender
                                                            mem[mem[64] + 36] = arg1
                                                            mem[mem[64] + 68] = arg3
                                                            mem[mem[64] + 100] = 128
                                                            mem[mem[64] + 132] = mem[96]
                                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                            if ceil32(mem[96]) <= mem[96]:
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _36187 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_36187] == Mask(32, 224, mem[_36187])
                                                                if Mask(32, 224, mem[_36187]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            else:
                                                                mem[mem[96] + mem[64] + 164] = 0
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _36188 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_36188] == Mask(32, 224, mem[_36188])
                                                                if Mask(32, 224, mem[_36188]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        if not arg2:
                                                            revert with 0, 'ERC721: balance query for the zero address'
                                                        tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                        stor152[arg3] = balanceOf[address(arg2)]
                                                        approved[arg3] = 0
                                                        if not ownerOf[arg3]:
                                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                                        emit Approval(ownerOf[arg3], 0, arg3);
                                                        if balanceOf[address(arg1)] < 1:
                                                            revert with 0, 17
                                                        balanceOf[address(arg1)]--
                                                        if balanceOf[address(arg2)] > -2:
                                                            revert with 0, 17
                                                        balanceOf[address(arg2)]++
                                                        mem[0] = arg3
                                                        mem[32] = 103
                                                        ownerOf[arg3] = arg2
                                                        emit Transfer(arg1, arg2, arg3);
                                                        if ext_code.size(arg2):
                                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = msg.sender
                                                            mem[mem[64] + 36] = arg1
                                                            mem[mem[64] + 68] = arg3
                                                            mem[mem[64] + 100] = 128
                                                            mem[mem[64] + 132] = mem[96]
                                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                            if ceil32(mem[96]) <= mem[96]:
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _36189 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_36189] == Mask(32, 224, mem[_36189])
                                                                if Mask(32, 224, mem[_36189]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            else:
                                                                mem[mem[96] + mem[64] + 164] = 0
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _36190 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_36190] == Mask(32, 224, mem[_36190])
                                                                if Mask(32, 224, mem[_36190]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    if tokenByIndex.length < 1:
                                                        revert with 0, 17
                                                    if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                        revert with 0, 50
                                                    if stor154[arg3] >= tokenByIndex.length:
                                                        revert with 0, 50
                                                    tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                    stor154[stor153[stor153.length]] = stor154[arg3]
                                                    stor154[arg3] = 0
                                                    if not tokenByIndex.length:
                                                        revert with 0, 49
                                                    tokenByIndex[tokenByIndex.length] = 0
                                                    tokenByIndex.length--
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _36191 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_36191] == Mask(32, 224, mem[_36191])
                                                            if Mask(32, 224, mem[_36191]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _36192 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_36192] == Mask(32, 224, mem[_36192])
                                                            if Mask(32, 224, mem[_36192]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                            else:
                                mem[132] = arg2
                                staticcall liquidityPoolManagerImplementationAddress.0xb278110f with:
                                        gas gas_remaining wei
                                       args arg2
                                mem[128] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                if ext_call.return_data[0]:
                                    if not arg1:
                                        stor154[arg3] = tokenByIndex.length
                                        tokenByIndex.length++
                                        stor72A1[stor153.length] = arg3
                                    else:
                                        if arg1 != arg2:
                                            if not arg1:
                                                revert with 0, 'ERC721: balance query for the zero address'
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            if balanceOf[address(arg1)] - 1 != stor152[arg3]:
                                                tokenOfOwnerByIndex[address(arg1)][stor152[arg3]] = tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1]
                                                stor152[stor151[address(arg1)][stor104[address(arg1)] - 1]] = stor152[arg3]
                                            stor152[arg3] = 0
                                            tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                                    if arg2:
                                        if arg2 != arg1:
                                            if not arg2:
                                                revert with 0, 'ERC721: balance query for the zero address'
                                            tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                            stor152[arg3] = balanceOf[address(arg2)]
                                    else:
                                        if tokenByIndex.length < 1:
                                            revert with 0, 17
                                        if tokenByIndex.length - 1 >= tokenByIndex.length:
                                            revert with 0, 50
                                        if stor154[arg3] >= tokenByIndex.length:
                                            revert with 0, 50
                                        tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                        stor154[stor153[stor153.length]] = stor154[arg3]
                                        stor154[arg3] = 0
                                        if not tokenByIndex.length:
                                            revert with 0, 49
                                        tokenByIndex[tokenByIndex.length] = 0
                                        tokenByIndex.length--
                                    approved[arg3] = 0
                                    if not ownerOf[arg3]:
                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                    emit Approval(ownerOf[arg3], 0, arg3);
                                    if balanceOf[address(arg1)] < 1:
                                        revert with 0, 17
                                    balanceOf[address(arg1)]--
                                    if balanceOf[address(arg2)] > -2:
                                        revert with 0, 17
                                    balanceOf[address(arg2)]++
                                    ownerOf[arg3] = arg2
                                    emit Transfer(arg1, arg2, arg3);
                                    if ext_code.size(arg2):
                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args msg.sender, address(arg1), arg3, 128, 0
                                        if not ext_call.success:
                                            if not return_data.size:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            if not return_data.size:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                        if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                else:
                                    if not arg2:
                                        revert with 0, 'ERC721: balance query for the zero address'
                                    if balanceOf[address(arg2)] > test266151307():
                                        revert with 0, 65
                                    mem[ceil32(return_data.size) + 128] = balanceOf[address(arg2)]
                                    mem[64] = ceil32(return_data.size) + (32 * balanceOf[address(arg2)]) + 160
                                    if not balanceOf[address(arg2)]:
                                        idx = 0
                                        while idx < balanceOf[address(arg2)]:
                                            if not arg2:
                                                revert with 0, 'ERC721: balance query for the zero address'
                                            if idx >= balanceOf[address(arg2)]:
                                                revert with 0, 'ERC721Enumerable: owner index out of bounds'
                                            if tokenOfOwnerByIndex[address(arg2)][idx] <= 0:
                                                revert with 0, 'Troops: Id must be higher than zero'
                                            mem[0] = tokenOfOwnerByIndex[address(arg2)][idx]
                                            mem[32] = 552
                                            _18410 = mem[64]
                                            mem[64] = mem[64] + 256
                                            mem[_18410] = stor552[stor151[address(arg2)][idx]].field_0
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                                if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                                    revert with 0, 34
                                                _20632 = mem[64]
                                                mem[64] = mem[64] + ceil32(uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) + 32
                                                mem[_20632] = uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5
                                                if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                                    if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                                        revert with 0, 34
                                                    if Mask(256, -1, stor552[stor151[address(arg2)][idx]].field_256):
                                                        if 31 >= uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5:
                                                            mem[_20632 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                        else:
                                                            mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                            mem[_20632 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                            s = _20632 + 32
                                                            t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                            while _20632 + (uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) > s:
                                                                mem[s + 32] = stor1[t].field_0
                                                                s = s + 32
                                                                t = t + 1
                                                                continue 
                                                else:
                                                    if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                                        revert with 0, 34
                                                    if stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                        if 31 >= stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                            mem[_20632 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                        else:
                                                            mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                            mem[_20632 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                            s = _20632 + 32
                                                            t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                            while _20632 + stor552[stor151[address(arg2)][idx]].field_257 % 128 > s:
                                                                mem[s + 32] = stor1[t].field_0
                                                                s = s + 32
                                                                t = t + 1
                                                                continue 
                                                mem[_18410 + 32] = _20632
                                            else:
                                                if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                                    revert with 0, 34
                                                _20689 = mem[64]
                                                mem[64] = mem[64] + ceil32(stor552[stor151[address(arg2)][idx]].field_257 % 128) + 32
                                                mem[_20689] = stor552[stor151[address(arg2)][idx]].field_257 % 128
                                                if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                                    if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                                        revert with 0, 34
                                                    if Mask(256, -1, stor552[stor151[address(arg2)][idx]].field_256):
                                                        if 31 >= uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5:
                                                            mem[_20689 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                        else:
                                                            mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                            mem[_20689 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                            s = _20689 + 32
                                                            t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                            while _20689 + (uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) > s:
                                                                mem[s + 32] = stor1[t].field_0
                                                                s = s + 32
                                                                t = t + 1
                                                                continue 
                                                else:
                                                    if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                                        revert with 0, 34
                                                    if stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                        if 31 >= stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                            mem[_20689 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                        else:
                                                            mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                            mem[_20689 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                            s = _20689 + 32
                                                            t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                            while _20689 + stor552[stor151[address(arg2)][idx]].field_257 % 128 > s:
                                                                mem[s + 32] = stor1[t].field_0
                                                                s = s + 32
                                                                t = t + 1
                                                                continue 
                                                mem[_18410 + 32] = _20689
                                            mem[_18410 + 64] = stor552[stor151[address(arg2)][idx]].field_512
                                            mem[_18410 + 96] = stor552[stor151[address(arg2)][idx]].field_768
                                            mem[_18410 + 128] = stor552[stor151[address(arg2)][idx]].field_1024
                                            mem[_18410 + 160] = stor552[stor151[address(arg2)][idx]].field_1280
                                            mem[_18410 + 192] = bool(uint8(stor552[stor151[address(arg2)][idx]].field_1536))
                                            mem[_18410 + 224] = bool(uint8(stor552[stor151[address(arg2)][idx]].field_1544))
                                            if not uint8(stor552[stor151[address(arg2)][idx]].field_1536):
                                                revert with 0, 'Troops: This troop doesn't exist'
                                            if idx >= mem[ceil32(return_data.size) + 128]:
                                                revert with 0, 50
                                            mem[(32 * idx) + ceil32(return_data.size) + 160] = tokenOfOwnerByIndex[address(arg2)][idx]
                                            if idx == -1:
                                                revert with 0, 17
                                            idx = idx + 1
                                            continue 
                                        idx = 0
                                        s = 0
                                        while idx < mem[ceil32(return_data.size) + 128]:
                                            if idx >= mem[ceil32(return_data.size) + 128]:
                                                revert with 0, 50
                                            mem[0] = mem[(32 * idx) + ceil32(return_data.size) + 160]
                                            mem[32] = 552
                                            if not uint8(stor552[mem[(32 * idx) + ceil32(return_data.size) + 160]].field_1544):
                                                if idx == -1:
                                                    revert with 0, 17
                                                idx = idx + 1
                                                s = s
                                                continue 
                                            if s == -1:
                                                revert with 0, 17
                                            if idx == -1:
                                                revert with 0, 17
                                            idx = idx + 1
                                            s = s + 1
                                            continue 
                                        if s >= 2:
                                            revert with 0, 'Each holder can not hold more than 2 Gladiators'
                                        if not arg1:
                                            stor154[arg3] = tokenByIndex.length
                                            tokenByIndex.length++
                                            stor72A1[stor153.length] = arg3
                                            if arg2:
                                                if arg2 == arg1:
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _36217 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_36217] == Mask(32, 224, mem[_36217])
                                                            if Mask(32, 224, mem[_36217]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _36218 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_36218] == Mask(32, 224, mem[_36218])
                                                            if Mask(32, 224, mem[_36218]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    if not arg2:
                                                        revert with 0, 'ERC721: balance query for the zero address'
                                                    tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                    stor152[arg3] = balanceOf[address(arg2)]
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _36219 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_36219] == Mask(32, 224, mem[_36219])
                                                            if Mask(32, 224, mem[_36219]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _36220 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_36220] == Mask(32, 224, mem[_36220])
                                                            if Mask(32, 224, mem[_36220]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if tokenByIndex.length < 1:
                                                    revert with 0, 17
                                                if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                    revert with 0, 50
                                                if stor154[arg3] >= tokenByIndex.length:
                                                    revert with 0, 50
                                                tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                stor154[stor153[stor153.length]] = stor154[arg3]
                                                stor154[arg3] = 0
                                                if not tokenByIndex.length:
                                                    revert with 0, 49
                                                tokenByIndex[tokenByIndex.length] = 0
                                                tokenByIndex.length--
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _36221 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_36221] == Mask(32, 224, mem[_36221])
                                                        if Mask(32, 224, mem[_36221]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[96] + mem[64] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _36222 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_36222] == Mask(32, 224, mem[_36222])
                                                        if Mask(32, 224, mem[_36222]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            if arg1 == arg2:
                                                if arg2:
                                                    if arg2 == arg1:
                                                        approved[arg3] = 0
                                                        if not ownerOf[arg3]:
                                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                                        emit Approval(ownerOf[arg3], 0, arg3);
                                                        if balanceOf[address(arg1)] < 1:
                                                            revert with 0, 17
                                                        balanceOf[address(arg1)]--
                                                        if balanceOf[address(arg2)] > -2:
                                                            revert with 0, 17
                                                        balanceOf[address(arg2)]++
                                                        mem[0] = arg3
                                                        mem[32] = 103
                                                        ownerOf[arg3] = arg2
                                                        emit Transfer(arg1, arg2, arg3);
                                                        if ext_code.size(arg2):
                                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = msg.sender
                                                            mem[mem[64] + 36] = arg1
                                                            mem[mem[64] + 68] = arg3
                                                            mem[mem[64] + 100] = 128
                                                            mem[mem[64] + 132] = mem[96]
                                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                            if ceil32(mem[96]) <= mem[96]:
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _36199 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_36199] == Mask(32, 224, mem[_36199])
                                                                if Mask(32, 224, mem[_36199]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            else:
                                                                mem[mem[96] + mem[64] + 164] = 0
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _36200 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_36200] == Mask(32, 224, mem[_36200])
                                                                if Mask(32, 224, mem[_36200]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        if not arg2:
                                                            revert with 0, 'ERC721: balance query for the zero address'
                                                        tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                        stor152[arg3] = balanceOf[address(arg2)]
                                                        approved[arg3] = 0
                                                        if not ownerOf[arg3]:
                                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                                        emit Approval(ownerOf[arg3], 0, arg3);
                                                        if balanceOf[address(arg1)] < 1:
                                                            revert with 0, 17
                                                        balanceOf[address(arg1)]--
                                                        if balanceOf[address(arg2)] > -2:
                                                            revert with 0, 17
                                                        balanceOf[address(arg2)]++
                                                        mem[0] = arg3
                                                        mem[32] = 103
                                                        ownerOf[arg3] = arg2
                                                        emit Transfer(arg1, arg2, arg3);
                                                        if ext_code.size(arg2):
                                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = msg.sender
                                                            mem[mem[64] + 36] = arg1
                                                            mem[mem[64] + 68] = arg3
                                                            mem[mem[64] + 100] = 128
                                                            mem[mem[64] + 132] = mem[96]
                                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                            if ceil32(mem[96]) <= mem[96]:
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _36201 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_36201] == Mask(32, 224, mem[_36201])
                                                                if Mask(32, 224, mem[_36201]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            else:
                                                                mem[mem[96] + mem[64] + 164] = 0
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _36202 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_36202] == Mask(32, 224, mem[_36202])
                                                                if Mask(32, 224, mem[_36202]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    if tokenByIndex.length < 1:
                                                        revert with 0, 17
                                                    if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                        revert with 0, 50
                                                    if stor154[arg3] >= tokenByIndex.length:
                                                        revert with 0, 50
                                                    tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                    stor154[stor153[stor153.length]] = stor154[arg3]
                                                    stor154[arg3] = 0
                                                    if not tokenByIndex.length:
                                                        revert with 0, 49
                                                    tokenByIndex[tokenByIndex.length] = 0
                                                    tokenByIndex.length--
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _36203 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_36203] == Mask(32, 224, mem[_36203])
                                                            if Mask(32, 224, mem[_36203]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _36204 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_36204] == Mask(32, 224, mem[_36204])
                                                            if Mask(32, 224, mem[_36204]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if not arg1:
                                                    revert with 0, 'ERC721: balance query for the zero address'
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                if balanceOf[address(arg1)] - 1 == stor152[arg3]:
                                                    stor152[arg3] = 0
                                                    tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                                                    if arg2:
                                                        if arg2 == arg1:
                                                            approved[arg3] = 0
                                                            if not ownerOf[arg3]:
                                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                                            emit Approval(ownerOf[arg3], 0, arg3);
                                                            if balanceOf[address(arg1)] < 1:
                                                                revert with 0, 17
                                                            balanceOf[address(arg1)]--
                                                            if balanceOf[address(arg2)] > -2:
                                                                revert with 0, 17
                                                            balanceOf[address(arg2)]++
                                                            mem[0] = arg3
                                                            mem[32] = 103
                                                            ownerOf[arg3] = arg2
                                                            emit Transfer(arg1, arg2, arg3);
                                                            if ext_code.size(arg2):
                                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = msg.sender
                                                                mem[mem[64] + 36] = arg1
                                                                mem[mem[64] + 68] = arg3
                                                                mem[mem[64] + 100] = 128
                                                                mem[mem[64] + 132] = mem[96]
                                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                                if ceil32(mem[96]) <= mem[96]:
                                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                         gas gas_remaining wei
                                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                    mem[mem[64]] = ext_call.return_data[0]
                                                                    if not ext_call.success:
                                                                        if not return_data.size:
                                                                            if not mem[96]:
                                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                            revert with memory
                                                                              from 128
                                                                               len mem[96]
                                                                        if not return_data.size:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    _36205 = mem[64]
                                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                                    require return_data.size >= 32
                                                                    require mem[_36205] == Mask(32, 224, mem[_36205])
                                                                    if Mask(32, 224, mem[_36205]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                else:
                                                                    mem[mem[96] + mem[64] + 164] = 0
                                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                         gas gas_remaining wei
                                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                    mem[mem[64]] = ext_call.return_data[0]
                                                                    if not ext_call.success:
                                                                        if not return_data.size:
                                                                            if not mem[96]:
                                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                            revert with memory
                                                                              from 128
                                                                               len mem[96]
                                                                        if not return_data.size:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    _36206 = mem[64]
                                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                                    require return_data.size >= 32
                                                                    require mem[_36206] == Mask(32, 224, mem[_36206])
                                                                    if Mask(32, 224, mem[_36206]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            if not arg2:
                                                                revert with 0, 'ERC721: balance query for the zero address'
                                                            tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                            stor152[arg3] = balanceOf[address(arg2)]
                                                            approved[arg3] = 0
                                                            if not ownerOf[arg3]:
                                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                                            emit Approval(ownerOf[arg3], 0, arg3);
                                                            if balanceOf[address(arg1)] < 1:
                                                                revert with 0, 17
                                                            balanceOf[address(arg1)]--
                                                            if balanceOf[address(arg2)] > -2:
                                                                revert with 0, 17
                                                            balanceOf[address(arg2)]++
                                                            mem[0] = arg3
                                                            mem[32] = 103
                                                            ownerOf[arg3] = arg2
                                                            emit Transfer(arg1, arg2, arg3);
                                                            if ext_code.size(arg2):
                                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = msg.sender
                                                                mem[mem[64] + 36] = arg1
                                                                mem[mem[64] + 68] = arg3
                                                                mem[mem[64] + 100] = 128
                                                                mem[mem[64] + 132] = mem[96]
                                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                                if ceil32(mem[96]) <= mem[96]:
                                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                         gas gas_remaining wei
                                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                    mem[mem[64]] = ext_call.return_data[0]
                                                                    if not ext_call.success:
                                                                        if not return_data.size:
                                                                            if not mem[96]:
                                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                            revert with memory
                                                                              from 128
                                                                               len mem[96]
                                                                        if not return_data.size:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    _36207 = mem[64]
                                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                                    require return_data.size >= 32
                                                                    require mem[_36207] == Mask(32, 224, mem[_36207])
                                                                    if Mask(32, 224, mem[_36207]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                else:
                                                                    mem[mem[96] + mem[64] + 164] = 0
                                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                         gas gas_remaining wei
                                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                    mem[mem[64]] = ext_call.return_data[0]
                                                                    if not ext_call.success:
                                                                        if not return_data.size:
                                                                            if not mem[96]:
                                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                            revert with memory
                                                                              from 128
                                                                               len mem[96]
                                                                        if not return_data.size:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    _36208 = mem[64]
                                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                                    require return_data.size >= 32
                                                                    require mem[_36208] == Mask(32, 224, mem[_36208])
                                                                    if Mask(32, 224, mem[_36208]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        if tokenByIndex.length < 1:
                                                            revert with 0, 17
                                                        if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                            revert with 0, 50
                                                        if stor154[arg3] >= tokenByIndex.length:
                                                            revert with 0, 50
                                                        tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                        stor154[stor153[stor153.length]] = stor154[arg3]
                                                        stor154[arg3] = 0
                                                        if not tokenByIndex.length:
                                                            revert with 0, 49
                                                        tokenByIndex[tokenByIndex.length] = 0
                                                        tokenByIndex.length--
                                                        approved[arg3] = 0
                                                        if not ownerOf[arg3]:
                                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                                        emit Approval(ownerOf[arg3], 0, arg3);
                                                        if balanceOf[address(arg1)] < 1:
                                                            revert with 0, 17
                                                        balanceOf[address(arg1)]--
                                                        if balanceOf[address(arg2)] > -2:
                                                            revert with 0, 17
                                                        balanceOf[address(arg2)]++
                                                        mem[0] = arg3
                                                        mem[32] = 103
                                                        ownerOf[arg3] = arg2
                                                        emit Transfer(arg1, arg2, arg3);
                                                        if ext_code.size(arg2):
                                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = msg.sender
                                                            mem[mem[64] + 36] = arg1
                                                            mem[mem[64] + 68] = arg3
                                                            mem[mem[64] + 100] = 128
                                                            mem[mem[64] + 132] = mem[96]
                                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                            if ceil32(mem[96]) <= mem[96]:
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _36209 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_36209] == Mask(32, 224, mem[_36209])
                                                                if Mask(32, 224, mem[_36209]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            else:
                                                                mem[mem[96] + mem[64] + 164] = 0
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _36210 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_36210] == Mask(32, 224, mem[_36210])
                                                                if Mask(32, 224, mem[_36210]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    tokenOfOwnerByIndex[address(arg1)][stor152[arg3]] = tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1]
                                                    stor152[stor151[address(arg1)][stor104[address(arg1)] - 1]] = stor152[arg3]
                                                    stor152[arg3] = 0
                                                    tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                                                    if arg2:
                                                        if arg2 == arg1:
                                                            approved[arg3] = 0
                                                            if not ownerOf[arg3]:
                                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                                            emit Approval(ownerOf[arg3], 0, arg3);
                                                            if balanceOf[address(arg1)] < 1:
                                                                revert with 0, 17
                                                            balanceOf[address(arg1)]--
                                                            if balanceOf[address(arg2)] > -2:
                                                                revert with 0, 17
                                                            balanceOf[address(arg2)]++
                                                            mem[0] = arg3
                                                            mem[32] = 103
                                                            ownerOf[arg3] = arg2
                                                            emit Transfer(arg1, arg2, arg3);
                                                            if ext_code.size(arg2):
                                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = msg.sender
                                                                mem[mem[64] + 36] = arg1
                                                                mem[mem[64] + 68] = arg3
                                                                mem[mem[64] + 100] = 128
                                                                mem[mem[64] + 132] = mem[96]
                                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                                if ceil32(mem[96]) <= mem[96]:
                                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                         gas gas_remaining wei
                                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                    mem[mem[64]] = ext_call.return_data[0]
                                                                    if not ext_call.success:
                                                                        if not return_data.size:
                                                                            if not mem[96]:
                                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                            revert with memory
                                                                              from 128
                                                                               len mem[96]
                                                                        if not return_data.size:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    _36211 = mem[64]
                                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                                    require return_data.size >= 32
                                                                    require mem[_36211] == Mask(32, 224, mem[_36211])
                                                                    if Mask(32, 224, mem[_36211]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                else:
                                                                    mem[mem[96] + mem[64] + 164] = 0
                                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                         gas gas_remaining wei
                                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                    mem[mem[64]] = ext_call.return_data[0]
                                                                    if not ext_call.success:
                                                                        if not return_data.size:
                                                                            if not mem[96]:
                                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                            revert with memory
                                                                              from 128
                                                                               len mem[96]
                                                                        if not return_data.size:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    _36212 = mem[64]
                                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                                    require return_data.size >= 32
                                                                    require mem[_36212] == Mask(32, 224, mem[_36212])
                                                                    if Mask(32, 224, mem[_36212]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            if not arg2:
                                                                revert with 0, 'ERC721: balance query for the zero address'
                                                            tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                            stor152[arg3] = balanceOf[address(arg2)]
                                                            approved[arg3] = 0
                                                            if not ownerOf[arg3]:
                                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                                            emit Approval(ownerOf[arg3], 0, arg3);
                                                            if balanceOf[address(arg1)] < 1:
                                                                revert with 0, 17
                                                            balanceOf[address(arg1)]--
                                                            if balanceOf[address(arg2)] > -2:
                                                                revert with 0, 17
                                                            balanceOf[address(arg2)]++
                                                            mem[0] = arg3
                                                            mem[32] = 103
                                                            ownerOf[arg3] = arg2
                                                            emit Transfer(arg1, arg2, arg3);
                                                            if ext_code.size(arg2):
                                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = msg.sender
                                                                mem[mem[64] + 36] = arg1
                                                                mem[mem[64] + 68] = arg3
                                                                mem[mem[64] + 100] = 128
                                                                mem[mem[64] + 132] = mem[96]
                                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                                if ceil32(mem[96]) <= mem[96]:
                                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                         gas gas_remaining wei
                                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                    mem[mem[64]] = ext_call.return_data[0]
                                                                    if not ext_call.success:
                                                                        if not return_data.size:
                                                                            if not mem[96]:
                                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                            revert with memory
                                                                              from 128
                                                                               len mem[96]
                                                                        if not return_data.size:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    _36213 = mem[64]
                                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                                    require return_data.size >= 32
                                                                    require mem[_36213] == Mask(32, 224, mem[_36213])
                                                                    if Mask(32, 224, mem[_36213]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                else:
                                                                    mem[mem[96] + mem[64] + 164] = 0
                                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                         gas gas_remaining wei
                                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                    mem[mem[64]] = ext_call.return_data[0]
                                                                    if not ext_call.success:
                                                                        if not return_data.size:
                                                                            if not mem[96]:
                                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                            revert with memory
                                                                              from 128
                                                                               len mem[96]
                                                                        if not return_data.size:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    _36214 = mem[64]
                                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                                    require return_data.size >= 32
                                                                    require mem[_36214] == Mask(32, 224, mem[_36214])
                                                                    if Mask(32, 224, mem[_36214]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        if tokenByIndex.length < 1:
                                                            revert with 0, 17
                                                        if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                            revert with 0, 50
                                                        if stor154[arg3] >= tokenByIndex.length:
                                                            revert with 0, 50
                                                        tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                        stor154[stor153[stor153.length]] = stor154[arg3]
                                                        stor154[arg3] = 0
                                                        if not tokenByIndex.length:
                                                            revert with 0, 49
                                                        tokenByIndex[tokenByIndex.length] = 0
                                                        tokenByIndex.length--
                                                        approved[arg3] = 0
                                                        if not ownerOf[arg3]:
                                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                                        emit Approval(ownerOf[arg3], 0, arg3);
                                                        if balanceOf[address(arg1)] < 1:
                                                            revert with 0, 17
                                                        balanceOf[address(arg1)]--
                                                        if balanceOf[address(arg2)] > -2:
                                                            revert with 0, 17
                                                        balanceOf[address(arg2)]++
                                                        mem[0] = arg3
                                                        mem[32] = 103
                                                        ownerOf[arg3] = arg2
                                                        emit Transfer(arg1, arg2, arg3);
                                                        if ext_code.size(arg2):
                                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = msg.sender
                                                            mem[mem[64] + 36] = arg1
                                                            mem[mem[64] + 68] = arg3
                                                            mem[mem[64] + 100] = 128
                                                            mem[mem[64] + 132] = mem[96]
                                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                            if ceil32(mem[96]) <= mem[96]:
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _36215 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_36215] == Mask(32, 224, mem[_36215])
                                                                if Mask(32, 224, mem[_36215]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            else:
                                                                mem[mem[96] + mem[64] + 164] = 0
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _36216 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_36216] == Mask(32, 224, mem[_36216])
                                                                if Mask(32, 224, mem[_36216]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                    else:
                                        mem[ceil32(return_data.size) + 160 len 32 * balanceOf[address(arg2)]] = call.data[calldata.size len 32 * balanceOf[address(arg2)]]
                                        idx = 0
                                        while idx < balanceOf[address(arg2)]:
                                            if not arg2:
                                                revert with 0, 'ERC721: balance query for the zero address'
                                            if idx >= balanceOf[address(arg2)]:
                                                revert with 0, 'ERC721Enumerable: owner index out of bounds'
                                            if tokenOfOwnerByIndex[address(arg2)][idx] <= 0:
                                                revert with 0, 'Troops: Id must be higher than zero'
                                            mem[0] = tokenOfOwnerByIndex[address(arg2)][idx]
                                            mem[32] = 552
                                            _18413 = mem[64]
                                            mem[64] = mem[64] + 256
                                            mem[_18413] = stor552[stor151[address(arg2)][idx]].field_0
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                                if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                                    revert with 0, 34
                                                _20634 = mem[64]
                                                mem[64] = mem[64] + ceil32(uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) + 32
                                                mem[_20634] = uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5
                                                if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                                    if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                                        revert with 0, 34
                                                    if Mask(256, -1, stor552[stor151[address(arg2)][idx]].field_256):
                                                        if 31 >= uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5:
                                                            mem[_20634 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                        else:
                                                            mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                            mem[_20634 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                            s = _20634 + 32
                                                            t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                            while _20634 + (uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) > s:
                                                                mem[s + 32] = stor1[t].field_0
                                                                s = s + 32
                                                                t = t + 1
                                                                continue 
                                                else:
                                                    if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                                        revert with 0, 34
                                                    if stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                        if 31 >= stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                            mem[_20634 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                        else:
                                                            mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                            mem[_20634 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                            s = _20634 + 32
                                                            t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                            while _20634 + stor552[stor151[address(arg2)][idx]].field_257 % 128 > s:
                                                                mem[s + 32] = stor1[t].field_0
                                                                s = s + 32
                                                                t = t + 1
                                                                continue 
                                                mem[_18413 + 32] = _20634
                                            else:
                                                if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                                    revert with 0, 34
                                                _20694 = mem[64]
                                                mem[64] = mem[64] + ceil32(stor552[stor151[address(arg2)][idx]].field_257 % 128) + 32
                                                mem[_20694] = stor552[stor151[address(arg2)][idx]].field_257 % 128
                                                if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                                    if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                                        revert with 0, 34
                                                    if Mask(256, -1, stor552[stor151[address(arg2)][idx]].field_256):
                                                        if 31 >= uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5:
                                                            mem[_20694 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                        else:
                                                            mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                            mem[_20694 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                            s = _20694 + 32
                                                            t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                            while _20694 + (uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) > s:
                                                                mem[s + 32] = stor1[t].field_0
                                                                s = s + 32
                                                                t = t + 1
                                                                continue 
                                                else:
                                                    if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                                        revert with 0, 34
                                                    if stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                        if 31 >= stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                            mem[_20694 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                        else:
                                                            mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                            mem[_20694 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                            s = _20694 + 32
                                                            t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                            while _20694 + stor552[stor151[address(arg2)][idx]].field_257 % 128 > s:
                                                                mem[s + 32] = stor1[t].field_0
                                                                s = s + 32
                                                                t = t + 1
                                                                continue 
                                                mem[_18413 + 32] = _20694
                                            mem[_18413 + 64] = stor552[stor151[address(arg2)][idx]].field_512
                                            mem[_18413 + 96] = stor552[stor151[address(arg2)][idx]].field_768
                                            mem[_18413 + 128] = stor552[stor151[address(arg2)][idx]].field_1024
                                            mem[_18413 + 160] = stor552[stor151[address(arg2)][idx]].field_1280
                                            mem[_18413 + 192] = bool(uint8(stor552[stor151[address(arg2)][idx]].field_1536))
                                            mem[_18413 + 224] = bool(uint8(stor552[stor151[address(arg2)][idx]].field_1544))
                                            if not uint8(stor552[stor151[address(arg2)][idx]].field_1536):
                                                revert with 0, 'Troops: This troop doesn't exist'
                                            if idx >= mem[ceil32(return_data.size) + 128]:
                                                revert with 0, 50
                                            mem[(32 * idx) + ceil32(return_data.size) + 160] = tokenOfOwnerByIndex[address(arg2)][idx]
                                            if idx == -1:
                                                revert with 0, 17
                                            idx = idx + 1
                                            continue 
                                        idx = 0
                                        s = 0
                                        while idx < mem[ceil32(return_data.size) + 128]:
                                            if idx >= mem[ceil32(return_data.size) + 128]:
                                                revert with 0, 50
                                            mem[0] = mem[(32 * idx) + ceil32(return_data.size) + 160]
                                            mem[32] = 552
                                            if not uint8(stor552[mem[(32 * idx) + ceil32(return_data.size) + 160]].field_1544):
                                                if idx == -1:
                                                    revert with 0, 17
                                                idx = idx + 1
                                                s = s
                                                continue 
                                            if s == -1:
                                                revert with 0, 17
                                            if idx == -1:
                                                revert with 0, 17
                                            idx = idx + 1
                                            s = s + 1
                                            continue 
                                        if s >= 2:
                                            revert with 0, 'Each holder can not hold more than 2 Gladiators'
                                        if not arg1:
                                            stor154[arg3] = tokenByIndex.length
                                            tokenByIndex.length++
                                            stor72A1[stor153.length] = arg3
                                            if arg2:
                                                if arg2 == arg1:
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _36241 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_36241] == Mask(32, 224, mem[_36241])
                                                            if Mask(32, 224, mem[_36241]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _36242 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_36242] == Mask(32, 224, mem[_36242])
                                                            if Mask(32, 224, mem[_36242]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    if not arg2:
                                                        revert with 0, 'ERC721: balance query for the zero address'
                                                    tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                    stor152[arg3] = balanceOf[address(arg2)]
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _36243 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_36243] == Mask(32, 224, mem[_36243])
                                                            if Mask(32, 224, mem[_36243]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _36244 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_36244] == Mask(32, 224, mem[_36244])
                                                            if Mask(32, 224, mem[_36244]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if tokenByIndex.length < 1:
                                                    revert with 0, 17
                                                if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                    revert with 0, 50
                                                if stor154[arg3] >= tokenByIndex.length:
                                                    revert with 0, 50
                                                tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                stor154[stor153[stor153.length]] = stor154[arg3]
                                                stor154[arg3] = 0
                                                if not tokenByIndex.length:
                                                    revert with 0, 49
                                                tokenByIndex[tokenByIndex.length] = 0
                                                tokenByIndex.length--
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _36245 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_36245] == Mask(32, 224, mem[_36245])
                                                        if Mask(32, 224, mem[_36245]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[96] + mem[64] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _36246 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_36246] == Mask(32, 224, mem[_36246])
                                                        if Mask(32, 224, mem[_36246]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            if arg1 == arg2:
                                                if arg2:
                                                    if arg2 == arg1:
                                                        approved[arg3] = 0
                                                        if not ownerOf[arg3]:
                                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                                        emit Approval(ownerOf[arg3], 0, arg3);
                                                        if balanceOf[address(arg1)] < 1:
                                                            revert with 0, 17
                                                        balanceOf[address(arg1)]--
                                                        if balanceOf[address(arg2)] > -2:
                                                            revert with 0, 17
                                                        balanceOf[address(arg2)]++
                                                        mem[0] = arg3
                                                        mem[32] = 103
                                                        ownerOf[arg3] = arg2
                                                        emit Transfer(arg1, arg2, arg3);
                                                        if ext_code.size(arg2):
                                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = msg.sender
                                                            mem[mem[64] + 36] = arg1
                                                            mem[mem[64] + 68] = arg3
                                                            mem[mem[64] + 100] = 128
                                                            mem[mem[64] + 132] = mem[96]
                                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                            if ceil32(mem[96]) <= mem[96]:
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _36223 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_36223] == Mask(32, 224, mem[_36223])
                                                                if Mask(32, 224, mem[_36223]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            else:
                                                                mem[mem[96] + mem[64] + 164] = 0
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _36224 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_36224] == Mask(32, 224, mem[_36224])
                                                                if Mask(32, 224, mem[_36224]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        if not arg2:
                                                            revert with 0, 'ERC721: balance query for the zero address'
                                                        tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                        stor152[arg3] = balanceOf[address(arg2)]
                                                        approved[arg3] = 0
                                                        if not ownerOf[arg3]:
                                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                                        emit Approval(ownerOf[arg3], 0, arg3);
                                                        if balanceOf[address(arg1)] < 1:
                                                            revert with 0, 17
                                                        balanceOf[address(arg1)]--
                                                        if balanceOf[address(arg2)] > -2:
                                                            revert with 0, 17
                                                        balanceOf[address(arg2)]++
                                                        mem[0] = arg3
                                                        mem[32] = 103
                                                        ownerOf[arg3] = arg2
                                                        emit Transfer(arg1, arg2, arg3);
                                                        if ext_code.size(arg2):
                                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = msg.sender
                                                            mem[mem[64] + 36] = arg1
                                                            mem[mem[64] + 68] = arg3
                                                            mem[mem[64] + 100] = 128
                                                            mem[mem[64] + 132] = mem[96]
                                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                            if ceil32(mem[96]) <= mem[96]:
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _36225 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_36225] == Mask(32, 224, mem[_36225])
                                                                if Mask(32, 224, mem[_36225]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            else:
                                                                mem[mem[96] + mem[64] + 164] = 0
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _36226 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_36226] == Mask(32, 224, mem[_36226])
                                                                if Mask(32, 224, mem[_36226]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    if tokenByIndex.length < 1:
                                                        revert with 0, 17
                                                    if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                        revert with 0, 50
                                                    if stor154[arg3] >= tokenByIndex.length:
                                                        revert with 0, 50
                                                    tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                    stor154[stor153[stor153.length]] = stor154[arg3]
                                                    stor154[arg3] = 0
                                                    if not tokenByIndex.length:
                                                        revert with 0, 49
                                                    tokenByIndex[tokenByIndex.length] = 0
                                                    tokenByIndex.length--
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _36227 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_36227] == Mask(32, 224, mem[_36227])
                                                            if Mask(32, 224, mem[_36227]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _36228 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_36228] == Mask(32, 224, mem[_36228])
                                                            if Mask(32, 224, mem[_36228]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if not arg1:
                                                    revert with 0, 'ERC721: balance query for the zero address'
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                if balanceOf[address(arg1)] - 1 == stor152[arg3]:
                                                    stor152[arg3] = 0
                                                    tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                                                    if arg2:
                                                        if arg2 == arg1:
                                                            approved[arg3] = 0
                                                            if not ownerOf[arg3]:
                                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                                            emit Approval(ownerOf[arg3], 0, arg3);
                                                            if balanceOf[address(arg1)] < 1:
                                                                revert with 0, 17
                                                            balanceOf[address(arg1)]--
                                                            if balanceOf[address(arg2)] > -2:
                                                                revert with 0, 17
                                                            balanceOf[address(arg2)]++
                                                            mem[0] = arg3
                                                            mem[32] = 103
                                                            ownerOf[arg3] = arg2
                                                            emit Transfer(arg1, arg2, arg3);
                                                            if ext_code.size(arg2):
                                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = msg.sender
                                                                mem[mem[64] + 36] = arg1
                                                                mem[mem[64] + 68] = arg3
                                                                mem[mem[64] + 100] = 128
                                                                mem[mem[64] + 132] = mem[96]
                                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                                if ceil32(mem[96]) <= mem[96]:
                                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                         gas gas_remaining wei
                                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                    mem[mem[64]] = ext_call.return_data[0]
                                                                    if not ext_call.success:
                                                                        if not return_data.size:
                                                                            if not mem[96]:
                                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                            revert with memory
                                                                              from 128
                                                                               len mem[96]
                                                                        if not return_data.size:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    _36229 = mem[64]
                                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                                    require return_data.size >= 32
                                                                    require mem[_36229] == Mask(32, 224, mem[_36229])
                                                                    if Mask(32, 224, mem[_36229]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                else:
                                                                    mem[mem[96] + mem[64] + 164] = 0
                                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                         gas gas_remaining wei
                                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                    mem[mem[64]] = ext_call.return_data[0]
                                                                    if not ext_call.success:
                                                                        if not return_data.size:
                                                                            if not mem[96]:
                                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                            revert with memory
                                                                              from 128
                                                                               len mem[96]
                                                                        if not return_data.size:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    _36230 = mem[64]
                                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                                    require return_data.size >= 32
                                                                    require mem[_36230] == Mask(32, 224, mem[_36230])
                                                                    if Mask(32, 224, mem[_36230]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            if not arg2:
                                                                revert with 0, 'ERC721: balance query for the zero address'
                                                            tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                            stor152[arg3] = balanceOf[address(arg2)]
                                                            approved[arg3] = 0
                                                            if not ownerOf[arg3]:
                                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                                            emit Approval(ownerOf[arg3], 0, arg3);
                                                            if balanceOf[address(arg1)] < 1:
                                                                revert with 0, 17
                                                            balanceOf[address(arg1)]--
                                                            if balanceOf[address(arg2)] > -2:
                                                                revert with 0, 17
                                                            balanceOf[address(arg2)]++
                                                            mem[0] = arg3
                                                            mem[32] = 103
                                                            ownerOf[arg3] = arg2
                                                            emit Transfer(arg1, arg2, arg3);
                                                            if ext_code.size(arg2):
                                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = msg.sender
                                                                mem[mem[64] + 36] = arg1
                                                                mem[mem[64] + 68] = arg3
                                                                mem[mem[64] + 100] = 128
                                                                mem[mem[64] + 132] = mem[96]
                                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                                if ceil32(mem[96]) <= mem[96]:
                                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                         gas gas_remaining wei
                                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                    mem[mem[64]] = ext_call.return_data[0]
                                                                    if not ext_call.success:
                                                                        if not return_data.size:
                                                                            if not mem[96]:
                                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                            revert with memory
                                                                              from 128
                                                                               len mem[96]
                                                                        if not return_data.size:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    _36231 = mem[64]
                                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                                    require return_data.size >= 32
                                                                    require mem[_36231] == Mask(32, 224, mem[_36231])
                                                                    if Mask(32, 224, mem[_36231]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                else:
                                                                    mem[mem[96] + mem[64] + 164] = 0
                                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                         gas gas_remaining wei
                                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                    mem[mem[64]] = ext_call.return_data[0]
                                                                    if not ext_call.success:
                                                                        if not return_data.size:
                                                                            if not mem[96]:
                                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                            revert with memory
                                                                              from 128
                                                                               len mem[96]
                                                                        if not return_data.size:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    _36232 = mem[64]
                                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                                    require return_data.size >= 32
                                                                    require mem[_36232] == Mask(32, 224, mem[_36232])
                                                                    if Mask(32, 224, mem[_36232]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        if tokenByIndex.length < 1:
                                                            revert with 0, 17
                                                        if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                            revert with 0, 50
                                                        if stor154[arg3] >= tokenByIndex.length:
                                                            revert with 0, 50
                                                        tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                        stor154[stor153[stor153.length]] = stor154[arg3]
                                                        stor154[arg3] = 0
                                                        if not tokenByIndex.length:
                                                            revert with 0, 49
                                                        tokenByIndex[tokenByIndex.length] = 0
                                                        tokenByIndex.length--
                                                        approved[arg3] = 0
                                                        if not ownerOf[arg3]:
                                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                                        emit Approval(ownerOf[arg3], 0, arg3);
                                                        if balanceOf[address(arg1)] < 1:
                                                            revert with 0, 17
                                                        balanceOf[address(arg1)]--
                                                        if balanceOf[address(arg2)] > -2:
                                                            revert with 0, 17
                                                        balanceOf[address(arg2)]++
                                                        mem[0] = arg3
                                                        mem[32] = 103
                                                        ownerOf[arg3] = arg2
                                                        emit Transfer(arg1, arg2, arg3);
                                                        if ext_code.size(arg2):
                                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = msg.sender
                                                            mem[mem[64] + 36] = arg1
                                                            mem[mem[64] + 68] = arg3
                                                            mem[mem[64] + 100] = 128
                                                            mem[mem[64] + 132] = mem[96]
                                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                            if ceil32(mem[96]) <= mem[96]:
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _36233 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_36233] == Mask(32, 224, mem[_36233])
                                                                if Mask(32, 224, mem[_36233]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            else:
                                                                mem[mem[96] + mem[64] + 164] = 0
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _36234 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_36234] == Mask(32, 224, mem[_36234])
                                                                if Mask(32, 224, mem[_36234]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    tokenOfOwnerByIndex[address(arg1)][stor152[arg3]] = tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1]
                                                    stor152[stor151[address(arg1)][stor104[address(arg1)] - 1]] = stor152[arg3]
                                                    stor152[arg3] = 0
                                                    tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                                                    if arg2:
                                                        if arg2 == arg1:
                                                            approved[arg3] = 0
                                                            if not ownerOf[arg3]:
                                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                                            emit Approval(ownerOf[arg3], 0, arg3);
                                                            if balanceOf[address(arg1)] < 1:
                                                                revert with 0, 17
                                                            balanceOf[address(arg1)]--
                                                            if balanceOf[address(arg2)] > -2:
                                                                revert with 0, 17
                                                            balanceOf[address(arg2)]++
                                                            mem[0] = arg3
                                                            mem[32] = 103
                                                            ownerOf[arg3] = arg2
                                                            emit Transfer(arg1, arg2, arg3);
                                                            if ext_code.size(arg2):
                                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = msg.sender
                                                                mem[mem[64] + 36] = arg1
                                                                mem[mem[64] + 68] = arg3
                                                                mem[mem[64] + 100] = 128
                                                                mem[mem[64] + 132] = mem[96]
                                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                                if ceil32(mem[96]) <= mem[96]:
                                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                         gas gas_remaining wei
                                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                    mem[mem[64]] = ext_call.return_data[0]
                                                                    if not ext_call.success:
                                                                        if not return_data.size:
                                                                            if not mem[96]:
                                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                            revert with memory
                                                                              from 128
                                                                               len mem[96]
                                                                        if not return_data.size:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    _36235 = mem[64]
                                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                                    require return_data.size >= 32
                                                                    require mem[_36235] == Mask(32, 224, mem[_36235])
                                                                    if Mask(32, 224, mem[_36235]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                else:
                                                                    mem[mem[96] + mem[64] + 164] = 0
                                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                         gas gas_remaining wei
                                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                    mem[mem[64]] = ext_call.return_data[0]
                                                                    if not ext_call.success:
                                                                        if not return_data.size:
                                                                            if not mem[96]:
                                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                            revert with memory
                                                                              from 128
                                                                               len mem[96]
                                                                        if not return_data.size:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    _36236 = mem[64]
                                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                                    require return_data.size >= 32
                                                                    require mem[_36236] == Mask(32, 224, mem[_36236])
                                                                    if Mask(32, 224, mem[_36236]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            if not arg2:
                                                                revert with 0, 'ERC721: balance query for the zero address'
                                                            tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                            stor152[arg3] = balanceOf[address(arg2)]
                                                            approved[arg3] = 0
                                                            if not ownerOf[arg3]:
                                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                                            emit Approval(ownerOf[arg3], 0, arg3);
                                                            if balanceOf[address(arg1)] < 1:
                                                                revert with 0, 17
                                                            balanceOf[address(arg1)]--
                                                            if balanceOf[address(arg2)] > -2:
                                                                revert with 0, 17
                                                            balanceOf[address(arg2)]++
                                                            mem[0] = arg3
                                                            mem[32] = 103
                                                            ownerOf[arg3] = arg2
                                                            emit Transfer(arg1, arg2, arg3);
                                                            if ext_code.size(arg2):
                                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = msg.sender
                                                                mem[mem[64] + 36] = arg1
                                                                mem[mem[64] + 68] = arg3
                                                                mem[mem[64] + 100] = 128
                                                                mem[mem[64] + 132] = mem[96]
                                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                                if ceil32(mem[96]) <= mem[96]:
                                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                         gas gas_remaining wei
                                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                    mem[mem[64]] = ext_call.return_data[0]
                                                                    if not ext_call.success:
                                                                        if not return_data.size:
                                                                            if not mem[96]:
                                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                            revert with memory
                                                                              from 128
                                                                               len mem[96]
                                                                        if not return_data.size:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    _36237 = mem[64]
                                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                                    require return_data.size >= 32
                                                                    require mem[_36237] == Mask(32, 224, mem[_36237])
                                                                    if Mask(32, 224, mem[_36237]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                else:
                                                                    mem[mem[96] + mem[64] + 164] = 0
                                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                         gas gas_remaining wei
                                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                    mem[mem[64]] = ext_call.return_data[0]
                                                                    if not ext_call.success:
                                                                        if not return_data.size:
                                                                            if not mem[96]:
                                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                            revert with memory
                                                                              from 128
                                                                               len mem[96]
                                                                        if not return_data.size:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    _36238 = mem[64]
                                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                                    require return_data.size >= 32
                                                                    require mem[_36238] == Mask(32, 224, mem[_36238])
                                                                    if Mask(32, 224, mem[_36238]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        if tokenByIndex.length < 1:
                                                            revert with 0, 17
                                                        if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                            revert with 0, 50
                                                        if stor154[arg3] >= tokenByIndex.length:
                                                            revert with 0, 50
                                                        tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                        stor154[stor153[stor153.length]] = stor154[arg3]
                                                        stor154[arg3] = 0
                                                        if not tokenByIndex.length:
                                                            revert with 0, 49
                                                        tokenByIndex[tokenByIndex.length] = 0
                                                        tokenByIndex.length--
                                                        approved[arg3] = 0
                                                        if not ownerOf[arg3]:
                                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                                        emit Approval(ownerOf[arg3], 0, arg3);
                                                        if balanceOf[address(arg1)] < 1:
                                                            revert with 0, 17
                                                        balanceOf[address(arg1)]--
                                                        if balanceOf[address(arg2)] > -2:
                                                            revert with 0, 17
                                                        balanceOf[address(arg2)]++
                                                        mem[0] = arg3
                                                        mem[32] = 103
                                                        ownerOf[arg3] = arg2
                                                        emit Transfer(arg1, arg2, arg3);
                                                        if ext_code.size(arg2):
                                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = msg.sender
                                                            mem[mem[64] + 36] = arg1
                                                            mem[mem[64] + 68] = arg3
                                                            mem[mem[64] + 100] = 128
                                                            mem[mem[64] + 132] = mem[96]
                                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                            if ceil32(mem[96]) <= mem[96]:
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _36239 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_36239] == Mask(32, 224, mem[_36239])
                                                                if Mask(32, 224, mem[_36239]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            else:
                                                                mem[mem[96] + mem[64] + 164] = 0
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _36240 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_36240] == Mask(32, 224, mem[_36240])
                                                                if Mask(32, 224, mem[_36240]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
}

function safeTransferFrom(address arg1, address arg2, uint256 arg3, bytes arg4) payable {
    require calldata.size - 4 >= 128
    require arg1 == arg1
    require arg2 == arg2
    require arg4 <= test266151307()
    require calldata.size > arg4 + 35
    if arg4.length > test266151307():
        revert with 0, 65
    if ceil32(ceil32(arg4.length)) + 97 < 96 or ceil32(ceil32(arg4.length)) + 97 > test266151307():
        revert with 0, 65
    mem[96] = arg4.length
    require arg4 + arg4.length + 36 <= calldata.size
    mem[128 len arg4.length] = arg4[all]
    mem[arg4.length + 128] = 0
    if not ownerOf[arg3]:
        revert with 0, 'ERC721: operator query for nonexistent token'
    if not ownerOf[arg3]:
        revert with 0, 'ERC721: owner query for nonexistent token'
    if msg.sender == ownerOf[arg3]:
        if not ownerOf[arg3]:
            revert with 0, 'ERC721: owner query for nonexistent token'
        if ownerOf[arg3] != arg1:
            revert with 0, 'ERC721: transfer from incorrect owner'
        if not arg2:
            revert with 0, 'ERC721: transfer to the zero address'
        if paused:
            revert with 0, 'Pausable: paused'
        if not arg2:
            if not arg1:
                stor154[arg3] = tokenByIndex.length
                tokenByIndex.length++
                stor72A1[stor153.length] = arg3
            else:
                if arg1 != arg2:
                    if not arg1:
                        revert with 0, 'ERC721: balance query for the zero address'
                    if balanceOf[address(arg1)] < 1:
                        revert with 0, 17
                    if balanceOf[address(arg1)] - 1 != stor152[arg3]:
                        tokenOfOwnerByIndex[address(arg1)][stor152[arg3]] = tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1]
                        stor152[stor151[address(arg1)][stor104[address(arg1)] - 1]] = stor152[arg3]
                    stor152[arg3] = 0
                    tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
            if arg2:
                if arg2 != arg1:
                    if not arg2:
                        revert with 0, 'ERC721: balance query for the zero address'
                    tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                    stor152[arg3] = balanceOf[address(arg2)]
            else:
                if tokenByIndex.length < 1:
                    revert with 0, 17
                if tokenByIndex.length - 1 >= tokenByIndex.length:
                    revert with 0, 50
                if stor154[arg3] >= tokenByIndex.length:
                    revert with 0, 50
                tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                stor154[stor153[stor153.length]] = stor154[arg3]
                stor154[arg3] = 0
                if not tokenByIndex.length:
                    revert with 0, 49
                tokenByIndex[tokenByIndex.length] = 0
                tokenByIndex.length--
            approved[arg3] = 0
            if not ownerOf[arg3]:
                revert with 0, 'ERC721: owner query for nonexistent token'
            emit Approval(ownerOf[arg3], 0, arg3);
            if balanceOf[address(arg1)] < 1:
                revert with 0, 17
            balanceOf[address(arg1)]--
            if balanceOf[address(arg2)] > -2:
                revert with 0, 17
            balanceOf[address(arg2)]++
            ownerOf[arg3] = arg2
            emit Transfer(arg1, arg2, arg3);
            if ext_code.size(arg2):
                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                     gas gas_remaining wei
                    args msg.sender, address(arg1), arg3, Array(len=arg4.length, data=arg4[all])
                if not ext_call.success:
                    if not return_data.size:
                        if not arg4.length:
                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                        revert with arg4[all]
                    if not return_data.size:
                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
        else:
            if owner == arg2:
                if not arg1:
                    stor154[arg3] = tokenByIndex.length
                    tokenByIndex.length++
                    stor72A1[stor153.length] = arg3
                else:
                    if arg1 != arg2:
                        if not arg1:
                            revert with 0, 'ERC721: balance query for the zero address'
                        if balanceOf[address(arg1)] < 1:
                            revert with 0, 17
                        if balanceOf[address(arg1)] - 1 != stor152[arg3]:
                            tokenOfOwnerByIndex[address(arg1)][stor152[arg3]] = tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1]
                            stor152[stor151[address(arg1)][stor104[address(arg1)] - 1]] = stor152[arg3]
                        stor152[arg3] = 0
                        tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                if arg2:
                    if arg2 != arg1:
                        if not arg2:
                            revert with 0, 'ERC721: balance query for the zero address'
                        tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                        stor152[arg3] = balanceOf[address(arg2)]
                else:
                    if tokenByIndex.length < 1:
                        revert with 0, 17
                    if tokenByIndex.length - 1 >= tokenByIndex.length:
                        revert with 0, 50
                    if stor154[arg3] >= tokenByIndex.length:
                        revert with 0, 50
                    tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                    stor154[stor153[stor153.length]] = stor154[arg3]
                    stor154[arg3] = 0
                    if not tokenByIndex.length:
                        revert with 0, 49
                    tokenByIndex[tokenByIndex.length] = 0
                    tokenByIndex.length--
                approved[arg3] = 0
                if not ownerOf[arg3]:
                    revert with 0, 'ERC721: owner query for nonexistent token'
                emit Approval(ownerOf[arg3], 0, arg3);
                if balanceOf[address(arg1)] < 1:
                    revert with 0, 17
                balanceOf[address(arg1)]--
                if balanceOf[address(arg2)] > -2:
                    revert with 0, 17
                balanceOf[address(arg2)]++
                ownerOf[arg3] = arg2
                emit Transfer(arg1, arg2, arg3);
                if ext_code.size(arg2):
                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                         gas gas_remaining wei
                        args msg.sender, address(arg1), arg3, Array(len=arg4.length, data=arg4[all])
                    if not ext_call.success:
                        if not return_data.size:
                            if not arg4.length:
                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                            revert with arg4[all]
                        if not return_data.size:
                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                    if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
            else:
                if bool(uint8(stor552[arg3].field_1536)) != 1:
                    if not arg1:
                        stor154[arg3] = tokenByIndex.length
                        tokenByIndex.length++
                        stor72A1[stor153.length] = arg3
                    else:
                        if arg1 != arg2:
                            if not arg1:
                                revert with 0, 'ERC721: balance query for the zero address'
                            if balanceOf[address(arg1)] < 1:
                                revert with 0, 17
                            if balanceOf[address(arg1)] - 1 != stor152[arg3]:
                                tokenOfOwnerByIndex[address(arg1)][stor152[arg3]] = tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1]
                                stor152[stor151[address(arg1)][stor104[address(arg1)] - 1]] = stor152[arg3]
                            stor152[arg3] = 0
                            tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                    if arg2:
                        if arg2 != arg1:
                            if not arg2:
                                revert with 0, 'ERC721: balance query for the zero address'
                            tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                            stor152[arg3] = balanceOf[address(arg2)]
                    else:
                        if tokenByIndex.length < 1:
                            revert with 0, 17
                        if tokenByIndex.length - 1 >= tokenByIndex.length:
                            revert with 0, 50
                        if stor154[arg3] >= tokenByIndex.length:
                            revert with 0, 50
                        tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                        stor154[stor153[stor153.length]] = stor154[arg3]
                        stor154[arg3] = 0
                        if not tokenByIndex.length:
                            revert with 0, 49
                        tokenByIndex[tokenByIndex.length] = 0
                        tokenByIndex.length--
                    approved[arg3] = 0
                    if not ownerOf[arg3]:
                        revert with 0, 'ERC721: owner query for nonexistent token'
                    emit Approval(ownerOf[arg3], 0, arg3);
                    if balanceOf[address(arg1)] < 1:
                        revert with 0, 17
                    balanceOf[address(arg1)]--
                    if balanceOf[address(arg2)] > -2:
                        revert with 0, 17
                    balanceOf[address(arg2)]++
                    ownerOf[arg3] = arg2
                    emit Transfer(arg1, arg2, arg3);
                    if ext_code.size(arg2):
                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                             gas gas_remaining wei
                            args msg.sender, address(arg1), arg3, Array(len=arg4.length, data=arg4[all])
                        if not ext_call.success:
                            if not return_data.size:
                                if not arg4.length:
                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                revert with arg4[all]
                            if not return_data.size:
                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                        if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                else:
                    if bool(uint8(stor552[arg3].field_1544)) != 1:
                        if not arg1:
                            stor154[arg3] = tokenByIndex.length
                            tokenByIndex.length++
                            stor72A1[stor153.length] = arg3
                        else:
                            if arg1 != arg2:
                                if not arg1:
                                    revert with 0, 'ERC721: balance query for the zero address'
                                if balanceOf[address(arg1)] < 1:
                                    revert with 0, 17
                                if balanceOf[address(arg1)] - 1 != stor152[arg3]:
                                    tokenOfOwnerByIndex[address(arg1)][stor152[arg3]] = tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1]
                                    stor152[stor151[address(arg1)][stor104[address(arg1)] - 1]] = stor152[arg3]
                                stor152[arg3] = 0
                                tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                        if arg2:
                            if arg2 != arg1:
                                if not arg2:
                                    revert with 0, 'ERC721: balance query for the zero address'
                                tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                stor152[arg3] = balanceOf[address(arg2)]
                        else:
                            if tokenByIndex.length < 1:
                                revert with 0, 17
                            if tokenByIndex.length - 1 >= tokenByIndex.length:
                                revert with 0, 50
                            if stor154[arg3] >= tokenByIndex.length:
                                revert with 0, 50
                            tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                            stor154[stor153[stor153.length]] = stor154[arg3]
                            stor154[arg3] = 0
                            if not tokenByIndex.length:
                                revert with 0, 49
                            tokenByIndex[tokenByIndex.length] = 0
                            tokenByIndex.length--
                        approved[arg3] = 0
                        if not ownerOf[arg3]:
                            revert with 0, 'ERC721: owner query for nonexistent token'
                        emit Approval(ownerOf[arg3], 0, arg3);
                        if balanceOf[address(arg1)] < 1:
                            revert with 0, 17
                        balanceOf[address(arg1)]--
                        if balanceOf[address(arg2)] > -2:
                            revert with 0, 17
                        balanceOf[address(arg2)]++
                        ownerOf[arg3] = arg2
                        emit Transfer(arg1, arg2, arg3);
                        if ext_code.size(arg2):
                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args msg.sender, address(arg1), arg3, Array(len=arg4.length, data=arg4[all])
                            if not ext_call.success:
                                if not return_data.size:
                                    if not arg4.length:
                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                    revert with arg4[all]
                                if not return_data.size:
                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                            if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                    else:
                        if not liquidityPoolManagerImplementationAddress:
                            if not arg2:
                                revert with 0, 'ERC721: balance query for the zero address'
                            if balanceOf[address(arg2)] > test266151307():
                                revert with 0, 65
                            mem[ceil32(ceil32(arg4.length)) + 97] = balanceOf[address(arg2)]
                            mem[64] = ceil32(ceil32(arg4.length)) + (32 * balanceOf[address(arg2)]) + 129
                            if not balanceOf[address(arg2)]:
                                idx = 0
                                while idx < balanceOf[address(arg2)]:
                                    if not arg2:
                                        revert with 0, 'ERC721: balance query for the zero address'
                                    if idx >= balanceOf[address(arg2)]:
                                        revert with 0, 'ERC721Enumerable: owner index out of bounds'
                                    if tokenOfOwnerByIndex[address(arg2)][idx] <= 0:
                                        revert with 0, 'Troops: Id must be higher than zero'
                                    mem[0] = tokenOfOwnerByIndex[address(arg2)][idx]
                                    mem[32] = 552
                                    _17852 = mem[64]
                                    mem[64] = mem[64] + 256
                                    mem[_17852] = stor552[stor151[address(arg2)][idx]].field_0
                                    if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                            revert with 0, 34
                                        _20612 = mem[64]
                                        mem[64] = mem[64] + ceil32(uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) + 32
                                        mem[_20612] = uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                                revert with 0, 34
                                            if Mask(256, -1, stor552[stor151[address(arg2)][idx]].field_256):
                                                if 31 >= uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5:
                                                    mem[_20612 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                else:
                                                    mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                    mem[_20612 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                    s = _20612 + 32
                                                    t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                    while _20612 + (uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) > s:
                                                        mem[s + 32] = stor1[t].field_0
                                                        s = s + 32
                                                        t = t + 1
                                                        continue 
                                        else:
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                                revert with 0, 34
                                            if stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                if 31 >= stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                    mem[_20612 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                else:
                                                    mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                    mem[_20612 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                    s = _20612 + 32
                                                    t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                    while _20612 + stor552[stor151[address(arg2)][idx]].field_257 % 128 > s:
                                                        mem[s + 32] = stor1[t].field_0
                                                        s = s + 32
                                                        t = t + 1
                                                        continue 
                                        mem[_17852 + 32] = _20612
                                    else:
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                            revert with 0, 34
                                        _20639 = mem[64]
                                        mem[64] = mem[64] + ceil32(stor552[stor151[address(arg2)][idx]].field_257 % 128) + 32
                                        mem[_20639] = stor552[stor151[address(arg2)][idx]].field_257 % 128
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                                revert with 0, 34
                                            if Mask(256, -1, stor552[stor151[address(arg2)][idx]].field_256):
                                                if 31 >= uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5:
                                                    mem[_20639 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                else:
                                                    mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                    mem[_20639 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                    s = _20639 + 32
                                                    t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                    while _20639 + (uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) > s:
                                                        mem[s + 32] = stor1[t].field_0
                                                        s = s + 32
                                                        t = t + 1
                                                        continue 
                                        else:
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                                revert with 0, 34
                                            if stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                if 31 >= stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                    mem[_20639 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                else:
                                                    mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                    mem[_20639 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                    s = _20639 + 32
                                                    t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                    while _20639 + stor552[stor151[address(arg2)][idx]].field_257 % 128 > s:
                                                        mem[s + 32] = stor1[t].field_0
                                                        s = s + 32
                                                        t = t + 1
                                                        continue 
                                        mem[_17852 + 32] = _20639
                                    mem[_17852 + 64] = stor552[stor151[address(arg2)][idx]].field_512
                                    mem[_17852 + 96] = stor552[stor151[address(arg2)][idx]].field_768
                                    mem[_17852 + 128] = stor552[stor151[address(arg2)][idx]].field_1024
                                    mem[_17852 + 160] = stor552[stor151[address(arg2)][idx]].field_1280
                                    mem[_17852 + 192] = bool(uint8(stor552[stor151[address(arg2)][idx]].field_1536))
                                    mem[_17852 + 224] = bool(uint8(stor552[stor151[address(arg2)][idx]].field_1544))
                                    if not uint8(stor552[stor151[address(arg2)][idx]].field_1536):
                                        revert with 0, 'Troops: This troop doesn't exist'
                                    if idx >= mem[ceil32(ceil32(arg4.length)) + 97]:
                                        revert with 0, 50
                                    mem[(32 * idx) + ceil32(ceil32(arg4.length)) + 129] = tokenOfOwnerByIndex[address(arg2)][idx]
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    continue 
                                idx = 0
                                s = 0
                                while idx < mem[ceil32(ceil32(arg4.length)) + 97]:
                                    if idx >= mem[ceil32(ceil32(arg4.length)) + 97]:
                                        revert with 0, 50
                                    mem[0] = mem[(32 * idx) + ceil32(ceil32(arg4.length)) + 129]
                                    mem[32] = 552
                                    if not uint8(stor552[mem[(32 * idx) + ceil32(ceil32(arg4.length)) + 129]].field_1544):
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = s
                                        continue 
                                    if s == -1:
                                        revert with 0, 17
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    s = s + 1
                                    continue 
                                if s >= 2:
                                    revert with 0, 'Each holder can not hold more than 2 Gladiators'
                                if not arg1:
                                    stor154[arg3] = tokenByIndex.length
                                    tokenByIndex.length++
                                    stor72A1[stor153.length] = arg3
                                    if arg2:
                                        if arg2 == arg1:
                                            approved[arg3] = 0
                                            if not ownerOf[arg3]:
                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                            emit Approval(ownerOf[arg3], 0, arg3);
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            balanceOf[address(arg1)]--
                                            if balanceOf[address(arg2)] > -2:
                                                revert with 0, 17
                                            balanceOf[address(arg2)]++
                                            mem[0] = arg3
                                            mem[32] = 103
                                            ownerOf[arg3] = arg2
                                            emit Transfer(arg1, arg2, arg3);
                                            if ext_code.size(arg2):
                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = msg.sender
                                                mem[mem[64] + 36] = arg1
                                                mem[mem[64] + 68] = arg3
                                                mem[mem[64] + 100] = 128
                                                mem[mem[64] + 132] = mem[96]
                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                if ceil32(mem[96]) <= mem[96]:
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _35977 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_35977] == Mask(32, 224, mem[_35977])
                                                    if Mask(32, 224, mem[_35977]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    mem[mem[96] + mem[64] + 164] = 0
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _35978 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_35978] == Mask(32, 224, mem[_35978])
                                                    if Mask(32, 224, mem[_35978]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            if not arg2:
                                                revert with 0, 'ERC721: balance query for the zero address'
                                            tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                            stor152[arg3] = balanceOf[address(arg2)]
                                            approved[arg3] = 0
                                            if not ownerOf[arg3]:
                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                            emit Approval(ownerOf[arg3], 0, arg3);
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            balanceOf[address(arg1)]--
                                            if balanceOf[address(arg2)] > -2:
                                                revert with 0, 17
                                            balanceOf[address(arg2)]++
                                            mem[0] = arg3
                                            mem[32] = 103
                                            ownerOf[arg3] = arg2
                                            emit Transfer(arg1, arg2, arg3);
                                            if ext_code.size(arg2):
                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = msg.sender
                                                mem[mem[64] + 36] = arg1
                                                mem[mem[64] + 68] = arg3
                                                mem[mem[64] + 100] = 128
                                                mem[mem[64] + 132] = mem[96]
                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                if ceil32(mem[96]) <= mem[96]:
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _35979 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_35979] == Mask(32, 224, mem[_35979])
                                                    if Mask(32, 224, mem[_35979]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    mem[mem[96] + mem[64] + 164] = 0
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _35980 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_35980] == Mask(32, 224, mem[_35980])
                                                    if Mask(32, 224, mem[_35980]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                    else:
                                        if tokenByIndex.length < 1:
                                            revert with 0, 17
                                        if tokenByIndex.length - 1 >= tokenByIndex.length:
                                            revert with 0, 50
                                        if stor154[arg3] >= tokenByIndex.length:
                                            revert with 0, 50
                                        tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                        stor154[stor153[stor153.length]] = stor154[arg3]
                                        stor154[arg3] = 0
                                        if not tokenByIndex.length:
                                            revert with 0, 49
                                        tokenByIndex[tokenByIndex.length] = 0
                                        tokenByIndex.length--
                                        approved[arg3] = 0
                                        if not ownerOf[arg3]:
                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                        emit Approval(ownerOf[arg3], 0, arg3);
                                        if balanceOf[address(arg1)] < 1:
                                            revert with 0, 17
                                        balanceOf[address(arg1)]--
                                        if balanceOf[address(arg2)] > -2:
                                            revert with 0, 17
                                        balanceOf[address(arg2)]++
                                        mem[0] = arg3
                                        mem[32] = 103
                                        ownerOf[arg3] = arg2
                                        emit Transfer(arg1, arg2, arg3);
                                        if ext_code.size(arg2):
                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = msg.sender
                                            mem[mem[64] + 36] = arg1
                                            mem[mem[64] + 68] = arg3
                                            mem[mem[64] + 100] = 128
                                            mem[mem[64] + 132] = mem[96]
                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                            if ceil32(mem[96]) <= mem[96]:
                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    if not return_data.size:
                                                        if not mem[96]:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with memory
                                                          from 128
                                                           len mem[96]
                                                    if not return_data.size:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _35981 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                require mem[_35981] == Mask(32, 224, mem[_35981])
                                                if Mask(32, 224, mem[_35981]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                mem[mem[96] + mem[64] + 164] = 0
                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    if not return_data.size:
                                                        if not mem[96]:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with memory
                                                          from 128
                                                           len mem[96]
                                                    if not return_data.size:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _35982 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                require mem[_35982] == Mask(32, 224, mem[_35982])
                                                if Mask(32, 224, mem[_35982]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                else:
                                    if arg1 == arg2:
                                        if arg2:
                                            if arg2 == arg1:
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _35959 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_35959] == Mask(32, 224, mem[_35959])
                                                        if Mask(32, 224, mem[_35959]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[96] + mem[64] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _35960 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_35960] == Mask(32, 224, mem[_35960])
                                                        if Mask(32, 224, mem[_35960]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if not arg2:
                                                    revert with 0, 'ERC721: balance query for the zero address'
                                                tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                stor152[arg3] = balanceOf[address(arg2)]
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _35961 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_35961] == Mask(32, 224, mem[_35961])
                                                        if Mask(32, 224, mem[_35961]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[96] + mem[64] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _35962 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_35962] == Mask(32, 224, mem[_35962])
                                                        if Mask(32, 224, mem[_35962]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            if tokenByIndex.length < 1:
                                                revert with 0, 17
                                            if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                revert with 0, 50
                                            if stor154[arg3] >= tokenByIndex.length:
                                                revert with 0, 50
                                            tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                            stor154[stor153[stor153.length]] = stor154[arg3]
                                            stor154[arg3] = 0
                                            if not tokenByIndex.length:
                                                revert with 0, 49
                                            tokenByIndex[tokenByIndex.length] = 0
                                            tokenByIndex.length--
                                            approved[arg3] = 0
                                            if not ownerOf[arg3]:
                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                            emit Approval(ownerOf[arg3], 0, arg3);
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            balanceOf[address(arg1)]--
                                            if balanceOf[address(arg2)] > -2:
                                                revert with 0, 17
                                            balanceOf[address(arg2)]++
                                            mem[0] = arg3
                                            mem[32] = 103
                                            ownerOf[arg3] = arg2
                                            emit Transfer(arg1, arg2, arg3);
                                            if ext_code.size(arg2):
                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = msg.sender
                                                mem[mem[64] + 36] = arg1
                                                mem[mem[64] + 68] = arg3
                                                mem[mem[64] + 100] = 128
                                                mem[mem[64] + 132] = mem[96]
                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                if ceil32(mem[96]) <= mem[96]:
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _35963 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_35963] == Mask(32, 224, mem[_35963])
                                                    if Mask(32, 224, mem[_35963]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    mem[mem[96] + mem[64] + 164] = 0
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _35964 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_35964] == Mask(32, 224, mem[_35964])
                                                    if Mask(32, 224, mem[_35964]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                    else:
                                        if not arg1:
                                            revert with 0, 'ERC721: balance query for the zero address'
                                        if balanceOf[address(arg1)] < 1:
                                            revert with 0, 17
                                        if balanceOf[address(arg1)] - 1 == stor152[arg3]:
                                            stor152[arg3] = 0
                                            tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                                            if arg2:
                                                if arg2 == arg1:
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _35965 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_35965] == Mask(32, 224, mem[_35965])
                                                            if Mask(32, 224, mem[_35965]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _35966 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_35966] == Mask(32, 224, mem[_35966])
                                                            if Mask(32, 224, mem[_35966]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    if not arg2:
                                                        revert with 0, 'ERC721: balance query for the zero address'
                                                    tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                    stor152[arg3] = balanceOf[address(arg2)]
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _35967 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_35967] == Mask(32, 224, mem[_35967])
                                                            if Mask(32, 224, mem[_35967]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _35968 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_35968] == Mask(32, 224, mem[_35968])
                                                            if Mask(32, 224, mem[_35968]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if tokenByIndex.length < 1:
                                                    revert with 0, 17
                                                if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                    revert with 0, 50
                                                if stor154[arg3] >= tokenByIndex.length:
                                                    revert with 0, 50
                                                tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                stor154[stor153[stor153.length]] = stor154[arg3]
                                                stor154[arg3] = 0
                                                if not tokenByIndex.length:
                                                    revert with 0, 49
                                                tokenByIndex[tokenByIndex.length] = 0
                                                tokenByIndex.length--
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _35969 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_35969] == Mask(32, 224, mem[_35969])
                                                        if Mask(32, 224, mem[_35969]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[96] + mem[64] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _35970 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_35970] == Mask(32, 224, mem[_35970])
                                                        if Mask(32, 224, mem[_35970]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            tokenOfOwnerByIndex[address(arg1)][stor152[arg3]] = tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1]
                                            stor152[stor151[address(arg1)][stor104[address(arg1)] - 1]] = stor152[arg3]
                                            stor152[arg3] = 0
                                            tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                                            if arg2:
                                                if arg2 == arg1:
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _35971 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_35971] == Mask(32, 224, mem[_35971])
                                                            if Mask(32, 224, mem[_35971]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _35972 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_35972] == Mask(32, 224, mem[_35972])
                                                            if Mask(32, 224, mem[_35972]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    if not arg2:
                                                        revert with 0, 'ERC721: balance query for the zero address'
                                                    tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                    stor152[arg3] = balanceOf[address(arg2)]
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _35973 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_35973] == Mask(32, 224, mem[_35973])
                                                            if Mask(32, 224, mem[_35973]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _35974 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_35974] == Mask(32, 224, mem[_35974])
                                                            if Mask(32, 224, mem[_35974]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if tokenByIndex.length < 1:
                                                    revert with 0, 17
                                                if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                    revert with 0, 50
                                                if stor154[arg3] >= tokenByIndex.length:
                                                    revert with 0, 50
                                                tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                stor154[stor153[stor153.length]] = stor154[arg3]
                                                stor154[arg3] = 0
                                                if not tokenByIndex.length:
                                                    revert with 0, 49
                                                tokenByIndex[tokenByIndex.length] = 0
                                                tokenByIndex.length--
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _35975 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_35975] == Mask(32, 224, mem[_35975])
                                                        if Mask(32, 224, mem[_35975]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[96] + mem[64] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _35976 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_35976] == Mask(32, 224, mem[_35976])
                                                        if Mask(32, 224, mem[_35976]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                            else:
                                mem[ceil32(ceil32(arg4.length)) + 129 len 32 * balanceOf[address(arg2)]] = call.data[calldata.size len 32 * balanceOf[address(arg2)]]
                                idx = 0
                                while idx < balanceOf[address(arg2)]:
                                    if not arg2:
                                        revert with 0, 'ERC721: balance query for the zero address'
                                    if idx >= balanceOf[address(arg2)]:
                                        revert with 0, 'ERC721Enumerable: owner index out of bounds'
                                    if tokenOfOwnerByIndex[address(arg2)][idx] <= 0:
                                        revert with 0, 'Troops: Id must be higher than zero'
                                    mem[0] = tokenOfOwnerByIndex[address(arg2)][idx]
                                    mem[32] = 552
                                    _17855 = mem[64]
                                    mem[64] = mem[64] + 256
                                    mem[_17855] = stor552[stor151[address(arg2)][idx]].field_0
                                    if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                            revert with 0, 34
                                        _20614 = mem[64]
                                        mem[64] = mem[64] + ceil32(uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) + 32
                                        mem[_20614] = uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                                revert with 0, 34
                                            if Mask(256, -1, stor552[stor151[address(arg2)][idx]].field_256):
                                                if 31 >= uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5:
                                                    mem[_20614 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                else:
                                                    mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                    mem[_20614 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                    s = _20614 + 32
                                                    t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                    while _20614 + (uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) > s:
                                                        mem[s + 32] = stor1[t].field_0
                                                        s = s + 32
                                                        t = t + 1
                                                        continue 
                                        else:
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                                revert with 0, 34
                                            if stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                if 31 >= stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                    mem[_20614 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                else:
                                                    mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                    mem[_20614 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                    s = _20614 + 32
                                                    t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                    while _20614 + stor552[stor151[address(arg2)][idx]].field_257 % 128 > s:
                                                        mem[s + 32] = stor1[t].field_0
                                                        s = s + 32
                                                        t = t + 1
                                                        continue 
                                        mem[_17855 + 32] = _20614
                                    else:
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                            revert with 0, 34
                                        _20644 = mem[64]
                                        mem[64] = mem[64] + ceil32(stor552[stor151[address(arg2)][idx]].field_257 % 128) + 32
                                        mem[_20644] = stor552[stor151[address(arg2)][idx]].field_257 % 128
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                                revert with 0, 34
                                            if Mask(256, -1, stor552[stor151[address(arg2)][idx]].field_256):
                                                if 31 >= uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5:
                                                    mem[_20644 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                else:
                                                    mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                    mem[_20644 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                    s = _20644 + 32
                                                    t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                    while _20644 + (uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) > s:
                                                        mem[s + 32] = stor1[t].field_0
                                                        s = s + 32
                                                        t = t + 1
                                                        continue 
                                        else:
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                                revert with 0, 34
                                            if stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                if 31 >= stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                    mem[_20644 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                else:
                                                    mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                    mem[_20644 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                    s = _20644 + 32
                                                    t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                    while _20644 + stor552[stor151[address(arg2)][idx]].field_257 % 128 > s:
                                                        mem[s + 32] = stor1[t].field_0
                                                        s = s + 32
                                                        t = t + 1
                                                        continue 
                                        mem[_17855 + 32] = _20644
                                    mem[_17855 + 64] = stor552[stor151[address(arg2)][idx]].field_512
                                    mem[_17855 + 96] = stor552[stor151[address(arg2)][idx]].field_768
                                    mem[_17855 + 128] = stor552[stor151[address(arg2)][idx]].field_1024
                                    mem[_17855 + 160] = stor552[stor151[address(arg2)][idx]].field_1280
                                    mem[_17855 + 192] = bool(uint8(stor552[stor151[address(arg2)][idx]].field_1536))
                                    mem[_17855 + 224] = bool(uint8(stor552[stor151[address(arg2)][idx]].field_1544))
                                    if not uint8(stor552[stor151[address(arg2)][idx]].field_1536):
                                        revert with 0, 'Troops: This troop doesn't exist'
                                    if idx >= mem[ceil32(ceil32(arg4.length)) + 97]:
                                        revert with 0, 50
                                    mem[(32 * idx) + ceil32(ceil32(arg4.length)) + 129] = tokenOfOwnerByIndex[address(arg2)][idx]
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    continue 
                                idx = 0
                                s = 0
                                while idx < mem[ceil32(ceil32(arg4.length)) + 97]:
                                    if idx >= mem[ceil32(ceil32(arg4.length)) + 97]:
                                        revert with 0, 50
                                    mem[0] = mem[(32 * idx) + ceil32(ceil32(arg4.length)) + 129]
                                    mem[32] = 552
                                    if not uint8(stor552[mem[(32 * idx) + ceil32(ceil32(arg4.length)) + 129]].field_1544):
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = s
                                        continue 
                                    if s == -1:
                                        revert with 0, 17
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    s = s + 1
                                    continue 
                                if s >= 2:
                                    revert with 0, 'Each holder can not hold more than 2 Gladiators'
                                if not arg1:
                                    stor154[arg3] = tokenByIndex.length
                                    tokenByIndex.length++
                                    stor72A1[stor153.length] = arg3
                                    if arg2:
                                        if arg2 == arg1:
                                            approved[arg3] = 0
                                            if not ownerOf[arg3]:
                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                            emit Approval(ownerOf[arg3], 0, arg3);
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            balanceOf[address(arg1)]--
                                            if balanceOf[address(arg2)] > -2:
                                                revert with 0, 17
                                            balanceOf[address(arg2)]++
                                            mem[0] = arg3
                                            mem[32] = 103
                                            ownerOf[arg3] = arg2
                                            emit Transfer(arg1, arg2, arg3);
                                            if ext_code.size(arg2):
                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = msg.sender
                                                mem[mem[64] + 36] = arg1
                                                mem[mem[64] + 68] = arg3
                                                mem[mem[64] + 100] = 128
                                                mem[mem[64] + 132] = mem[96]
                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                if ceil32(mem[96]) <= mem[96]:
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _36001 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_36001] == Mask(32, 224, mem[_36001])
                                                    if Mask(32, 224, mem[_36001]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    mem[mem[96] + mem[64] + 164] = 0
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _36002 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_36002] == Mask(32, 224, mem[_36002])
                                                    if Mask(32, 224, mem[_36002]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            if not arg2:
                                                revert with 0, 'ERC721: balance query for the zero address'
                                            tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                            stor152[arg3] = balanceOf[address(arg2)]
                                            approved[arg3] = 0
                                            if not ownerOf[arg3]:
                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                            emit Approval(ownerOf[arg3], 0, arg3);
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            balanceOf[address(arg1)]--
                                            if balanceOf[address(arg2)] > -2:
                                                revert with 0, 17
                                            balanceOf[address(arg2)]++
                                            mem[0] = arg3
                                            mem[32] = 103
                                            ownerOf[arg3] = arg2
                                            emit Transfer(arg1, arg2, arg3);
                                            if ext_code.size(arg2):
                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = msg.sender
                                                mem[mem[64] + 36] = arg1
                                                mem[mem[64] + 68] = arg3
                                                mem[mem[64] + 100] = 128
                                                mem[mem[64] + 132] = mem[96]
                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                if ceil32(mem[96]) <= mem[96]:
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _36003 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_36003] == Mask(32, 224, mem[_36003])
                                                    if Mask(32, 224, mem[_36003]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    mem[mem[96] + mem[64] + 164] = 0
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _36004 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_36004] == Mask(32, 224, mem[_36004])
                                                    if Mask(32, 224, mem[_36004]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                    else:
                                        if tokenByIndex.length < 1:
                                            revert with 0, 17
                                        if tokenByIndex.length - 1 >= tokenByIndex.length:
                                            revert with 0, 50
                                        if stor154[arg3] >= tokenByIndex.length:
                                            revert with 0, 50
                                        tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                        stor154[stor153[stor153.length]] = stor154[arg3]
                                        stor154[arg3] = 0
                                        if not tokenByIndex.length:
                                            revert with 0, 49
                                        tokenByIndex[tokenByIndex.length] = 0
                                        tokenByIndex.length--
                                        approved[arg3] = 0
                                        if not ownerOf[arg3]:
                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                        emit Approval(ownerOf[arg3], 0, arg3);
                                        if balanceOf[address(arg1)] < 1:
                                            revert with 0, 17
                                        balanceOf[address(arg1)]--
                                        if balanceOf[address(arg2)] > -2:
                                            revert with 0, 17
                                        balanceOf[address(arg2)]++
                                        mem[0] = arg3
                                        mem[32] = 103
                                        ownerOf[arg3] = arg2
                                        emit Transfer(arg1, arg2, arg3);
                                        if ext_code.size(arg2):
                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = msg.sender
                                            mem[mem[64] + 36] = arg1
                                            mem[mem[64] + 68] = arg3
                                            mem[mem[64] + 100] = 128
                                            mem[mem[64] + 132] = mem[96]
                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                            if ceil32(mem[96]) <= mem[96]:
                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    if not return_data.size:
                                                        if not mem[96]:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with memory
                                                          from 128
                                                           len mem[96]
                                                    if not return_data.size:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _36005 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                require mem[_36005] == Mask(32, 224, mem[_36005])
                                                if Mask(32, 224, mem[_36005]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                mem[mem[96] + mem[64] + 164] = 0
                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    if not return_data.size:
                                                        if not mem[96]:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with memory
                                                          from 128
                                                           len mem[96]
                                                    if not return_data.size:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _36006 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                require mem[_36006] == Mask(32, 224, mem[_36006])
                                                if Mask(32, 224, mem[_36006]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                else:
                                    if arg1 == arg2:
                                        if arg2:
                                            if arg2 == arg1:
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _35983 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_35983] == Mask(32, 224, mem[_35983])
                                                        if Mask(32, 224, mem[_35983]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[96] + mem[64] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _35984 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_35984] == Mask(32, 224, mem[_35984])
                                                        if Mask(32, 224, mem[_35984]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if not arg2:
                                                    revert with 0, 'ERC721: balance query for the zero address'
                                                tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                stor152[arg3] = balanceOf[address(arg2)]
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _35985 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_35985] == Mask(32, 224, mem[_35985])
                                                        if Mask(32, 224, mem[_35985]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[96] + mem[64] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _35986 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_35986] == Mask(32, 224, mem[_35986])
                                                        if Mask(32, 224, mem[_35986]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            if tokenByIndex.length < 1:
                                                revert with 0, 17
                                            if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                revert with 0, 50
                                            if stor154[arg3] >= tokenByIndex.length:
                                                revert with 0, 50
                                            tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                            stor154[stor153[stor153.length]] = stor154[arg3]
                                            stor154[arg3] = 0
                                            if not tokenByIndex.length:
                                                revert with 0, 49
                                            tokenByIndex[tokenByIndex.length] = 0
                                            tokenByIndex.length--
                                            approved[arg3] = 0
                                            if not ownerOf[arg3]:
                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                            emit Approval(ownerOf[arg3], 0, arg3);
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            balanceOf[address(arg1)]--
                                            if balanceOf[address(arg2)] > -2:
                                                revert with 0, 17
                                            balanceOf[address(arg2)]++
                                            mem[0] = arg3
                                            mem[32] = 103
                                            ownerOf[arg3] = arg2
                                            emit Transfer(arg1, arg2, arg3);
                                            if ext_code.size(arg2):
                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = msg.sender
                                                mem[mem[64] + 36] = arg1
                                                mem[mem[64] + 68] = arg3
                                                mem[mem[64] + 100] = 128
                                                mem[mem[64] + 132] = mem[96]
                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                if ceil32(mem[96]) <= mem[96]:
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _35987 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_35987] == Mask(32, 224, mem[_35987])
                                                    if Mask(32, 224, mem[_35987]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    mem[mem[96] + mem[64] + 164] = 0
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _35988 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_35988] == Mask(32, 224, mem[_35988])
                                                    if Mask(32, 224, mem[_35988]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                    else:
                                        if not arg1:
                                            revert with 0, 'ERC721: balance query for the zero address'
                                        if balanceOf[address(arg1)] < 1:
                                            revert with 0, 17
                                        if balanceOf[address(arg1)] - 1 == stor152[arg3]:
                                            stor152[arg3] = 0
                                            tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                                            if arg2:
                                                if arg2 == arg1:
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _35989 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_35989] == Mask(32, 224, mem[_35989])
                                                            if Mask(32, 224, mem[_35989]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _35990 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_35990] == Mask(32, 224, mem[_35990])
                                                            if Mask(32, 224, mem[_35990]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    if not arg2:
                                                        revert with 0, 'ERC721: balance query for the zero address'
                                                    tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                    stor152[arg3] = balanceOf[address(arg2)]
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _35991 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_35991] == Mask(32, 224, mem[_35991])
                                                            if Mask(32, 224, mem[_35991]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _35992 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_35992] == Mask(32, 224, mem[_35992])
                                                            if Mask(32, 224, mem[_35992]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if tokenByIndex.length < 1:
                                                    revert with 0, 17
                                                if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                    revert with 0, 50
                                                if stor154[arg3] >= tokenByIndex.length:
                                                    revert with 0, 50
                                                tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                stor154[stor153[stor153.length]] = stor154[arg3]
                                                stor154[arg3] = 0
                                                if not tokenByIndex.length:
                                                    revert with 0, 49
                                                tokenByIndex[tokenByIndex.length] = 0
                                                tokenByIndex.length--
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _35993 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_35993] == Mask(32, 224, mem[_35993])
                                                        if Mask(32, 224, mem[_35993]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[96] + mem[64] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _35994 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_35994] == Mask(32, 224, mem[_35994])
                                                        if Mask(32, 224, mem[_35994]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            tokenOfOwnerByIndex[address(arg1)][stor152[arg3]] = tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1]
                                            stor152[stor151[address(arg1)][stor104[address(arg1)] - 1]] = stor152[arg3]
                                            stor152[arg3] = 0
                                            tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                                            if arg2:
                                                if arg2 == arg1:
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _35995 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_35995] == Mask(32, 224, mem[_35995])
                                                            if Mask(32, 224, mem[_35995]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _35996 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_35996] == Mask(32, 224, mem[_35996])
                                                            if Mask(32, 224, mem[_35996]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    if not arg2:
                                                        revert with 0, 'ERC721: balance query for the zero address'
                                                    tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                    stor152[arg3] = balanceOf[address(arg2)]
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _35997 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_35997] == Mask(32, 224, mem[_35997])
                                                            if Mask(32, 224, mem[_35997]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _35998 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_35998] == Mask(32, 224, mem[_35998])
                                                            if Mask(32, 224, mem[_35998]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if tokenByIndex.length < 1:
                                                    revert with 0, 17
                                                if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                    revert with 0, 50
                                                if stor154[arg3] >= tokenByIndex.length:
                                                    revert with 0, 50
                                                tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                stor154[stor153[stor153.length]] = stor154[arg3]
                                                stor154[arg3] = 0
                                                if not tokenByIndex.length:
                                                    revert with 0, 49
                                                tokenByIndex[tokenByIndex.length] = 0
                                                tokenByIndex.length--
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _35999 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_35999] == Mask(32, 224, mem[_35999])
                                                        if Mask(32, 224, mem[_35999]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[96] + mem[64] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _36000 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_36000] == Mask(32, 224, mem[_36000])
                                                        if Mask(32, 224, mem[_36000]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                        else:
                            mem[ceil32(ceil32(arg4.length)) + 101] = arg2
                            staticcall liquidityPoolManagerImplementationAddress.0xb278110f with:
                                    gas gas_remaining wei
                                   args arg2
                            mem[ceil32(ceil32(arg4.length)) + 97] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            if ext_call.return_data[0]:
                                if not arg1:
                                    stor154[arg3] = tokenByIndex.length
                                    tokenByIndex.length++
                                    stor72A1[stor153.length] = arg3
                                else:
                                    if arg1 != arg2:
                                        if not arg1:
                                            revert with 0, 'ERC721: balance query for the zero address'
                                        if balanceOf[address(arg1)] < 1:
                                            revert with 0, 17
                                        if balanceOf[address(arg1)] - 1 != stor152[arg3]:
                                            tokenOfOwnerByIndex[address(arg1)][stor152[arg3]] = tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1]
                                            stor152[stor151[address(arg1)][stor104[address(arg1)] - 1]] = stor152[arg3]
                                        stor152[arg3] = 0
                                        tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                                if arg2:
                                    if arg2 != arg1:
                                        if not arg2:
                                            revert with 0, 'ERC721: balance query for the zero address'
                                        tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                        stor152[arg3] = balanceOf[address(arg2)]
                                else:
                                    if tokenByIndex.length < 1:
                                        revert with 0, 17
                                    if tokenByIndex.length - 1 >= tokenByIndex.length:
                                        revert with 0, 50
                                    if stor154[arg3] >= tokenByIndex.length:
                                        revert with 0, 50
                                    tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                    stor154[stor153[stor153.length]] = stor154[arg3]
                                    stor154[arg3] = 0
                                    if not tokenByIndex.length:
                                        revert with 0, 49
                                    tokenByIndex[tokenByIndex.length] = 0
                                    tokenByIndex.length--
                                approved[arg3] = 0
                                if not ownerOf[arg3]:
                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                emit Approval(ownerOf[arg3], 0, arg3);
                                if balanceOf[address(arg1)] < 1:
                                    revert with 0, 17
                                balanceOf[address(arg1)]--
                                if balanceOf[address(arg2)] > -2:
                                    revert with 0, 17
                                balanceOf[address(arg2)]++
                                ownerOf[arg3] = arg2
                                emit Transfer(arg1, arg2, arg3);
                                if ext_code.size(arg2):
                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args msg.sender, address(arg1), arg3, Array(len=arg4.length, data=arg4[all])
                                    if not ext_call.success:
                                        if not return_data.size:
                                            if not arg4.length:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            revert with arg4[all]
                                        if not return_data.size:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                    if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                            else:
                                if not arg2:
                                    revert with 0, 'ERC721: balance query for the zero address'
                                if balanceOf[address(arg2)] > test266151307():
                                    revert with 0, 65
                                mem[ceil32(ceil32(arg4.length)) + ceil32(return_data.size) + 97] = balanceOf[address(arg2)]
                                mem[64] = ceil32(ceil32(arg4.length)) + ceil32(return_data.size) + (32 * balanceOf[address(arg2)]) + 129
                                if not balanceOf[address(arg2)]:
                                    idx = 0
                                    while idx < balanceOf[address(arg2)]:
                                        if not arg2:
                                            revert with 0, 'ERC721: balance query for the zero address'
                                        if idx >= balanceOf[address(arg2)]:
                                            revert with 0, 'ERC721Enumerable: owner index out of bounds'
                                        if tokenOfOwnerByIndex[address(arg2)][idx] <= 0:
                                            revert with 0, 'Troops: Id must be higher than zero'
                                        mem[0] = tokenOfOwnerByIndex[address(arg2)][idx]
                                        mem[32] = 552
                                        _17906 = mem[64]
                                        mem[64] = mem[64] + 256
                                        mem[_17906] = stor552[stor151[address(arg2)][idx]].field_0
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                                revert with 0, 34
                                            _20616 = mem[64]
                                            mem[64] = mem[64] + ceil32(uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) + 32
                                            mem[_20616] = uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                                if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                                    revert with 0, 34
                                                if Mask(256, -1, stor552[stor151[address(arg2)][idx]].field_256):
                                                    if 31 >= uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5:
                                                        mem[_20616 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                    else:
                                                        mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                        mem[_20616 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                        s = _20616 + 32
                                                        t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                        while _20616 + (uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) > s:
                                                            mem[s + 32] = stor1[t].field_0
                                                            s = s + 32
                                                            t = t + 1
                                                            continue 
                                            else:
                                                if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                                    revert with 0, 34
                                                if stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                    if 31 >= stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                        mem[_20616 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                    else:
                                                        mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                        mem[_20616 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                        s = _20616 + 32
                                                        t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                        while _20616 + stor552[stor151[address(arg2)][idx]].field_257 % 128 > s:
                                                            mem[s + 32] = stor1[t].field_0
                                                            s = s + 32
                                                            t = t + 1
                                                            continue 
                                            mem[_17906 + 32] = _20616
                                        else:
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                                revert with 0, 34
                                            _20649 = mem[64]
                                            mem[64] = mem[64] + ceil32(stor552[stor151[address(arg2)][idx]].field_257 % 128) + 32
                                            mem[_20649] = stor552[stor151[address(arg2)][idx]].field_257 % 128
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                                if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                                    revert with 0, 34
                                                if Mask(256, -1, stor552[stor151[address(arg2)][idx]].field_256):
                                                    if 31 >= uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5:
                                                        mem[_20649 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                    else:
                                                        mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                        mem[_20649 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                        s = _20649 + 32
                                                        t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                        while _20649 + (uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) > s:
                                                            mem[s + 32] = stor1[t].field_0
                                                            s = s + 32
                                                            t = t + 1
                                                            continue 
                                            else:
                                                if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                                    revert with 0, 34
                                                if stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                    if 31 >= stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                        mem[_20649 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                    else:
                                                        mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                        mem[_20649 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                        s = _20649 + 32
                                                        t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                        while _20649 + stor552[stor151[address(arg2)][idx]].field_257 % 128 > s:
                                                            mem[s + 32] = stor1[t].field_0
                                                            s = s + 32
                                                            t = t + 1
                                                            continue 
                                            mem[_17906 + 32] = _20649
                                        mem[_17906 + 64] = stor552[stor151[address(arg2)][idx]].field_512
                                        mem[_17906 + 96] = stor552[stor151[address(arg2)][idx]].field_768
                                        mem[_17906 + 128] = stor552[stor151[address(arg2)][idx]].field_1024
                                        mem[_17906 + 160] = stor552[stor151[address(arg2)][idx]].field_1280
                                        mem[_17906 + 192] = bool(uint8(stor552[stor151[address(arg2)][idx]].field_1536))
                                        mem[_17906 + 224] = bool(uint8(stor552[stor151[address(arg2)][idx]].field_1544))
                                        if not uint8(stor552[stor151[address(arg2)][idx]].field_1536):
                                            revert with 0, 'Troops: This troop doesn't exist'
                                        if idx >= mem[ceil32(ceil32(arg4.length)) + ceil32(return_data.size) + 97]:
                                            revert with 0, 50
                                        mem[(32 * idx) + ceil32(ceil32(arg4.length)) + ceil32(return_data.size) + 129] = tokenOfOwnerByIndex[address(arg2)][idx]
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        continue 
                                    idx = 0
                                    s = 0
                                    while idx < mem[ceil32(ceil32(arg4.length)) + ceil32(return_data.size) + 97]:
                                        if idx >= mem[ceil32(ceil32(arg4.length)) + ceil32(return_data.size) + 97]:
                                            revert with 0, 50
                                        mem[0] = mem[(32 * idx) + ceil32(ceil32(arg4.length)) + ceil32(return_data.size) + 129]
                                        mem[32] = 552
                                        if not uint8(stor552[mem[(32 * idx) + ceil32(ceil32(arg4.length)) + ceil32(return_data.size) + 129]].field_1544):
                                            if idx == -1:
                                                revert with 0, 17
                                            idx = idx + 1
                                            s = s
                                            continue 
                                        if s == -1:
                                            revert with 0, 17
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = s + 1
                                        continue 
                                    if s >= 2:
                                        revert with 0, 'Each holder can not hold more than 2 Gladiators'
                                    if not arg1:
                                        stor154[arg3] = tokenByIndex.length
                                        tokenByIndex.length++
                                        stor72A1[stor153.length] = arg3
                                        if arg2:
                                            if arg2 == arg1:
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _36025 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_36025] == Mask(32, 224, mem[_36025])
                                                        if Mask(32, 224, mem[_36025]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[96] + mem[64] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _36026 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_36026] == Mask(32, 224, mem[_36026])
                                                        if Mask(32, 224, mem[_36026]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if not arg2:
                                                    revert with 0, 'ERC721: balance query for the zero address'
                                                tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                stor152[arg3] = balanceOf[address(arg2)]
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _36027 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_36027] == Mask(32, 224, mem[_36027])
                                                        if Mask(32, 224, mem[_36027]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[96] + mem[64] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _36028 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_36028] == Mask(32, 224, mem[_36028])
                                                        if Mask(32, 224, mem[_36028]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            if tokenByIndex.length < 1:
                                                revert with 0, 17
                                            if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                revert with 0, 50
                                            if stor154[arg3] >= tokenByIndex.length:
                                                revert with 0, 50
                                            tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                            stor154[stor153[stor153.length]] = stor154[arg3]
                                            stor154[arg3] = 0
                                            if not tokenByIndex.length:
                                                revert with 0, 49
                                            tokenByIndex[tokenByIndex.length] = 0
                                            tokenByIndex.length--
                                            approved[arg3] = 0
                                            if not ownerOf[arg3]:
                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                            emit Approval(ownerOf[arg3], 0, arg3);
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            balanceOf[address(arg1)]--
                                            if balanceOf[address(arg2)] > -2:
                                                revert with 0, 17
                                            balanceOf[address(arg2)]++
                                            mem[0] = arg3
                                            mem[32] = 103
                                            ownerOf[arg3] = arg2
                                            emit Transfer(arg1, arg2, arg3);
                                            if ext_code.size(arg2):
                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = msg.sender
                                                mem[mem[64] + 36] = arg1
                                                mem[mem[64] + 68] = arg3
                                                mem[mem[64] + 100] = 128
                                                mem[mem[64] + 132] = mem[96]
                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                if ceil32(mem[96]) <= mem[96]:
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _36029 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_36029] == Mask(32, 224, mem[_36029])
                                                    if Mask(32, 224, mem[_36029]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    mem[mem[96] + mem[64] + 164] = 0
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _36030 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_36030] == Mask(32, 224, mem[_36030])
                                                    if Mask(32, 224, mem[_36030]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                    else:
                                        if arg1 == arg2:
                                            if arg2:
                                                if arg2 == arg1:
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _36007 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_36007] == Mask(32, 224, mem[_36007])
                                                            if Mask(32, 224, mem[_36007]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _36008 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_36008] == Mask(32, 224, mem[_36008])
                                                            if Mask(32, 224, mem[_36008]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    if not arg2:
                                                        revert with 0, 'ERC721: balance query for the zero address'
                                                    tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                    stor152[arg3] = balanceOf[address(arg2)]
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _36009 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_36009] == Mask(32, 224, mem[_36009])
                                                            if Mask(32, 224, mem[_36009]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _36010 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_36010] == Mask(32, 224, mem[_36010])
                                                            if Mask(32, 224, mem[_36010]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if tokenByIndex.length < 1:
                                                    revert with 0, 17
                                                if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                    revert with 0, 50
                                                if stor154[arg3] >= tokenByIndex.length:
                                                    revert with 0, 50
                                                tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                stor154[stor153[stor153.length]] = stor154[arg3]
                                                stor154[arg3] = 0
                                                if not tokenByIndex.length:
                                                    revert with 0, 49
                                                tokenByIndex[tokenByIndex.length] = 0
                                                tokenByIndex.length--
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _36011 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_36011] == Mask(32, 224, mem[_36011])
                                                        if Mask(32, 224, mem[_36011]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[96] + mem[64] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _36012 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_36012] == Mask(32, 224, mem[_36012])
                                                        if Mask(32, 224, mem[_36012]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            if not arg1:
                                                revert with 0, 'ERC721: balance query for the zero address'
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            if balanceOf[address(arg1)] - 1 == stor152[arg3]:
                                                stor152[arg3] = 0
                                                tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                                                if arg2:
                                                    if arg2 == arg1:
                                                        approved[arg3] = 0
                                                        if not ownerOf[arg3]:
                                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                                        emit Approval(ownerOf[arg3], 0, arg3);
                                                        if balanceOf[address(arg1)] < 1:
                                                            revert with 0, 17
                                                        balanceOf[address(arg1)]--
                                                        if balanceOf[address(arg2)] > -2:
                                                            revert with 0, 17
                                                        balanceOf[address(arg2)]++
                                                        mem[0] = arg3
                                                        mem[32] = 103
                                                        ownerOf[arg3] = arg2
                                                        emit Transfer(arg1, arg2, arg3);
                                                        if ext_code.size(arg2):
                                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = msg.sender
                                                            mem[mem[64] + 36] = arg1
                                                            mem[mem[64] + 68] = arg3
                                                            mem[mem[64] + 100] = 128
                                                            mem[mem[64] + 132] = mem[96]
                                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                            if ceil32(mem[96]) <= mem[96]:
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _36013 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_36013] == Mask(32, 224, mem[_36013])
                                                                if Mask(32, 224, mem[_36013]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            else:
                                                                mem[mem[96] + mem[64] + 164] = 0
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _36014 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_36014] == Mask(32, 224, mem[_36014])
                                                                if Mask(32, 224, mem[_36014]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        if not arg2:
                                                            revert with 0, 'ERC721: balance query for the zero address'
                                                        tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                        stor152[arg3] = balanceOf[address(arg2)]
                                                        approved[arg3] = 0
                                                        if not ownerOf[arg3]:
                                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                                        emit Approval(ownerOf[arg3], 0, arg3);
                                                        if balanceOf[address(arg1)] < 1:
                                                            revert with 0, 17
                                                        balanceOf[address(arg1)]--
                                                        if balanceOf[address(arg2)] > -2:
                                                            revert with 0, 17
                                                        balanceOf[address(arg2)]++
                                                        mem[0] = arg3
                                                        mem[32] = 103
                                                        ownerOf[arg3] = arg2
                                                        emit Transfer(arg1, arg2, arg3);
                                                        if ext_code.size(arg2):
                                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = msg.sender
                                                            mem[mem[64] + 36] = arg1
                                                            mem[mem[64] + 68] = arg3
                                                            mem[mem[64] + 100] = 128
                                                            mem[mem[64] + 132] = mem[96]
                                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                            if ceil32(mem[96]) <= mem[96]:
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _36015 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_36015] == Mask(32, 224, mem[_36015])
                                                                if Mask(32, 224, mem[_36015]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            else:
                                                                mem[mem[96] + mem[64] + 164] = 0
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _36016 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_36016] == Mask(32, 224, mem[_36016])
                                                                if Mask(32, 224, mem[_36016]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    if tokenByIndex.length < 1:
                                                        revert with 0, 17
                                                    if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                        revert with 0, 50
                                                    if stor154[arg3] >= tokenByIndex.length:
                                                        revert with 0, 50
                                                    tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                    stor154[stor153[stor153.length]] = stor154[arg3]
                                                    stor154[arg3] = 0
                                                    if not tokenByIndex.length:
                                                        revert with 0, 49
                                                    tokenByIndex[tokenByIndex.length] = 0
                                                    tokenByIndex.length--
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _36017 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_36017] == Mask(32, 224, mem[_36017])
                                                            if Mask(32, 224, mem[_36017]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _36018 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_36018] == Mask(32, 224, mem[_36018])
                                                            if Mask(32, 224, mem[_36018]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                tokenOfOwnerByIndex[address(arg1)][stor152[arg3]] = tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1]
                                                stor152[stor151[address(arg1)][stor104[address(arg1)] - 1]] = stor152[arg3]
                                                stor152[arg3] = 0
                                                tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                                                if arg2:
                                                    if arg2 == arg1:
                                                        approved[arg3] = 0
                                                        if not ownerOf[arg3]:
                                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                                        emit Approval(ownerOf[arg3], 0, arg3);
                                                        if balanceOf[address(arg1)] < 1:
                                                            revert with 0, 17
                                                        balanceOf[address(arg1)]--
                                                        if balanceOf[address(arg2)] > -2:
                                                            revert with 0, 17
                                                        balanceOf[address(arg2)]++
                                                        mem[0] = arg3
                                                        mem[32] = 103
                                                        ownerOf[arg3] = arg2
                                                        emit Transfer(arg1, arg2, arg3);
                                                        if ext_code.size(arg2):
                                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = msg.sender
                                                            mem[mem[64] + 36] = arg1
                                                            mem[mem[64] + 68] = arg3
                                                            mem[mem[64] + 100] = 128
                                                            mem[mem[64] + 132] = mem[96]
                                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                            if ceil32(mem[96]) <= mem[96]:
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _36019 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_36019] == Mask(32, 224, mem[_36019])
                                                                if Mask(32, 224, mem[_36019]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            else:
                                                                mem[mem[96] + mem[64] + 164] = 0
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _36020 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_36020] == Mask(32, 224, mem[_36020])
                                                                if Mask(32, 224, mem[_36020]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        if not arg2:
                                                            revert with 0, 'ERC721: balance query for the zero address'
                                                        tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                        stor152[arg3] = balanceOf[address(arg2)]
                                                        approved[arg3] = 0
                                                        if not ownerOf[arg3]:
                                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                                        emit Approval(ownerOf[arg3], 0, arg3);
                                                        if balanceOf[address(arg1)] < 1:
                                                            revert with 0, 17
                                                        balanceOf[address(arg1)]--
                                                        if balanceOf[address(arg2)] > -2:
                                                            revert with 0, 17
                                                        balanceOf[address(arg2)]++
                                                        mem[0] = arg3
                                                        mem[32] = 103
                                                        ownerOf[arg3] = arg2
                                                        emit Transfer(arg1, arg2, arg3);
                                                        if ext_code.size(arg2):
                                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = msg.sender
                                                            mem[mem[64] + 36] = arg1
                                                            mem[mem[64] + 68] = arg3
                                                            mem[mem[64] + 100] = 128
                                                            mem[mem[64] + 132] = mem[96]
                                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                            if ceil32(mem[96]) <= mem[96]:
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _36021 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_36021] == Mask(32, 224, mem[_36021])
                                                                if Mask(32, 224, mem[_36021]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            else:
                                                                mem[mem[96] + mem[64] + 164] = 0
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _36022 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_36022] == Mask(32, 224, mem[_36022])
                                                                if Mask(32, 224, mem[_36022]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    if tokenByIndex.length < 1:
                                                        revert with 0, 17
                                                    if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                        revert with 0, 50
                                                    if stor154[arg3] >= tokenByIndex.length:
                                                        revert with 0, 50
                                                    tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                    stor154[stor153[stor153.length]] = stor154[arg3]
                                                    stor154[arg3] = 0
                                                    if not tokenByIndex.length:
                                                        revert with 0, 49
                                                    tokenByIndex[tokenByIndex.length] = 0
                                                    tokenByIndex.length--
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _36023 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_36023] == Mask(32, 224, mem[_36023])
                                                            if Mask(32, 224, mem[_36023]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _36024 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_36024] == Mask(32, 224, mem[_36024])
                                                            if Mask(32, 224, mem[_36024]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                else:
                                    mem[ceil32(ceil32(arg4.length)) + ceil32(return_data.size) + 129 len 32 * balanceOf[address(arg2)]] = call.data[calldata.size len 32 * balanceOf[address(arg2)]]
                                    idx = 0
                                    while idx < balanceOf[address(arg2)]:
                                        if not arg2:
                                            revert with 0, 'ERC721: balance query for the zero address'
                                        if idx >= balanceOf[address(arg2)]:
                                            revert with 0, 'ERC721Enumerable: owner index out of bounds'
                                        if tokenOfOwnerByIndex[address(arg2)][idx] <= 0:
                                            revert with 0, 'Troops: Id must be higher than zero'
                                        mem[0] = tokenOfOwnerByIndex[address(arg2)][idx]
                                        mem[32] = 552
                                        _17909 = mem[64]
                                        mem[64] = mem[64] + 256
                                        mem[_17909] = stor552[stor151[address(arg2)][idx]].field_0
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                                revert with 0, 34
                                            _20618 = mem[64]
                                            mem[64] = mem[64] + ceil32(uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) + 32
                                            mem[_20618] = uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                                if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                                    revert with 0, 34
                                                if Mask(256, -1, stor552[stor151[address(arg2)][idx]].field_256):
                                                    if 31 >= uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5:
                                                        mem[_20618 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                    else:
                                                        mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                        mem[_20618 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                        s = _20618 + 32
                                                        t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                        while _20618 + (uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) > s:
                                                            mem[s + 32] = stor1[t].field_0
                                                            s = s + 32
                                                            t = t + 1
                                                            continue 
                                            else:
                                                if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                                    revert with 0, 34
                                                if stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                    if 31 >= stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                        mem[_20618 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                    else:
                                                        mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                        mem[_20618 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                        s = _20618 + 32
                                                        t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                        while _20618 + stor552[stor151[address(arg2)][idx]].field_257 % 128 > s:
                                                            mem[s + 32] = stor1[t].field_0
                                                            s = s + 32
                                                            t = t + 1
                                                            continue 
                                            mem[_17909 + 32] = _20618
                                        else:
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                                revert with 0, 34
                                            _20654 = mem[64]
                                            mem[64] = mem[64] + ceil32(stor552[stor151[address(arg2)][idx]].field_257 % 128) + 32
                                            mem[_20654] = stor552[stor151[address(arg2)][idx]].field_257 % 128
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                                if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                                    revert with 0, 34
                                                if Mask(256, -1, stor552[stor151[address(arg2)][idx]].field_256):
                                                    if 31 >= uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5:
                                                        mem[_20654 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                    else:
                                                        mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                        mem[_20654 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                        s = _20654 + 32
                                                        t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                        while _20654 + (uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) > s:
                                                            mem[s + 32] = stor1[t].field_0
                                                            s = s + 32
                                                            t = t + 1
                                                            continue 
                                            else:
                                                if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                                    revert with 0, 34
                                                if stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                    if 31 >= stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                        mem[_20654 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                    else:
                                                        mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                        mem[_20654 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                        s = _20654 + 32
                                                        t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                        while _20654 + stor552[stor151[address(arg2)][idx]].field_257 % 128 > s:
                                                            mem[s + 32] = stor1[t].field_0
                                                            s = s + 32
                                                            t = t + 1
                                                            continue 
                                            mem[_17909 + 32] = _20654
                                        mem[_17909 + 64] = stor552[stor151[address(arg2)][idx]].field_512
                                        mem[_17909 + 96] = stor552[stor151[address(arg2)][idx]].field_768
                                        mem[_17909 + 128] = stor552[stor151[address(arg2)][idx]].field_1024
                                        mem[_17909 + 160] = stor552[stor151[address(arg2)][idx]].field_1280
                                        mem[_17909 + 192] = bool(uint8(stor552[stor151[address(arg2)][idx]].field_1536))
                                        mem[_17909 + 224] = bool(uint8(stor552[stor151[address(arg2)][idx]].field_1544))
                                        if not uint8(stor552[stor151[address(arg2)][idx]].field_1536):
                                            revert with 0, 'Troops: This troop doesn't exist'
                                        if idx >= mem[ceil32(ceil32(arg4.length)) + ceil32(return_data.size) + 97]:
                                            revert with 0, 50
                                        mem[(32 * idx) + ceil32(ceil32(arg4.length)) + ceil32(return_data.size) + 129] = tokenOfOwnerByIndex[address(arg2)][idx]
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        continue 
                                    idx = 0
                                    s = 0
                                    while idx < mem[ceil32(ceil32(arg4.length)) + ceil32(return_data.size) + 97]:
                                        if idx >= mem[ceil32(ceil32(arg4.length)) + ceil32(return_data.size) + 97]:
                                            revert with 0, 50
                                        mem[0] = mem[(32 * idx) + ceil32(ceil32(arg4.length)) + ceil32(return_data.size) + 129]
                                        mem[32] = 552
                                        if not uint8(stor552[mem[(32 * idx) + ceil32(ceil32(arg4.length)) + ceil32(return_data.size) + 129]].field_1544):
                                            if idx == -1:
                                                revert with 0, 17
                                            idx = idx + 1
                                            s = s
                                            continue 
                                        if s == -1:
                                            revert with 0, 17
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = s + 1
                                        continue 
                                    if s >= 2:
                                        revert with 0, 'Each holder can not hold more than 2 Gladiators'
                                    if not arg1:
                                        stor154[arg3] = tokenByIndex.length
                                        tokenByIndex.length++
                                        stor72A1[stor153.length] = arg3
                                        if arg2:
                                            if arg2 == arg1:
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _36049 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_36049] == Mask(32, 224, mem[_36049])
                                                        if Mask(32, 224, mem[_36049]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[96] + mem[64] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _36050 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_36050] == Mask(32, 224, mem[_36050])
                                                        if Mask(32, 224, mem[_36050]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if not arg2:
                                                    revert with 0, 'ERC721: balance query for the zero address'
                                                tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                stor152[arg3] = balanceOf[address(arg2)]
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _36051 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_36051] == Mask(32, 224, mem[_36051])
                                                        if Mask(32, 224, mem[_36051]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[96] + mem[64] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _36052 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_36052] == Mask(32, 224, mem[_36052])
                                                        if Mask(32, 224, mem[_36052]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            if tokenByIndex.length < 1:
                                                revert with 0, 17
                                            if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                revert with 0, 50
                                            if stor154[arg3] >= tokenByIndex.length:
                                                revert with 0, 50
                                            tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                            stor154[stor153[stor153.length]] = stor154[arg3]
                                            stor154[arg3] = 0
                                            if not tokenByIndex.length:
                                                revert with 0, 49
                                            tokenByIndex[tokenByIndex.length] = 0
                                            tokenByIndex.length--
                                            approved[arg3] = 0
                                            if not ownerOf[arg3]:
                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                            emit Approval(ownerOf[arg3], 0, arg3);
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            balanceOf[address(arg1)]--
                                            if balanceOf[address(arg2)] > -2:
                                                revert with 0, 17
                                            balanceOf[address(arg2)]++
                                            mem[0] = arg3
                                            mem[32] = 103
                                            ownerOf[arg3] = arg2
                                            emit Transfer(arg1, arg2, arg3);
                                            if ext_code.size(arg2):
                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = msg.sender
                                                mem[mem[64] + 36] = arg1
                                                mem[mem[64] + 68] = arg3
                                                mem[mem[64] + 100] = 128
                                                mem[mem[64] + 132] = mem[96]
                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                if ceil32(mem[96]) <= mem[96]:
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _36053 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_36053] == Mask(32, 224, mem[_36053])
                                                    if Mask(32, 224, mem[_36053]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    mem[mem[96] + mem[64] + 164] = 0
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _36054 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_36054] == Mask(32, 224, mem[_36054])
                                                    if Mask(32, 224, mem[_36054]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                    else:
                                        if arg1 == arg2:
                                            if arg2:
                                                if arg2 == arg1:
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _36031 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_36031] == Mask(32, 224, mem[_36031])
                                                            if Mask(32, 224, mem[_36031]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _36032 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_36032] == Mask(32, 224, mem[_36032])
                                                            if Mask(32, 224, mem[_36032]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    if not arg2:
                                                        revert with 0, 'ERC721: balance query for the zero address'
                                                    tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                    stor152[arg3] = balanceOf[address(arg2)]
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _36033 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_36033] == Mask(32, 224, mem[_36033])
                                                            if Mask(32, 224, mem[_36033]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _36034 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_36034] == Mask(32, 224, mem[_36034])
                                                            if Mask(32, 224, mem[_36034]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if tokenByIndex.length < 1:
                                                    revert with 0, 17
                                                if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                    revert with 0, 50
                                                if stor154[arg3] >= tokenByIndex.length:
                                                    revert with 0, 50
                                                tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                stor154[stor153[stor153.length]] = stor154[arg3]
                                                stor154[arg3] = 0
                                                if not tokenByIndex.length:
                                                    revert with 0, 49
                                                tokenByIndex[tokenByIndex.length] = 0
                                                tokenByIndex.length--
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _36035 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_36035] == Mask(32, 224, mem[_36035])
                                                        if Mask(32, 224, mem[_36035]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[96] + mem[64] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _36036 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_36036] == Mask(32, 224, mem[_36036])
                                                        if Mask(32, 224, mem[_36036]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            if not arg1:
                                                revert with 0, 'ERC721: balance query for the zero address'
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            if balanceOf[address(arg1)] - 1 == stor152[arg3]:
                                                stor152[arg3] = 0
                                                tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                                                if arg2:
                                                    if arg2 == arg1:
                                                        approved[arg3] = 0
                                                        if not ownerOf[arg3]:
                                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                                        emit Approval(ownerOf[arg3], 0, arg3);
                                                        if balanceOf[address(arg1)] < 1:
                                                            revert with 0, 17
                                                        balanceOf[address(arg1)]--
                                                        if balanceOf[address(arg2)] > -2:
                                                            revert with 0, 17
                                                        balanceOf[address(arg2)]++
                                                        mem[0] = arg3
                                                        mem[32] = 103
                                                        ownerOf[arg3] = arg2
                                                        emit Transfer(arg1, arg2, arg3);
                                                        if ext_code.size(arg2):
                                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = msg.sender
                                                            mem[mem[64] + 36] = arg1
                                                            mem[mem[64] + 68] = arg3
                                                            mem[mem[64] + 100] = 128
                                                            mem[mem[64] + 132] = mem[96]
                                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                            if ceil32(mem[96]) <= mem[96]:
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _36037 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_36037] == Mask(32, 224, mem[_36037])
                                                                if Mask(32, 224, mem[_36037]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            else:
                                                                mem[mem[96] + mem[64] + 164] = 0
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _36038 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_36038] == Mask(32, 224, mem[_36038])
                                                                if Mask(32, 224, mem[_36038]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        if not arg2:
                                                            revert with 0, 'ERC721: balance query for the zero address'
                                                        tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                        stor152[arg3] = balanceOf[address(arg2)]
                                                        approved[arg3] = 0
                                                        if not ownerOf[arg3]:
                                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                                        emit Approval(ownerOf[arg3], 0, arg3);
                                                        if balanceOf[address(arg1)] < 1:
                                                            revert with 0, 17
                                                        balanceOf[address(arg1)]--
                                                        if balanceOf[address(arg2)] > -2:
                                                            revert with 0, 17
                                                        balanceOf[address(arg2)]++
                                                        mem[0] = arg3
                                                        mem[32] = 103
                                                        ownerOf[arg3] = arg2
                                                        emit Transfer(arg1, arg2, arg3);
                                                        if ext_code.size(arg2):
                                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = msg.sender
                                                            mem[mem[64] + 36] = arg1
                                                            mem[mem[64] + 68] = arg3
                                                            mem[mem[64] + 100] = 128
                                                            mem[mem[64] + 132] = mem[96]
                                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                            if ceil32(mem[96]) <= mem[96]:
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _36039 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_36039] == Mask(32, 224, mem[_36039])
                                                                if Mask(32, 224, mem[_36039]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            else:
                                                                mem[mem[96] + mem[64] + 164] = 0
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _36040 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_36040] == Mask(32, 224, mem[_36040])
                                                                if Mask(32, 224, mem[_36040]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    if tokenByIndex.length < 1:
                                                        revert with 0, 17
                                                    if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                        revert with 0, 50
                                                    if stor154[arg3] >= tokenByIndex.length:
                                                        revert with 0, 50
                                                    tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                    stor154[stor153[stor153.length]] = stor154[arg3]
                                                    stor154[arg3] = 0
                                                    if not tokenByIndex.length:
                                                        revert with 0, 49
                                                    tokenByIndex[tokenByIndex.length] = 0
                                                    tokenByIndex.length--
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _36041 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_36041] == Mask(32, 224, mem[_36041])
                                                            if Mask(32, 224, mem[_36041]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _36042 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_36042] == Mask(32, 224, mem[_36042])
                                                            if Mask(32, 224, mem[_36042]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                tokenOfOwnerByIndex[address(arg1)][stor152[arg3]] = tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1]
                                                stor152[stor151[address(arg1)][stor104[address(arg1)] - 1]] = stor152[arg3]
                                                stor152[arg3] = 0
                                                tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                                                if arg2:
                                                    if arg2 == arg1:
                                                        approved[arg3] = 0
                                                        if not ownerOf[arg3]:
                                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                                        emit Approval(ownerOf[arg3], 0, arg3);
                                                        if balanceOf[address(arg1)] < 1:
                                                            revert with 0, 17
                                                        balanceOf[address(arg1)]--
                                                        if balanceOf[address(arg2)] > -2:
                                                            revert with 0, 17
                                                        balanceOf[address(arg2)]++
                                                        mem[0] = arg3
                                                        mem[32] = 103
                                                        ownerOf[arg3] = arg2
                                                        emit Transfer(arg1, arg2, arg3);
                                                        if ext_code.size(arg2):
                                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = msg.sender
                                                            mem[mem[64] + 36] = arg1
                                                            mem[mem[64] + 68] = arg3
                                                            mem[mem[64] + 100] = 128
                                                            mem[mem[64] + 132] = mem[96]
                                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                            if ceil32(mem[96]) <= mem[96]:
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _36043 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_36043] == Mask(32, 224, mem[_36043])
                                                                if Mask(32, 224, mem[_36043]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            else:
                                                                mem[mem[96] + mem[64] + 164] = 0
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _36044 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_36044] == Mask(32, 224, mem[_36044])
                                                                if Mask(32, 224, mem[_36044]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        if not arg2:
                                                            revert with 0, 'ERC721: balance query for the zero address'
                                                        tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                        stor152[arg3] = balanceOf[address(arg2)]
                                                        approved[arg3] = 0
                                                        if not ownerOf[arg3]:
                                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                                        emit Approval(ownerOf[arg3], 0, arg3);
                                                        if balanceOf[address(arg1)] < 1:
                                                            revert with 0, 17
                                                        balanceOf[address(arg1)]--
                                                        if balanceOf[address(arg2)] > -2:
                                                            revert with 0, 17
                                                        balanceOf[address(arg2)]++
                                                        mem[0] = arg3
                                                        mem[32] = 103
                                                        ownerOf[arg3] = arg2
                                                        emit Transfer(arg1, arg2, arg3);
                                                        if ext_code.size(arg2):
                                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = msg.sender
                                                            mem[mem[64] + 36] = arg1
                                                            mem[mem[64] + 68] = arg3
                                                            mem[mem[64] + 100] = 128
                                                            mem[mem[64] + 132] = mem[96]
                                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                            if ceil32(mem[96]) <= mem[96]:
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _36045 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_36045] == Mask(32, 224, mem[_36045])
                                                                if Mask(32, 224, mem[_36045]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            else:
                                                                mem[mem[96] + mem[64] + 164] = 0
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _36046 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_36046] == Mask(32, 224, mem[_36046])
                                                                if Mask(32, 224, mem[_36046]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    if tokenByIndex.length < 1:
                                                        revert with 0, 17
                                                    if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                        revert with 0, 50
                                                    if stor154[arg3] >= tokenByIndex.length:
                                                        revert with 0, 50
                                                    tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                    stor154[stor153[stor153.length]] = stor154[arg3]
                                                    stor154[arg3] = 0
                                                    if not tokenByIndex.length:
                                                        revert with 0, 49
                                                    tokenByIndex[tokenByIndex.length] = 0
                                                    tokenByIndex.length--
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _36047 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_36047] == Mask(32, 224, mem[_36047])
                                                            if Mask(32, 224, mem[_36047]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _36048 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_36048] == Mask(32, 224, mem[_36048])
                                                            if Mask(32, 224, mem[_36048]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
    else:
        if not ownerOf[arg3]:
            revert with 0, 'ERC721: approved query for nonexistent token'
        if approved[arg3] == msg.sender:
            if not ownerOf[arg3]:
                revert with 0, 'ERC721: owner query for nonexistent token'
            if ownerOf[arg3] != arg1:
                revert with 0, 'ERC721: transfer from incorrect owner'
            if not arg2:
                revert with 0, 'ERC721: transfer to the zero address'
            if paused:
                revert with 0, 'Pausable: paused'
            if not arg2:
                if not arg1:
                    stor154[arg3] = tokenByIndex.length
                    tokenByIndex.length++
                    stor72A1[stor153.length] = arg3
                else:
                    if arg1 != arg2:
                        if not arg1:
                            revert with 0, 'ERC721: balance query for the zero address'
                        if balanceOf[address(arg1)] < 1:
                            revert with 0, 17
                        if balanceOf[address(arg1)] - 1 != stor152[arg3]:
                            tokenOfOwnerByIndex[address(arg1)][stor152[arg3]] = tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1]
                            stor152[stor151[address(arg1)][stor104[address(arg1)] - 1]] = stor152[arg3]
                        stor152[arg3] = 0
                        tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                if arg2:
                    if arg2 != arg1:
                        if not arg2:
                            revert with 0, 'ERC721: balance query for the zero address'
                        tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                        stor152[arg3] = balanceOf[address(arg2)]
                else:
                    if tokenByIndex.length < 1:
                        revert with 0, 17
                    if tokenByIndex.length - 1 >= tokenByIndex.length:
                        revert with 0, 50
                    if stor154[arg3] >= tokenByIndex.length:
                        revert with 0, 50
                    tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                    stor154[stor153[stor153.length]] = stor154[arg3]
                    stor154[arg3] = 0
                    if not tokenByIndex.length:
                        revert with 0, 49
                    tokenByIndex[tokenByIndex.length] = 0
                    tokenByIndex.length--
                approved[arg3] = 0
                if not ownerOf[arg3]:
                    revert with 0, 'ERC721: owner query for nonexistent token'
                emit Approval(ownerOf[arg3], 0, arg3);
                if balanceOf[address(arg1)] < 1:
                    revert with 0, 17
                balanceOf[address(arg1)]--
                if balanceOf[address(arg2)] > -2:
                    revert with 0, 17
                balanceOf[address(arg2)]++
                ownerOf[arg3] = arg2
                emit Transfer(arg1, arg2, arg3);
                if ext_code.size(arg2):
                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                         gas gas_remaining wei
                        args msg.sender, address(arg1), arg3, Array(len=arg4.length, data=arg4[all])
                    if not ext_call.success:
                        if not return_data.size:
                            if not arg4.length:
                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                            revert with arg4[all]
                        if not return_data.size:
                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                    if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
            else:
                if owner == arg2:
                    if not arg1:
                        stor154[arg3] = tokenByIndex.length
                        tokenByIndex.length++
                        stor72A1[stor153.length] = arg3
                    else:
                        if arg1 != arg2:
                            if not arg1:
                                revert with 0, 'ERC721: balance query for the zero address'
                            if balanceOf[address(arg1)] < 1:
                                revert with 0, 17
                            if balanceOf[address(arg1)] - 1 != stor152[arg3]:
                                tokenOfOwnerByIndex[address(arg1)][stor152[arg3]] = tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1]
                                stor152[stor151[address(arg1)][stor104[address(arg1)] - 1]] = stor152[arg3]
                            stor152[arg3] = 0
                            tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                    if arg2:
                        if arg2 != arg1:
                            if not arg2:
                                revert with 0, 'ERC721: balance query for the zero address'
                            tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                            stor152[arg3] = balanceOf[address(arg2)]
                    else:
                        if tokenByIndex.length < 1:
                            revert with 0, 17
                        if tokenByIndex.length - 1 >= tokenByIndex.length:
                            revert with 0, 50
                        if stor154[arg3] >= tokenByIndex.length:
                            revert with 0, 50
                        tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                        stor154[stor153[stor153.length]] = stor154[arg3]
                        stor154[arg3] = 0
                        if not tokenByIndex.length:
                            revert with 0, 49
                        tokenByIndex[tokenByIndex.length] = 0
                        tokenByIndex.length--
                    approved[arg3] = 0
                    if not ownerOf[arg3]:
                        revert with 0, 'ERC721: owner query for nonexistent token'
                    emit Approval(ownerOf[arg3], 0, arg3);
                    if balanceOf[address(arg1)] < 1:
                        revert with 0, 17
                    balanceOf[address(arg1)]--
                    if balanceOf[address(arg2)] > -2:
                        revert with 0, 17
                    balanceOf[address(arg2)]++
                    ownerOf[arg3] = arg2
                    emit Transfer(arg1, arg2, arg3);
                    if ext_code.size(arg2):
                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                             gas gas_remaining wei
                            args msg.sender, address(arg1), arg3, Array(len=arg4.length, data=arg4[all])
                        if not ext_call.success:
                            if not return_data.size:
                                if not arg4.length:
                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                revert with arg4[all]
                            if not return_data.size:
                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                        if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                else:
                    if bool(uint8(stor552[arg3].field_1536)) != 1:
                        if not arg1:
                            stor154[arg3] = tokenByIndex.length
                            tokenByIndex.length++
                            stor72A1[stor153.length] = arg3
                        else:
                            if arg1 != arg2:
                                if not arg1:
                                    revert with 0, 'ERC721: balance query for the zero address'
                                if balanceOf[address(arg1)] < 1:
                                    revert with 0, 17
                                if balanceOf[address(arg1)] - 1 != stor152[arg3]:
                                    tokenOfOwnerByIndex[address(arg1)][stor152[arg3]] = tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1]
                                    stor152[stor151[address(arg1)][stor104[address(arg1)] - 1]] = stor152[arg3]
                                stor152[arg3] = 0
                                tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                        if arg2:
                            if arg2 != arg1:
                                if not arg2:
                                    revert with 0, 'ERC721: balance query for the zero address'
                                tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                stor152[arg3] = balanceOf[address(arg2)]
                        else:
                            if tokenByIndex.length < 1:
                                revert with 0, 17
                            if tokenByIndex.length - 1 >= tokenByIndex.length:
                                revert with 0, 50
                            if stor154[arg3] >= tokenByIndex.length:
                                revert with 0, 50
                            tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                            stor154[stor153[stor153.length]] = stor154[arg3]
                            stor154[arg3] = 0
                            if not tokenByIndex.length:
                                revert with 0, 49
                            tokenByIndex[tokenByIndex.length] = 0
                            tokenByIndex.length--
                        approved[arg3] = 0
                        if not ownerOf[arg3]:
                            revert with 0, 'ERC721: owner query for nonexistent token'
                        emit Approval(ownerOf[arg3], 0, arg3);
                        if balanceOf[address(arg1)] < 1:
                            revert with 0, 17
                        balanceOf[address(arg1)]--
                        if balanceOf[address(arg2)] > -2:
                            revert with 0, 17
                        balanceOf[address(arg2)]++
                        ownerOf[arg3] = arg2
                        emit Transfer(arg1, arg2, arg3);
                        if ext_code.size(arg2):
                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args msg.sender, address(arg1), arg3, Array(len=arg4.length, data=arg4[all])
                            if not ext_call.success:
                                if not return_data.size:
                                    if not arg4.length:
                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                    revert with arg4[all]
                                if not return_data.size:
                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                            if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                    else:
                        if bool(uint8(stor552[arg3].field_1544)) != 1:
                            if not arg1:
                                stor154[arg3] = tokenByIndex.length
                                tokenByIndex.length++
                                stor72A1[stor153.length] = arg3
                            else:
                                if arg1 != arg2:
                                    if not arg1:
                                        revert with 0, 'ERC721: balance query for the zero address'
                                    if balanceOf[address(arg1)] < 1:
                                        revert with 0, 17
                                    if balanceOf[address(arg1)] - 1 != stor152[arg3]:
                                        tokenOfOwnerByIndex[address(arg1)][stor152[arg3]] = tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1]
                                        stor152[stor151[address(arg1)][stor104[address(arg1)] - 1]] = stor152[arg3]
                                    stor152[arg3] = 0
                                    tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                            if arg2:
                                if arg2 != arg1:
                                    if not arg2:
                                        revert with 0, 'ERC721: balance query for the zero address'
                                    tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                    stor152[arg3] = balanceOf[address(arg2)]
                            else:
                                if tokenByIndex.length < 1:
                                    revert with 0, 17
                                if tokenByIndex.length - 1 >= tokenByIndex.length:
                                    revert with 0, 50
                                if stor154[arg3] >= tokenByIndex.length:
                                    revert with 0, 50
                                tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                stor154[stor153[stor153.length]] = stor154[arg3]
                                stor154[arg3] = 0
                                if not tokenByIndex.length:
                                    revert with 0, 49
                                tokenByIndex[tokenByIndex.length] = 0
                                tokenByIndex.length--
                            approved[arg3] = 0
                            if not ownerOf[arg3]:
                                revert with 0, 'ERC721: owner query for nonexistent token'
                            emit Approval(ownerOf[arg3], 0, arg3);
                            if balanceOf[address(arg1)] < 1:
                                revert with 0, 17
                            balanceOf[address(arg1)]--
                            if balanceOf[address(arg2)] > -2:
                                revert with 0, 17
                            balanceOf[address(arg2)]++
                            ownerOf[arg3] = arg2
                            emit Transfer(arg1, arg2, arg3);
                            if ext_code.size(arg2):
                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args msg.sender, address(arg1), arg3, Array(len=arg4.length, data=arg4[all])
                                if not ext_call.success:
                                    if not return_data.size:
                                        if not arg4.length:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        revert with arg4[all]
                                    if not return_data.size:
                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                        else:
                            if not liquidityPoolManagerImplementationAddress:
                                if not arg2:
                                    revert with 0, 'ERC721: balance query for the zero address'
                                if balanceOf[address(arg2)] > test266151307():
                                    revert with 0, 65
                                mem[ceil32(ceil32(arg4.length)) + 97] = balanceOf[address(arg2)]
                                mem[64] = ceil32(ceil32(arg4.length)) + (32 * balanceOf[address(arg2)]) + 129
                                if not balanceOf[address(arg2)]:
                                    idx = 0
                                    while idx < balanceOf[address(arg2)]:
                                        if not arg2:
                                            revert with 0, 'ERC721: balance query for the zero address'
                                        if idx >= balanceOf[address(arg2)]:
                                            revert with 0, 'ERC721Enumerable: owner index out of bounds'
                                        if tokenOfOwnerByIndex[address(arg2)][idx] <= 0:
                                            revert with 0, 'Troops: Id must be higher than zero'
                                        mem[0] = tokenOfOwnerByIndex[address(arg2)][idx]
                                        mem[32] = 552
                                        _18104 = mem[64]
                                        mem[64] = mem[64] + 256
                                        mem[_18104] = stor552[stor151[address(arg2)][idx]].field_0
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                                revert with 0, 34
                                            _20620 = mem[64]
                                            mem[64] = mem[64] + ceil32(uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) + 32
                                            mem[_20620] = uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                                if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                                    revert with 0, 34
                                                if Mask(256, -1, stor552[stor151[address(arg2)][idx]].field_256):
                                                    if 31 >= uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5:
                                                        mem[_20620 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                    else:
                                                        mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                        mem[_20620 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                        s = _20620 + 32
                                                        t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                        while _20620 + (uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) > s:
                                                            mem[s + 32] = stor1[t].field_0
                                                            s = s + 32
                                                            t = t + 1
                                                            continue 
                                            else:
                                                if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                                    revert with 0, 34
                                                if stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                    if 31 >= stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                        mem[_20620 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                    else:
                                                        mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                        mem[_20620 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                        s = _20620 + 32
                                                        t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                        while _20620 + stor552[stor151[address(arg2)][idx]].field_257 % 128 > s:
                                                            mem[s + 32] = stor1[t].field_0
                                                            s = s + 32
                                                            t = t + 1
                                                            continue 
                                            mem[_18104 + 32] = _20620
                                        else:
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                                revert with 0, 34
                                            _20659 = mem[64]
                                            mem[64] = mem[64] + ceil32(stor552[stor151[address(arg2)][idx]].field_257 % 128) + 32
                                            mem[_20659] = stor552[stor151[address(arg2)][idx]].field_257 % 128
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                                if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                                    revert with 0, 34
                                                if Mask(256, -1, stor552[stor151[address(arg2)][idx]].field_256):
                                                    if 31 >= uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5:
                                                        mem[_20659 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                    else:
                                                        mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                        mem[_20659 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                        s = _20659 + 32
                                                        t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                        while _20659 + (uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) > s:
                                                            mem[s + 32] = stor1[t].field_0
                                                            s = s + 32
                                                            t = t + 1
                                                            continue 
                                            else:
                                                if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                                    revert with 0, 34
                                                if stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                    if 31 >= stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                        mem[_20659 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                    else:
                                                        mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                        mem[_20659 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                        s = _20659 + 32
                                                        t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                        while _20659 + stor552[stor151[address(arg2)][idx]].field_257 % 128 > s:
                                                            mem[s + 32] = stor1[t].field_0
                                                            s = s + 32
                                                            t = t + 1
                                                            continue 
                                            mem[_18104 + 32] = _20659
                                        mem[_18104 + 64] = stor552[stor151[address(arg2)][idx]].field_512
                                        mem[_18104 + 96] = stor552[stor151[address(arg2)][idx]].field_768
                                        mem[_18104 + 128] = stor552[stor151[address(arg2)][idx]].field_1024
                                        mem[_18104 + 160] = stor552[stor151[address(arg2)][idx]].field_1280
                                        mem[_18104 + 192] = bool(uint8(stor552[stor151[address(arg2)][idx]].field_1536))
                                        mem[_18104 + 224] = bool(uint8(stor552[stor151[address(arg2)][idx]].field_1544))
                                        if not uint8(stor552[stor151[address(arg2)][idx]].field_1536):
                                            revert with 0, 'Troops: This troop doesn't exist'
                                        if idx >= mem[ceil32(ceil32(arg4.length)) + 97]:
                                            revert with 0, 50
                                        mem[(32 * idx) + ceil32(ceil32(arg4.length)) + 129] = tokenOfOwnerByIndex[address(arg2)][idx]
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        continue 
                                    idx = 0
                                    s = 0
                                    while idx < mem[ceil32(ceil32(arg4.length)) + 97]:
                                        if idx >= mem[ceil32(ceil32(arg4.length)) + 97]:
                                            revert with 0, 50
                                        mem[0] = mem[(32 * idx) + ceil32(ceil32(arg4.length)) + 129]
                                        mem[32] = 552
                                        if not uint8(stor552[mem[(32 * idx) + ceil32(ceil32(arg4.length)) + 129]].field_1544):
                                            if idx == -1:
                                                revert with 0, 17
                                            idx = idx + 1
                                            s = s
                                            continue 
                                        if s == -1:
                                            revert with 0, 17
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = s + 1
                                        continue 
                                    if s >= 2:
                                        revert with 0, 'Each holder can not hold more than 2 Gladiators'
                                    if not arg1:
                                        stor154[arg3] = tokenByIndex.length
                                        tokenByIndex.length++
                                        stor72A1[stor153.length] = arg3
                                        if arg2:
                                            if arg2 == arg1:
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _36073 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_36073] == Mask(32, 224, mem[_36073])
                                                        if Mask(32, 224, mem[_36073]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[96] + mem[64] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _36074 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_36074] == Mask(32, 224, mem[_36074])
                                                        if Mask(32, 224, mem[_36074]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if not arg2:
                                                    revert with 0, 'ERC721: balance query for the zero address'
                                                tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                stor152[arg3] = balanceOf[address(arg2)]
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _36075 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_36075] == Mask(32, 224, mem[_36075])
                                                        if Mask(32, 224, mem[_36075]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[96] + mem[64] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _36076 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_36076] == Mask(32, 224, mem[_36076])
                                                        if Mask(32, 224, mem[_36076]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            if tokenByIndex.length < 1:
                                                revert with 0, 17
                                            if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                revert with 0, 50
                                            if stor154[arg3] >= tokenByIndex.length:
                                                revert with 0, 50
                                            tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                            stor154[stor153[stor153.length]] = stor154[arg3]
                                            stor154[arg3] = 0
                                            if not tokenByIndex.length:
                                                revert with 0, 49
                                            tokenByIndex[tokenByIndex.length] = 0
                                            tokenByIndex.length--
                                            approved[arg3] = 0
                                            if not ownerOf[arg3]:
                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                            emit Approval(ownerOf[arg3], 0, arg3);
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            balanceOf[address(arg1)]--
                                            if balanceOf[address(arg2)] > -2:
                                                revert with 0, 17
                                            balanceOf[address(arg2)]++
                                            mem[0] = arg3
                                            mem[32] = 103
                                            ownerOf[arg3] = arg2
                                            emit Transfer(arg1, arg2, arg3);
                                            if ext_code.size(arg2):
                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = msg.sender
                                                mem[mem[64] + 36] = arg1
                                                mem[mem[64] + 68] = arg3
                                                mem[mem[64] + 100] = 128
                                                mem[mem[64] + 132] = mem[96]
                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                if ceil32(mem[96]) <= mem[96]:
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _36077 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_36077] == Mask(32, 224, mem[_36077])
                                                    if Mask(32, 224, mem[_36077]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    mem[mem[96] + mem[64] + 164] = 0
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _36078 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_36078] == Mask(32, 224, mem[_36078])
                                                    if Mask(32, 224, mem[_36078]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                    else:
                                        if arg1 == arg2:
                                            if arg2:
                                                if arg2 == arg1:
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _36055 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_36055] == Mask(32, 224, mem[_36055])
                                                            if Mask(32, 224, mem[_36055]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _36056 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_36056] == Mask(32, 224, mem[_36056])
                                                            if Mask(32, 224, mem[_36056]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    if not arg2:
                                                        revert with 0, 'ERC721: balance query for the zero address'
                                                    tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                    stor152[arg3] = balanceOf[address(arg2)]
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _36057 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_36057] == Mask(32, 224, mem[_36057])
                                                            if Mask(32, 224, mem[_36057]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _36058 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_36058] == Mask(32, 224, mem[_36058])
                                                            if Mask(32, 224, mem[_36058]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if tokenByIndex.length < 1:
                                                    revert with 0, 17
                                                if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                    revert with 0, 50
                                                if stor154[arg3] >= tokenByIndex.length:
                                                    revert with 0, 50
                                                tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                stor154[stor153[stor153.length]] = stor154[arg3]
                                                stor154[arg3] = 0
                                                if not tokenByIndex.length:
                                                    revert with 0, 49
                                                tokenByIndex[tokenByIndex.length] = 0
                                                tokenByIndex.length--
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _36059 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_36059] == Mask(32, 224, mem[_36059])
                                                        if Mask(32, 224, mem[_36059]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[96] + mem[64] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _36060 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_36060] == Mask(32, 224, mem[_36060])
                                                        if Mask(32, 224, mem[_36060]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            if not arg1:
                                                revert with 0, 'ERC721: balance query for the zero address'
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            if balanceOf[address(arg1)] - 1 == stor152[arg3]:
                                                stor152[arg3] = 0
                                                tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                                                if arg2:
                                                    if arg2 == arg1:
                                                        approved[arg3] = 0
                                                        if not ownerOf[arg3]:
                                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                                        emit Approval(ownerOf[arg3], 0, arg3);
                                                        if balanceOf[address(arg1)] < 1:
                                                            revert with 0, 17
                                                        balanceOf[address(arg1)]--
                                                        if balanceOf[address(arg2)] > -2:
                                                            revert with 0, 17
                                                        balanceOf[address(arg2)]++
                                                        mem[0] = arg3
                                                        mem[32] = 103
                                                        ownerOf[arg3] = arg2
                                                        emit Transfer(arg1, arg2, arg3);
                                                        if ext_code.size(arg2):
                                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = msg.sender
                                                            mem[mem[64] + 36] = arg1
                                                            mem[mem[64] + 68] = arg3
                                                            mem[mem[64] + 100] = 128
                                                            mem[mem[64] + 132] = mem[96]
                                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                            if ceil32(mem[96]) <= mem[96]:
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _36061 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_36061] == Mask(32, 224, mem[_36061])
                                                                if Mask(32, 224, mem[_36061]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            else:
                                                                mem[mem[96] + mem[64] + 164] = 0
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _36062 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_36062] == Mask(32, 224, mem[_36062])
                                                                if Mask(32, 224, mem[_36062]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        if not arg2:
                                                            revert with 0, 'ERC721: balance query for the zero address'
                                                        tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                        stor152[arg3] = balanceOf[address(arg2)]
                                                        approved[arg3] = 0
                                                        if not ownerOf[arg3]:
                                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                                        emit Approval(ownerOf[arg3], 0, arg3);
                                                        if balanceOf[address(arg1)] < 1:
                                                            revert with 0, 17
                                                        balanceOf[address(arg1)]--
                                                        if balanceOf[address(arg2)] > -2:
                                                            revert with 0, 17
                                                        balanceOf[address(arg2)]++
                                                        mem[0] = arg3
                                                        mem[32] = 103
                                                        ownerOf[arg3] = arg2
                                                        emit Transfer(arg1, arg2, arg3);
                                                        if ext_code.size(arg2):
                                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = msg.sender
                                                            mem[mem[64] + 36] = arg1
                                                            mem[mem[64] + 68] = arg3
                                                            mem[mem[64] + 100] = 128
                                                            mem[mem[64] + 132] = mem[96]
                                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                            if ceil32(mem[96]) <= mem[96]:
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _36063 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_36063] == Mask(32, 224, mem[_36063])
                                                                if Mask(32, 224, mem[_36063]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            else:
                                                                mem[mem[96] + mem[64] + 164] = 0
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _36064 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_36064] == Mask(32, 224, mem[_36064])
                                                                if Mask(32, 224, mem[_36064]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    if tokenByIndex.length < 1:
                                                        revert with 0, 17
                                                    if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                        revert with 0, 50
                                                    if stor154[arg3] >= tokenByIndex.length:
                                                        revert with 0, 50
                                                    tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                    stor154[stor153[stor153.length]] = stor154[arg3]
                                                    stor154[arg3] = 0
                                                    if not tokenByIndex.length:
                                                        revert with 0, 49
                                                    tokenByIndex[tokenByIndex.length] = 0
                                                    tokenByIndex.length--
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _36065 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_36065] == Mask(32, 224, mem[_36065])
                                                            if Mask(32, 224, mem[_36065]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _36066 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_36066] == Mask(32, 224, mem[_36066])
                                                            if Mask(32, 224, mem[_36066]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                tokenOfOwnerByIndex[address(arg1)][stor152[arg3]] = tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1]
                                                stor152[stor151[address(arg1)][stor104[address(arg1)] - 1]] = stor152[arg3]
                                                stor152[arg3] = 0
                                                tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                                                if arg2:
                                                    if arg2 == arg1:
                                                        approved[arg3] = 0
                                                        if not ownerOf[arg3]:
                                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                                        emit Approval(ownerOf[arg3], 0, arg3);
                                                        if balanceOf[address(arg1)] < 1:
                                                            revert with 0, 17
                                                        balanceOf[address(arg1)]--
                                                        if balanceOf[address(arg2)] > -2:
                                                            revert with 0, 17
                                                        balanceOf[address(arg2)]++
                                                        mem[0] = arg3
                                                        mem[32] = 103
                                                        ownerOf[arg3] = arg2
                                                        emit Transfer(arg1, arg2, arg3);
                                                        if ext_code.size(arg2):
                                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = msg.sender
                                                            mem[mem[64] + 36] = arg1
                                                            mem[mem[64] + 68] = arg3
                                                            mem[mem[64] + 100] = 128
                                                            mem[mem[64] + 132] = mem[96]
                                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                            if ceil32(mem[96]) <= mem[96]:
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _36067 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_36067] == Mask(32, 224, mem[_36067])
                                                                if Mask(32, 224, mem[_36067]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            else:
                                                                mem[mem[96] + mem[64] + 164] = 0
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _36068 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_36068] == Mask(32, 224, mem[_36068])
                                                                if Mask(32, 224, mem[_36068]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        if not arg2:
                                                            revert with 0, 'ERC721: balance query for the zero address'
                                                        tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                        stor152[arg3] = balanceOf[address(arg2)]
                                                        approved[arg3] = 0
                                                        if not ownerOf[arg3]:
                                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                                        emit Approval(ownerOf[arg3], 0, arg3);
                                                        if balanceOf[address(arg1)] < 1:
                                                            revert with 0, 17
                                                        balanceOf[address(arg1)]--
                                                        if balanceOf[address(arg2)] > -2:
                                                            revert with 0, 17
                                                        balanceOf[address(arg2)]++
                                                        mem[0] = arg3
                                                        mem[32] = 103
                                                        ownerOf[arg3] = arg2
                                                        emit Transfer(arg1, arg2, arg3);
                                                        if ext_code.size(arg2):
                                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = msg.sender
                                                            mem[mem[64] + 36] = arg1
                                                            mem[mem[64] + 68] = arg3
                                                            mem[mem[64] + 100] = 128
                                                            mem[mem[64] + 132] = mem[96]
                                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                            if ceil32(mem[96]) <= mem[96]:
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _36069 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_36069] == Mask(32, 224, mem[_36069])
                                                                if Mask(32, 224, mem[_36069]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            else:
                                                                mem[mem[96] + mem[64] + 164] = 0
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _36070 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_36070] == Mask(32, 224, mem[_36070])
                                                                if Mask(32, 224, mem[_36070]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    if tokenByIndex.length < 1:
                                                        revert with 0, 17
                                                    if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                        revert with 0, 50
                                                    if stor154[arg3] >= tokenByIndex.length:
                                                        revert with 0, 50
                                                    tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                    stor154[stor153[stor153.length]] = stor154[arg3]
                                                    stor154[arg3] = 0
                                                    if not tokenByIndex.length:
                                                        revert with 0, 49
                                                    tokenByIndex[tokenByIndex.length] = 0
                                                    tokenByIndex.length--
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _36071 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_36071] == Mask(32, 224, mem[_36071])
                                                            if Mask(32, 224, mem[_36071]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _36072 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_36072] == Mask(32, 224, mem[_36072])
                                                            if Mask(32, 224, mem[_36072]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                else:
                                    mem[ceil32(ceil32(arg4.length)) + 129 len 32 * balanceOf[address(arg2)]] = call.data[calldata.size len 32 * balanceOf[address(arg2)]]
                                    idx = 0
                                    while idx < balanceOf[address(arg2)]:
                                        if not arg2:
                                            revert with 0, 'ERC721: balance query for the zero address'
                                        if idx >= balanceOf[address(arg2)]:
                                            revert with 0, 'ERC721Enumerable: owner index out of bounds'
                                        if tokenOfOwnerByIndex[address(arg2)][idx] <= 0:
                                            revert with 0, 'Troops: Id must be higher than zero'
                                        mem[0] = tokenOfOwnerByIndex[address(arg2)][idx]
                                        mem[32] = 552
                                        _18107 = mem[64]
                                        mem[64] = mem[64] + 256
                                        mem[_18107] = stor552[stor151[address(arg2)][idx]].field_0
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                                revert with 0, 34
                                            _20622 = mem[64]
                                            mem[64] = mem[64] + ceil32(uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) + 32
                                            mem[_20622] = uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                                if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                                    revert with 0, 34
                                                if Mask(256, -1, stor552[stor151[address(arg2)][idx]].field_256):
                                                    if 31 >= uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5:
                                                        mem[_20622 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                    else:
                                                        mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                        mem[_20622 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                        s = _20622 + 32
                                                        t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                        while _20622 + (uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) > s:
                                                            mem[s + 32] = stor1[t].field_0
                                                            s = s + 32
                                                            t = t + 1
                                                            continue 
                                            else:
                                                if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                                    revert with 0, 34
                                                if stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                    if 31 >= stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                        mem[_20622 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                    else:
                                                        mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                        mem[_20622 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                        s = _20622 + 32
                                                        t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                        while _20622 + stor552[stor151[address(arg2)][idx]].field_257 % 128 > s:
                                                            mem[s + 32] = stor1[t].field_0
                                                            s = s + 32
                                                            t = t + 1
                                                            continue 
                                            mem[_18107 + 32] = _20622
                                        else:
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                                revert with 0, 34
                                            _20664 = mem[64]
                                            mem[64] = mem[64] + ceil32(stor552[stor151[address(arg2)][idx]].field_257 % 128) + 32
                                            mem[_20664] = stor552[stor151[address(arg2)][idx]].field_257 % 128
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                                if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                                    revert with 0, 34
                                                if Mask(256, -1, stor552[stor151[address(arg2)][idx]].field_256):
                                                    if 31 >= uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5:
                                                        mem[_20664 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                    else:
                                                        mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                        mem[_20664 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                        s = _20664 + 32
                                                        t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                        while _20664 + (uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) > s:
                                                            mem[s + 32] = stor1[t].field_0
                                                            s = s + 32
                                                            t = t + 1
                                                            continue 
                                            else:
                                                if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                                    revert with 0, 34
                                                if stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                    if 31 >= stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                        mem[_20664 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                    else:
                                                        mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                        mem[_20664 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                        s = _20664 + 32
                                                        t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                        while _20664 + stor552[stor151[address(arg2)][idx]].field_257 % 128 > s:
                                                            mem[s + 32] = stor1[t].field_0
                                                            s = s + 32
                                                            t = t + 1
                                                            continue 
                                            mem[_18107 + 32] = _20664
                                        mem[_18107 + 64] = stor552[stor151[address(arg2)][idx]].field_512
                                        mem[_18107 + 96] = stor552[stor151[address(arg2)][idx]].field_768
                                        mem[_18107 + 128] = stor552[stor151[address(arg2)][idx]].field_1024
                                        mem[_18107 + 160] = stor552[stor151[address(arg2)][idx]].field_1280
                                        mem[_18107 + 192] = bool(uint8(stor552[stor151[address(arg2)][idx]].field_1536))
                                        mem[_18107 + 224] = bool(uint8(stor552[stor151[address(arg2)][idx]].field_1544))
                                        if not uint8(stor552[stor151[address(arg2)][idx]].field_1536):
                                            revert with 0, 'Troops: This troop doesn't exist'
                                        if idx >= mem[ceil32(ceil32(arg4.length)) + 97]:
                                            revert with 0, 50
                                        mem[(32 * idx) + ceil32(ceil32(arg4.length)) + 129] = tokenOfOwnerByIndex[address(arg2)][idx]
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        continue 
                                    idx = 0
                                    s = 0
                                    while idx < mem[ceil32(ceil32(arg4.length)) + 97]:
                                        if idx >= mem[ceil32(ceil32(arg4.length)) + 97]:
                                            revert with 0, 50
                                        mem[0] = mem[(32 * idx) + ceil32(ceil32(arg4.length)) + 129]
                                        mem[32] = 552
                                        if not uint8(stor552[mem[(32 * idx) + ceil32(ceil32(arg4.length)) + 129]].field_1544):
                                            if idx == -1:
                                                revert with 0, 17
                                            idx = idx + 1
                                            s = s
                                            continue 
                                        if s == -1:
                                            revert with 0, 17
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = s + 1
                                        continue 
                                    if s >= 2:
                                        revert with 0, 'Each holder can not hold more than 2 Gladiators'
                                    if not arg1:
                                        stor154[arg3] = tokenByIndex.length
                                        tokenByIndex.length++
                                        stor72A1[stor153.length] = arg3
                                        if arg2:
                                            if arg2 == arg1:
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _36097 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_36097] == Mask(32, 224, mem[_36097])
                                                        if Mask(32, 224, mem[_36097]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[96] + mem[64] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _36098 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_36098] == Mask(32, 224, mem[_36098])
                                                        if Mask(32, 224, mem[_36098]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if not arg2:
                                                    revert with 0, 'ERC721: balance query for the zero address'
                                                tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                stor152[arg3] = balanceOf[address(arg2)]
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _36099 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_36099] == Mask(32, 224, mem[_36099])
                                                        if Mask(32, 224, mem[_36099]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[96] + mem[64] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _36100 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_36100] == Mask(32, 224, mem[_36100])
                                                        if Mask(32, 224, mem[_36100]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            if tokenByIndex.length < 1:
                                                revert with 0, 17
                                            if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                revert with 0, 50
                                            if stor154[arg3] >= tokenByIndex.length:
                                                revert with 0, 50
                                            tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                            stor154[stor153[stor153.length]] = stor154[arg3]
                                            stor154[arg3] = 0
                                            if not tokenByIndex.length:
                                                revert with 0, 49
                                            tokenByIndex[tokenByIndex.length] = 0
                                            tokenByIndex.length--
                                            approved[arg3] = 0
                                            if not ownerOf[arg3]:
                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                            emit Approval(ownerOf[arg3], 0, arg3);
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            balanceOf[address(arg1)]--
                                            if balanceOf[address(arg2)] > -2:
                                                revert with 0, 17
                                            balanceOf[address(arg2)]++
                                            mem[0] = arg3
                                            mem[32] = 103
                                            ownerOf[arg3] = arg2
                                            emit Transfer(arg1, arg2, arg3);
                                            if ext_code.size(arg2):
                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = msg.sender
                                                mem[mem[64] + 36] = arg1
                                                mem[mem[64] + 68] = arg3
                                                mem[mem[64] + 100] = 128
                                                mem[mem[64] + 132] = mem[96]
                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                if ceil32(mem[96]) <= mem[96]:
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _36101 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_36101] == Mask(32, 224, mem[_36101])
                                                    if Mask(32, 224, mem[_36101]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    mem[mem[96] + mem[64] + 164] = 0
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _36102 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_36102] == Mask(32, 224, mem[_36102])
                                                    if Mask(32, 224, mem[_36102]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                    else:
                                        if arg1 == arg2:
                                            if arg2:
                                                if arg2 == arg1:
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _36079 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_36079] == Mask(32, 224, mem[_36079])
                                                            if Mask(32, 224, mem[_36079]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _36080 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_36080] == Mask(32, 224, mem[_36080])
                                                            if Mask(32, 224, mem[_36080]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    if not arg2:
                                                        revert with 0, 'ERC721: balance query for the zero address'
                                                    tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                    stor152[arg3] = balanceOf[address(arg2)]
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _36081 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_36081] == Mask(32, 224, mem[_36081])
                                                            if Mask(32, 224, mem[_36081]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _36082 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_36082] == Mask(32, 224, mem[_36082])
                                                            if Mask(32, 224, mem[_36082]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if tokenByIndex.length < 1:
                                                    revert with 0, 17
                                                if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                    revert with 0, 50
                                                if stor154[arg3] >= tokenByIndex.length:
                                                    revert with 0, 50
                                                tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                stor154[stor153[stor153.length]] = stor154[arg3]
                                                stor154[arg3] = 0
                                                if not tokenByIndex.length:
                                                    revert with 0, 49
                                                tokenByIndex[tokenByIndex.length] = 0
                                                tokenByIndex.length--
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _36083 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_36083] == Mask(32, 224, mem[_36083])
                                                        if Mask(32, 224, mem[_36083]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[96] + mem[64] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _36084 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_36084] == Mask(32, 224, mem[_36084])
                                                        if Mask(32, 224, mem[_36084]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            if not arg1:
                                                revert with 0, 'ERC721: balance query for the zero address'
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            if balanceOf[address(arg1)] - 1 == stor152[arg3]:
                                                stor152[arg3] = 0
                                                tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                                                if arg2:
                                                    if arg2 == arg1:
                                                        approved[arg3] = 0
                                                        if not ownerOf[arg3]:
                                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                                        emit Approval(ownerOf[arg3], 0, arg3);
                                                        if balanceOf[address(arg1)] < 1:
                                                            revert with 0, 17
                                                        balanceOf[address(arg1)]--
                                                        if balanceOf[address(arg2)] > -2:
                                                            revert with 0, 17
                                                        balanceOf[address(arg2)]++
                                                        mem[0] = arg3
                                                        mem[32] = 103
                                                        ownerOf[arg3] = arg2
                                                        emit Transfer(arg1, arg2, arg3);
                                                        if ext_code.size(arg2):
                                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = msg.sender
                                                            mem[mem[64] + 36] = arg1
                                                            mem[mem[64] + 68] = arg3
                                                            mem[mem[64] + 100] = 128
                                                            mem[mem[64] + 132] = mem[96]
                                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                            if ceil32(mem[96]) <= mem[96]:
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _36085 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_36085] == Mask(32, 224, mem[_36085])
                                                                if Mask(32, 224, mem[_36085]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            else:
                                                                mem[mem[96] + mem[64] + 164] = 0
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _36086 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_36086] == Mask(32, 224, mem[_36086])
                                                                if Mask(32, 224, mem[_36086]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        if not arg2:
                                                            revert with 0, 'ERC721: balance query for the zero address'
                                                        tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                        stor152[arg3] = balanceOf[address(arg2)]
                                                        approved[arg3] = 0
                                                        if not ownerOf[arg3]:
                                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                                        emit Approval(ownerOf[arg3], 0, arg3);
                                                        if balanceOf[address(arg1)] < 1:
                                                            revert with 0, 17
                                                        balanceOf[address(arg1)]--
                                                        if balanceOf[address(arg2)] > -2:
                                                            revert with 0, 17
                                                        balanceOf[address(arg2)]++
                                                        mem[0] = arg3
                                                        mem[32] = 103
                                                        ownerOf[arg3] = arg2
                                                        emit Transfer(arg1, arg2, arg3);
                                                        if ext_code.size(arg2):
                                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = msg.sender
                                                            mem[mem[64] + 36] = arg1
                                                            mem[mem[64] + 68] = arg3
                                                            mem[mem[64] + 100] = 128
                                                            mem[mem[64] + 132] = mem[96]
                                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                            if ceil32(mem[96]) <= mem[96]:
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _36087 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_36087] == Mask(32, 224, mem[_36087])
                                                                if Mask(32, 224, mem[_36087]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            else:
                                                                mem[mem[96] + mem[64] + 164] = 0
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _36088 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_36088] == Mask(32, 224, mem[_36088])
                                                                if Mask(32, 224, mem[_36088]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    if tokenByIndex.length < 1:
                                                        revert with 0, 17
                                                    if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                        revert with 0, 50
                                                    if stor154[arg3] >= tokenByIndex.length:
                                                        revert with 0, 50
                                                    tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                    stor154[stor153[stor153.length]] = stor154[arg3]
                                                    stor154[arg3] = 0
                                                    if not tokenByIndex.length:
                                                        revert with 0, 49
                                                    tokenByIndex[tokenByIndex.length] = 0
                                                    tokenByIndex.length--
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _36089 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_36089] == Mask(32, 224, mem[_36089])
                                                            if Mask(32, 224, mem[_36089]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _36090 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_36090] == Mask(32, 224, mem[_36090])
                                                            if Mask(32, 224, mem[_36090]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                tokenOfOwnerByIndex[address(arg1)][stor152[arg3]] = tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1]
                                                stor152[stor151[address(arg1)][stor104[address(arg1)] - 1]] = stor152[arg3]
                                                stor152[arg3] = 0
                                                tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                                                if arg2:
                                                    if arg2 == arg1:
                                                        approved[arg3] = 0
                                                        if not ownerOf[arg3]:
                                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                                        emit Approval(ownerOf[arg3], 0, arg3);
                                                        if balanceOf[address(arg1)] < 1:
                                                            revert with 0, 17
                                                        balanceOf[address(arg1)]--
                                                        if balanceOf[address(arg2)] > -2:
                                                            revert with 0, 17
                                                        balanceOf[address(arg2)]++
                                                        mem[0] = arg3
                                                        mem[32] = 103
                                                        ownerOf[arg3] = arg2
                                                        emit Transfer(arg1, arg2, arg3);
                                                        if ext_code.size(arg2):
                                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = msg.sender
                                                            mem[mem[64] + 36] = arg1
                                                            mem[mem[64] + 68] = arg3
                                                            mem[mem[64] + 100] = 128
                                                            mem[mem[64] + 132] = mem[96]
                                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                            if ceil32(mem[96]) <= mem[96]:
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _36091 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_36091] == Mask(32, 224, mem[_36091])
                                                                if Mask(32, 224, mem[_36091]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            else:
                                                                mem[mem[96] + mem[64] + 164] = 0
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _36092 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_36092] == Mask(32, 224, mem[_36092])
                                                                if Mask(32, 224, mem[_36092]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        if not arg2:
                                                            revert with 0, 'ERC721: balance query for the zero address'
                                                        tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                        stor152[arg3] = balanceOf[address(arg2)]
                                                        approved[arg3] = 0
                                                        if not ownerOf[arg3]:
                                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                                        emit Approval(ownerOf[arg3], 0, arg3);
                                                        if balanceOf[address(arg1)] < 1:
                                                            revert with 0, 17
                                                        balanceOf[address(arg1)]--
                                                        if balanceOf[address(arg2)] > -2:
                                                            revert with 0, 17
                                                        balanceOf[address(arg2)]++
                                                        mem[0] = arg3
                                                        mem[32] = 103
                                                        ownerOf[arg3] = arg2
                                                        emit Transfer(arg1, arg2, arg3);
                                                        if ext_code.size(arg2):
                                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = msg.sender
                                                            mem[mem[64] + 36] = arg1
                                                            mem[mem[64] + 68] = arg3
                                                            mem[mem[64] + 100] = 128
                                                            mem[mem[64] + 132] = mem[96]
                                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                            if ceil32(mem[96]) <= mem[96]:
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _36093 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_36093] == Mask(32, 224, mem[_36093])
                                                                if Mask(32, 224, mem[_36093]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            else:
                                                                mem[mem[96] + mem[64] + 164] = 0
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _36094 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_36094] == Mask(32, 224, mem[_36094])
                                                                if Mask(32, 224, mem[_36094]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    if tokenByIndex.length < 1:
                                                        revert with 0, 17
                                                    if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                        revert with 0, 50
                                                    if stor154[arg3] >= tokenByIndex.length:
                                                        revert with 0, 50
                                                    tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                    stor154[stor153[stor153.length]] = stor154[arg3]
                                                    stor154[arg3] = 0
                                                    if not tokenByIndex.length:
                                                        revert with 0, 49
                                                    tokenByIndex[tokenByIndex.length] = 0
                                                    tokenByIndex.length--
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _36095 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_36095] == Mask(32, 224, mem[_36095])
                                                            if Mask(32, 224, mem[_36095]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _36096 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_36096] == Mask(32, 224, mem[_36096])
                                                            if Mask(32, 224, mem[_36096]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                            else:
                                mem[ceil32(ceil32(arg4.length)) + 101] = arg2
                                staticcall liquidityPoolManagerImplementationAddress.0xb278110f with:
                                        gas gas_remaining wei
                                       args arg2
                                mem[ceil32(ceil32(arg4.length)) + 97] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                if ext_call.return_data[0]:
                                    if not arg1:
                                        stor154[arg3] = tokenByIndex.length
                                        tokenByIndex.length++
                                        stor72A1[stor153.length] = arg3
                                    else:
                                        if arg1 != arg2:
                                            if not arg1:
                                                revert with 0, 'ERC721: balance query for the zero address'
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            if balanceOf[address(arg1)] - 1 != stor152[arg3]:
                                                tokenOfOwnerByIndex[address(arg1)][stor152[arg3]] = tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1]
                                                stor152[stor151[address(arg1)][stor104[address(arg1)] - 1]] = stor152[arg3]
                                            stor152[arg3] = 0
                                            tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                                    if arg2:
                                        if arg2 != arg1:
                                            if not arg2:
                                                revert with 0, 'ERC721: balance query for the zero address'
                                            tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                            stor152[arg3] = balanceOf[address(arg2)]
                                    else:
                                        if tokenByIndex.length < 1:
                                            revert with 0, 17
                                        if tokenByIndex.length - 1 >= tokenByIndex.length:
                                            revert with 0, 50
                                        if stor154[arg3] >= tokenByIndex.length:
                                            revert with 0, 50
                                        tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                        stor154[stor153[stor153.length]] = stor154[arg3]
                                        stor154[arg3] = 0
                                        if not tokenByIndex.length:
                                            revert with 0, 49
                                        tokenByIndex[tokenByIndex.length] = 0
                                        tokenByIndex.length--
                                    approved[arg3] = 0
                                    if not ownerOf[arg3]:
                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                    emit Approval(ownerOf[arg3], 0, arg3);
                                    if balanceOf[address(arg1)] < 1:
                                        revert with 0, 17
                                    balanceOf[address(arg1)]--
                                    if balanceOf[address(arg2)] > -2:
                                        revert with 0, 17
                                    balanceOf[address(arg2)]++
                                    ownerOf[arg3] = arg2
                                    emit Transfer(arg1, arg2, arg3);
                                    if ext_code.size(arg2):
                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args msg.sender, address(arg1), arg3, Array(len=arg4.length, data=arg4[all])
                                        if not ext_call.success:
                                            if not return_data.size:
                                                if not arg4.length:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                revert with arg4[all]
                                            if not return_data.size:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                        if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                else:
                                    if not arg2:
                                        revert with 0, 'ERC721: balance query for the zero address'
                                    if balanceOf[address(arg2)] > test266151307():
                                        revert with 0, 65
                                    mem[ceil32(ceil32(arg4.length)) + ceil32(return_data.size) + 97] = balanceOf[address(arg2)]
                                    mem[64] = ceil32(ceil32(arg4.length)) + ceil32(return_data.size) + (32 * balanceOf[address(arg2)]) + 129
                                    if not balanceOf[address(arg2)]:
                                        idx = 0
                                        while idx < balanceOf[address(arg2)]:
                                            if not arg2:
                                                revert with 0, 'ERC721: balance query for the zero address'
                                            if idx >= balanceOf[address(arg2)]:
                                                revert with 0, 'ERC721Enumerable: owner index out of bounds'
                                            if tokenOfOwnerByIndex[address(arg2)][idx] <= 0:
                                                revert with 0, 'Troops: Id must be higher than zero'
                                            mem[0] = tokenOfOwnerByIndex[address(arg2)][idx]
                                            mem[32] = 552
                                            _18158 = mem[64]
                                            mem[64] = mem[64] + 256
                                            mem[_18158] = stor552[stor151[address(arg2)][idx]].field_0
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                                if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                                    revert with 0, 34
                                                _20624 = mem[64]
                                                mem[64] = mem[64] + ceil32(uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) + 32
                                                mem[_20624] = uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5
                                                if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                                    if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                                        revert with 0, 34
                                                    if Mask(256, -1, stor552[stor151[address(arg2)][idx]].field_256):
                                                        if 31 >= uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5:
                                                            mem[_20624 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                        else:
                                                            mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                            mem[_20624 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                            s = _20624 + 32
                                                            t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                            while _20624 + (uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) > s:
                                                                mem[s + 32] = stor1[t].field_0
                                                                s = s + 32
                                                                t = t + 1
                                                                continue 
                                                else:
                                                    if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                                        revert with 0, 34
                                                    if stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                        if 31 >= stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                            mem[_20624 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                        else:
                                                            mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                            mem[_20624 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                            s = _20624 + 32
                                                            t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                            while _20624 + stor552[stor151[address(arg2)][idx]].field_257 % 128 > s:
                                                                mem[s + 32] = stor1[t].field_0
                                                                s = s + 32
                                                                t = t + 1
                                                                continue 
                                                mem[_18158 + 32] = _20624
                                            else:
                                                if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                                    revert with 0, 34
                                                _20669 = mem[64]
                                                mem[64] = mem[64] + ceil32(stor552[stor151[address(arg2)][idx]].field_257 % 128) + 32
                                                mem[_20669] = stor552[stor151[address(arg2)][idx]].field_257 % 128
                                                if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                                    if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                                        revert with 0, 34
                                                    if Mask(256, -1, stor552[stor151[address(arg2)][idx]].field_256):
                                                        if 31 >= uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5:
                                                            mem[_20669 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                        else:
                                                            mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                            mem[_20669 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                            s = _20669 + 32
                                                            t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                            while _20669 + (uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) > s:
                                                                mem[s + 32] = stor1[t].field_0
                                                                s = s + 32
                                                                t = t + 1
                                                                continue 
                                                else:
                                                    if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                                        revert with 0, 34
                                                    if stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                        if 31 >= stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                            mem[_20669 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                        else:
                                                            mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                            mem[_20669 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                            s = _20669 + 32
                                                            t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                            while _20669 + stor552[stor151[address(arg2)][idx]].field_257 % 128 > s:
                                                                mem[s + 32] = stor1[t].field_0
                                                                s = s + 32
                                                                t = t + 1
                                                                continue 
                                                mem[_18158 + 32] = _20669
                                            mem[_18158 + 64] = stor552[stor151[address(arg2)][idx]].field_512
                                            mem[_18158 + 96] = stor552[stor151[address(arg2)][idx]].field_768
                                            mem[_18158 + 128] = stor552[stor151[address(arg2)][idx]].field_1024
                                            mem[_18158 + 160] = stor552[stor151[address(arg2)][idx]].field_1280
                                            mem[_18158 + 192] = bool(uint8(stor552[stor151[address(arg2)][idx]].field_1536))
                                            mem[_18158 + 224] = bool(uint8(stor552[stor151[address(arg2)][idx]].field_1544))
                                            if not uint8(stor552[stor151[address(arg2)][idx]].field_1536):
                                                revert with 0, 'Troops: This troop doesn't exist'
                                            if idx >= mem[ceil32(ceil32(arg4.length)) + ceil32(return_data.size) + 97]:
                                                revert with 0, 50
                                            mem[(32 * idx) + ceil32(ceil32(arg4.length)) + ceil32(return_data.size) + 129] = tokenOfOwnerByIndex[address(arg2)][idx]
                                            if idx == -1:
                                                revert with 0, 17
                                            idx = idx + 1
                                            continue 
                                        idx = 0
                                        s = 0
                                        while idx < mem[ceil32(ceil32(arg4.length)) + ceil32(return_data.size) + 97]:
                                            if idx >= mem[ceil32(ceil32(arg4.length)) + ceil32(return_data.size) + 97]:
                                                revert with 0, 50
                                            mem[0] = mem[(32 * idx) + ceil32(ceil32(arg4.length)) + ceil32(return_data.size) + 129]
                                            mem[32] = 552
                                            if not uint8(stor552[mem[(32 * idx) + ceil32(ceil32(arg4.length)) + ceil32(return_data.size) + 129]].field_1544):
                                                if idx == -1:
                                                    revert with 0, 17
                                                idx = idx + 1
                                                s = s
                                                continue 
                                            if s == -1:
                                                revert with 0, 17
                                            if idx == -1:
                                                revert with 0, 17
                                            idx = idx + 1
                                            s = s + 1
                                            continue 
                                        if s >= 2:
                                            revert with 0, 'Each holder can not hold more than 2 Gladiators'
                                        if not arg1:
                                            stor154[arg3] = tokenByIndex.length
                                            tokenByIndex.length++
                                            stor72A1[stor153.length] = arg3
                                            if arg2:
                                                if arg2 == arg1:
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _36121 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_36121] == Mask(32, 224, mem[_36121])
                                                            if Mask(32, 224, mem[_36121]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _36122 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_36122] == Mask(32, 224, mem[_36122])
                                                            if Mask(32, 224, mem[_36122]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    if not arg2:
                                                        revert with 0, 'ERC721: balance query for the zero address'
                                                    tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                    stor152[arg3] = balanceOf[address(arg2)]
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _36123 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_36123] == Mask(32, 224, mem[_36123])
                                                            if Mask(32, 224, mem[_36123]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _36124 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_36124] == Mask(32, 224, mem[_36124])
                                                            if Mask(32, 224, mem[_36124]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if tokenByIndex.length < 1:
                                                    revert with 0, 17
                                                if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                    revert with 0, 50
                                                if stor154[arg3] >= tokenByIndex.length:
                                                    revert with 0, 50
                                                tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                stor154[stor153[stor153.length]] = stor154[arg3]
                                                stor154[arg3] = 0
                                                if not tokenByIndex.length:
                                                    revert with 0, 49
                                                tokenByIndex[tokenByIndex.length] = 0
                                                tokenByIndex.length--
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _36125 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_36125] == Mask(32, 224, mem[_36125])
                                                        if Mask(32, 224, mem[_36125]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[96] + mem[64] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _36126 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_36126] == Mask(32, 224, mem[_36126])
                                                        if Mask(32, 224, mem[_36126]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            if arg1 == arg2:
                                                if arg2:
                                                    if arg2 == arg1:
                                                        approved[arg3] = 0
                                                        if not ownerOf[arg3]:
                                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                                        emit Approval(ownerOf[arg3], 0, arg3);
                                                        if balanceOf[address(arg1)] < 1:
                                                            revert with 0, 17
                                                        balanceOf[address(arg1)]--
                                                        if balanceOf[address(arg2)] > -2:
                                                            revert with 0, 17
                                                        balanceOf[address(arg2)]++
                                                        mem[0] = arg3
                                                        mem[32] = 103
                                                        ownerOf[arg3] = arg2
                                                        emit Transfer(arg1, arg2, arg3);
                                                        if ext_code.size(arg2):
                                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = msg.sender
                                                            mem[mem[64] + 36] = arg1
                                                            mem[mem[64] + 68] = arg3
                                                            mem[mem[64] + 100] = 128
                                                            mem[mem[64] + 132] = mem[96]
                                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                            if ceil32(mem[96]) <= mem[96]:
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _36103 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_36103] == Mask(32, 224, mem[_36103])
                                                                if Mask(32, 224, mem[_36103]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            else:
                                                                mem[mem[96] + mem[64] + 164] = 0
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _36104 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_36104] == Mask(32, 224, mem[_36104])
                                                                if Mask(32, 224, mem[_36104]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        if not arg2:
                                                            revert with 0, 'ERC721: balance query for the zero address'
                                                        tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                        stor152[arg3] = balanceOf[address(arg2)]
                                                        approved[arg3] = 0
                                                        if not ownerOf[arg3]:
                                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                                        emit Approval(ownerOf[arg3], 0, arg3);
                                                        if balanceOf[address(arg1)] < 1:
                                                            revert with 0, 17
                                                        balanceOf[address(arg1)]--
                                                        if balanceOf[address(arg2)] > -2:
                                                            revert with 0, 17
                                                        balanceOf[address(arg2)]++
                                                        mem[0] = arg3
                                                        mem[32] = 103
                                                        ownerOf[arg3] = arg2
                                                        emit Transfer(arg1, arg2, arg3);
                                                        if ext_code.size(arg2):
                                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = msg.sender
                                                            mem[mem[64] + 36] = arg1
                                                            mem[mem[64] + 68] = arg3
                                                            mem[mem[64] + 100] = 128
                                                            mem[mem[64] + 132] = mem[96]
                                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                            if ceil32(mem[96]) <= mem[96]:
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _36105 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_36105] == Mask(32, 224, mem[_36105])
                                                                if Mask(32, 224, mem[_36105]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            else:
                                                                mem[mem[96] + mem[64] + 164] = 0
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _36106 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_36106] == Mask(32, 224, mem[_36106])
                                                                if Mask(32, 224, mem[_36106]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    if tokenByIndex.length < 1:
                                                        revert with 0, 17
                                                    if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                        revert with 0, 50
                                                    if stor154[arg3] >= tokenByIndex.length:
                                                        revert with 0, 50
                                                    tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                    stor154[stor153[stor153.length]] = stor154[arg3]
                                                    stor154[arg3] = 0
                                                    if not tokenByIndex.length:
                                                        revert with 0, 49
                                                    tokenByIndex[tokenByIndex.length] = 0
                                                    tokenByIndex.length--
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _36107 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_36107] == Mask(32, 224, mem[_36107])
                                                            if Mask(32, 224, mem[_36107]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _36108 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_36108] == Mask(32, 224, mem[_36108])
                                                            if Mask(32, 224, mem[_36108]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if not arg1:
                                                    revert with 0, 'ERC721: balance query for the zero address'
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                if balanceOf[address(arg1)] - 1 == stor152[arg3]:
                                                    stor152[arg3] = 0
                                                    tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                                                    if arg2:
                                                        if arg2 == arg1:
                                                            approved[arg3] = 0
                                                            if not ownerOf[arg3]:
                                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                                            emit Approval(ownerOf[arg3], 0, arg3);
                                                            if balanceOf[address(arg1)] < 1:
                                                                revert with 0, 17
                                                            balanceOf[address(arg1)]--
                                                            if balanceOf[address(arg2)] > -2:
                                                                revert with 0, 17
                                                            balanceOf[address(arg2)]++
                                                            mem[0] = arg3
                                                            mem[32] = 103
                                                            ownerOf[arg3] = arg2
                                                            emit Transfer(arg1, arg2, arg3);
                                                            if ext_code.size(arg2):
                                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = msg.sender
                                                                mem[mem[64] + 36] = arg1
                                                                mem[mem[64] + 68] = arg3
                                                                mem[mem[64] + 100] = 128
                                                                mem[mem[64] + 132] = mem[96]
                                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                                if ceil32(mem[96]) <= mem[96]:
                                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                         gas gas_remaining wei
                                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                    mem[mem[64]] = ext_call.return_data[0]
                                                                    if not ext_call.success:
                                                                        if not return_data.size:
                                                                            if not mem[96]:
                                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                            revert with memory
                                                                              from 128
                                                                               len mem[96]
                                                                        if not return_data.size:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    _36109 = mem[64]
                                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                                    require return_data.size >= 32
                                                                    require mem[_36109] == Mask(32, 224, mem[_36109])
                                                                    if Mask(32, 224, mem[_36109]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                else:
                                                                    mem[mem[96] + mem[64] + 164] = 0
                                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                         gas gas_remaining wei
                                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                    mem[mem[64]] = ext_call.return_data[0]
                                                                    if not ext_call.success:
                                                                        if not return_data.size:
                                                                            if not mem[96]:
                                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                            revert with memory
                                                                              from 128
                                                                               len mem[96]
                                                                        if not return_data.size:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    _36110 = mem[64]
                                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                                    require return_data.size >= 32
                                                                    require mem[_36110] == Mask(32, 224, mem[_36110])
                                                                    if Mask(32, 224, mem[_36110]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            if not arg2:
                                                                revert with 0, 'ERC721: balance query for the zero address'
                                                            tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                            stor152[arg3] = balanceOf[address(arg2)]
                                                            approved[arg3] = 0
                                                            if not ownerOf[arg3]:
                                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                                            emit Approval(ownerOf[arg3], 0, arg3);
                                                            if balanceOf[address(arg1)] < 1:
                                                                revert with 0, 17
                                                            balanceOf[address(arg1)]--
                                                            if balanceOf[address(arg2)] > -2:
                                                                revert with 0, 17
                                                            balanceOf[address(arg2)]++
                                                            mem[0] = arg3
                                                            mem[32] = 103
                                                            ownerOf[arg3] = arg2
                                                            emit Transfer(arg1, arg2, arg3);
                                                            if ext_code.size(arg2):
                                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = msg.sender
                                                                mem[mem[64] + 36] = arg1
                                                                mem[mem[64] + 68] = arg3
                                                                mem[mem[64] + 100] = 128
                                                                mem[mem[64] + 132] = mem[96]
                                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                                if ceil32(mem[96]) <= mem[96]:
                                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                         gas gas_remaining wei
                                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                    mem[mem[64]] = ext_call.return_data[0]
                                                                    if not ext_call.success:
                                                                        if not return_data.size:
                                                                            if not mem[96]:
                                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                            revert with memory
                                                                              from 128
                                                                               len mem[96]
                                                                        if not return_data.size:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    _36111 = mem[64]
                                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                                    require return_data.size >= 32
                                                                    require mem[_36111] == Mask(32, 224, mem[_36111])
                                                                    if Mask(32, 224, mem[_36111]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                else:
                                                                    mem[mem[96] + mem[64] + 164] = 0
                                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                         gas gas_remaining wei
                                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                    mem[mem[64]] = ext_call.return_data[0]
                                                                    if not ext_call.success:
                                                                        if not return_data.size:
                                                                            if not mem[96]:
                                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                            revert with memory
                                                                              from 128
                                                                               len mem[96]
                                                                        if not return_data.size:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    _36112 = mem[64]
                                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                                    require return_data.size >= 32
                                                                    require mem[_36112] == Mask(32, 224, mem[_36112])
                                                                    if Mask(32, 224, mem[_36112]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        if tokenByIndex.length < 1:
                                                            revert with 0, 17
                                                        if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                            revert with 0, 50
                                                        if stor154[arg3] >= tokenByIndex.length:
                                                            revert with 0, 50
                                                        tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                        stor154[stor153[stor153.length]] = stor154[arg3]
                                                        stor154[arg3] = 0
                                                        if not tokenByIndex.length:
                                                            revert with 0, 49
                                                        tokenByIndex[tokenByIndex.length] = 0
                                                        tokenByIndex.length--
                                                        approved[arg3] = 0
                                                        if not ownerOf[arg3]:
                                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                                        emit Approval(ownerOf[arg3], 0, arg3);
                                                        if balanceOf[address(arg1)] < 1:
                                                            revert with 0, 17
                                                        balanceOf[address(arg1)]--
                                                        if balanceOf[address(arg2)] > -2:
                                                            revert with 0, 17
                                                        balanceOf[address(arg2)]++
                                                        mem[0] = arg3
                                                        mem[32] = 103
                                                        ownerOf[arg3] = arg2
                                                        emit Transfer(arg1, arg2, arg3);
                                                        if ext_code.size(arg2):
                                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = msg.sender
                                                            mem[mem[64] + 36] = arg1
                                                            mem[mem[64] + 68] = arg3
                                                            mem[mem[64] + 100] = 128
                                                            mem[mem[64] + 132] = mem[96]
                                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                            if ceil32(mem[96]) <= mem[96]:
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _36113 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_36113] == Mask(32, 224, mem[_36113])
                                                                if Mask(32, 224, mem[_36113]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            else:
                                                                mem[mem[96] + mem[64] + 164] = 0
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _36114 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_36114] == Mask(32, 224, mem[_36114])
                                                                if Mask(32, 224, mem[_36114]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    tokenOfOwnerByIndex[address(arg1)][stor152[arg3]] = tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1]
                                                    stor152[stor151[address(arg1)][stor104[address(arg1)] - 1]] = stor152[arg3]
                                                    stor152[arg3] = 0
                                                    tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                                                    if arg2:
                                                        if arg2 == arg1:
                                                            approved[arg3] = 0
                                                            if not ownerOf[arg3]:
                                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                                            emit Approval(ownerOf[arg3], 0, arg3);
                                                            if balanceOf[address(arg1)] < 1:
                                                                revert with 0, 17
                                                            balanceOf[address(arg1)]--
                                                            if balanceOf[address(arg2)] > -2:
                                                                revert with 0, 17
                                                            balanceOf[address(arg2)]++
                                                            mem[0] = arg3
                                                            mem[32] = 103
                                                            ownerOf[arg3] = arg2
                                                            emit Transfer(arg1, arg2, arg3);
                                                            if ext_code.size(arg2):
                                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = msg.sender
                                                                mem[mem[64] + 36] = arg1
                                                                mem[mem[64] + 68] = arg3
                                                                mem[mem[64] + 100] = 128
                                                                mem[mem[64] + 132] = mem[96]
                                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                                if ceil32(mem[96]) <= mem[96]:
                                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                         gas gas_remaining wei
                                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                    mem[mem[64]] = ext_call.return_data[0]
                                                                    if not ext_call.success:
                                                                        if not return_data.size:
                                                                            if not mem[96]:
                                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                            revert with memory
                                                                              from 128
                                                                               len mem[96]
                                                                        if not return_data.size:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    _36115 = mem[64]
                                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                                    require return_data.size >= 32
                                                                    require mem[_36115] == Mask(32, 224, mem[_36115])
                                                                    if Mask(32, 224, mem[_36115]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                else:
                                                                    mem[mem[96] + mem[64] + 164] = 0
                                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                         gas gas_remaining wei
                                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                    mem[mem[64]] = ext_call.return_data[0]
                                                                    if not ext_call.success:
                                                                        if not return_data.size:
                                                                            if not mem[96]:
                                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                            revert with memory
                                                                              from 128
                                                                               len mem[96]
                                                                        if not return_data.size:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    _36116 = mem[64]
                                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                                    require return_data.size >= 32
                                                                    require mem[_36116] == Mask(32, 224, mem[_36116])
                                                                    if Mask(32, 224, mem[_36116]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            if not arg2:
                                                                revert with 0, 'ERC721: balance query for the zero address'
                                                            tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                            stor152[arg3] = balanceOf[address(arg2)]
                                                            approved[arg3] = 0
                                                            if not ownerOf[arg3]:
                                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                                            emit Approval(ownerOf[arg3], 0, arg3);
                                                            if balanceOf[address(arg1)] < 1:
                                                                revert with 0, 17
                                                            balanceOf[address(arg1)]--
                                                            if balanceOf[address(arg2)] > -2:
                                                                revert with 0, 17
                                                            balanceOf[address(arg2)]++
                                                            mem[0] = arg3
                                                            mem[32] = 103
                                                            ownerOf[arg3] = arg2
                                                            emit Transfer(arg1, arg2, arg3);
                                                            if ext_code.size(arg2):
                                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = msg.sender
                                                                mem[mem[64] + 36] = arg1
                                                                mem[mem[64] + 68] = arg3
                                                                mem[mem[64] + 100] = 128
                                                                mem[mem[64] + 132] = mem[96]
                                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                                if ceil32(mem[96]) <= mem[96]:
                                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                         gas gas_remaining wei
                                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                    mem[mem[64]] = ext_call.return_data[0]
                                                                    if not ext_call.success:
                                                                        if not return_data.size:
                                                                            if not mem[96]:
                                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                            revert with memory
                                                                              from 128
                                                                               len mem[96]
                                                                        if not return_data.size:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    _36117 = mem[64]
                                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                                    require return_data.size >= 32
                                                                    require mem[_36117] == Mask(32, 224, mem[_36117])
                                                                    if Mask(32, 224, mem[_36117]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                else:
                                                                    mem[mem[96] + mem[64] + 164] = 0
                                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                         gas gas_remaining wei
                                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                    mem[mem[64]] = ext_call.return_data[0]
                                                                    if not ext_call.success:
                                                                        if not return_data.size:
                                                                            if not mem[96]:
                                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                            revert with memory
                                                                              from 128
                                                                               len mem[96]
                                                                        if not return_data.size:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    _36118 = mem[64]
                                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                                    require return_data.size >= 32
                                                                    require mem[_36118] == Mask(32, 224, mem[_36118])
                                                                    if Mask(32, 224, mem[_36118]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        if tokenByIndex.length < 1:
                                                            revert with 0, 17
                                                        if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                            revert with 0, 50
                                                        if stor154[arg3] >= tokenByIndex.length:
                                                            revert with 0, 50
                                                        tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                        stor154[stor153[stor153.length]] = stor154[arg3]
                                                        stor154[arg3] = 0
                                                        if not tokenByIndex.length:
                                                            revert with 0, 49
                                                        tokenByIndex[tokenByIndex.length] = 0
                                                        tokenByIndex.length--
                                                        approved[arg3] = 0
                                                        if not ownerOf[arg3]:
                                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                                        emit Approval(ownerOf[arg3], 0, arg3);
                                                        if balanceOf[address(arg1)] < 1:
                                                            revert with 0, 17
                                                        balanceOf[address(arg1)]--
                                                        if balanceOf[address(arg2)] > -2:
                                                            revert with 0, 17
                                                        balanceOf[address(arg2)]++
                                                        mem[0] = arg3
                                                        mem[32] = 103
                                                        ownerOf[arg3] = arg2
                                                        emit Transfer(arg1, arg2, arg3);
                                                        if ext_code.size(arg2):
                                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = msg.sender
                                                            mem[mem[64] + 36] = arg1
                                                            mem[mem[64] + 68] = arg3
                                                            mem[mem[64] + 100] = 128
                                                            mem[mem[64] + 132] = mem[96]
                                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                            if ceil32(mem[96]) <= mem[96]:
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _36119 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_36119] == Mask(32, 224, mem[_36119])
                                                                if Mask(32, 224, mem[_36119]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            else:
                                                                mem[mem[96] + mem[64] + 164] = 0
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _36120 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_36120] == Mask(32, 224, mem[_36120])
                                                                if Mask(32, 224, mem[_36120]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                    else:
                                        mem[ceil32(ceil32(arg4.length)) + ceil32(return_data.size) + 129 len 32 * balanceOf[address(arg2)]] = call.data[calldata.size len 32 * balanceOf[address(arg2)]]
                                        idx = 0
                                        while idx < balanceOf[address(arg2)]:
                                            if not arg2:
                                                revert with 0, 'ERC721: balance query for the zero address'
                                            if idx >= balanceOf[address(arg2)]:
                                                revert with 0, 'ERC721Enumerable: owner index out of bounds'
                                            if tokenOfOwnerByIndex[address(arg2)][idx] <= 0:
                                                revert with 0, 'Troops: Id must be higher than zero'
                                            mem[0] = tokenOfOwnerByIndex[address(arg2)][idx]
                                            mem[32] = 552
                                            _18161 = mem[64]
                                            mem[64] = mem[64] + 256
                                            mem[_18161] = stor552[stor151[address(arg2)][idx]].field_0
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                                if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                                    revert with 0, 34
                                                _20626 = mem[64]
                                                mem[64] = mem[64] + ceil32(uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) + 32
                                                mem[_20626] = uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5
                                                if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                                    if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                                        revert with 0, 34
                                                    if Mask(256, -1, stor552[stor151[address(arg2)][idx]].field_256):
                                                        if 31 >= uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5:
                                                            mem[_20626 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                        else:
                                                            mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                            mem[_20626 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                            s = _20626 + 32
                                                            t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                            while _20626 + (uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) > s:
                                                                mem[s + 32] = stor1[t].field_0
                                                                s = s + 32
                                                                t = t + 1
                                                                continue 
                                                else:
                                                    if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                                        revert with 0, 34
                                                    if stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                        if 31 >= stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                            mem[_20626 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                        else:
                                                            mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                            mem[_20626 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                            s = _20626 + 32
                                                            t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                            while _20626 + stor552[stor151[address(arg2)][idx]].field_257 % 128 > s:
                                                                mem[s + 32] = stor1[t].field_0
                                                                s = s + 32
                                                                t = t + 1
                                                                continue 
                                                mem[_18161 + 32] = _20626
                                            else:
                                                if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                                    revert with 0, 34
                                                _20674 = mem[64]
                                                mem[64] = mem[64] + ceil32(stor552[stor151[address(arg2)][idx]].field_257 % 128) + 32
                                                mem[_20674] = stor552[stor151[address(arg2)][idx]].field_257 % 128
                                                if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                                    if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                                        revert with 0, 34
                                                    if Mask(256, -1, stor552[stor151[address(arg2)][idx]].field_256):
                                                        if 31 >= uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5:
                                                            mem[_20674 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                        else:
                                                            mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                            mem[_20674 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                            s = _20674 + 32
                                                            t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                            while _20674 + (uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) > s:
                                                                mem[s + 32] = stor1[t].field_0
                                                                s = s + 32
                                                                t = t + 1
                                                                continue 
                                                else:
                                                    if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                                        revert with 0, 34
                                                    if stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                        if 31 >= stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                            mem[_20674 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                        else:
                                                            mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                            mem[_20674 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                            s = _20674 + 32
                                                            t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                            while _20674 + stor552[stor151[address(arg2)][idx]].field_257 % 128 > s:
                                                                mem[s + 32] = stor1[t].field_0
                                                                s = s + 32
                                                                t = t + 1
                                                                continue 
                                                mem[_18161 + 32] = _20674
                                            mem[_18161 + 64] = stor552[stor151[address(arg2)][idx]].field_512
                                            mem[_18161 + 96] = stor552[stor151[address(arg2)][idx]].field_768
                                            mem[_18161 + 128] = stor552[stor151[address(arg2)][idx]].field_1024
                                            mem[_18161 + 160] = stor552[stor151[address(arg2)][idx]].field_1280
                                            mem[_18161 + 192] = bool(uint8(stor552[stor151[address(arg2)][idx]].field_1536))
                                            mem[_18161 + 224] = bool(uint8(stor552[stor151[address(arg2)][idx]].field_1544))
                                            if not uint8(stor552[stor151[address(arg2)][idx]].field_1536):
                                                revert with 0, 'Troops: This troop doesn't exist'
                                            if idx >= mem[ceil32(ceil32(arg4.length)) + ceil32(return_data.size) + 97]:
                                                revert with 0, 50
                                            mem[(32 * idx) + ceil32(ceil32(arg4.length)) + ceil32(return_data.size) + 129] = tokenOfOwnerByIndex[address(arg2)][idx]
                                            if idx == -1:
                                                revert with 0, 17
                                            idx = idx + 1
                                            continue 
                                        idx = 0
                                        s = 0
                                        while idx < mem[ceil32(ceil32(arg4.length)) + ceil32(return_data.size) + 97]:
                                            if idx >= mem[ceil32(ceil32(arg4.length)) + ceil32(return_data.size) + 97]:
                                                revert with 0, 50
                                            mem[0] = mem[(32 * idx) + ceil32(ceil32(arg4.length)) + ceil32(return_data.size) + 129]
                                            mem[32] = 552
                                            if not uint8(stor552[mem[(32 * idx) + ceil32(ceil32(arg4.length)) + ceil32(return_data.size) + 129]].field_1544):
                                                if idx == -1:
                                                    revert with 0, 17
                                                idx = idx + 1
                                                s = s
                                                continue 
                                            if s == -1:
                                                revert with 0, 17
                                            if idx == -1:
                                                revert with 0, 17
                                            idx = idx + 1
                                            s = s + 1
                                            continue 
                                        if s >= 2:
                                            revert with 0, 'Each holder can not hold more than 2 Gladiators'
                                        if not arg1:
                                            stor154[arg3] = tokenByIndex.length
                                            tokenByIndex.length++
                                            stor72A1[stor153.length] = arg3
                                            if arg2:
                                                if arg2 == arg1:
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _36145 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_36145] == Mask(32, 224, mem[_36145])
                                                            if Mask(32, 224, mem[_36145]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _36146 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_36146] == Mask(32, 224, mem[_36146])
                                                            if Mask(32, 224, mem[_36146]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    if not arg2:
                                                        revert with 0, 'ERC721: balance query for the zero address'
                                                    tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                    stor152[arg3] = balanceOf[address(arg2)]
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _36147 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_36147] == Mask(32, 224, mem[_36147])
                                                            if Mask(32, 224, mem[_36147]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _36148 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_36148] == Mask(32, 224, mem[_36148])
                                                            if Mask(32, 224, mem[_36148]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if tokenByIndex.length < 1:
                                                    revert with 0, 17
                                                if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                    revert with 0, 50
                                                if stor154[arg3] >= tokenByIndex.length:
                                                    revert with 0, 50
                                                tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                stor154[stor153[stor153.length]] = stor154[arg3]
                                                stor154[arg3] = 0
                                                if not tokenByIndex.length:
                                                    revert with 0, 49
                                                tokenByIndex[tokenByIndex.length] = 0
                                                tokenByIndex.length--
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _36149 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_36149] == Mask(32, 224, mem[_36149])
                                                        if Mask(32, 224, mem[_36149]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[96] + mem[64] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _36150 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_36150] == Mask(32, 224, mem[_36150])
                                                        if Mask(32, 224, mem[_36150]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            if arg1 == arg2:
                                                if arg2:
                                                    if arg2 == arg1:
                                                        approved[arg3] = 0
                                                        if not ownerOf[arg3]:
                                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                                        emit Approval(ownerOf[arg3], 0, arg3);
                                                        if balanceOf[address(arg1)] < 1:
                                                            revert with 0, 17
                                                        balanceOf[address(arg1)]--
                                                        if balanceOf[address(arg2)] > -2:
                                                            revert with 0, 17
                                                        balanceOf[address(arg2)]++
                                                        mem[0] = arg3
                                                        mem[32] = 103
                                                        ownerOf[arg3] = arg2
                                                        emit Transfer(arg1, arg2, arg3);
                                                        if ext_code.size(arg2):
                                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = msg.sender
                                                            mem[mem[64] + 36] = arg1
                                                            mem[mem[64] + 68] = arg3
                                                            mem[mem[64] + 100] = 128
                                                            mem[mem[64] + 132] = mem[96]
                                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                            if ceil32(mem[96]) <= mem[96]:
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _36127 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_36127] == Mask(32, 224, mem[_36127])
                                                                if Mask(32, 224, mem[_36127]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            else:
                                                                mem[mem[96] + mem[64] + 164] = 0
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _36128 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_36128] == Mask(32, 224, mem[_36128])
                                                                if Mask(32, 224, mem[_36128]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        if not arg2:
                                                            revert with 0, 'ERC721: balance query for the zero address'
                                                        tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                        stor152[arg3] = balanceOf[address(arg2)]
                                                        approved[arg3] = 0
                                                        if not ownerOf[arg3]:
                                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                                        emit Approval(ownerOf[arg3], 0, arg3);
                                                        if balanceOf[address(arg1)] < 1:
                                                            revert with 0, 17
                                                        balanceOf[address(arg1)]--
                                                        if balanceOf[address(arg2)] > -2:
                                                            revert with 0, 17
                                                        balanceOf[address(arg2)]++
                                                        mem[0] = arg3
                                                        mem[32] = 103
                                                        ownerOf[arg3] = arg2
                                                        emit Transfer(arg1, arg2, arg3);
                                                        if ext_code.size(arg2):
                                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = msg.sender
                                                            mem[mem[64] + 36] = arg1
                                                            mem[mem[64] + 68] = arg3
                                                            mem[mem[64] + 100] = 128
                                                            mem[mem[64] + 132] = mem[96]
                                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                            if ceil32(mem[96]) <= mem[96]:
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _36129 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_36129] == Mask(32, 224, mem[_36129])
                                                                if Mask(32, 224, mem[_36129]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            else:
                                                                mem[mem[96] + mem[64] + 164] = 0
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _36130 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_36130] == Mask(32, 224, mem[_36130])
                                                                if Mask(32, 224, mem[_36130]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    if tokenByIndex.length < 1:
                                                        revert with 0, 17
                                                    if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                        revert with 0, 50
                                                    if stor154[arg3] >= tokenByIndex.length:
                                                        revert with 0, 50
                                                    tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                    stor154[stor153[stor153.length]] = stor154[arg3]
                                                    stor154[arg3] = 0
                                                    if not tokenByIndex.length:
                                                        revert with 0, 49
                                                    tokenByIndex[tokenByIndex.length] = 0
                                                    tokenByIndex.length--
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _36131 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_36131] == Mask(32, 224, mem[_36131])
                                                            if Mask(32, 224, mem[_36131]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _36132 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_36132] == Mask(32, 224, mem[_36132])
                                                            if Mask(32, 224, mem[_36132]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if not arg1:
                                                    revert with 0, 'ERC721: balance query for the zero address'
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                if balanceOf[address(arg1)] - 1 == stor152[arg3]:
                                                    stor152[arg3] = 0
                                                    tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                                                    if arg2:
                                                        if arg2 == arg1:
                                                            approved[arg3] = 0
                                                            if not ownerOf[arg3]:
                                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                                            emit Approval(ownerOf[arg3], 0, arg3);
                                                            if balanceOf[address(arg1)] < 1:
                                                                revert with 0, 17
                                                            balanceOf[address(arg1)]--
                                                            if balanceOf[address(arg2)] > -2:
                                                                revert with 0, 17
                                                            balanceOf[address(arg2)]++
                                                            mem[0] = arg3
                                                            mem[32] = 103
                                                            ownerOf[arg3] = arg2
                                                            emit Transfer(arg1, arg2, arg3);
                                                            if ext_code.size(arg2):
                                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = msg.sender
                                                                mem[mem[64] + 36] = arg1
                                                                mem[mem[64] + 68] = arg3
                                                                mem[mem[64] + 100] = 128
                                                                mem[mem[64] + 132] = mem[96]
                                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                                if ceil32(mem[96]) <= mem[96]:
                                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                         gas gas_remaining wei
                                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                    mem[mem[64]] = ext_call.return_data[0]
                                                                    if not ext_call.success:
                                                                        if not return_data.size:
                                                                            if not mem[96]:
                                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                            revert with memory
                                                                              from 128
                                                                               len mem[96]
                                                                        if not return_data.size:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    _36133 = mem[64]
                                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                                    require return_data.size >= 32
                                                                    require mem[_36133] == Mask(32, 224, mem[_36133])
                                                                    if Mask(32, 224, mem[_36133]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                else:
                                                                    mem[mem[96] + mem[64] + 164] = 0
                                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                         gas gas_remaining wei
                                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                    mem[mem[64]] = ext_call.return_data[0]
                                                                    if not ext_call.success:
                                                                        if not return_data.size:
                                                                            if not mem[96]:
                                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                            revert with memory
                                                                              from 128
                                                                               len mem[96]
                                                                        if not return_data.size:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    _36134 = mem[64]
                                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                                    require return_data.size >= 32
                                                                    require mem[_36134] == Mask(32, 224, mem[_36134])
                                                                    if Mask(32, 224, mem[_36134]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            if not arg2:
                                                                revert with 0, 'ERC721: balance query for the zero address'
                                                            tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                            stor152[arg3] = balanceOf[address(arg2)]
                                                            approved[arg3] = 0
                                                            if not ownerOf[arg3]:
                                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                                            emit Approval(ownerOf[arg3], 0, arg3);
                                                            if balanceOf[address(arg1)] < 1:
                                                                revert with 0, 17
                                                            balanceOf[address(arg1)]--
                                                            if balanceOf[address(arg2)] > -2:
                                                                revert with 0, 17
                                                            balanceOf[address(arg2)]++
                                                            mem[0] = arg3
                                                            mem[32] = 103
                                                            ownerOf[arg3] = arg2
                                                            emit Transfer(arg1, arg2, arg3);
                                                            if ext_code.size(arg2):
                                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = msg.sender
                                                                mem[mem[64] + 36] = arg1
                                                                mem[mem[64] + 68] = arg3
                                                                mem[mem[64] + 100] = 128
                                                                mem[mem[64] + 132] = mem[96]
                                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                                if ceil32(mem[96]) <= mem[96]:
                                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                         gas gas_remaining wei
                                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                    mem[mem[64]] = ext_call.return_data[0]
                                                                    if not ext_call.success:
                                                                        if not return_data.size:
                                                                            if not mem[96]:
                                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                            revert with memory
                                                                              from 128
                                                                               len mem[96]
                                                                        if not return_data.size:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    _36135 = mem[64]
                                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                                    require return_data.size >= 32
                                                                    require mem[_36135] == Mask(32, 224, mem[_36135])
                                                                    if Mask(32, 224, mem[_36135]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                else:
                                                                    mem[mem[96] + mem[64] + 164] = 0
                                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                         gas gas_remaining wei
                                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                    mem[mem[64]] = ext_call.return_data[0]
                                                                    if not ext_call.success:
                                                                        if not return_data.size:
                                                                            if not mem[96]:
                                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                            revert with memory
                                                                              from 128
                                                                               len mem[96]
                                                                        if not return_data.size:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    _36136 = mem[64]
                                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                                    require return_data.size >= 32
                                                                    require mem[_36136] == Mask(32, 224, mem[_36136])
                                                                    if Mask(32, 224, mem[_36136]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        if tokenByIndex.length < 1:
                                                            revert with 0, 17
                                                        if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                            revert with 0, 50
                                                        if stor154[arg3] >= tokenByIndex.length:
                                                            revert with 0, 50
                                                        tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                        stor154[stor153[stor153.length]] = stor154[arg3]
                                                        stor154[arg3] = 0
                                                        if not tokenByIndex.length:
                                                            revert with 0, 49
                                                        tokenByIndex[tokenByIndex.length] = 0
                                                        tokenByIndex.length--
                                                        approved[arg3] = 0
                                                        if not ownerOf[arg3]:
                                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                                        emit Approval(ownerOf[arg3], 0, arg3);
                                                        if balanceOf[address(arg1)] < 1:
                                                            revert with 0, 17
                                                        balanceOf[address(arg1)]--
                                                        if balanceOf[address(arg2)] > -2:
                                                            revert with 0, 17
                                                        balanceOf[address(arg2)]++
                                                        mem[0] = arg3
                                                        mem[32] = 103
                                                        ownerOf[arg3] = arg2
                                                        emit Transfer(arg1, arg2, arg3);
                                                        if ext_code.size(arg2):
                                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = msg.sender
                                                            mem[mem[64] + 36] = arg1
                                                            mem[mem[64] + 68] = arg3
                                                            mem[mem[64] + 100] = 128
                                                            mem[mem[64] + 132] = mem[96]
                                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                            if ceil32(mem[96]) <= mem[96]:
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _36137 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_36137] == Mask(32, 224, mem[_36137])
                                                                if Mask(32, 224, mem[_36137]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            else:
                                                                mem[mem[96] + mem[64] + 164] = 0
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _36138 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_36138] == Mask(32, 224, mem[_36138])
                                                                if Mask(32, 224, mem[_36138]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    tokenOfOwnerByIndex[address(arg1)][stor152[arg3]] = tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1]
                                                    stor152[stor151[address(arg1)][stor104[address(arg1)] - 1]] = stor152[arg3]
                                                    stor152[arg3] = 0
                                                    tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                                                    if arg2:
                                                        if arg2 == arg1:
                                                            approved[arg3] = 0
                                                            if not ownerOf[arg3]:
                                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                                            emit Approval(ownerOf[arg3], 0, arg3);
                                                            if balanceOf[address(arg1)] < 1:
                                                                revert with 0, 17
                                                            balanceOf[address(arg1)]--
                                                            if balanceOf[address(arg2)] > -2:
                                                                revert with 0, 17
                                                            balanceOf[address(arg2)]++
                                                            mem[0] = arg3
                                                            mem[32] = 103
                                                            ownerOf[arg3] = arg2
                                                            emit Transfer(arg1, arg2, arg3);
                                                            if ext_code.size(arg2):
                                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = msg.sender
                                                                mem[mem[64] + 36] = arg1
                                                                mem[mem[64] + 68] = arg3
                                                                mem[mem[64] + 100] = 128
                                                                mem[mem[64] + 132] = mem[96]
                                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                                if ceil32(mem[96]) <= mem[96]:
                                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                         gas gas_remaining wei
                                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                    mem[mem[64]] = ext_call.return_data[0]
                                                                    if not ext_call.success:
                                                                        if not return_data.size:
                                                                            if not mem[96]:
                                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                            revert with memory
                                                                              from 128
                                                                               len mem[96]
                                                                        if not return_data.size:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    _36139 = mem[64]
                                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                                    require return_data.size >= 32
                                                                    require mem[_36139] == Mask(32, 224, mem[_36139])
                                                                    if Mask(32, 224, mem[_36139]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                else:
                                                                    mem[mem[96] + mem[64] + 164] = 0
                                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                         gas gas_remaining wei
                                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                    mem[mem[64]] = ext_call.return_data[0]
                                                                    if not ext_call.success:
                                                                        if not return_data.size:
                                                                            if not mem[96]:
                                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                            revert with memory
                                                                              from 128
                                                                               len mem[96]
                                                                        if not return_data.size:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    _36140 = mem[64]
                                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                                    require return_data.size >= 32
                                                                    require mem[_36140] == Mask(32, 224, mem[_36140])
                                                                    if Mask(32, 224, mem[_36140]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            if not arg2:
                                                                revert with 0, 'ERC721: balance query for the zero address'
                                                            tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                            stor152[arg3] = balanceOf[address(arg2)]
                                                            approved[arg3] = 0
                                                            if not ownerOf[arg3]:
                                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                                            emit Approval(ownerOf[arg3], 0, arg3);
                                                            if balanceOf[address(arg1)] < 1:
                                                                revert with 0, 17
                                                            balanceOf[address(arg1)]--
                                                            if balanceOf[address(arg2)] > -2:
                                                                revert with 0, 17
                                                            balanceOf[address(arg2)]++
                                                            mem[0] = arg3
                                                            mem[32] = 103
                                                            ownerOf[arg3] = arg2
                                                            emit Transfer(arg1, arg2, arg3);
                                                            if ext_code.size(arg2):
                                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = msg.sender
                                                                mem[mem[64] + 36] = arg1
                                                                mem[mem[64] + 68] = arg3
                                                                mem[mem[64] + 100] = 128
                                                                mem[mem[64] + 132] = mem[96]
                                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                                if ceil32(mem[96]) <= mem[96]:
                                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                         gas gas_remaining wei
                                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                    mem[mem[64]] = ext_call.return_data[0]
                                                                    if not ext_call.success:
                                                                        if not return_data.size:
                                                                            if not mem[96]:
                                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                            revert with memory
                                                                              from 128
                                                                               len mem[96]
                                                                        if not return_data.size:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    _36141 = mem[64]
                                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                                    require return_data.size >= 32
                                                                    require mem[_36141] == Mask(32, 224, mem[_36141])
                                                                    if Mask(32, 224, mem[_36141]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                else:
                                                                    mem[mem[96] + mem[64] + 164] = 0
                                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                         gas gas_remaining wei
                                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                    mem[mem[64]] = ext_call.return_data[0]
                                                                    if not ext_call.success:
                                                                        if not return_data.size:
                                                                            if not mem[96]:
                                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                            revert with memory
                                                                              from 128
                                                                               len mem[96]
                                                                        if not return_data.size:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    _36142 = mem[64]
                                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                                    require return_data.size >= 32
                                                                    require mem[_36142] == Mask(32, 224, mem[_36142])
                                                                    if Mask(32, 224, mem[_36142]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        if tokenByIndex.length < 1:
                                                            revert with 0, 17
                                                        if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                            revert with 0, 50
                                                        if stor154[arg3] >= tokenByIndex.length:
                                                            revert with 0, 50
                                                        tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                        stor154[stor153[stor153.length]] = stor154[arg3]
                                                        stor154[arg3] = 0
                                                        if not tokenByIndex.length:
                                                            revert with 0, 49
                                                        tokenByIndex[tokenByIndex.length] = 0
                                                        tokenByIndex.length--
                                                        approved[arg3] = 0
                                                        if not ownerOf[arg3]:
                                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                                        emit Approval(ownerOf[arg3], 0, arg3);
                                                        if balanceOf[address(arg1)] < 1:
                                                            revert with 0, 17
                                                        balanceOf[address(arg1)]--
                                                        if balanceOf[address(arg2)] > -2:
                                                            revert with 0, 17
                                                        balanceOf[address(arg2)]++
                                                        mem[0] = arg3
                                                        mem[32] = 103
                                                        ownerOf[arg3] = arg2
                                                        emit Transfer(arg1, arg2, arg3);
                                                        if ext_code.size(arg2):
                                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = msg.sender
                                                            mem[mem[64] + 36] = arg1
                                                            mem[mem[64] + 68] = arg3
                                                            mem[mem[64] + 100] = 128
                                                            mem[mem[64] + 132] = mem[96]
                                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                            if ceil32(mem[96]) <= mem[96]:
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _36143 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_36143] == Mask(32, 224, mem[_36143])
                                                                if Mask(32, 224, mem[_36143]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            else:
                                                                mem[mem[96] + mem[64] + 164] = 0
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _36144 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_36144] == Mask(32, 224, mem[_36144])
                                                                if Mask(32, 224, mem[_36144]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
        else:
            if not stor106[stor103[arg3]][address(msg.sender)]:
                revert with 0, 'ERC721: transfer caller is not owner nor approved'
            if not ownerOf[arg3]:
                revert with 0, 'ERC721: owner query for nonexistent token'
            if ownerOf[arg3] != arg1:
                revert with 0, 'ERC721: transfer from incorrect owner'
            if not arg2:
                revert with 0, 'ERC721: transfer to the zero address'
            if paused:
                revert with 0, 'Pausable: paused'
            if not arg2:
                if not arg1:
                    stor154[arg3] = tokenByIndex.length
                    tokenByIndex.length++
                    stor72A1[stor153.length] = arg3
                else:
                    if arg1 != arg2:
                        if not arg1:
                            revert with 0, 'ERC721: balance query for the zero address'
                        if balanceOf[address(arg1)] < 1:
                            revert with 0, 17
                        if balanceOf[address(arg1)] - 1 != stor152[arg3]:
                            tokenOfOwnerByIndex[address(arg1)][stor152[arg3]] = tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1]
                            stor152[stor151[address(arg1)][stor104[address(arg1)] - 1]] = stor152[arg3]
                        stor152[arg3] = 0
                        tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                if arg2:
                    if arg2 != arg1:
                        if not arg2:
                            revert with 0, 'ERC721: balance query for the zero address'
                        tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                        stor152[arg3] = balanceOf[address(arg2)]
                else:
                    if tokenByIndex.length < 1:
                        revert with 0, 17
                    if tokenByIndex.length - 1 >= tokenByIndex.length:
                        revert with 0, 50
                    if stor154[arg3] >= tokenByIndex.length:
                        revert with 0, 50
                    tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                    stor154[stor153[stor153.length]] = stor154[arg3]
                    stor154[arg3] = 0
                    if not tokenByIndex.length:
                        revert with 0, 49
                    tokenByIndex[tokenByIndex.length] = 0
                    tokenByIndex.length--
                approved[arg3] = 0
                if not ownerOf[arg3]:
                    revert with 0, 'ERC721: owner query for nonexistent token'
                emit Approval(ownerOf[arg3], 0, arg3);
                if balanceOf[address(arg1)] < 1:
                    revert with 0, 17
                balanceOf[address(arg1)]--
                if balanceOf[address(arg2)] > -2:
                    revert with 0, 17
                balanceOf[address(arg2)]++
                ownerOf[arg3] = arg2
                emit Transfer(arg1, arg2, arg3);
                if ext_code.size(arg2):
                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                         gas gas_remaining wei
                        args msg.sender, address(arg1), arg3, Array(len=arg4.length, data=arg4[all])
                    if not ext_call.success:
                        if not return_data.size:
                            if not arg4.length:
                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                            revert with arg4[all]
                        if not return_data.size:
                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                    if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
            else:
                if owner == arg2:
                    if not arg1:
                        stor154[arg3] = tokenByIndex.length
                        tokenByIndex.length++
                        stor72A1[stor153.length] = arg3
                    else:
                        if arg1 != arg2:
                            if not arg1:
                                revert with 0, 'ERC721: balance query for the zero address'
                            if balanceOf[address(arg1)] < 1:
                                revert with 0, 17
                            if balanceOf[address(arg1)] - 1 != stor152[arg3]:
                                tokenOfOwnerByIndex[address(arg1)][stor152[arg3]] = tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1]
                                stor152[stor151[address(arg1)][stor104[address(arg1)] - 1]] = stor152[arg3]
                            stor152[arg3] = 0
                            tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                    if arg2:
                        if arg2 != arg1:
                            if not arg2:
                                revert with 0, 'ERC721: balance query for the zero address'
                            tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                            stor152[arg3] = balanceOf[address(arg2)]
                    else:
                        if tokenByIndex.length < 1:
                            revert with 0, 17
                        if tokenByIndex.length - 1 >= tokenByIndex.length:
                            revert with 0, 50
                        if stor154[arg3] >= tokenByIndex.length:
                            revert with 0, 50
                        tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                        stor154[stor153[stor153.length]] = stor154[arg3]
                        stor154[arg3] = 0
                        if not tokenByIndex.length:
                            revert with 0, 49
                        tokenByIndex[tokenByIndex.length] = 0
                        tokenByIndex.length--
                    approved[arg3] = 0
                    if not ownerOf[arg3]:
                        revert with 0, 'ERC721: owner query for nonexistent token'
                    emit Approval(ownerOf[arg3], 0, arg3);
                    if balanceOf[address(arg1)] < 1:
                        revert with 0, 17
                    balanceOf[address(arg1)]--
                    if balanceOf[address(arg2)] > -2:
                        revert with 0, 17
                    balanceOf[address(arg2)]++
                    ownerOf[arg3] = arg2
                    emit Transfer(arg1, arg2, arg3);
                    if ext_code.size(arg2):
                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                             gas gas_remaining wei
                            args msg.sender, address(arg1), arg3, Array(len=arg4.length, data=arg4[all])
                        if not ext_call.success:
                            if not return_data.size:
                                if not arg4.length:
                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                revert with arg4[all]
                            if not return_data.size:
                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                        if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                else:
                    if bool(uint8(stor552[arg3].field_1536)) != 1:
                        if not arg1:
                            stor154[arg3] = tokenByIndex.length
                            tokenByIndex.length++
                            stor72A1[stor153.length] = arg3
                        else:
                            if arg1 != arg2:
                                if not arg1:
                                    revert with 0, 'ERC721: balance query for the zero address'
                                if balanceOf[address(arg1)] < 1:
                                    revert with 0, 17
                                if balanceOf[address(arg1)] - 1 != stor152[arg3]:
                                    tokenOfOwnerByIndex[address(arg1)][stor152[arg3]] = tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1]
                                    stor152[stor151[address(arg1)][stor104[address(arg1)] - 1]] = stor152[arg3]
                                stor152[arg3] = 0
                                tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                        if arg2:
                            if arg2 != arg1:
                                if not arg2:
                                    revert with 0, 'ERC721: balance query for the zero address'
                                tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                stor152[arg3] = balanceOf[address(arg2)]
                        else:
                            if tokenByIndex.length < 1:
                                revert with 0, 17
                            if tokenByIndex.length - 1 >= tokenByIndex.length:
                                revert with 0, 50
                            if stor154[arg3] >= tokenByIndex.length:
                                revert with 0, 50
                            tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                            stor154[stor153[stor153.length]] = stor154[arg3]
                            stor154[arg3] = 0
                            if not tokenByIndex.length:
                                revert with 0, 49
                            tokenByIndex[tokenByIndex.length] = 0
                            tokenByIndex.length--
                        approved[arg3] = 0
                        if not ownerOf[arg3]:
                            revert with 0, 'ERC721: owner query for nonexistent token'
                        emit Approval(ownerOf[arg3], 0, arg3);
                        if balanceOf[address(arg1)] < 1:
                            revert with 0, 17
                        balanceOf[address(arg1)]--
                        if balanceOf[address(arg2)] > -2:
                            revert with 0, 17
                        balanceOf[address(arg2)]++
                        ownerOf[arg3] = arg2
                        emit Transfer(arg1, arg2, arg3);
                        if ext_code.size(arg2):
                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args msg.sender, address(arg1), arg3, Array(len=arg4.length, data=arg4[all])
                            if not ext_call.success:
                                if not return_data.size:
                                    if not arg4.length:
                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                    revert with arg4[all]
                                if not return_data.size:
                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                            if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                    else:
                        if bool(uint8(stor552[arg3].field_1544)) != 1:
                            if not arg1:
                                stor154[arg3] = tokenByIndex.length
                                tokenByIndex.length++
                                stor72A1[stor153.length] = arg3
                            else:
                                if arg1 != arg2:
                                    if not arg1:
                                        revert with 0, 'ERC721: balance query for the zero address'
                                    if balanceOf[address(arg1)] < 1:
                                        revert with 0, 17
                                    if balanceOf[address(arg1)] - 1 != stor152[arg3]:
                                        tokenOfOwnerByIndex[address(arg1)][stor152[arg3]] = tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1]
                                        stor152[stor151[address(arg1)][stor104[address(arg1)] - 1]] = stor152[arg3]
                                    stor152[arg3] = 0
                                    tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                            if arg2:
                                if arg2 != arg1:
                                    if not arg2:
                                        revert with 0, 'ERC721: balance query for the zero address'
                                    tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                    stor152[arg3] = balanceOf[address(arg2)]
                            else:
                                if tokenByIndex.length < 1:
                                    revert with 0, 17
                                if tokenByIndex.length - 1 >= tokenByIndex.length:
                                    revert with 0, 50
                                if stor154[arg3] >= tokenByIndex.length:
                                    revert with 0, 50
                                tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                stor154[stor153[stor153.length]] = stor154[arg3]
                                stor154[arg3] = 0
                                if not tokenByIndex.length:
                                    revert with 0, 49
                                tokenByIndex[tokenByIndex.length] = 0
                                tokenByIndex.length--
                            approved[arg3] = 0
                            if not ownerOf[arg3]:
                                revert with 0, 'ERC721: owner query for nonexistent token'
                            emit Approval(ownerOf[arg3], 0, arg3);
                            if balanceOf[address(arg1)] < 1:
                                revert with 0, 17
                            balanceOf[address(arg1)]--
                            if balanceOf[address(arg2)] > -2:
                                revert with 0, 17
                            balanceOf[address(arg2)]++
                            ownerOf[arg3] = arg2
                            emit Transfer(arg1, arg2, arg3);
                            if ext_code.size(arg2):
                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args msg.sender, address(arg1), arg3, Array(len=arg4.length, data=arg4[all])
                                if not ext_call.success:
                                    if not return_data.size:
                                        if not arg4.length:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        revert with arg4[all]
                                    if not return_data.size:
                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                        else:
                            if not liquidityPoolManagerImplementationAddress:
                                if not arg2:
                                    revert with 0, 'ERC721: balance query for the zero address'
                                if balanceOf[address(arg2)] > test266151307():
                                    revert with 0, 65
                                mem[ceil32(ceil32(arg4.length)) + 97] = balanceOf[address(arg2)]
                                mem[64] = ceil32(ceil32(arg4.length)) + (32 * balanceOf[address(arg2)]) + 129
                                if not balanceOf[address(arg2)]:
                                    idx = 0
                                    while idx < balanceOf[address(arg2)]:
                                        if not arg2:
                                            revert with 0, 'ERC721: balance query for the zero address'
                                        if idx >= balanceOf[address(arg2)]:
                                            revert with 0, 'ERC721Enumerable: owner index out of bounds'
                                        if tokenOfOwnerByIndex[address(arg2)][idx] <= 0:
                                            revert with 0, 'Troops: Id must be higher than zero'
                                        mem[0] = tokenOfOwnerByIndex[address(arg2)][idx]
                                        mem[32] = 552
                                        _18356 = mem[64]
                                        mem[64] = mem[64] + 256
                                        mem[_18356] = stor552[stor151[address(arg2)][idx]].field_0
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                                revert with 0, 34
                                            _20628 = mem[64]
                                            mem[64] = mem[64] + ceil32(uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) + 32
                                            mem[_20628] = uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                                if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                                    revert with 0, 34
                                                if Mask(256, -1, stor552[stor151[address(arg2)][idx]].field_256):
                                                    if 31 >= uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5:
                                                        mem[_20628 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                    else:
                                                        mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                        mem[_20628 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                        s = _20628 + 32
                                                        t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                        while _20628 + (uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) > s:
                                                            mem[s + 32] = stor1[t].field_0
                                                            s = s + 32
                                                            t = t + 1
                                                            continue 
                                            else:
                                                if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                                    revert with 0, 34
                                                if stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                    if 31 >= stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                        mem[_20628 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                    else:
                                                        mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                        mem[_20628 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                        s = _20628 + 32
                                                        t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                        while _20628 + stor552[stor151[address(arg2)][idx]].field_257 % 128 > s:
                                                            mem[s + 32] = stor1[t].field_0
                                                            s = s + 32
                                                            t = t + 1
                                                            continue 
                                            mem[_18356 + 32] = _20628
                                        else:
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                                revert with 0, 34
                                            _20679 = mem[64]
                                            mem[64] = mem[64] + ceil32(stor552[stor151[address(arg2)][idx]].field_257 % 128) + 32
                                            mem[_20679] = stor552[stor151[address(arg2)][idx]].field_257 % 128
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                                if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                                    revert with 0, 34
                                                if Mask(256, -1, stor552[stor151[address(arg2)][idx]].field_256):
                                                    if 31 >= uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5:
                                                        mem[_20679 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                    else:
                                                        mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                        mem[_20679 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                        s = _20679 + 32
                                                        t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                        while _20679 + (uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) > s:
                                                            mem[s + 32] = stor1[t].field_0
                                                            s = s + 32
                                                            t = t + 1
                                                            continue 
                                            else:
                                                if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                                    revert with 0, 34
                                                if stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                    if 31 >= stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                        mem[_20679 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                    else:
                                                        mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                        mem[_20679 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                        s = _20679 + 32
                                                        t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                        while _20679 + stor552[stor151[address(arg2)][idx]].field_257 % 128 > s:
                                                            mem[s + 32] = stor1[t].field_0
                                                            s = s + 32
                                                            t = t + 1
                                                            continue 
                                            mem[_18356 + 32] = _20679
                                        mem[_18356 + 64] = stor552[stor151[address(arg2)][idx]].field_512
                                        mem[_18356 + 96] = stor552[stor151[address(arg2)][idx]].field_768
                                        mem[_18356 + 128] = stor552[stor151[address(arg2)][idx]].field_1024
                                        mem[_18356 + 160] = stor552[stor151[address(arg2)][idx]].field_1280
                                        mem[_18356 + 192] = bool(uint8(stor552[stor151[address(arg2)][idx]].field_1536))
                                        mem[_18356 + 224] = bool(uint8(stor552[stor151[address(arg2)][idx]].field_1544))
                                        if not uint8(stor552[stor151[address(arg2)][idx]].field_1536):
                                            revert with 0, 'Troops: This troop doesn't exist'
                                        if idx >= mem[ceil32(ceil32(arg4.length)) + 97]:
                                            revert with 0, 50
                                        mem[(32 * idx) + ceil32(ceil32(arg4.length)) + 129] = tokenOfOwnerByIndex[address(arg2)][idx]
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        continue 
                                    idx = 0
                                    s = 0
                                    while idx < mem[ceil32(ceil32(arg4.length)) + 97]:
                                        if idx >= mem[ceil32(ceil32(arg4.length)) + 97]:
                                            revert with 0, 50
                                        mem[0] = mem[(32 * idx) + ceil32(ceil32(arg4.length)) + 129]
                                        mem[32] = 552
                                        if not uint8(stor552[mem[(32 * idx) + ceil32(ceil32(arg4.length)) + 129]].field_1544):
                                            if idx == -1:
                                                revert with 0, 17
                                            idx = idx + 1
                                            s = s
                                            continue 
                                        if s == -1:
                                            revert with 0, 17
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = s + 1
                                        continue 
                                    if s >= 2:
                                        revert with 0, 'Each holder can not hold more than 2 Gladiators'
                                    if not arg1:
                                        stor154[arg3] = tokenByIndex.length
                                        tokenByIndex.length++
                                        stor72A1[stor153.length] = arg3
                                        if arg2:
                                            if arg2 == arg1:
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _36169 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_36169] == Mask(32, 224, mem[_36169])
                                                        if Mask(32, 224, mem[_36169]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[96] + mem[64] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _36170 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_36170] == Mask(32, 224, mem[_36170])
                                                        if Mask(32, 224, mem[_36170]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if not arg2:
                                                    revert with 0, 'ERC721: balance query for the zero address'
                                                tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                stor152[arg3] = balanceOf[address(arg2)]
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _36171 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_36171] == Mask(32, 224, mem[_36171])
                                                        if Mask(32, 224, mem[_36171]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[96] + mem[64] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _36172 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_36172] == Mask(32, 224, mem[_36172])
                                                        if Mask(32, 224, mem[_36172]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            if tokenByIndex.length < 1:
                                                revert with 0, 17
                                            if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                revert with 0, 50
                                            if stor154[arg3] >= tokenByIndex.length:
                                                revert with 0, 50
                                            tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                            stor154[stor153[stor153.length]] = stor154[arg3]
                                            stor154[arg3] = 0
                                            if not tokenByIndex.length:
                                                revert with 0, 49
                                            tokenByIndex[tokenByIndex.length] = 0
                                            tokenByIndex.length--
                                            approved[arg3] = 0
                                            if not ownerOf[arg3]:
                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                            emit Approval(ownerOf[arg3], 0, arg3);
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            balanceOf[address(arg1)]--
                                            if balanceOf[address(arg2)] > -2:
                                                revert with 0, 17
                                            balanceOf[address(arg2)]++
                                            mem[0] = arg3
                                            mem[32] = 103
                                            ownerOf[arg3] = arg2
                                            emit Transfer(arg1, arg2, arg3);
                                            if ext_code.size(arg2):
                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = msg.sender
                                                mem[mem[64] + 36] = arg1
                                                mem[mem[64] + 68] = arg3
                                                mem[mem[64] + 100] = 128
                                                mem[mem[64] + 132] = mem[96]
                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                if ceil32(mem[96]) <= mem[96]:
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _36173 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_36173] == Mask(32, 224, mem[_36173])
                                                    if Mask(32, 224, mem[_36173]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    mem[mem[96] + mem[64] + 164] = 0
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _36174 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_36174] == Mask(32, 224, mem[_36174])
                                                    if Mask(32, 224, mem[_36174]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                    else:
                                        if arg1 == arg2:
                                            if arg2:
                                                if arg2 == arg1:
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _36151 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_36151] == Mask(32, 224, mem[_36151])
                                                            if Mask(32, 224, mem[_36151]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _36152 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_36152] == Mask(32, 224, mem[_36152])
                                                            if Mask(32, 224, mem[_36152]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    if not arg2:
                                                        revert with 0, 'ERC721: balance query for the zero address'
                                                    tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                    stor152[arg3] = balanceOf[address(arg2)]
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _36153 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_36153] == Mask(32, 224, mem[_36153])
                                                            if Mask(32, 224, mem[_36153]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _36154 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_36154] == Mask(32, 224, mem[_36154])
                                                            if Mask(32, 224, mem[_36154]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if tokenByIndex.length < 1:
                                                    revert with 0, 17
                                                if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                    revert with 0, 50
                                                if stor154[arg3] >= tokenByIndex.length:
                                                    revert with 0, 50
                                                tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                stor154[stor153[stor153.length]] = stor154[arg3]
                                                stor154[arg3] = 0
                                                if not tokenByIndex.length:
                                                    revert with 0, 49
                                                tokenByIndex[tokenByIndex.length] = 0
                                                tokenByIndex.length--
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _36155 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_36155] == Mask(32, 224, mem[_36155])
                                                        if Mask(32, 224, mem[_36155]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[96] + mem[64] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _36156 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_36156] == Mask(32, 224, mem[_36156])
                                                        if Mask(32, 224, mem[_36156]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            if not arg1:
                                                revert with 0, 'ERC721: balance query for the zero address'
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            if balanceOf[address(arg1)] - 1 == stor152[arg3]:
                                                stor152[arg3] = 0
                                                tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                                                if arg2:
                                                    if arg2 == arg1:
                                                        approved[arg3] = 0
                                                        if not ownerOf[arg3]:
                                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                                        emit Approval(ownerOf[arg3], 0, arg3);
                                                        if balanceOf[address(arg1)] < 1:
                                                            revert with 0, 17
                                                        balanceOf[address(arg1)]--
                                                        if balanceOf[address(arg2)] > -2:
                                                            revert with 0, 17
                                                        balanceOf[address(arg2)]++
                                                        mem[0] = arg3
                                                        mem[32] = 103
                                                        ownerOf[arg3] = arg2
                                                        emit Transfer(arg1, arg2, arg3);
                                                        if ext_code.size(arg2):
                                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = msg.sender
                                                            mem[mem[64] + 36] = arg1
                                                            mem[mem[64] + 68] = arg3
                                                            mem[mem[64] + 100] = 128
                                                            mem[mem[64] + 132] = mem[96]
                                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                            if ceil32(mem[96]) <= mem[96]:
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _36157 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_36157] == Mask(32, 224, mem[_36157])
                                                                if Mask(32, 224, mem[_36157]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            else:
                                                                mem[mem[96] + mem[64] + 164] = 0
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _36158 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_36158] == Mask(32, 224, mem[_36158])
                                                                if Mask(32, 224, mem[_36158]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        if not arg2:
                                                            revert with 0, 'ERC721: balance query for the zero address'
                                                        tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                        stor152[arg3] = balanceOf[address(arg2)]
                                                        approved[arg3] = 0
                                                        if not ownerOf[arg3]:
                                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                                        emit Approval(ownerOf[arg3], 0, arg3);
                                                        if balanceOf[address(arg1)] < 1:
                                                            revert with 0, 17
                                                        balanceOf[address(arg1)]--
                                                        if balanceOf[address(arg2)] > -2:
                                                            revert with 0, 17
                                                        balanceOf[address(arg2)]++
                                                        mem[0] = arg3
                                                        mem[32] = 103
                                                        ownerOf[arg3] = arg2
                                                        emit Transfer(arg1, arg2, arg3);
                                                        if ext_code.size(arg2):
                                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = msg.sender
                                                            mem[mem[64] + 36] = arg1
                                                            mem[mem[64] + 68] = arg3
                                                            mem[mem[64] + 100] = 128
                                                            mem[mem[64] + 132] = mem[96]
                                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                            if ceil32(mem[96]) <= mem[96]:
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _36159 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_36159] == Mask(32, 224, mem[_36159])
                                                                if Mask(32, 224, mem[_36159]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            else:
                                                                mem[mem[96] + mem[64] + 164] = 0
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _36160 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_36160] == Mask(32, 224, mem[_36160])
                                                                if Mask(32, 224, mem[_36160]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    if tokenByIndex.length < 1:
                                                        revert with 0, 17
                                                    if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                        revert with 0, 50
                                                    if stor154[arg3] >= tokenByIndex.length:
                                                        revert with 0, 50
                                                    tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                    stor154[stor153[stor153.length]] = stor154[arg3]
                                                    stor154[arg3] = 0
                                                    if not tokenByIndex.length:
                                                        revert with 0, 49
                                                    tokenByIndex[tokenByIndex.length] = 0
                                                    tokenByIndex.length--
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _36161 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_36161] == Mask(32, 224, mem[_36161])
                                                            if Mask(32, 224, mem[_36161]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _36162 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_36162] == Mask(32, 224, mem[_36162])
                                                            if Mask(32, 224, mem[_36162]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                tokenOfOwnerByIndex[address(arg1)][stor152[arg3]] = tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1]
                                                stor152[stor151[address(arg1)][stor104[address(arg1)] - 1]] = stor152[arg3]
                                                stor152[arg3] = 0
                                                tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                                                if arg2:
                                                    if arg2 == arg1:
                                                        approved[arg3] = 0
                                                        if not ownerOf[arg3]:
                                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                                        emit Approval(ownerOf[arg3], 0, arg3);
                                                        if balanceOf[address(arg1)] < 1:
                                                            revert with 0, 17
                                                        balanceOf[address(arg1)]--
                                                        if balanceOf[address(arg2)] > -2:
                                                            revert with 0, 17
                                                        balanceOf[address(arg2)]++
                                                        mem[0] = arg3
                                                        mem[32] = 103
                                                        ownerOf[arg3] = arg2
                                                        emit Transfer(arg1, arg2, arg3);
                                                        if ext_code.size(arg2):
                                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = msg.sender
                                                            mem[mem[64] + 36] = arg1
                                                            mem[mem[64] + 68] = arg3
                                                            mem[mem[64] + 100] = 128
                                                            mem[mem[64] + 132] = mem[96]
                                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                            if ceil32(mem[96]) <= mem[96]:
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _36163 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_36163] == Mask(32, 224, mem[_36163])
                                                                if Mask(32, 224, mem[_36163]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            else:
                                                                mem[mem[96] + mem[64] + 164] = 0
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _36164 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_36164] == Mask(32, 224, mem[_36164])
                                                                if Mask(32, 224, mem[_36164]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        if not arg2:
                                                            revert with 0, 'ERC721: balance query for the zero address'
                                                        tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                        stor152[arg3] = balanceOf[address(arg2)]
                                                        approved[arg3] = 0
                                                        if not ownerOf[arg3]:
                                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                                        emit Approval(ownerOf[arg3], 0, arg3);
                                                        if balanceOf[address(arg1)] < 1:
                                                            revert with 0, 17
                                                        balanceOf[address(arg1)]--
                                                        if balanceOf[address(arg2)] > -2:
                                                            revert with 0, 17
                                                        balanceOf[address(arg2)]++
                                                        mem[0] = arg3
                                                        mem[32] = 103
                                                        ownerOf[arg3] = arg2
                                                        emit Transfer(arg1, arg2, arg3);
                                                        if ext_code.size(arg2):
                                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = msg.sender
                                                            mem[mem[64] + 36] = arg1
                                                            mem[mem[64] + 68] = arg3
                                                            mem[mem[64] + 100] = 128
                                                            mem[mem[64] + 132] = mem[96]
                                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                            if ceil32(mem[96]) <= mem[96]:
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _36165 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_36165] == Mask(32, 224, mem[_36165])
                                                                if Mask(32, 224, mem[_36165]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            else:
                                                                mem[mem[96] + mem[64] + 164] = 0
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _36166 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_36166] == Mask(32, 224, mem[_36166])
                                                                if Mask(32, 224, mem[_36166]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    if tokenByIndex.length < 1:
                                                        revert with 0, 17
                                                    if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                        revert with 0, 50
                                                    if stor154[arg3] >= tokenByIndex.length:
                                                        revert with 0, 50
                                                    tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                    stor154[stor153[stor153.length]] = stor154[arg3]
                                                    stor154[arg3] = 0
                                                    if not tokenByIndex.length:
                                                        revert with 0, 49
                                                    tokenByIndex[tokenByIndex.length] = 0
                                                    tokenByIndex.length--
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _36167 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_36167] == Mask(32, 224, mem[_36167])
                                                            if Mask(32, 224, mem[_36167]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _36168 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_36168] == Mask(32, 224, mem[_36168])
                                                            if Mask(32, 224, mem[_36168]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                else:
                                    mem[ceil32(ceil32(arg4.length)) + 129 len 32 * balanceOf[address(arg2)]] = call.data[calldata.size len 32 * balanceOf[address(arg2)]]
                                    idx = 0
                                    while idx < balanceOf[address(arg2)]:
                                        if not arg2:
                                            revert with 0, 'ERC721: balance query for the zero address'
                                        if idx >= balanceOf[address(arg2)]:
                                            revert with 0, 'ERC721Enumerable: owner index out of bounds'
                                        if tokenOfOwnerByIndex[address(arg2)][idx] <= 0:
                                            revert with 0, 'Troops: Id must be higher than zero'
                                        mem[0] = tokenOfOwnerByIndex[address(arg2)][idx]
                                        mem[32] = 552
                                        _18359 = mem[64]
                                        mem[64] = mem[64] + 256
                                        mem[_18359] = stor552[stor151[address(arg2)][idx]].field_0
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                                revert with 0, 34
                                            _20630 = mem[64]
                                            mem[64] = mem[64] + ceil32(uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) + 32
                                            mem[_20630] = uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                                if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                                    revert with 0, 34
                                                if Mask(256, -1, stor552[stor151[address(arg2)][idx]].field_256):
                                                    if 31 >= uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5:
                                                        mem[_20630 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                    else:
                                                        mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                        mem[_20630 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                        s = _20630 + 32
                                                        t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                        while _20630 + (uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) > s:
                                                            mem[s + 32] = stor1[t].field_0
                                                            s = s + 32
                                                            t = t + 1
                                                            continue 
                                            else:
                                                if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                                    revert with 0, 34
                                                if stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                    if 31 >= stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                        mem[_20630 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                    else:
                                                        mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                        mem[_20630 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                        s = _20630 + 32
                                                        t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                        while _20630 + stor552[stor151[address(arg2)][idx]].field_257 % 128 > s:
                                                            mem[s + 32] = stor1[t].field_0
                                                            s = s + 32
                                                            t = t + 1
                                                            continue 
                                            mem[_18359 + 32] = _20630
                                        else:
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                                revert with 0, 34
                                            _20684 = mem[64]
                                            mem[64] = mem[64] + ceil32(stor552[stor151[address(arg2)][idx]].field_257 % 128) + 32
                                            mem[_20684] = stor552[stor151[address(arg2)][idx]].field_257 % 128
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                                if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                                    revert with 0, 34
                                                if Mask(256, -1, stor552[stor151[address(arg2)][idx]].field_256):
                                                    if 31 >= uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5:
                                                        mem[_20684 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                    else:
                                                        mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                        mem[_20684 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                        s = _20684 + 32
                                                        t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                        while _20684 + (uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) > s:
                                                            mem[s + 32] = stor1[t].field_0
                                                            s = s + 32
                                                            t = t + 1
                                                            continue 
                                            else:
                                                if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                                    revert with 0, 34
                                                if stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                    if 31 >= stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                        mem[_20684 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                    else:
                                                        mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                        mem[_20684 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                        s = _20684 + 32
                                                        t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                        while _20684 + stor552[stor151[address(arg2)][idx]].field_257 % 128 > s:
                                                            mem[s + 32] = stor1[t].field_0
                                                            s = s + 32
                                                            t = t + 1
                                                            continue 
                                            mem[_18359 + 32] = _20684
                                        mem[_18359 + 64] = stor552[stor151[address(arg2)][idx]].field_512
                                        mem[_18359 + 96] = stor552[stor151[address(arg2)][idx]].field_768
                                        mem[_18359 + 128] = stor552[stor151[address(arg2)][idx]].field_1024
                                        mem[_18359 + 160] = stor552[stor151[address(arg2)][idx]].field_1280
                                        mem[_18359 + 192] = bool(uint8(stor552[stor151[address(arg2)][idx]].field_1536))
                                        mem[_18359 + 224] = bool(uint8(stor552[stor151[address(arg2)][idx]].field_1544))
                                        if not uint8(stor552[stor151[address(arg2)][idx]].field_1536):
                                            revert with 0, 'Troops: This troop doesn't exist'
                                        if idx >= mem[ceil32(ceil32(arg4.length)) + 97]:
                                            revert with 0, 50
                                        mem[(32 * idx) + ceil32(ceil32(arg4.length)) + 129] = tokenOfOwnerByIndex[address(arg2)][idx]
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        continue 
                                    idx = 0
                                    s = 0
                                    while idx < mem[ceil32(ceil32(arg4.length)) + 97]:
                                        if idx >= mem[ceil32(ceil32(arg4.length)) + 97]:
                                            revert with 0, 50
                                        mem[0] = mem[(32 * idx) + ceil32(ceil32(arg4.length)) + 129]
                                        mem[32] = 552
                                        if not uint8(stor552[mem[(32 * idx) + ceil32(ceil32(arg4.length)) + 129]].field_1544):
                                            if idx == -1:
                                                revert with 0, 17
                                            idx = idx + 1
                                            s = s
                                            continue 
                                        if s == -1:
                                            revert with 0, 17
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = s + 1
                                        continue 
                                    if s >= 2:
                                        revert with 0, 'Each holder can not hold more than 2 Gladiators'
                                    if not arg1:
                                        stor154[arg3] = tokenByIndex.length
                                        tokenByIndex.length++
                                        stor72A1[stor153.length] = arg3
                                        if arg2:
                                            if arg2 == arg1:
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _36193 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_36193] == Mask(32, 224, mem[_36193])
                                                        if Mask(32, 224, mem[_36193]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[96] + mem[64] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _36194 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_36194] == Mask(32, 224, mem[_36194])
                                                        if Mask(32, 224, mem[_36194]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if not arg2:
                                                    revert with 0, 'ERC721: balance query for the zero address'
                                                tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                stor152[arg3] = balanceOf[address(arg2)]
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _36195 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_36195] == Mask(32, 224, mem[_36195])
                                                        if Mask(32, 224, mem[_36195]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[96] + mem[64] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _36196 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_36196] == Mask(32, 224, mem[_36196])
                                                        if Mask(32, 224, mem[_36196]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            if tokenByIndex.length < 1:
                                                revert with 0, 17
                                            if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                revert with 0, 50
                                            if stor154[arg3] >= tokenByIndex.length:
                                                revert with 0, 50
                                            tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                            stor154[stor153[stor153.length]] = stor154[arg3]
                                            stor154[arg3] = 0
                                            if not tokenByIndex.length:
                                                revert with 0, 49
                                            tokenByIndex[tokenByIndex.length] = 0
                                            tokenByIndex.length--
                                            approved[arg3] = 0
                                            if not ownerOf[arg3]:
                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                            emit Approval(ownerOf[arg3], 0, arg3);
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            balanceOf[address(arg1)]--
                                            if balanceOf[address(arg2)] > -2:
                                                revert with 0, 17
                                            balanceOf[address(arg2)]++
                                            mem[0] = arg3
                                            mem[32] = 103
                                            ownerOf[arg3] = arg2
                                            emit Transfer(arg1, arg2, arg3);
                                            if ext_code.size(arg2):
                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = msg.sender
                                                mem[mem[64] + 36] = arg1
                                                mem[mem[64] + 68] = arg3
                                                mem[mem[64] + 100] = 128
                                                mem[mem[64] + 132] = mem[96]
                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                if ceil32(mem[96]) <= mem[96]:
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _36197 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_36197] == Mask(32, 224, mem[_36197])
                                                    if Mask(32, 224, mem[_36197]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    mem[mem[96] + mem[64] + 164] = 0
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _36198 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_36198] == Mask(32, 224, mem[_36198])
                                                    if Mask(32, 224, mem[_36198]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                    else:
                                        if arg1 == arg2:
                                            if arg2:
                                                if arg2 == arg1:
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _36175 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_36175] == Mask(32, 224, mem[_36175])
                                                            if Mask(32, 224, mem[_36175]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _36176 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_36176] == Mask(32, 224, mem[_36176])
                                                            if Mask(32, 224, mem[_36176]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    if not arg2:
                                                        revert with 0, 'ERC721: balance query for the zero address'
                                                    tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                    stor152[arg3] = balanceOf[address(arg2)]
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _36177 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_36177] == Mask(32, 224, mem[_36177])
                                                            if Mask(32, 224, mem[_36177]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _36178 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_36178] == Mask(32, 224, mem[_36178])
                                                            if Mask(32, 224, mem[_36178]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if tokenByIndex.length < 1:
                                                    revert with 0, 17
                                                if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                    revert with 0, 50
                                                if stor154[arg3] >= tokenByIndex.length:
                                                    revert with 0, 50
                                                tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                stor154[stor153[stor153.length]] = stor154[arg3]
                                                stor154[arg3] = 0
                                                if not tokenByIndex.length:
                                                    revert with 0, 49
                                                tokenByIndex[tokenByIndex.length] = 0
                                                tokenByIndex.length--
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _36179 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_36179] == Mask(32, 224, mem[_36179])
                                                        if Mask(32, 224, mem[_36179]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[96] + mem[64] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _36180 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_36180] == Mask(32, 224, mem[_36180])
                                                        if Mask(32, 224, mem[_36180]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            if not arg1:
                                                revert with 0, 'ERC721: balance query for the zero address'
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            if balanceOf[address(arg1)] - 1 == stor152[arg3]:
                                                stor152[arg3] = 0
                                                tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                                                if arg2:
                                                    if arg2 == arg1:
                                                        approved[arg3] = 0
                                                        if not ownerOf[arg3]:
                                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                                        emit Approval(ownerOf[arg3], 0, arg3);
                                                        if balanceOf[address(arg1)] < 1:
                                                            revert with 0, 17
                                                        balanceOf[address(arg1)]--
                                                        if balanceOf[address(arg2)] > -2:
                                                            revert with 0, 17
                                                        balanceOf[address(arg2)]++
                                                        mem[0] = arg3
                                                        mem[32] = 103
                                                        ownerOf[arg3] = arg2
                                                        emit Transfer(arg1, arg2, arg3);
                                                        if ext_code.size(arg2):
                                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = msg.sender
                                                            mem[mem[64] + 36] = arg1
                                                            mem[mem[64] + 68] = arg3
                                                            mem[mem[64] + 100] = 128
                                                            mem[mem[64] + 132] = mem[96]
                                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                            if ceil32(mem[96]) <= mem[96]:
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _36181 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_36181] == Mask(32, 224, mem[_36181])
                                                                if Mask(32, 224, mem[_36181]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            else:
                                                                mem[mem[96] + mem[64] + 164] = 0
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _36182 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_36182] == Mask(32, 224, mem[_36182])
                                                                if Mask(32, 224, mem[_36182]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        if not arg2:
                                                            revert with 0, 'ERC721: balance query for the zero address'
                                                        tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                        stor152[arg3] = balanceOf[address(arg2)]
                                                        approved[arg3] = 0
                                                        if not ownerOf[arg3]:
                                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                                        emit Approval(ownerOf[arg3], 0, arg3);
                                                        if balanceOf[address(arg1)] < 1:
                                                            revert with 0, 17
                                                        balanceOf[address(arg1)]--
                                                        if balanceOf[address(arg2)] > -2:
                                                            revert with 0, 17
                                                        balanceOf[address(arg2)]++
                                                        mem[0] = arg3
                                                        mem[32] = 103
                                                        ownerOf[arg3] = arg2
                                                        emit Transfer(arg1, arg2, arg3);
                                                        if ext_code.size(arg2):
                                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = msg.sender
                                                            mem[mem[64] + 36] = arg1
                                                            mem[mem[64] + 68] = arg3
                                                            mem[mem[64] + 100] = 128
                                                            mem[mem[64] + 132] = mem[96]
                                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                            if ceil32(mem[96]) <= mem[96]:
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _36183 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_36183] == Mask(32, 224, mem[_36183])
                                                                if Mask(32, 224, mem[_36183]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            else:
                                                                mem[mem[96] + mem[64] + 164] = 0
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _36184 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_36184] == Mask(32, 224, mem[_36184])
                                                                if Mask(32, 224, mem[_36184]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    if tokenByIndex.length < 1:
                                                        revert with 0, 17
                                                    if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                        revert with 0, 50
                                                    if stor154[arg3] >= tokenByIndex.length:
                                                        revert with 0, 50
                                                    tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                    stor154[stor153[stor153.length]] = stor154[arg3]
                                                    stor154[arg3] = 0
                                                    if not tokenByIndex.length:
                                                        revert with 0, 49
                                                    tokenByIndex[tokenByIndex.length] = 0
                                                    tokenByIndex.length--
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _36185 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_36185] == Mask(32, 224, mem[_36185])
                                                            if Mask(32, 224, mem[_36185]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _36186 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_36186] == Mask(32, 224, mem[_36186])
                                                            if Mask(32, 224, mem[_36186]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                tokenOfOwnerByIndex[address(arg1)][stor152[arg3]] = tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1]
                                                stor152[stor151[address(arg1)][stor104[address(arg1)] - 1]] = stor152[arg3]
                                                stor152[arg3] = 0
                                                tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                                                if arg2:
                                                    if arg2 == arg1:
                                                        approved[arg3] = 0
                                                        if not ownerOf[arg3]:
                                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                                        emit Approval(ownerOf[arg3], 0, arg3);
                                                        if balanceOf[address(arg1)] < 1:
                                                            revert with 0, 17
                                                        balanceOf[address(arg1)]--
                                                        if balanceOf[address(arg2)] > -2:
                                                            revert with 0, 17
                                                        balanceOf[address(arg2)]++
                                                        mem[0] = arg3
                                                        mem[32] = 103
                                                        ownerOf[arg3] = arg2
                                                        emit Transfer(arg1, arg2, arg3);
                                                        if ext_code.size(arg2):
                                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = msg.sender
                                                            mem[mem[64] + 36] = arg1
                                                            mem[mem[64] + 68] = arg3
                                                            mem[mem[64] + 100] = 128
                                                            mem[mem[64] + 132] = mem[96]
                                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                            if ceil32(mem[96]) <= mem[96]:
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _36187 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_36187] == Mask(32, 224, mem[_36187])
                                                                if Mask(32, 224, mem[_36187]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            else:
                                                                mem[mem[96] + mem[64] + 164] = 0
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _36188 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_36188] == Mask(32, 224, mem[_36188])
                                                                if Mask(32, 224, mem[_36188]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        if not arg2:
                                                            revert with 0, 'ERC721: balance query for the zero address'
                                                        tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                        stor152[arg3] = balanceOf[address(arg2)]
                                                        approved[arg3] = 0
                                                        if not ownerOf[arg3]:
                                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                                        emit Approval(ownerOf[arg3], 0, arg3);
                                                        if balanceOf[address(arg1)] < 1:
                                                            revert with 0, 17
                                                        balanceOf[address(arg1)]--
                                                        if balanceOf[address(arg2)] > -2:
                                                            revert with 0, 17
                                                        balanceOf[address(arg2)]++
                                                        mem[0] = arg3
                                                        mem[32] = 103
                                                        ownerOf[arg3] = arg2
                                                        emit Transfer(arg1, arg2, arg3);
                                                        if ext_code.size(arg2):
                                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = msg.sender
                                                            mem[mem[64] + 36] = arg1
                                                            mem[mem[64] + 68] = arg3
                                                            mem[mem[64] + 100] = 128
                                                            mem[mem[64] + 132] = mem[96]
                                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                            if ceil32(mem[96]) <= mem[96]:
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _36189 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_36189] == Mask(32, 224, mem[_36189])
                                                                if Mask(32, 224, mem[_36189]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            else:
                                                                mem[mem[96] + mem[64] + 164] = 0
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _36190 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_36190] == Mask(32, 224, mem[_36190])
                                                                if Mask(32, 224, mem[_36190]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    if tokenByIndex.length < 1:
                                                        revert with 0, 17
                                                    if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                        revert with 0, 50
                                                    if stor154[arg3] >= tokenByIndex.length:
                                                        revert with 0, 50
                                                    tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                    stor154[stor153[stor153.length]] = stor154[arg3]
                                                    stor154[arg3] = 0
                                                    if not tokenByIndex.length:
                                                        revert with 0, 49
                                                    tokenByIndex[tokenByIndex.length] = 0
                                                    tokenByIndex.length--
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _36191 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_36191] == Mask(32, 224, mem[_36191])
                                                            if Mask(32, 224, mem[_36191]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _36192 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_36192] == Mask(32, 224, mem[_36192])
                                                            if Mask(32, 224, mem[_36192]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                            else:
                                mem[ceil32(ceil32(arg4.length)) + 101] = arg2
                                staticcall liquidityPoolManagerImplementationAddress.0xb278110f with:
                                        gas gas_remaining wei
                                       args arg2
                                mem[ceil32(ceil32(arg4.length)) + 97] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                if ext_call.return_data[0]:
                                    if not arg1:
                                        stor154[arg3] = tokenByIndex.length
                                        tokenByIndex.length++
                                        stor72A1[stor153.length] = arg3
                                    else:
                                        if arg1 != arg2:
                                            if not arg1:
                                                revert with 0, 'ERC721: balance query for the zero address'
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            if balanceOf[address(arg1)] - 1 != stor152[arg3]:
                                                tokenOfOwnerByIndex[address(arg1)][stor152[arg3]] = tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1]
                                                stor152[stor151[address(arg1)][stor104[address(arg1)] - 1]] = stor152[arg3]
                                            stor152[arg3] = 0
                                            tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                                    if arg2:
                                        if arg2 != arg1:
                                            if not arg2:
                                                revert with 0, 'ERC721: balance query for the zero address'
                                            tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                            stor152[arg3] = balanceOf[address(arg2)]
                                    else:
                                        if tokenByIndex.length < 1:
                                            revert with 0, 17
                                        if tokenByIndex.length - 1 >= tokenByIndex.length:
                                            revert with 0, 50
                                        if stor154[arg3] >= tokenByIndex.length:
                                            revert with 0, 50
                                        tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                        stor154[stor153[stor153.length]] = stor154[arg3]
                                        stor154[arg3] = 0
                                        if not tokenByIndex.length:
                                            revert with 0, 49
                                        tokenByIndex[tokenByIndex.length] = 0
                                        tokenByIndex.length--
                                    approved[arg3] = 0
                                    if not ownerOf[arg3]:
                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                    emit Approval(ownerOf[arg3], 0, arg3);
                                    if balanceOf[address(arg1)] < 1:
                                        revert with 0, 17
                                    balanceOf[address(arg1)]--
                                    if balanceOf[address(arg2)] > -2:
                                        revert with 0, 17
                                    balanceOf[address(arg2)]++
                                    ownerOf[arg3] = arg2
                                    emit Transfer(arg1, arg2, arg3);
                                    if ext_code.size(arg2):
                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args msg.sender, address(arg1), arg3, Array(len=arg4.length, data=arg4[all])
                                        if not ext_call.success:
                                            if not return_data.size:
                                                if not arg4.length:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                revert with arg4[all]
                                            if not return_data.size:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                        if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                else:
                                    if not arg2:
                                        revert with 0, 'ERC721: balance query for the zero address'
                                    if balanceOf[address(arg2)] > test266151307():
                                        revert with 0, 65
                                    mem[ceil32(ceil32(arg4.length)) + ceil32(return_data.size) + 97] = balanceOf[address(arg2)]
                                    mem[64] = ceil32(ceil32(arg4.length)) + ceil32(return_data.size) + (32 * balanceOf[address(arg2)]) + 129
                                    if not balanceOf[address(arg2)]:
                                        idx = 0
                                        while idx < balanceOf[address(arg2)]:
                                            if not arg2:
                                                revert with 0, 'ERC721: balance query for the zero address'
                                            if idx >= balanceOf[address(arg2)]:
                                                revert with 0, 'ERC721Enumerable: owner index out of bounds'
                                            if tokenOfOwnerByIndex[address(arg2)][idx] <= 0:
                                                revert with 0, 'Troops: Id must be higher than zero'
                                            mem[0] = tokenOfOwnerByIndex[address(arg2)][idx]
                                            mem[32] = 552
                                            _18410 = mem[64]
                                            mem[64] = mem[64] + 256
                                            mem[_18410] = stor552[stor151[address(arg2)][idx]].field_0
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                                if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                                    revert with 0, 34
                                                _20632 = mem[64]
                                                mem[64] = mem[64] + ceil32(uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) + 32
                                                mem[_20632] = uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5
                                                if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                                    if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                                        revert with 0, 34
                                                    if Mask(256, -1, stor552[stor151[address(arg2)][idx]].field_256):
                                                        if 31 >= uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5:
                                                            mem[_20632 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                        else:
                                                            mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                            mem[_20632 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                            s = _20632 + 32
                                                            t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                            while _20632 + (uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) > s:
                                                                mem[s + 32] = stor1[t].field_0
                                                                s = s + 32
                                                                t = t + 1
                                                                continue 
                                                else:
                                                    if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                                        revert with 0, 34
                                                    if stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                        if 31 >= stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                            mem[_20632 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                        else:
                                                            mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                            mem[_20632 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                            s = _20632 + 32
                                                            t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                            while _20632 + stor552[stor151[address(arg2)][idx]].field_257 % 128 > s:
                                                                mem[s + 32] = stor1[t].field_0
                                                                s = s + 32
                                                                t = t + 1
                                                                continue 
                                                mem[_18410 + 32] = _20632
                                            else:
                                                if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                                    revert with 0, 34
                                                _20689 = mem[64]
                                                mem[64] = mem[64] + ceil32(stor552[stor151[address(arg2)][idx]].field_257 % 128) + 32
                                                mem[_20689] = stor552[stor151[address(arg2)][idx]].field_257 % 128
                                                if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                                    if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                                        revert with 0, 34
                                                    if Mask(256, -1, stor552[stor151[address(arg2)][idx]].field_256):
                                                        if 31 >= uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5:
                                                            mem[_20689 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                        else:
                                                            mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                            mem[_20689 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                            s = _20689 + 32
                                                            t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                            while _20689 + (uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) > s:
                                                                mem[s + 32] = stor1[t].field_0
                                                                s = s + 32
                                                                t = t + 1
                                                                continue 
                                                else:
                                                    if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                                        revert with 0, 34
                                                    if stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                        if 31 >= stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                            mem[_20689 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                        else:
                                                            mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                            mem[_20689 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                            s = _20689 + 32
                                                            t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                            while _20689 + stor552[stor151[address(arg2)][idx]].field_257 % 128 > s:
                                                                mem[s + 32] = stor1[t].field_0
                                                                s = s + 32
                                                                t = t + 1
                                                                continue 
                                                mem[_18410 + 32] = _20689
                                            mem[_18410 + 64] = stor552[stor151[address(arg2)][idx]].field_512
                                            mem[_18410 + 96] = stor552[stor151[address(arg2)][idx]].field_768
                                            mem[_18410 + 128] = stor552[stor151[address(arg2)][idx]].field_1024
                                            mem[_18410 + 160] = stor552[stor151[address(arg2)][idx]].field_1280
                                            mem[_18410 + 192] = bool(uint8(stor552[stor151[address(arg2)][idx]].field_1536))
                                            mem[_18410 + 224] = bool(uint8(stor552[stor151[address(arg2)][idx]].field_1544))
                                            if not uint8(stor552[stor151[address(arg2)][idx]].field_1536):
                                                revert with 0, 'Troops: This troop doesn't exist'
                                            if idx >= mem[ceil32(ceil32(arg4.length)) + ceil32(return_data.size) + 97]:
                                                revert with 0, 50
                                            mem[(32 * idx) + ceil32(ceil32(arg4.length)) + ceil32(return_data.size) + 129] = tokenOfOwnerByIndex[address(arg2)][idx]
                                            if idx == -1:
                                                revert with 0, 17
                                            idx = idx + 1
                                            continue 
                                        idx = 0
                                        s = 0
                                        while idx < mem[ceil32(ceil32(arg4.length)) + ceil32(return_data.size) + 97]:
                                            if idx >= mem[ceil32(ceil32(arg4.length)) + ceil32(return_data.size) + 97]:
                                                revert with 0, 50
                                            mem[0] = mem[(32 * idx) + ceil32(ceil32(arg4.length)) + ceil32(return_data.size) + 129]
                                            mem[32] = 552
                                            if not uint8(stor552[mem[(32 * idx) + ceil32(ceil32(arg4.length)) + ceil32(return_data.size) + 129]].field_1544):
                                                if idx == -1:
                                                    revert with 0, 17
                                                idx = idx + 1
                                                s = s
                                                continue 
                                            if s == -1:
                                                revert with 0, 17
                                            if idx == -1:
                                                revert with 0, 17
                                            idx = idx + 1
                                            s = s + 1
                                            continue 
                                        if s >= 2:
                                            revert with 0, 'Each holder can not hold more than 2 Gladiators'
                                        if not arg1:
                                            stor154[arg3] = tokenByIndex.length
                                            tokenByIndex.length++
                                            stor72A1[stor153.length] = arg3
                                            if arg2:
                                                if arg2 == arg1:
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _36217 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_36217] == Mask(32, 224, mem[_36217])
                                                            if Mask(32, 224, mem[_36217]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _36218 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_36218] == Mask(32, 224, mem[_36218])
                                                            if Mask(32, 224, mem[_36218]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    if not arg2:
                                                        revert with 0, 'ERC721: balance query for the zero address'
                                                    tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                    stor152[arg3] = balanceOf[address(arg2)]
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _36219 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_36219] == Mask(32, 224, mem[_36219])
                                                            if Mask(32, 224, mem[_36219]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _36220 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_36220] == Mask(32, 224, mem[_36220])
                                                            if Mask(32, 224, mem[_36220]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if tokenByIndex.length < 1:
                                                    revert with 0, 17
                                                if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                    revert with 0, 50
                                                if stor154[arg3] >= tokenByIndex.length:
                                                    revert with 0, 50
                                                tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                stor154[stor153[stor153.length]] = stor154[arg3]
                                                stor154[arg3] = 0
                                                if not tokenByIndex.length:
                                                    revert with 0, 49
                                                tokenByIndex[tokenByIndex.length] = 0
                                                tokenByIndex.length--
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _36221 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_36221] == Mask(32, 224, mem[_36221])
                                                        if Mask(32, 224, mem[_36221]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[96] + mem[64] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _36222 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_36222] == Mask(32, 224, mem[_36222])
                                                        if Mask(32, 224, mem[_36222]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            if arg1 == arg2:
                                                if arg2:
                                                    if arg2 == arg1:
                                                        approved[arg3] = 0
                                                        if not ownerOf[arg3]:
                                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                                        emit Approval(ownerOf[arg3], 0, arg3);
                                                        if balanceOf[address(arg1)] < 1:
                                                            revert with 0, 17
                                                        balanceOf[address(arg1)]--
                                                        if balanceOf[address(arg2)] > -2:
                                                            revert with 0, 17
                                                        balanceOf[address(arg2)]++
                                                        mem[0] = arg3
                                                        mem[32] = 103
                                                        ownerOf[arg3] = arg2
                                                        emit Transfer(arg1, arg2, arg3);
                                                        if ext_code.size(arg2):
                                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = msg.sender
                                                            mem[mem[64] + 36] = arg1
                                                            mem[mem[64] + 68] = arg3
                                                            mem[mem[64] + 100] = 128
                                                            mem[mem[64] + 132] = mem[96]
                                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                            if ceil32(mem[96]) <= mem[96]:
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _36199 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_36199] == Mask(32, 224, mem[_36199])
                                                                if Mask(32, 224, mem[_36199]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            else:
                                                                mem[mem[96] + mem[64] + 164] = 0
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _36200 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_36200] == Mask(32, 224, mem[_36200])
                                                                if Mask(32, 224, mem[_36200]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        if not arg2:
                                                            revert with 0, 'ERC721: balance query for the zero address'
                                                        tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                        stor152[arg3] = balanceOf[address(arg2)]
                                                        approved[arg3] = 0
                                                        if not ownerOf[arg3]:
                                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                                        emit Approval(ownerOf[arg3], 0, arg3);
                                                        if balanceOf[address(arg1)] < 1:
                                                            revert with 0, 17
                                                        balanceOf[address(arg1)]--
                                                        if balanceOf[address(arg2)] > -2:
                                                            revert with 0, 17
                                                        balanceOf[address(arg2)]++
                                                        mem[0] = arg3
                                                        mem[32] = 103
                                                        ownerOf[arg3] = arg2
                                                        emit Transfer(arg1, arg2, arg3);
                                                        if ext_code.size(arg2):
                                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = msg.sender
                                                            mem[mem[64] + 36] = arg1
                                                            mem[mem[64] + 68] = arg3
                                                            mem[mem[64] + 100] = 128
                                                            mem[mem[64] + 132] = mem[96]
                                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                            if ceil32(mem[96]) <= mem[96]:
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _36201 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_36201] == Mask(32, 224, mem[_36201])
                                                                if Mask(32, 224, mem[_36201]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            else:
                                                                mem[mem[96] + mem[64] + 164] = 0
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _36202 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_36202] == Mask(32, 224, mem[_36202])
                                                                if Mask(32, 224, mem[_36202]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    if tokenByIndex.length < 1:
                                                        revert with 0, 17
                                                    if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                        revert with 0, 50
                                                    if stor154[arg3] >= tokenByIndex.length:
                                                        revert with 0, 50
                                                    tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                    stor154[stor153[stor153.length]] = stor154[arg3]
                                                    stor154[arg3] = 0
                                                    if not tokenByIndex.length:
                                                        revert with 0, 49
                                                    tokenByIndex[tokenByIndex.length] = 0
                                                    tokenByIndex.length--
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _36203 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_36203] == Mask(32, 224, mem[_36203])
                                                            if Mask(32, 224, mem[_36203]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _36204 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_36204] == Mask(32, 224, mem[_36204])
                                                            if Mask(32, 224, mem[_36204]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if not arg1:
                                                    revert with 0, 'ERC721: balance query for the zero address'
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                if balanceOf[address(arg1)] - 1 == stor152[arg3]:
                                                    stor152[arg3] = 0
                                                    tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                                                    if arg2:
                                                        if arg2 == arg1:
                                                            approved[arg3] = 0
                                                            if not ownerOf[arg3]:
                                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                                            emit Approval(ownerOf[arg3], 0, arg3);
                                                            if balanceOf[address(arg1)] < 1:
                                                                revert with 0, 17
                                                            balanceOf[address(arg1)]--
                                                            if balanceOf[address(arg2)] > -2:
                                                                revert with 0, 17
                                                            balanceOf[address(arg2)]++
                                                            mem[0] = arg3
                                                            mem[32] = 103
                                                            ownerOf[arg3] = arg2
                                                            emit Transfer(arg1, arg2, arg3);
                                                            if ext_code.size(arg2):
                                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = msg.sender
                                                                mem[mem[64] + 36] = arg1
                                                                mem[mem[64] + 68] = arg3
                                                                mem[mem[64] + 100] = 128
                                                                mem[mem[64] + 132] = mem[96]
                                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                                if ceil32(mem[96]) <= mem[96]:
                                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                         gas gas_remaining wei
                                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                    mem[mem[64]] = ext_call.return_data[0]
                                                                    if not ext_call.success:
                                                                        if not return_data.size:
                                                                            if not mem[96]:
                                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                            revert with memory
                                                                              from 128
                                                                               len mem[96]
                                                                        if not return_data.size:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    _36205 = mem[64]
                                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                                    require return_data.size >= 32
                                                                    require mem[_36205] == Mask(32, 224, mem[_36205])
                                                                    if Mask(32, 224, mem[_36205]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                else:
                                                                    mem[mem[96] + mem[64] + 164] = 0
                                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                         gas gas_remaining wei
                                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                    mem[mem[64]] = ext_call.return_data[0]
                                                                    if not ext_call.success:
                                                                        if not return_data.size:
                                                                            if not mem[96]:
                                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                            revert with memory
                                                                              from 128
                                                                               len mem[96]
                                                                        if not return_data.size:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    _36206 = mem[64]
                                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                                    require return_data.size >= 32
                                                                    require mem[_36206] == Mask(32, 224, mem[_36206])
                                                                    if Mask(32, 224, mem[_36206]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            if not arg2:
                                                                revert with 0, 'ERC721: balance query for the zero address'
                                                            tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                            stor152[arg3] = balanceOf[address(arg2)]
                                                            approved[arg3] = 0
                                                            if not ownerOf[arg3]:
                                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                                            emit Approval(ownerOf[arg3], 0, arg3);
                                                            if balanceOf[address(arg1)] < 1:
                                                                revert with 0, 17
                                                            balanceOf[address(arg1)]--
                                                            if balanceOf[address(arg2)] > -2:
                                                                revert with 0, 17
                                                            balanceOf[address(arg2)]++
                                                            mem[0] = arg3
                                                            mem[32] = 103
                                                            ownerOf[arg3] = arg2
                                                            emit Transfer(arg1, arg2, arg3);
                                                            if ext_code.size(arg2):
                                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = msg.sender
                                                                mem[mem[64] + 36] = arg1
                                                                mem[mem[64] + 68] = arg3
                                                                mem[mem[64] + 100] = 128
                                                                mem[mem[64] + 132] = mem[96]
                                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                                if ceil32(mem[96]) <= mem[96]:
                                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                         gas gas_remaining wei
                                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                    mem[mem[64]] = ext_call.return_data[0]
                                                                    if not ext_call.success:
                                                                        if not return_data.size:
                                                                            if not mem[96]:
                                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                            revert with memory
                                                                              from 128
                                                                               len mem[96]
                                                                        if not return_data.size:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    _36207 = mem[64]
                                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                                    require return_data.size >= 32
                                                                    require mem[_36207] == Mask(32, 224, mem[_36207])
                                                                    if Mask(32, 224, mem[_36207]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                else:
                                                                    mem[mem[96] + mem[64] + 164] = 0
                                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                         gas gas_remaining wei
                                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                    mem[mem[64]] = ext_call.return_data[0]
                                                                    if not ext_call.success:
                                                                        if not return_data.size:
                                                                            if not mem[96]:
                                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                            revert with memory
                                                                              from 128
                                                                               len mem[96]
                                                                        if not return_data.size:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    _36208 = mem[64]
                                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                                    require return_data.size >= 32
                                                                    require mem[_36208] == Mask(32, 224, mem[_36208])
                                                                    if Mask(32, 224, mem[_36208]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        if tokenByIndex.length < 1:
                                                            revert with 0, 17
                                                        if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                            revert with 0, 50
                                                        if stor154[arg3] >= tokenByIndex.length:
                                                            revert with 0, 50
                                                        tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                        stor154[stor153[stor153.length]] = stor154[arg3]
                                                        stor154[arg3] = 0
                                                        if not tokenByIndex.length:
                                                            revert with 0, 49
                                                        tokenByIndex[tokenByIndex.length] = 0
                                                        tokenByIndex.length--
                                                        approved[arg3] = 0
                                                        if not ownerOf[arg3]:
                                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                                        emit Approval(ownerOf[arg3], 0, arg3);
                                                        if balanceOf[address(arg1)] < 1:
                                                            revert with 0, 17
                                                        balanceOf[address(arg1)]--
                                                        if balanceOf[address(arg2)] > -2:
                                                            revert with 0, 17
                                                        balanceOf[address(arg2)]++
                                                        mem[0] = arg3
                                                        mem[32] = 103
                                                        ownerOf[arg3] = arg2
                                                        emit Transfer(arg1, arg2, arg3);
                                                        if ext_code.size(arg2):
                                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = msg.sender
                                                            mem[mem[64] + 36] = arg1
                                                            mem[mem[64] + 68] = arg3
                                                            mem[mem[64] + 100] = 128
                                                            mem[mem[64] + 132] = mem[96]
                                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                            if ceil32(mem[96]) <= mem[96]:
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _36209 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_36209] == Mask(32, 224, mem[_36209])
                                                                if Mask(32, 224, mem[_36209]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            else:
                                                                mem[mem[96] + mem[64] + 164] = 0
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _36210 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_36210] == Mask(32, 224, mem[_36210])
                                                                if Mask(32, 224, mem[_36210]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    tokenOfOwnerByIndex[address(arg1)][stor152[arg3]] = tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1]
                                                    stor152[stor151[address(arg1)][stor104[address(arg1)] - 1]] = stor152[arg3]
                                                    stor152[arg3] = 0
                                                    tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                                                    if arg2:
                                                        if arg2 == arg1:
                                                            approved[arg3] = 0
                                                            if not ownerOf[arg3]:
                                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                                            emit Approval(ownerOf[arg3], 0, arg3);
                                                            if balanceOf[address(arg1)] < 1:
                                                                revert with 0, 17
                                                            balanceOf[address(arg1)]--
                                                            if balanceOf[address(arg2)] > -2:
                                                                revert with 0, 17
                                                            balanceOf[address(arg2)]++
                                                            mem[0] = arg3
                                                            mem[32] = 103
                                                            ownerOf[arg3] = arg2
                                                            emit Transfer(arg1, arg2, arg3);
                                                            if ext_code.size(arg2):
                                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = msg.sender
                                                                mem[mem[64] + 36] = arg1
                                                                mem[mem[64] + 68] = arg3
                                                                mem[mem[64] + 100] = 128
                                                                mem[mem[64] + 132] = mem[96]
                                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                                if ceil32(mem[96]) <= mem[96]:
                                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                         gas gas_remaining wei
                                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                    mem[mem[64]] = ext_call.return_data[0]
                                                                    if not ext_call.success:
                                                                        if not return_data.size:
                                                                            if not mem[96]:
                                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                            revert with memory
                                                                              from 128
                                                                               len mem[96]
                                                                        if not return_data.size:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    _36211 = mem[64]
                                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                                    require return_data.size >= 32
                                                                    require mem[_36211] == Mask(32, 224, mem[_36211])
                                                                    if Mask(32, 224, mem[_36211]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                else:
                                                                    mem[mem[96] + mem[64] + 164] = 0
                                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                         gas gas_remaining wei
                                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                    mem[mem[64]] = ext_call.return_data[0]
                                                                    if not ext_call.success:
                                                                        if not return_data.size:
                                                                            if not mem[96]:
                                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                            revert with memory
                                                                              from 128
                                                                               len mem[96]
                                                                        if not return_data.size:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    _36212 = mem[64]
                                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                                    require return_data.size >= 32
                                                                    require mem[_36212] == Mask(32, 224, mem[_36212])
                                                                    if Mask(32, 224, mem[_36212]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            if not arg2:
                                                                revert with 0, 'ERC721: balance query for the zero address'
                                                            tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                            stor152[arg3] = balanceOf[address(arg2)]
                                                            approved[arg3] = 0
                                                            if not ownerOf[arg3]:
                                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                                            emit Approval(ownerOf[arg3], 0, arg3);
                                                            if balanceOf[address(arg1)] < 1:
                                                                revert with 0, 17
                                                            balanceOf[address(arg1)]--
                                                            if balanceOf[address(arg2)] > -2:
                                                                revert with 0, 17
                                                            balanceOf[address(arg2)]++
                                                            mem[0] = arg3
                                                            mem[32] = 103
                                                            ownerOf[arg3] = arg2
                                                            emit Transfer(arg1, arg2, arg3);
                                                            if ext_code.size(arg2):
                                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = msg.sender
                                                                mem[mem[64] + 36] = arg1
                                                                mem[mem[64] + 68] = arg3
                                                                mem[mem[64] + 100] = 128
                                                                mem[mem[64] + 132] = mem[96]
                                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                                if ceil32(mem[96]) <= mem[96]:
                                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                         gas gas_remaining wei
                                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                    mem[mem[64]] = ext_call.return_data[0]
                                                                    if not ext_call.success:
                                                                        if not return_data.size:
                                                                            if not mem[96]:
                                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                            revert with memory
                                                                              from 128
                                                                               len mem[96]
                                                                        if not return_data.size:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    _36213 = mem[64]
                                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                                    require return_data.size >= 32
                                                                    require mem[_36213] == Mask(32, 224, mem[_36213])
                                                                    if Mask(32, 224, mem[_36213]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                else:
                                                                    mem[mem[96] + mem[64] + 164] = 0
                                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                         gas gas_remaining wei
                                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                    mem[mem[64]] = ext_call.return_data[0]
                                                                    if not ext_call.success:
                                                                        if not return_data.size:
                                                                            if not mem[96]:
                                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                            revert with memory
                                                                              from 128
                                                                               len mem[96]
                                                                        if not return_data.size:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    _36214 = mem[64]
                                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                                    require return_data.size >= 32
                                                                    require mem[_36214] == Mask(32, 224, mem[_36214])
                                                                    if Mask(32, 224, mem[_36214]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        if tokenByIndex.length < 1:
                                                            revert with 0, 17
                                                        if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                            revert with 0, 50
                                                        if stor154[arg3] >= tokenByIndex.length:
                                                            revert with 0, 50
                                                        tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                        stor154[stor153[stor153.length]] = stor154[arg3]
                                                        stor154[arg3] = 0
                                                        if not tokenByIndex.length:
                                                            revert with 0, 49
                                                        tokenByIndex[tokenByIndex.length] = 0
                                                        tokenByIndex.length--
                                                        approved[arg3] = 0
                                                        if not ownerOf[arg3]:
                                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                                        emit Approval(ownerOf[arg3], 0, arg3);
                                                        if balanceOf[address(arg1)] < 1:
                                                            revert with 0, 17
                                                        balanceOf[address(arg1)]--
                                                        if balanceOf[address(arg2)] > -2:
                                                            revert with 0, 17
                                                        balanceOf[address(arg2)]++
                                                        mem[0] = arg3
                                                        mem[32] = 103
                                                        ownerOf[arg3] = arg2
                                                        emit Transfer(arg1, arg2, arg3);
                                                        if ext_code.size(arg2):
                                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = msg.sender
                                                            mem[mem[64] + 36] = arg1
                                                            mem[mem[64] + 68] = arg3
                                                            mem[mem[64] + 100] = 128
                                                            mem[mem[64] + 132] = mem[96]
                                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                            if ceil32(mem[96]) <= mem[96]:
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _36215 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_36215] == Mask(32, 224, mem[_36215])
                                                                if Mask(32, 224, mem[_36215]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            else:
                                                                mem[mem[96] + mem[64] + 164] = 0
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _36216 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_36216] == Mask(32, 224, mem[_36216])
                                                                if Mask(32, 224, mem[_36216]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                    else:
                                        mem[ceil32(ceil32(arg4.length)) + ceil32(return_data.size) + 129 len 32 * balanceOf[address(arg2)]] = call.data[calldata.size len 32 * balanceOf[address(arg2)]]
                                        idx = 0
                                        while idx < balanceOf[address(arg2)]:
                                            if not arg2:
                                                revert with 0, 'ERC721: balance query for the zero address'
                                            if idx >= balanceOf[address(arg2)]:
                                                revert with 0, 'ERC721Enumerable: owner index out of bounds'
                                            if tokenOfOwnerByIndex[address(arg2)][idx] <= 0:
                                                revert with 0, 'Troops: Id must be higher than zero'
                                            mem[0] = tokenOfOwnerByIndex[address(arg2)][idx]
                                            mem[32] = 552
                                            _18413 = mem[64]
                                            mem[64] = mem[64] + 256
                                            mem[_18413] = stor552[stor151[address(arg2)][idx]].field_0
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                                if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                                    revert with 0, 34
                                                _20634 = mem[64]
                                                mem[64] = mem[64] + ceil32(uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) + 32
                                                mem[_20634] = uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5
                                                if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                                    if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                                        revert with 0, 34
                                                    if Mask(256, -1, stor552[stor151[address(arg2)][idx]].field_256):
                                                        if 31 >= uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5:
                                                            mem[_20634 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                        else:
                                                            mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                            mem[_20634 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                            s = _20634 + 32
                                                            t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                            while _20634 + (uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) > s:
                                                                mem[s + 32] = stor1[t].field_0
                                                                s = s + 32
                                                                t = t + 1
                                                                continue 
                                                else:
                                                    if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                                        revert with 0, 34
                                                    if stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                        if 31 >= stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                            mem[_20634 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                        else:
                                                            mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                            mem[_20634 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                            s = _20634 + 32
                                                            t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                            while _20634 + stor552[stor151[address(arg2)][idx]].field_257 % 128 > s:
                                                                mem[s + 32] = stor1[t].field_0
                                                                s = s + 32
                                                                t = t + 1
                                                                continue 
                                                mem[_18413 + 32] = _20634
                                            else:
                                                if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                                    revert with 0, 34
                                                _20694 = mem[64]
                                                mem[64] = mem[64] + ceil32(stor552[stor151[address(arg2)][idx]].field_257 % 128) + 32
                                                mem[_20694] = stor552[stor151[address(arg2)][idx]].field_257 % 128
                                                if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                                    if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                                        revert with 0, 34
                                                    if Mask(256, -1, stor552[stor151[address(arg2)][idx]].field_256):
                                                        if 31 >= uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5:
                                                            mem[_20694 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                        else:
                                                            mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                            mem[_20694 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                            s = _20694 + 32
                                                            t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                            while _20694 + (uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) > s:
                                                                mem[s + 32] = stor1[t].field_0
                                                                s = s + 32
                                                                t = t + 1
                                                                continue 
                                                else:
                                                    if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                                        revert with 0, 34
                                                    if stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                        if 31 >= stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                            mem[_20694 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                        else:
                                                            mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                            mem[_20694 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                            s = _20694 + 32
                                                            t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                            while _20694 + stor552[stor151[address(arg2)][idx]].field_257 % 128 > s:
                                                                mem[s + 32] = stor1[t].field_0
                                                                s = s + 32
                                                                t = t + 1
                                                                continue 
                                                mem[_18413 + 32] = _20694
                                            mem[_18413 + 64] = stor552[stor151[address(arg2)][idx]].field_512
                                            mem[_18413 + 96] = stor552[stor151[address(arg2)][idx]].field_768
                                            mem[_18413 + 128] = stor552[stor151[address(arg2)][idx]].field_1024
                                            mem[_18413 + 160] = stor552[stor151[address(arg2)][idx]].field_1280
                                            mem[_18413 + 192] = bool(uint8(stor552[stor151[address(arg2)][idx]].field_1536))
                                            mem[_18413 + 224] = bool(uint8(stor552[stor151[address(arg2)][idx]].field_1544))
                                            if not uint8(stor552[stor151[address(arg2)][idx]].field_1536):
                                                revert with 0, 'Troops: This troop doesn't exist'
                                            if idx >= mem[ceil32(ceil32(arg4.length)) + ceil32(return_data.size) + 97]:
                                                revert with 0, 50
                                            mem[(32 * idx) + ceil32(ceil32(arg4.length)) + ceil32(return_data.size) + 129] = tokenOfOwnerByIndex[address(arg2)][idx]
                                            if idx == -1:
                                                revert with 0, 17
                                            idx = idx + 1
                                            continue 
                                        idx = 0
                                        s = 0
                                        while idx < mem[ceil32(ceil32(arg4.length)) + ceil32(return_data.size) + 97]:
                                            if idx >= mem[ceil32(ceil32(arg4.length)) + ceil32(return_data.size) + 97]:
                                                revert with 0, 50
                                            mem[0] = mem[(32 * idx) + ceil32(ceil32(arg4.length)) + ceil32(return_data.size) + 129]
                                            mem[32] = 552
                                            if not uint8(stor552[mem[(32 * idx) + ceil32(ceil32(arg4.length)) + ceil32(return_data.size) + 129]].field_1544):
                                                if idx == -1:
                                                    revert with 0, 17
                                                idx = idx + 1
                                                s = s
                                                continue 
                                            if s == -1:
                                                revert with 0, 17
                                            if idx == -1:
                                                revert with 0, 17
                                            idx = idx + 1
                                            s = s + 1
                                            continue 
                                        if s >= 2:
                                            revert with 0, 'Each holder can not hold more than 2 Gladiators'
                                        if not arg1:
                                            stor154[arg3] = tokenByIndex.length
                                            tokenByIndex.length++
                                            stor72A1[stor153.length] = arg3
                                            if arg2:
                                                if arg2 == arg1:
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _36241 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_36241] == Mask(32, 224, mem[_36241])
                                                            if Mask(32, 224, mem[_36241]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _36242 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_36242] == Mask(32, 224, mem[_36242])
                                                            if Mask(32, 224, mem[_36242]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    if not arg2:
                                                        revert with 0, 'ERC721: balance query for the zero address'
                                                    tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                    stor152[arg3] = balanceOf[address(arg2)]
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _36243 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_36243] == Mask(32, 224, mem[_36243])
                                                            if Mask(32, 224, mem[_36243]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _36244 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_36244] == Mask(32, 224, mem[_36244])
                                                            if Mask(32, 224, mem[_36244]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if tokenByIndex.length < 1:
                                                    revert with 0, 17
                                                if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                    revert with 0, 50
                                                if stor154[arg3] >= tokenByIndex.length:
                                                    revert with 0, 50
                                                tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                stor154[stor153[stor153.length]] = stor154[arg3]
                                                stor154[arg3] = 0
                                                if not tokenByIndex.length:
                                                    revert with 0, 49
                                                tokenByIndex[tokenByIndex.length] = 0
                                                tokenByIndex.length--
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _36245 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_36245] == Mask(32, 224, mem[_36245])
                                                        if Mask(32, 224, mem[_36245]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[96] + mem[64] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _36246 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_36246] == Mask(32, 224, mem[_36246])
                                                        if Mask(32, 224, mem[_36246]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            if arg1 == arg2:
                                                if arg2:
                                                    if arg2 == arg1:
                                                        approved[arg3] = 0
                                                        if not ownerOf[arg3]:
                                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                                        emit Approval(ownerOf[arg3], 0, arg3);
                                                        if balanceOf[address(arg1)] < 1:
                                                            revert with 0, 17
                                                        balanceOf[address(arg1)]--
                                                        if balanceOf[address(arg2)] > -2:
                                                            revert with 0, 17
                                                        balanceOf[address(arg2)]++
                                                        mem[0] = arg3
                                                        mem[32] = 103
                                                        ownerOf[arg3] = arg2
                                                        emit Transfer(arg1, arg2, arg3);
                                                        if ext_code.size(arg2):
                                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = msg.sender
                                                            mem[mem[64] + 36] = arg1
                                                            mem[mem[64] + 68] = arg3
                                                            mem[mem[64] + 100] = 128
                                                            mem[mem[64] + 132] = mem[96]
                                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                            if ceil32(mem[96]) <= mem[96]:
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _36223 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_36223] == Mask(32, 224, mem[_36223])
                                                                if Mask(32, 224, mem[_36223]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            else:
                                                                mem[mem[96] + mem[64] + 164] = 0
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _36224 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_36224] == Mask(32, 224, mem[_36224])
                                                                if Mask(32, 224, mem[_36224]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        if not arg2:
                                                            revert with 0, 'ERC721: balance query for the zero address'
                                                        tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                        stor152[arg3] = balanceOf[address(arg2)]
                                                        approved[arg3] = 0
                                                        if not ownerOf[arg3]:
                                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                                        emit Approval(ownerOf[arg3], 0, arg3);
                                                        if balanceOf[address(arg1)] < 1:
                                                            revert with 0, 17
                                                        balanceOf[address(arg1)]--
                                                        if balanceOf[address(arg2)] > -2:
                                                            revert with 0, 17
                                                        balanceOf[address(arg2)]++
                                                        mem[0] = arg3
                                                        mem[32] = 103
                                                        ownerOf[arg3] = arg2
                                                        emit Transfer(arg1, arg2, arg3);
                                                        if ext_code.size(arg2):
                                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = msg.sender
                                                            mem[mem[64] + 36] = arg1
                                                            mem[mem[64] + 68] = arg3
                                                            mem[mem[64] + 100] = 128
                                                            mem[mem[64] + 132] = mem[96]
                                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                            if ceil32(mem[96]) <= mem[96]:
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _36225 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_36225] == Mask(32, 224, mem[_36225])
                                                                if Mask(32, 224, mem[_36225]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            else:
                                                                mem[mem[96] + mem[64] + 164] = 0
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _36226 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_36226] == Mask(32, 224, mem[_36226])
                                                                if Mask(32, 224, mem[_36226]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    if tokenByIndex.length < 1:
                                                        revert with 0, 17
                                                    if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                        revert with 0, 50
                                                    if stor154[arg3] >= tokenByIndex.length:
                                                        revert with 0, 50
                                                    tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                    stor154[stor153[stor153.length]] = stor154[arg3]
                                                    stor154[arg3] = 0
                                                    if not tokenByIndex.length:
                                                        revert with 0, 49
                                                    tokenByIndex[tokenByIndex.length] = 0
                                                    tokenByIndex.length--
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _36227 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_36227] == Mask(32, 224, mem[_36227])
                                                            if Mask(32, 224, mem[_36227]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _36228 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_36228] == Mask(32, 224, mem[_36228])
                                                            if Mask(32, 224, mem[_36228]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if not arg1:
                                                    revert with 0, 'ERC721: balance query for the zero address'
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                if balanceOf[address(arg1)] - 1 == stor152[arg3]:
                                                    stor152[arg3] = 0
                                                    tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                                                    if arg2:
                                                        if arg2 == arg1:
                                                            approved[arg3] = 0
                                                            if not ownerOf[arg3]:
                                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                                            emit Approval(ownerOf[arg3], 0, arg3);
                                                            if balanceOf[address(arg1)] < 1:
                                                                revert with 0, 17
                                                            balanceOf[address(arg1)]--
                                                            if balanceOf[address(arg2)] > -2:
                                                                revert with 0, 17
                                                            balanceOf[address(arg2)]++
                                                            mem[0] = arg3
                                                            mem[32] = 103
                                                            ownerOf[arg3] = arg2
                                                            emit Transfer(arg1, arg2, arg3);
                                                            if ext_code.size(arg2):
                                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = msg.sender
                                                                mem[mem[64] + 36] = arg1
                                                                mem[mem[64] + 68] = arg3
                                                                mem[mem[64] + 100] = 128
                                                                mem[mem[64] + 132] = mem[96]
                                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                                if ceil32(mem[96]) <= mem[96]:
                                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                         gas gas_remaining wei
                                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                    mem[mem[64]] = ext_call.return_data[0]
                                                                    if not ext_call.success:
                                                                        if not return_data.size:
                                                                            if not mem[96]:
                                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                            revert with memory
                                                                              from 128
                                                                               len mem[96]
                                                                        if not return_data.size:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    _36229 = mem[64]
                                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                                    require return_data.size >= 32
                                                                    require mem[_36229] == Mask(32, 224, mem[_36229])
                                                                    if Mask(32, 224, mem[_36229]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                else:
                                                                    mem[mem[96] + mem[64] + 164] = 0
                                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                         gas gas_remaining wei
                                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                    mem[mem[64]] = ext_call.return_data[0]
                                                                    if not ext_call.success:
                                                                        if not return_data.size:
                                                                            if not mem[96]:
                                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                            revert with memory
                                                                              from 128
                                                                               len mem[96]
                                                                        if not return_data.size:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    _36230 = mem[64]
                                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                                    require return_data.size >= 32
                                                                    require mem[_36230] == Mask(32, 224, mem[_36230])
                                                                    if Mask(32, 224, mem[_36230]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            if not arg2:
                                                                revert with 0, 'ERC721: balance query for the zero address'
                                                            tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                            stor152[arg3] = balanceOf[address(arg2)]
                                                            approved[arg3] = 0
                                                            if not ownerOf[arg3]:
                                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                                            emit Approval(ownerOf[arg3], 0, arg3);
                                                            if balanceOf[address(arg1)] < 1:
                                                                revert with 0, 17
                                                            balanceOf[address(arg1)]--
                                                            if balanceOf[address(arg2)] > -2:
                                                                revert with 0, 17
                                                            balanceOf[address(arg2)]++
                                                            mem[0] = arg3
                                                            mem[32] = 103
                                                            ownerOf[arg3] = arg2
                                                            emit Transfer(arg1, arg2, arg3);
                                                            if ext_code.size(arg2):
                                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = msg.sender
                                                                mem[mem[64] + 36] = arg1
                                                                mem[mem[64] + 68] = arg3
                                                                mem[mem[64] + 100] = 128
                                                                mem[mem[64] + 132] = mem[96]
                                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                                if ceil32(mem[96]) <= mem[96]:
                                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                         gas gas_remaining wei
                                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                    mem[mem[64]] = ext_call.return_data[0]
                                                                    if not ext_call.success:
                                                                        if not return_data.size:
                                                                            if not mem[96]:
                                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                            revert with memory
                                                                              from 128
                                                                               len mem[96]
                                                                        if not return_data.size:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    _36231 = mem[64]
                                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                                    require return_data.size >= 32
                                                                    require mem[_36231] == Mask(32, 224, mem[_36231])
                                                                    if Mask(32, 224, mem[_36231]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                else:
                                                                    mem[mem[96] + mem[64] + 164] = 0
                                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                         gas gas_remaining wei
                                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                    mem[mem[64]] = ext_call.return_data[0]
                                                                    if not ext_call.success:
                                                                        if not return_data.size:
                                                                            if not mem[96]:
                                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                            revert with memory
                                                                              from 128
                                                                               len mem[96]
                                                                        if not return_data.size:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    _36232 = mem[64]
                                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                                    require return_data.size >= 32
                                                                    require mem[_36232] == Mask(32, 224, mem[_36232])
                                                                    if Mask(32, 224, mem[_36232]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        if tokenByIndex.length < 1:
                                                            revert with 0, 17
                                                        if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                            revert with 0, 50
                                                        if stor154[arg3] >= tokenByIndex.length:
                                                            revert with 0, 50
                                                        tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                        stor154[stor153[stor153.length]] = stor154[arg3]
                                                        stor154[arg3] = 0
                                                        if not tokenByIndex.length:
                                                            revert with 0, 49
                                                        tokenByIndex[tokenByIndex.length] = 0
                                                        tokenByIndex.length--
                                                        approved[arg3] = 0
                                                        if not ownerOf[arg3]:
                                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                                        emit Approval(ownerOf[arg3], 0, arg3);
                                                        if balanceOf[address(arg1)] < 1:
                                                            revert with 0, 17
                                                        balanceOf[address(arg1)]--
                                                        if balanceOf[address(arg2)] > -2:
                                                            revert with 0, 17
                                                        balanceOf[address(arg2)]++
                                                        mem[0] = arg3
                                                        mem[32] = 103
                                                        ownerOf[arg3] = arg2
                                                        emit Transfer(arg1, arg2, arg3);
                                                        if ext_code.size(arg2):
                                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = msg.sender
                                                            mem[mem[64] + 36] = arg1
                                                            mem[mem[64] + 68] = arg3
                                                            mem[mem[64] + 100] = 128
                                                            mem[mem[64] + 132] = mem[96]
                                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                            if ceil32(mem[96]) <= mem[96]:
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _36233 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_36233] == Mask(32, 224, mem[_36233])
                                                                if Mask(32, 224, mem[_36233]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            else:
                                                                mem[mem[96] + mem[64] + 164] = 0
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _36234 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_36234] == Mask(32, 224, mem[_36234])
                                                                if Mask(32, 224, mem[_36234]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    tokenOfOwnerByIndex[address(arg1)][stor152[arg3]] = tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1]
                                                    stor152[stor151[address(arg1)][stor104[address(arg1)] - 1]] = stor152[arg3]
                                                    stor152[arg3] = 0
                                                    tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                                                    if arg2:
                                                        if arg2 == arg1:
                                                            approved[arg3] = 0
                                                            if not ownerOf[arg3]:
                                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                                            emit Approval(ownerOf[arg3], 0, arg3);
                                                            if balanceOf[address(arg1)] < 1:
                                                                revert with 0, 17
                                                            balanceOf[address(arg1)]--
                                                            if balanceOf[address(arg2)] > -2:
                                                                revert with 0, 17
                                                            balanceOf[address(arg2)]++
                                                            mem[0] = arg3
                                                            mem[32] = 103
                                                            ownerOf[arg3] = arg2
                                                            emit Transfer(arg1, arg2, arg3);
                                                            if ext_code.size(arg2):
                                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = msg.sender
                                                                mem[mem[64] + 36] = arg1
                                                                mem[mem[64] + 68] = arg3
                                                                mem[mem[64] + 100] = 128
                                                                mem[mem[64] + 132] = mem[96]
                                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                                if ceil32(mem[96]) <= mem[96]:
                                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                         gas gas_remaining wei
                                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                    mem[mem[64]] = ext_call.return_data[0]
                                                                    if not ext_call.success:
                                                                        if not return_data.size:
                                                                            if not mem[96]:
                                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                            revert with memory
                                                                              from 128
                                                                               len mem[96]
                                                                        if not return_data.size:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    _36235 = mem[64]
                                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                                    require return_data.size >= 32
                                                                    require mem[_36235] == Mask(32, 224, mem[_36235])
                                                                    if Mask(32, 224, mem[_36235]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                else:
                                                                    mem[mem[96] + mem[64] + 164] = 0
                                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                         gas gas_remaining wei
                                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                    mem[mem[64]] = ext_call.return_data[0]
                                                                    if not ext_call.success:
                                                                        if not return_data.size:
                                                                            if not mem[96]:
                                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                            revert with memory
                                                                              from 128
                                                                               len mem[96]
                                                                        if not return_data.size:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    _36236 = mem[64]
                                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                                    require return_data.size >= 32
                                                                    require mem[_36236] == Mask(32, 224, mem[_36236])
                                                                    if Mask(32, 224, mem[_36236]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            if not arg2:
                                                                revert with 0, 'ERC721: balance query for the zero address'
                                                            tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                            stor152[arg3] = balanceOf[address(arg2)]
                                                            approved[arg3] = 0
                                                            if not ownerOf[arg3]:
                                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                                            emit Approval(ownerOf[arg3], 0, arg3);
                                                            if balanceOf[address(arg1)] < 1:
                                                                revert with 0, 17
                                                            balanceOf[address(arg1)]--
                                                            if balanceOf[address(arg2)] > -2:
                                                                revert with 0, 17
                                                            balanceOf[address(arg2)]++
                                                            mem[0] = arg3
                                                            mem[32] = 103
                                                            ownerOf[arg3] = arg2
                                                            emit Transfer(arg1, arg2, arg3);
                                                            if ext_code.size(arg2):
                                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = msg.sender
                                                                mem[mem[64] + 36] = arg1
                                                                mem[mem[64] + 68] = arg3
                                                                mem[mem[64] + 100] = 128
                                                                mem[mem[64] + 132] = mem[96]
                                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                                if ceil32(mem[96]) <= mem[96]:
                                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                         gas gas_remaining wei
                                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                    mem[mem[64]] = ext_call.return_data[0]
                                                                    if not ext_call.success:
                                                                        if not return_data.size:
                                                                            if not mem[96]:
                                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                            revert with memory
                                                                              from 128
                                                                               len mem[96]
                                                                        if not return_data.size:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    _36237 = mem[64]
                                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                                    require return_data.size >= 32
                                                                    require mem[_36237] == Mask(32, 224, mem[_36237])
                                                                    if Mask(32, 224, mem[_36237]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                else:
                                                                    mem[mem[96] + mem[64] + 164] = 0
                                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                         gas gas_remaining wei
                                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                    mem[mem[64]] = ext_call.return_data[0]
                                                                    if not ext_call.success:
                                                                        if not return_data.size:
                                                                            if not mem[96]:
                                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                            revert with memory
                                                                              from 128
                                                                               len mem[96]
                                                                        if not return_data.size:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    _36238 = mem[64]
                                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                                    require return_data.size >= 32
                                                                    require mem[_36238] == Mask(32, 224, mem[_36238])
                                                                    if Mask(32, 224, mem[_36238]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        if tokenByIndex.length < 1:
                                                            revert with 0, 17
                                                        if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                            revert with 0, 50
                                                        if stor154[arg3] >= tokenByIndex.length:
                                                            revert with 0, 50
                                                        tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                        stor154[stor153[stor153.length]] = stor154[arg3]
                                                        stor154[arg3] = 0
                                                        if not tokenByIndex.length:
                                                            revert with 0, 49
                                                        tokenByIndex[tokenByIndex.length] = 0
                                                        tokenByIndex.length--
                                                        approved[arg3] = 0
                                                        if not ownerOf[arg3]:
                                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                                        emit Approval(ownerOf[arg3], 0, arg3);
                                                        if balanceOf[address(arg1)] < 1:
                                                            revert with 0, 17
                                                        balanceOf[address(arg1)]--
                                                        if balanceOf[address(arg2)] > -2:
                                                            revert with 0, 17
                                                        balanceOf[address(arg2)]++
                                                        mem[0] = arg3
                                                        mem[32] = 103
                                                        ownerOf[arg3] = arg2
                                                        emit Transfer(arg1, arg2, arg3);
                                                        if ext_code.size(arg2):
                                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = msg.sender
                                                            mem[mem[64] + 36] = arg1
                                                            mem[mem[64] + 68] = arg3
                                                            mem[mem[64] + 100] = 128
                                                            mem[mem[64] + 132] = mem[96]
                                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                            if ceil32(mem[96]) <= mem[96]:
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _36239 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_36239] == Mask(32, 224, mem[_36239])
                                                                if Mask(32, 224, mem[_36239]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            else:
                                                                mem[mem[96] + mem[64] + 164] = 0
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _36240 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_36240] == Mask(32, 224, mem[_36240])
                                                                if Mask(32, 224, mem[_36240]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
}



}
