contract main {




// =====================  Runtime code  =====================


#
#  - sub_d85eb6b0(?)
#  - sub_f0c462b8(?)
#  - _fallback()
#
function withdraw(address arg1) {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    require ext_code.size(arg1)
    staticcall arg1.0x70a08231 with:
            gas gas_remaining wei
           args this.address
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_code.size(arg1)
    call arg1.0xa9059cbb with:
         gas gas_remaining wei
        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == bool(ext_call.return_data[0])
}

function sub_5faf43f3(?) {
    require calldata.size - 4 >= 128
    require arg2 == address(arg2)
    require arg3 == address(arg3)
    require arg4 == address(arg4)
    require ext_code.size(address(arg2))
    staticcall address(arg2).checkCost(uint256 arg1) with:
            gas gas_remaining wei
           args arg1
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_code.size(address(arg2))
    staticcall address(arg2).checkExtract(uint256 arg1) with:
            gas gas_remaining wei
           args arg1
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_code.size(address(arg3))
    staticcall address(arg3).0x313ce567 with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
    if 18 < ext_call.return_data[31 len 1]:
        revert with 'NH{q', 17
    if not uint8(-ext_call.return_data[31 len 1] + 18):
        if ext_call.return_data[0] and 1 > -1 / ext_call.return_data[0]:
            revert with 'NH{q', 17
        require ext_code.size(address(arg4))
        staticcall address(arg4).0x313ce567 with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
        if 18 < ext_call.return_data[31 len 1]:
            revert with 'NH{q', 17
        if not uint8(-ext_call.return_data[31 len 1] + 18):
            if ext_call.return_data[0] and 1 > -1 / ext_call.return_data[0]:
                revert with 'NH{q', 17
            require ext_code.size(address(arg2))
            staticcall address(arg2).getPricePeg() with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if ext_call.return_data[0] > 0x6df37f675ef6eadf5ab9a2072d44268d97df837e6748956e5c6c2117:
                revert with 'NH{q', 17
            if 10^10 * ext_call.return_data[0] and ext_call.return_data[0] > -1 / 10^10 * ext_call.return_data[0]:
                revert with 'NH{q', 17
            require ext_code.size(address(arg2))
            staticcall address(arg2).getPriceSource() with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if ext_call.return_data[0] > 0x6df37f675ef6eadf5ab9a2072d44268d97df837e6748956e5c6c2117:
                revert with 'NH{q', 17
            if 10^10 * ext_call.return_data[0] and ext_call.return_data[0] > -1 / 10^10 * ext_call.return_data[0]:
                revert with 'NH{q', 17
            require ext_code.size(address(arg2))
            staticcall address(arg2).checkLiquidation(uint256 arg1) with:
                    gas gas_remaining wei
                   args arg1
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == bool(ext_call.return_data[0])
            if 10^10 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 <= 10^10 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18:
                return bool(ext_call.return_data[0]), 0, ext_call.return_data[0]
            if 10^10 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 < ext_call.return_data[0]:
                revert with 'NH{q', 17
            return bool(ext_call.return_data[0]), 
                   (10^10 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18) - ext_call.return_data[0],
                   ext_call.return_data[0]
        if bool(bool(uint8(-ext_call.return_data[31 len 1] + 18) < 78)) or bool(bool(uint8(-ext_call.return_data[31 len 1] + 18) < 32)):
            if ext_call.return_data[0] and 10^uint8(-ext_call.return_data[31 len 1] + 18) > -1 / ext_call.return_data[0]:
                revert with 'NH{q', 17
            require ext_code.size(address(arg2))
            staticcall address(arg2).getPricePeg() with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if ext_call.return_data[0] > 0x6df37f675ef6eadf5ab9a2072d44268d97df837e6748956e5c6c2117:
                revert with 'NH{q', 17
            if 10^10 * ext_call.return_data[0] and ext_call.return_data[0] > -1 / 10^10 * ext_call.return_data[0]:
                revert with 'NH{q', 17
            require ext_code.size(address(arg2))
            staticcall address(arg2).getPriceSource() with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if ext_call.return_data[0] > 0x6df37f675ef6eadf5ab9a2072d44268d97df837e6748956e5c6c2117:
                revert with 'NH{q', 17
            if 10^10 * ext_call.return_data[0] and ext_call.return_data[0] * 10^uint8(-uint8(ext_call.return_data[0]) + 18) > -1 / 10^10 * ext_call.return_data[0]:
                revert with 'NH{q', 17
            require ext_code.size(address(arg2))
            staticcall address(arg2).checkLiquidation(uint256 arg1) with:
                    gas gas_remaining wei
                   args arg1
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == bool(ext_call.return_data[0])
            if 10^10 * ext_call.return_data[0] * ext_call.return_data[0] * 10^uint8(-uint8(ext_call.return_data[0]) + 18) / 10^18 <= 10^10 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18:
                return bool(ext_call.return_data[0]), 0, ext_call.return_data[0]
            if 10^10 * ext_call.return_data[0] * ext_call.return_data[0] * 10^uint8(-uint8(ext_call.return_data[0]) + 18) / 10^18 < ext_call.return_data[0]:
                revert with 'NH{q', 17
            return bool(ext_call.return_data[0]), 
                   (10^10 * ext_call.return_data[0] * ext_call.return_data[0] * 10^uint8(-uint8(ext_call.return_data[0]) + 18) / 10^18) - ext_call.return_data[0],
                   ext_call.return_data[0]
        s = 10
        t = 1
        idx = uint8(-ext_call.return_data[31 len 1] + 18)
        while idx > 1:
            if s > -1 / s:
                revert with 'NH{q', 17
            if not bool(idx):
                s = s * s
                t = t
                idx = uint255(idx) * 0.5
                continue 
            s = s * s
            t = s * t
            idx = uint255(idx) * 0.5
            continue 
        if t > -1 / s:
            revert with 'NH{q', 17
        if ext_call.return_data[0] and s * t > -1 / ext_call.return_data[0]:
            revert with 'NH{q', 17
        require ext_code.size(address(arg2))
        staticcall address(arg2).getPricePeg() with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if ext_call.return_data[0] > 0x6df37f675ef6eadf5ab9a2072d44268d97df837e6748956e5c6c2117:
            revert with 'NH{q', 17
        if 10^10 * ext_call.return_data[0] and ext_call.return_data[0] > -1 / 10^10 * ext_call.return_data[0]:
            revert with 'NH{q', 17
        require ext_code.size(address(arg2))
        staticcall address(arg2).getPriceSource() with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if ext_call.return_data[0] > 0x6df37f675ef6eadf5ab9a2072d44268d97df837e6748956e5c6c2117:
            revert with 'NH{q', 17
        if 10^10 * ext_call.return_data[0] and ext_call.return_data[0] * s * t > -1 / 10^10 * ext_call.return_data[0]:
            revert with 'NH{q', 17
        require ext_code.size(address(arg2))
        staticcall address(arg2).checkLiquidation(uint256 arg1) with:
                gas gas_remaining wei
               args arg1
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == bool(ext_call.return_data[0])
        if 10^10 * ext_call.return_data[0] * ext_call.return_data[0] * s * t / 10^18 <= 10^10 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18:
            return bool(ext_call.return_data[0]), 0, ext_call.return_data[0]
        if 10^10 * ext_call.return_data[0] * ext_call.return_data[0] * s * t / 10^18 < ext_call.return_data[0]:
            revert with 'NH{q', 17
        return bool(ext_call.return_data[0]), 
               (10^10 * ext_call.return_data[0] * ext_call.return_data[0] * s * t / 10^18) - ext_call.return_data[0],
               ext_call.return_data[0]
    if bool(bool(uint8(-ext_call.return_data[31 len 1] + 18) < 78)) or bool(bool(uint8(-ext_call.return_data[31 len 1] + 18) < 32)):
        if ext_call.return_data[0] and 10^uint8(-ext_call.return_data[31 len 1] + 18) > -1 / ext_call.return_data[0]:
            revert with 'NH{q', 17
        require ext_code.size(address(arg4))
        staticcall address(arg4).0x313ce567 with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
        if 18 < ext_call.return_data[31 len 1]:
            revert with 'NH{q', 17
        if not uint8(-ext_call.return_data[31 len 1] + 18):
            if ext_call.return_data[0] and 1 > -1 / ext_call.return_data[0]:
                revert with 'NH{q', 17
            require ext_code.size(address(arg2))
            staticcall address(arg2).getPricePeg() with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if ext_call.return_data[0] > 0x6df37f675ef6eadf5ab9a2072d44268d97df837e6748956e5c6c2117:
                revert with 'NH{q', 17
            if 10^10 * ext_call.return_data[0] and ext_call.return_data[0] * 10^uint8(-uint8(ext_call.return_data[0]) + 18) > -1 / 10^10 * ext_call.return_data[0]:
                revert with 'NH{q', 17
            require ext_code.size(address(arg2))
            staticcall address(arg2).getPriceSource() with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if ext_call.return_data[0] > 0x6df37f675ef6eadf5ab9a2072d44268d97df837e6748956e5c6c2117:
                revert with 'NH{q', 17
            if 10^10 * ext_call.return_data[0] and ext_call.return_data[0] > -1 / 10^10 * ext_call.return_data[0]:
                revert with 'NH{q', 17
            require ext_code.size(address(arg2))
            staticcall address(arg2).checkLiquidation(uint256 arg1) with:
                    gas gas_remaining wei
                   args arg1
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == bool(ext_call.return_data[0])
            if 10^10 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 <= 10^10 * ext_call.return_data[0] * ext_call.return_data[0] * 10^uint8(-uint8(ext_call.return_data[0]) + 18) / 10^18:
                return bool(ext_call.return_data[0]), 0, ext_call.return_data[0]
            if 10^10 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 < ext_call.return_data[0]:
                revert with 'NH{q', 17
            return bool(ext_call.return_data[0]), 
                   (10^10 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18) - ext_call.return_data[0],
                   ext_call.return_data[0]
        if bool(bool(uint8(-ext_call.return_data[31 len 1] + 18) < 78)) or bool(bool(uint8(-ext_call.return_data[31 len 1] + 18) < 32)):
            if ext_call.return_data[0] and 10^uint8(-ext_call.return_data[31 len 1] + 18) > -1 / ext_call.return_data[0]:
                revert with 'NH{q', 17
            require ext_code.size(address(arg2))
            staticcall address(arg2).getPricePeg() with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if ext_call.return_data[0] > 0x6df37f675ef6eadf5ab9a2072d44268d97df837e6748956e5c6c2117:
                revert with 'NH{q', 17
            if 10^10 * ext_call.return_data[0] and ext_call.return_data[0] * 10^uint8(-uint8(ext_call.return_data[0]) + 18) > -1 / 10^10 * ext_call.return_data[0]:
                revert with 'NH{q', 17
            require ext_code.size(address(arg2))
            staticcall address(arg2).getPriceSource() with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if ext_call.return_data[0] > 0x6df37f675ef6eadf5ab9a2072d44268d97df837e6748956e5c6c2117:
                revert with 'NH{q', 17
            if 10^10 * ext_call.return_data[0] and ext_call.return_data[0] * 10^uint8(-uint8(ext_call.return_data[0]) + 18) > -1 / 10^10 * ext_call.return_data[0]:
                revert with 'NH{q', 17
            require ext_code.size(address(arg2))
            staticcall address(arg2).checkLiquidation(uint256 arg1) with:
                    gas gas_remaining wei
                   args arg1
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == bool(ext_call.return_data[0])
            if 10^10 * ext_call.return_data[0] * ext_call.return_data[0] * 10^uint8(-uint8(ext_call.return_data[0]) + 18) / 10^18 <= 10^10 * ext_call.return_data[0] * ext_call.return_data[0] * 10^uint8(-uint8(ext_call.return_data[0]) + 18) / 10^18:
                return bool(ext_call.return_data[0]), 0, ext_call.return_data[0]
            if 10^10 * ext_call.return_data[0] * ext_call.return_data[0] * 10^uint8(-uint8(ext_call.return_data[0]) + 18) / 10^18 < ext_call.return_data[0]:
                revert with 'NH{q', 17
            return bool(ext_call.return_data[0]), 
                   (10^10 * ext_call.return_data[0] * ext_call.return_data[0] * 10^uint8(-uint8(ext_call.return_data[0]) + 18) / 10^18) - ext_call.return_data[0],
                   ext_call.return_data[0]
        s = 10
        t = 1
        idx = uint8(-ext_call.return_data[31 len 1] + 18)
        while idx > 1:
            if s > -1 / s:
                revert with 'NH{q', 17
            if not bool(idx):
                s = s * s
                t = t
                idx = uint255(idx) * 0.5
                continue 
            s = s * s
            t = s * t
            idx = uint255(idx) * 0.5
            continue 
        if t > -1 / s:
            revert with 'NH{q', 17
        if ext_call.return_data[0] and s * t > -1 / ext_call.return_data[0]:
            revert with 'NH{q', 17
        require ext_code.size(address(arg2))
        staticcall address(arg2).getPricePeg() with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if ext_call.return_data[0] > 0x6df37f675ef6eadf5ab9a2072d44268d97df837e6748956e5c6c2117:
            revert with 'NH{q', 17
        if 10^10 * ext_call.return_data[0] and ext_call.return_data[0] * 10^uint8(-uint8(ext_call.return_data[0]) + 18) > -1 / 10^10 * ext_call.return_data[0]:
            revert with 'NH{q', 17
        require ext_code.size(address(arg2))
        staticcall address(arg2).getPriceSource() with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if ext_call.return_data[0] > 0x6df37f675ef6eadf5ab9a2072d44268d97df837e6748956e5c6c2117:
            revert with 'NH{q', 17
        if 10^10 * ext_call.return_data[0] and ext_call.return_data[0] * s * t > -1 / 10^10 * ext_call.return_data[0]:
            revert with 'NH{q', 17
        require ext_code.size(address(arg2))
        staticcall address(arg2).checkLiquidation(uint256 arg1) with:
                gas gas_remaining wei
               args arg1
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == bool(ext_call.return_data[0])
        if 10^10 * ext_call.return_data[0] * ext_call.return_data[0] * s * t / 10^18 <= 10^10 * ext_call.return_data[0] * ext_call.return_data[0] * 10^uint8(-uint8(ext_call.return_data[0]) + 18) / 10^18:
            return bool(ext_call.return_data[0]), 0, ext_call.return_data[0]
        if 10^10 * ext_call.return_data[0] * ext_call.return_data[0] * s * t / 10^18 < ext_call.return_data[0]:
            revert with 'NH{q', 17
        return bool(ext_call.return_data[0]), 
               (10^10 * ext_call.return_data[0] * ext_call.return_data[0] * s * t / 10^18) - ext_call.return_data[0],
               ext_call.return_data[0]
    s = 10
    t = 1
    idx = uint8(-ext_call.return_data[31 len 1] + 18)
    while idx > 1:
        if s > -1 / s:
            revert with 'NH{q', 17
        if not bool(idx):
            s = s * s
            t = t
            idx = uint255(idx) * 0.5
            continue 
        s = s * s
        t = s * t
        idx = uint255(idx) * 0.5
        continue 
    if t > -1 / s:
        revert with 'NH{q', 17
    if ext_call.return_data[0] and s * t > -1 / ext_call.return_data[0]:
        revert with 'NH{q', 17
    require ext_code.size(address(arg4))
    staticcall address(arg4).0x313ce567 with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
    if 18 < ext_call.return_data[31 len 1]:
        revert with 'NH{q', 17
    if not uint8(-ext_call.return_data[31 len 1] + 18):
        if ext_call.return_data[0] and 1 > -1 / ext_call.return_data[0]:
            revert with 'NH{q', 17
        require ext_code.size(address(arg2))
        staticcall address(arg2).getPricePeg() with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if ext_call.return_data[0] > 0x6df37f675ef6eadf5ab9a2072d44268d97df837e6748956e5c6c2117:
            revert with 'NH{q', 17
        if 10^10 * ext_call.return_data[0] and ext_call.return_data[0] * s * t > -1 / 10^10 * ext_call.return_data[0]:
            revert with 'NH{q', 17
        require ext_code.size(address(arg2))
        staticcall address(arg2).getPriceSource() with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if ext_call.return_data[0] > 0x6df37f675ef6eadf5ab9a2072d44268d97df837e6748956e5c6c2117:
            revert with 'NH{q', 17
        if 10^10 * ext_call.return_data[0] and ext_call.return_data[0] > -1 / 10^10 * ext_call.return_data[0]:
            revert with 'NH{q', 17
        require ext_code.size(address(arg2))
        staticcall address(arg2).checkLiquidation(uint256 arg1) with:
                gas gas_remaining wei
               args arg1
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == bool(ext_call.return_data[0])
        if 10^10 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 <= 10^10 * ext_call.return_data[0] * ext_call.return_data[0] * s * t / 10^18:
            return bool(ext_call.return_data[0]), 0, ext_call.return_data[0]
        if 10^10 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 < ext_call.return_data[0]:
            revert with 'NH{q', 17
        return bool(ext_call.return_data[0]), 
               (10^10 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18) - ext_call.return_data[0],
               ext_call.return_data[0]
    if bool(bool(uint8(-ext_call.return_data[31 len 1] + 18) < 78)) or bool(bool(uint8(-ext_call.return_data[31 len 1] + 18) < 32)):
        if ext_call.return_data[0] and 10^uint8(-ext_call.return_data[31 len 1] + 18) > -1 / ext_call.return_data[0]:
            revert with 'NH{q', 17
        require ext_code.size(address(arg2))
        staticcall address(arg2).getPricePeg() with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if ext_call.return_data[0] > 0x6df37f675ef6eadf5ab9a2072d44268d97df837e6748956e5c6c2117:
            revert with 'NH{q', 17
        if 10^10 * ext_call.return_data[0] and ext_call.return_data[0] * s * t > -1 / 10^10 * ext_call.return_data[0]:
            revert with 'NH{q', 17
        require ext_code.size(address(arg2))
        staticcall address(arg2).getPriceSource() with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if ext_call.return_data[0] > 0x6df37f675ef6eadf5ab9a2072d44268d97df837e6748956e5c6c2117:
            revert with 'NH{q', 17
        if 10^10 * ext_call.return_data[0] and ext_call.return_data[0] * 10^uint8(-uint8(ext_call.return_data[0]) + 18) > -1 / 10^10 * ext_call.return_data[0]:
            revert with 'NH{q', 17
        require ext_code.size(address(arg2))
        staticcall address(arg2).checkLiquidation(uint256 arg1) with:
                gas gas_remaining wei
               args arg1
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == bool(ext_call.return_data[0])
        if 10^10 * ext_call.return_data[0] * ext_call.return_data[0] * 10^uint8(-uint8(ext_call.return_data[0]) + 18) / 10^18 <= 10^10 * ext_call.return_data[0] * ext_call.return_data[0] * s * t / 10^18:
            return bool(ext_call.return_data[0]), 0, ext_call.return_data[0]
        if 10^10 * ext_call.return_data[0] * ext_call.return_data[0] * 10^uint8(-uint8(ext_call.return_data[0]) + 18) / 10^18 < ext_call.return_data[0]:
            revert with 'NH{q', 17
        return bool(ext_call.return_data[0]), 
               (10^10 * ext_call.return_data[0] * ext_call.return_data[0] * 10^uint8(-uint8(ext_call.return_data[0]) + 18) / 10^18) - ext_call.return_data[0],
               ext_call.return_data[0]
    u = 10
    v = 1
    idx = uint8(-ext_call.return_data[31 len 1] + 18)
    while idx > 1:
        if u > -1 / u:
            revert with 'NH{q', 17
        if not bool(idx):
            u = u * u
            v = v
            idx = uint255(idx) * 0.5
            continue 
        u = u * u
        v = u * v
        idx = uint255(idx) * 0.5
        continue 
    if v > -1 / u:
        revert with 'NH{q', 17
    if ext_call.return_data[0] and u * v > -1 / ext_call.return_data[0]:
        revert with 'NH{q', 17
    require ext_code.size(address(arg2))
    staticcall address(arg2).getPricePeg() with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if ext_call.return_data[0] > 0x6df37f675ef6eadf5ab9a2072d44268d97df837e6748956e5c6c2117:
        revert with 'NH{q', 17
    if 10^10 * ext_call.return_data[0] and ext_call.return_data[0] * s * t > -1 / 10^10 * ext_call.return_data[0]:
        revert with 'NH{q', 17
    require ext_code.size(address(arg2))
    staticcall address(arg2).getPriceSource() with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if ext_call.return_data[0] > 0x6df37f675ef6eadf5ab9a2072d44268d97df837e6748956e5c6c2117:
        revert with 'NH{q', 17
    if 10^10 * ext_call.return_data[0] and ext_call.return_data[0] * u * v > -1 / 10^10 * ext_call.return_data[0]:
        revert with 'NH{q', 17
    require ext_code.size(address(arg2))
    staticcall address(arg2).checkLiquidation(uint256 arg1) with:
            gas gas_remaining wei
           args arg1
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == bool(ext_call.return_data[0])
    if 10^10 * ext_call.return_data[0] * ext_call.return_data[0] * u * v / 10^18 <= 10^10 * ext_call.return_data[0] * ext_call.return_data[0] * s * t / 10^18:
        return bool(ext_call.return_data[0]), 0, ext_call.return_data[0]
    if 10^10 * ext_call.return_data[0] * ext_call.return_data[0] * u * v / 10^18 < ext_call.return_data[0]:
        revert with 'NH{q', 17
    return bool(ext_call.return_data[0]), 
           (10^10 * ext_call.return_data[0] * ext_call.return_data[0] * u * v / 10^18) - ext_call.return_data[0],
           ext_call.return_data[0]
}

function pangolinCall(address arg1, uint256 arg2, uint256 arg3, bytes arg4) {
    require calldata.size - 4 >= 128
    require arg1 == arg1
    require arg4 <= test266151307()
    require arg4 + 35 < calldata.size
    require arg4.length <= test266151307()
    require arg4 + arg4.length + 36 <= calldata.size
    require arg4.length >= 128
    require cd[(arg4 + 68)] == address(cd[(arg4 + 68)])
    require cd[(arg4 + 100)] == address(cd[(arg4 + 100)])
    require cd[(arg4 + 132)] == bool(cd[(arg4 + 132)])
    require ext_code.size(msg.sender)
    staticcall msg.sender.token0() with:
            gas gas_remaining wei
    mem[96] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
    require ext_code.size(msg.sender)
    staticcall msg.sender.token1() with:
            gas gas_remaining wei
    mem[ceil32(return_data.size) + 96] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
    mem[(2 * ceil32(return_data.size)) + 100] = address(ext_call.return_data[0])
    mem[(2 * ceil32(return_data.size)) + 132] = address(ext_call.return_data[0])
    require ext_code.size(0xefa94de7a4656d787667c749f7e1223d71e9fd88)
    staticcall 0xefa94de7a4656d787667c749f7e1223d71e9fd88.getPair(address arg1, address arg2) with:
            gas gas_remaining wei
           args address(ext_call.return_data[0]), address(ext_call.return_data[0])
    mem[(2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
    if ext_call.return_data[12 len 20] != msg.sender:
        revert with 0, 'Sender wrong'
    mem[(4 * ceil32(return_data.size)) + 100] = address(cd[(arg4 + 68)])
    if not arg2:
        mem[(4 * ceil32(return_data.size)) + 132] = arg3
        require ext_code.size(address(ext_call.return_data[0]))
        call address(ext_call.return_data[0]).approve(address arg1, uint256 arg2) with:
             gas gas_remaining wei
            args address(cd[(arg4 + 68)]), arg3
        mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == bool(ext_call.return_data[0])
        require ext_code.size(address(cd[(arg4 + 68)]))
        call address(cd[(arg4 + 68)]).liquidateVault(uint256 arg1) with:
             gas gas_remaining wei
            args cd[(arg4 + 36)]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require ext_code.size(address(cd[(arg4 + 68)]))
        call address(cd[(arg4 + 68)]).getPaid(address arg1) with:
             gas gas_remaining wei
            args this.address
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        mem[(6 * ceil32(return_data.size)) + 100] = this.address
        require ext_code.size(address(cd[(arg4 + 100)]))
        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                gas gas_remaining wei
               args this.address
        mem[(6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if not address(ext_call.return_data[0]):
            revert with 0, 'PangolinLibrary: ZERO_ADDRESS'
        if not address(ext_call.return_data[0]):
            revert with 0, 'PangolinLibrary: ZERO_ADDRESS'
        mem[(7 * ceil32(return_data.size)) + 128] = address(ext_call.return_data[0])
        mem[(7 * ceil32(return_data.size)) + 148] = address(ext_call.return_data[0])
        mem[(7 * ceil32(return_data.size)) + 96] = 40
        mem[(7 * ceil32(return_data.size)) + 200] = 0xff00000000000000000000000000000000000000000000000000000000000000
        mem[(7 * ceil32(return_data.size)) + 201] = 0xefa94de7a4656d787667c749f7e1223d71e9fd88000000000000000000000000
        mem[(7 * ceil32(return_data.size)) + 221] = sha3(address(ext_call.return_data[0]), address(ext_call.return_data[0]))
        mem[(7 * ceil32(return_data.size)) + 253] = 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545
        mem[(7 * ceil32(return_data.size)) + 168] = 85
        if not address(ext_call.return_data[0]):
            revert with 0, 'PangolinLibrary: ZERO_ADDRESS'
        mem[(7 * ceil32(return_data.size)) + 317] = address(ext_call.return_data[0])
        mem[(7 * ceil32(return_data.size)) + 337] = address(ext_call.return_data[0])
        mem[(7 * ceil32(return_data.size)) + 285] = 40
        mem[(7 * ceil32(return_data.size)) + 389] = 0xff00000000000000000000000000000000000000000000000000000000000000
        mem[(7 * ceil32(return_data.size)) + 390] = 0xefa94de7a4656d787667c749f7e1223d71e9fd88000000000000000000000000
        mem[(7 * ceil32(return_data.size)) + 410] = sha3(address(ext_call.return_data[0]), address(ext_call.return_data[0]))
        mem[(7 * ceil32(return_data.size)) + 442] = 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545
        mem[(7 * ceil32(return_data.size)) + 357] = 85
        require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
        staticcall address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).getReserves() with:
                gas gas_remaining wei
        mem[(7 * ceil32(return_data.size)) + 474 len 96] = ext_call.return_data[0 len 96]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 96
        require ext_call.return_data[0] == ext_call.return_data[18 len 14]
        require ext_call.return_data[32] == ext_call.return_data[50 len 14]
        require ext_call.return_data[64] == ext_call.return_data[92 len 4]
        if arg3 <= 0:
            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
            mem[(8 * ceil32(return_data.size)) + 478] = 32
            mem[(8 * ceil32(return_data.size)) + 510] = 43
            mem[(8 * ceil32(return_data.size)) + 542] = 'PangolinLibrary: INSUFFICIENT_OU'
            mem[(8 * ceil32(return_data.size)) + 574] = 'TPUT_AMOUNT'
            revert with memory
              from (8 * ceil32(return_data.size)) + 474
               len ceil32(return_data.size) + 132
        if address(ext_call.return_data[0]) < address(ext_call.return_data[0]):
            if address(ext_call.return_data[0]) < address(ext_call.return_data[0]):
                if address(ext_call.return_data[0]) < address(ext_call.return_data[0]):
                    if address(ext_call.return_data[0]) == address(ext_call.return_data[0]):
                        if ext_call.return_data[50 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 39
                            mem[(8 * ceil32(return_data.size)) + 542] = 'PangolinLibrary: INSUFFICIENT_LI'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'QUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if ext_call.return_data[18 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 39
                            mem[(8 * ceil32(return_data.size)) + 542] = 'PangolinLibrary: INSUFFICIENT_LI'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'QUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if not ext_call.return_data[50 len 14]:
                            if arg3 > ext_call.return_data[18 len 14]:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 30
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if ext_call.return_data[18 len 14] < arg3:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[18 len 14] - arg3:
                                revert with 'NH{q', 18
                            if ext_call.return_data[18 len 14] - arg3 and 997 > -1 / ext_call.return_data[18 len 14] - arg3:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[18 len 14] - arg3:
                                revert with 'NH{q', 18
                            if (997 * ext_call.return_data[18 len 14]) - (997 * arg3) / ext_call.return_data[18 len 14] - arg3 != 997:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                revert with 'NH{q', 18
                            if 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3) > -2:
                                revert with 'NH{q', 17
                            if (0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3)) + 1 < 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 27
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            else:
                                mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                if not cd[(arg4 + 132)]:
                                    mem[(10 * ceil32(return_data.size)) + 474] = 2
                                    mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                    mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 638] = 160
                                    mem[(10 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 766
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                    call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _7331 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                    _7523 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                    mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                    require return_data.size >= _7331 + (32 * _7523) + 32
                                    mem[(11 * ceil32(return_data.size)) + 602 len 32 * _7523] = mem[(10 * ceil32(return_data.size)) + _7331 + 602 len 32 * _7523]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _10977 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_10977] == bool(mem[_10977])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _11745 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _11937 = mem[_11745]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _11937
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _11937
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _12513 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_12513] == bool(mem[_12513])
                                else:
                                    mem[(10 * ceil32(return_data.size)) + 474] = 3
                                    mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                    mem[(10 * ceil32(return_data.size)) + 538] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                    mem[(10 * ceil32(return_data.size)) + 570] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 602] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 606] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 638] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 670] = 160
                                    mem[(10 * ceil32(return_data.size)) + 766] = 3
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 798
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 3:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 702] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 734] = block.timestamp
                                    require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                    call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=3, data=mem[(10 * ceil32(return_data.size)) + 798 len 96]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 602 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 602
                                    require return_data.size >= 32
                                    _7332 = mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 633 < (10 * ceil32(return_data.size)) + return_data.size + 602
                                    _7524 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 602]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 602] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 602]) + 603 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 602]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 602]) + 603
                                    mem[(11 * ceil32(return_data.size)) + 602] = _7524
                                    require return_data.size >= _7332 + (32 * _7524) + 32
                                    mem[(11 * ceil32(return_data.size)) + 634 len 32 * _7524] = mem[(10 * ceil32(return_data.size)) + _7332 + 634 len 32 * _7524]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _11073 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_11073] == bool(mem[_11073])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _11841 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _12039 = mem[_11841]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _12039
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _12039
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _12609 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_12609] == bool(mem[_12609])
                        else:
                            if ext_call.return_data[50 len 14] and arg3 > -1 / ext_call.return_data[50 len 14]:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[50 len 14]:
                                revert with 'NH{q', 18
                            if ext_call.return_data[50 len 14] * arg3 / ext_call.return_data[50 len 14] != arg3:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not ext_call.return_data[50 len 14] * arg3:
                                if arg3 > ext_call.return_data[18 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[18 len 14] < arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[18 len 14] - arg3 and 997 > -1 / ext_call.return_data[18 len 14] - arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[18 len 14]) - (997 * arg3) / ext_call.return_data[18 len 14] - arg3 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                    revert with 'NH{q', 18
                                if 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3) > -2:
                                    revert with 'NH{q', 17
                                if (0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3)) + 1 < 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    if not cd[(arg4 + 132)]:
                                        mem[(10 * ceil32(return_data.size)) + 474] = 2
                                        mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                        mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                        mem[(10 * ceil32(return_data.size)) + 638] = 160
                                        mem[(10 * ceil32(return_data.size)) + 734] = 2
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + 766
                                        t = (10 * ceil32(return_data.size)) + 506
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                        mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                        require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                        call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + 570
                                        require return_data.size >= 32
                                        _7329 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                        _7521 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                        if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                            revert with 'NH{q', 65
                                        if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0:
                                            revert with 'NH{q', 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                        mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                        require return_data.size >= _7329 + (32 * _7521) + 32
                                        mem[(11 * ceil32(return_data.size)) + 602 len 32 * _7521] = mem[(10 * ceil32(return_data.size)) + _7329 + 602 len 32 * _7521]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10976 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10976] == bool(mem[_10976])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11744 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _11936 = mem[_11744]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _11936
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _11936
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _12512 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_12512] == bool(mem[_12512])
                                    else:
                                        mem[(10 * ceil32(return_data.size)) + 474] = 3
                                        mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(10 * ceil32(return_data.size)) + 538] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                        mem[(10 * ceil32(return_data.size)) + 570] = address(ext_call.return_data[0])
                                        mem[(10 * ceil32(return_data.size)) + 602] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + 606] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        mem[(10 * ceil32(return_data.size)) + 638] = ext_call.return_data[0]
                                        mem[(10 * ceil32(return_data.size)) + 670] = 160
                                        mem[(10 * ceil32(return_data.size)) + 766] = 3
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + 798
                                        t = (10 * ceil32(return_data.size)) + 506
                                        while idx < 3:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + 702] = this.address
                                        mem[(10 * ceil32(return_data.size)) + 734] = block.timestamp
                                        require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                        call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=3, data=mem[(10 * ceil32(return_data.size)) + 798 len 96]), address(this.address), block.timestamp
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + 602 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + 602
                                        require return_data.size >= 32
                                        _7330 = mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 633 < (10 * ceil32(return_data.size)) + return_data.size + 602
                                        _7522 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 602]
                                        if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 602] > test266151307():
                                            revert with 'NH{q', 65
                                        if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 602]) + 603 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 602]) + 1 < 0:
                                            revert with 'NH{q', 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 602]) + 603
                                        mem[(11 * ceil32(return_data.size)) + 602] = _7522
                                        require return_data.size >= _7330 + (32 * _7522) + 32
                                        mem[(11 * ceil32(return_data.size)) + 634 len 32 * _7522] = mem[(10 * ceil32(return_data.size)) + _7330 + 634 len 32 * _7522]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11072 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_11072] == bool(mem[_11072])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11840 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _12036 = mem[_11840]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _12036
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _12036
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _12608 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_12608] == bool(mem[_12608])
                            else:
                                if ext_call.return_data[50 len 14] * arg3 and 1000 > -1 / ext_call.return_data[50 len 14] * arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] * arg3:
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[50 len 14] * arg3 / ext_call.return_data[50 len 14] * arg3 != 1000:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if arg3 > ext_call.return_data[18 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[18 len 14] < arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[18 len 14] - arg3 and 997 > -1 / ext_call.return_data[18 len 14] - arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[18 len 14]) - (997 * arg3) / ext_call.return_data[18 len 14] - arg3 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[50 len 14] * arg3 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3) > -2:
                                    revert with 'NH{q', 17
                                if (1000 * ext_call.return_data[50 len 14] * arg3 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3)) + 1 < 1000 * ext_call.return_data[50 len 14] * arg3 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    if not cd[(arg4 + 132)]:
                                        mem[(10 * ceil32(return_data.size)) + 474] = 2
                                        mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                        mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + 574] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                        mem[(10 * ceil32(return_data.size)) + 638] = 160
                                        mem[(10 * ceil32(return_data.size)) + 734] = 2
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + 766
                                        t = (10 * ceil32(return_data.size)) + 506
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                        mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                        require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                        call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + 570
                                        require return_data.size >= 32
                                        _7327 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                        _7519 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                        if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                            revert with 'NH{q', 65
                                        if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0:
                                            revert with 'NH{q', 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                        mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                        require return_data.size >= _7327 + (32 * _7519) + 32
                                        mem[(11 * ceil32(return_data.size)) + 602 len 32 * _7519] = mem[(10 * ceil32(return_data.size)) + _7327 + 602 len 32 * _7519]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10975 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10975] == bool(mem[_10975])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11743 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _11935 = mem[_11743]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _11935
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _11935
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _12511 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_12511] == bool(mem[_12511])
                                    else:
                                        mem[(10 * ceil32(return_data.size)) + 474] = 3
                                        mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(10 * ceil32(return_data.size)) + 538] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                        mem[(10 * ceil32(return_data.size)) + 570] = address(ext_call.return_data[0])
                                        mem[(10 * ceil32(return_data.size)) + 602] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + 606] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        mem[(10 * ceil32(return_data.size)) + 638] = ext_call.return_data[0]
                                        mem[(10 * ceil32(return_data.size)) + 670] = 160
                                        mem[(10 * ceil32(return_data.size)) + 766] = 3
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + 798
                                        t = (10 * ceil32(return_data.size)) + 506
                                        while idx < 3:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + 702] = this.address
                                        mem[(10 * ceil32(return_data.size)) + 734] = block.timestamp
                                        require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                        call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=3, data=mem[(10 * ceil32(return_data.size)) + 798 len 96]), address(this.address), block.timestamp
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + 602 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + 602
                                        require return_data.size >= 32
                                        _7328 = mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 633 < (10 * ceil32(return_data.size)) + return_data.size + 602
                                        _7520 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 602]
                                        if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 602] > test266151307():
                                            revert with 'NH{q', 65
                                        if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 602]) + 603 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 602]) + 1 < 0:
                                            revert with 'NH{q', 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 602]) + 603
                                        mem[(11 * ceil32(return_data.size)) + 602] = _7520
                                        require return_data.size >= _7328 + (32 * _7520) + 32
                                        mem[(11 * ceil32(return_data.size)) + 634 len 32 * _7520] = mem[(10 * ceil32(return_data.size)) + _7328 + 634 len 32 * _7520]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11071 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_11071] == bool(mem[_11071])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11839 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _12033 = mem[_11839]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _12033
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _12033
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _12607 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_12607] == bool(mem[_12607])
                    else:
                        if ext_call.return_data[18 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 39
                            mem[(8 * ceil32(return_data.size)) + 542] = 'PangolinLibrary: INSUFFICIENT_LI'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'QUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if ext_call.return_data[50 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 39
                            mem[(8 * ceil32(return_data.size)) + 542] = 'PangolinLibrary: INSUFFICIENT_LI'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'QUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if not ext_call.return_data[18 len 14]:
                            if arg3 > ext_call.return_data[50 len 14]:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 30
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if ext_call.return_data[50 len 14] < arg3:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[50 len 14] - arg3:
                                revert with 'NH{q', 18
                            if ext_call.return_data[50 len 14] - arg3 and 997 > -1 / ext_call.return_data[50 len 14] - arg3:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[50 len 14] - arg3:
                                revert with 'NH{q', 18
                            if (997 * ext_call.return_data[50 len 14]) - (997 * arg3) / ext_call.return_data[50 len 14] - arg3 != 997:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                revert with 'NH{q', 18
                            if 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3) > -2:
                                revert with 'NH{q', 17
                            if (0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3)) + 1 < 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 27
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            else:
                                mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                if not cd[(arg4 + 132)]:
                                    mem[(10 * ceil32(return_data.size)) + 474] = 2
                                    mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                    mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 638] = 160
                                    mem[(10 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 766
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                    call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _7337 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                    _7529 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                    mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                    require return_data.size >= _7337 + (32 * _7529) + 32
                                    mem[(11 * ceil32(return_data.size)) + 602 len 32 * _7529] = mem[(10 * ceil32(return_data.size)) + _7337 + 602 len 32 * _7529]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _10980 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_10980] == bool(mem[_10980])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _11748 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _11940 = mem[_11748]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _11940
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _11940
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _12516 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_12516] == bool(mem[_12516])
                                else:
                                    mem[(10 * ceil32(return_data.size)) + 474] = 3
                                    mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                    mem[(10 * ceil32(return_data.size)) + 538] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                    mem[(10 * ceil32(return_data.size)) + 570] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 602] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 606] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 638] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 670] = 160
                                    mem[(10 * ceil32(return_data.size)) + 766] = 3
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 798
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 3:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 702] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 734] = block.timestamp
                                    require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                    call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=3, data=mem[(10 * ceil32(return_data.size)) + 798 len 96]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 602 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 602
                                    require return_data.size >= 32
                                    _7338 = mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 633 < (10 * ceil32(return_data.size)) + return_data.size + 602
                                    _7530 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 602]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 602] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 602]) + 603 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 602]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 602]) + 603
                                    mem[(11 * ceil32(return_data.size)) + 602] = _7530
                                    require return_data.size >= _7338 + (32 * _7530) + 32
                                    mem[(11 * ceil32(return_data.size)) + 634 len 32 * _7530] = mem[(10 * ceil32(return_data.size)) + _7338 + 634 len 32 * _7530]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _11076 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_11076] == bool(mem[_11076])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _11844 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _12048 = mem[_11844]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _12048
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _12048
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _12612 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_12612] == bool(mem[_12612])
                        else:
                            if ext_call.return_data[18 len 14] and arg3 > -1 / ext_call.return_data[18 len 14]:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[18 len 14]:
                                revert with 'NH{q', 18
                            if ext_call.return_data[18 len 14] * arg3 / ext_call.return_data[18 len 14] != arg3:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not ext_call.return_data[18 len 14] * arg3:
                                if arg3 > ext_call.return_data[50 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[50 len 14] < arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[50 len 14] - arg3 and 997 > -1 / ext_call.return_data[50 len 14] - arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[50 len 14]) - (997 * arg3) / ext_call.return_data[50 len 14] - arg3 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                    revert with 'NH{q', 18
                                if 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3) > -2:
                                    revert with 'NH{q', 17
                                if (0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3)) + 1 < 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    if not cd[(arg4 + 132)]:
                                        mem[(10 * ceil32(return_data.size)) + 474] = 2
                                        mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                        mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                        mem[(10 * ceil32(return_data.size)) + 638] = 160
                                        mem[(10 * ceil32(return_data.size)) + 734] = 2
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + 766
                                        t = (10 * ceil32(return_data.size)) + 506
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                        mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                        require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                        call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + 570
                                        require return_data.size >= 32
                                        _7335 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                        _7527 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                        if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                            revert with 'NH{q', 65
                                        if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0:
                                            revert with 'NH{q', 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                        mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                        require return_data.size >= _7335 + (32 * _7527) + 32
                                        mem[(11 * ceil32(return_data.size)) + 602 len 32 * _7527] = mem[(10 * ceil32(return_data.size)) + _7335 + 602 len 32 * _7527]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10979 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10979] == bool(mem[_10979])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11747 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _11939 = mem[_11747]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _11939
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _11939
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _12515 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_12515] == bool(mem[_12515])
                                    else:
                                        mem[(10 * ceil32(return_data.size)) + 474] = 3
                                        mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(10 * ceil32(return_data.size)) + 538] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                        mem[(10 * ceil32(return_data.size)) + 570] = address(ext_call.return_data[0])
                                        mem[(10 * ceil32(return_data.size)) + 602] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + 606] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        mem[(10 * ceil32(return_data.size)) + 638] = ext_call.return_data[0]
                                        mem[(10 * ceil32(return_data.size)) + 670] = 160
                                        mem[(10 * ceil32(return_data.size)) + 766] = 3
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + 798
                                        t = (10 * ceil32(return_data.size)) + 506
                                        while idx < 3:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + 702] = this.address
                                        mem[(10 * ceil32(return_data.size)) + 734] = block.timestamp
                                        require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                        call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=3, data=mem[(10 * ceil32(return_data.size)) + 798 len 96]), address(this.address), block.timestamp
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + 602 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + 602
                                        require return_data.size >= 32
                                        _7336 = mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 633 < (10 * ceil32(return_data.size)) + return_data.size + 602
                                        _7528 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 602]
                                        if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 602] > test266151307():
                                            revert with 'NH{q', 65
                                        if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 602]) + 603 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 602]) + 1 < 0:
                                            revert with 'NH{q', 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 602]) + 603
                                        mem[(11 * ceil32(return_data.size)) + 602] = _7528
                                        require return_data.size >= _7336 + (32 * _7528) + 32
                                        mem[(11 * ceil32(return_data.size)) + 634 len 32 * _7528] = mem[(10 * ceil32(return_data.size)) + _7336 + 634 len 32 * _7528]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11075 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_11075] == bool(mem[_11075])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11843 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _12045 = mem[_11843]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _12045
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _12045
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _12611 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_12611] == bool(mem[_12611])
                            else:
                                if ext_call.return_data[18 len 14] * arg3 and 1000 > -1 / ext_call.return_data[18 len 14] * arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] * arg3:
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[18 len 14] * arg3 / ext_call.return_data[18 len 14] * arg3 != 1000:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if arg3 > ext_call.return_data[50 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[50 len 14] < arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[50 len 14] - arg3 and 997 > -1 / ext_call.return_data[50 len 14] - arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[50 len 14]) - (997 * arg3) / ext_call.return_data[50 len 14] - arg3 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[18 len 14] * arg3 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3) > -2:
                                    revert with 'NH{q', 17
                                if (1000 * ext_call.return_data[18 len 14] * arg3 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3)) + 1 < 1000 * ext_call.return_data[18 len 14] * arg3 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    if not cd[(arg4 + 132)]:
                                        mem[(10 * ceil32(return_data.size)) + 474] = 2
                                        mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                        mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + 574] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                        mem[(10 * ceil32(return_data.size)) + 638] = 160
                                        mem[(10 * ceil32(return_data.size)) + 734] = 2
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + 766
                                        t = (10 * ceil32(return_data.size)) + 506
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                        mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                        require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                        call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + 570
                                        require return_data.size >= 32
                                        _7333 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                        _7525 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                        if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                            revert with 'NH{q', 65
                                        if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0:
                                            revert with 'NH{q', 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                        mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                        require return_data.size >= _7333 + (32 * _7525) + 32
                                        mem[(11 * ceil32(return_data.size)) + 602 len 32 * _7525] = mem[(10 * ceil32(return_data.size)) + _7333 + 602 len 32 * _7525]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10978 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10978] == bool(mem[_10978])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11746 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _11938 = mem[_11746]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _11938
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _11938
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _12514 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_12514] == bool(mem[_12514])
                                    else:
                                        mem[(10 * ceil32(return_data.size)) + 474] = 3
                                        mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(10 * ceil32(return_data.size)) + 538] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                        mem[(10 * ceil32(return_data.size)) + 570] = address(ext_call.return_data[0])
                                        mem[(10 * ceil32(return_data.size)) + 602] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + 606] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        mem[(10 * ceil32(return_data.size)) + 638] = ext_call.return_data[0]
                                        mem[(10 * ceil32(return_data.size)) + 670] = 160
                                        mem[(10 * ceil32(return_data.size)) + 766] = 3
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + 798
                                        t = (10 * ceil32(return_data.size)) + 506
                                        while idx < 3:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + 702] = this.address
                                        mem[(10 * ceil32(return_data.size)) + 734] = block.timestamp
                                        require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                        call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=3, data=mem[(10 * ceil32(return_data.size)) + 798 len 96]), address(this.address), block.timestamp
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + 602 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + 602
                                        require return_data.size >= 32
                                        _7334 = mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 633 < (10 * ceil32(return_data.size)) + return_data.size + 602
                                        _7526 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 602]
                                        if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 602] > test266151307():
                                            revert with 'NH{q', 65
                                        if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 602]) + 603 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 602]) + 1 < 0:
                                            revert with 'NH{q', 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 602]) + 603
                                        mem[(11 * ceil32(return_data.size)) + 602] = _7526
                                        require return_data.size >= _7334 + (32 * _7526) + 32
                                        mem[(11 * ceil32(return_data.size)) + 634 len 32 * _7526] = mem[(10 * ceil32(return_data.size)) + _7334 + 634 len 32 * _7526]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11074 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_11074] == bool(mem[_11074])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11842 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _12042 = mem[_11842]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _12042
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _12042
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _12610 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_12610] == bool(mem[_12610])
                else:
                    if address(ext_call.return_data[0]) == address(ext_call.return_data[0]):
                        if ext_call.return_data[50 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 39
                            mem[(8 * ceil32(return_data.size)) + 542] = 'PangolinLibrary: INSUFFICIENT_LI'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'QUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if ext_call.return_data[18 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 39
                            mem[(8 * ceil32(return_data.size)) + 542] = 'PangolinLibrary: INSUFFICIENT_LI'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'QUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if not ext_call.return_data[50 len 14]:
                            if arg3 > ext_call.return_data[18 len 14]:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 30
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if ext_call.return_data[18 len 14] < arg3:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[18 len 14] - arg3:
                                revert with 'NH{q', 18
                            if ext_call.return_data[18 len 14] - arg3 and 997 > -1 / ext_call.return_data[18 len 14] - arg3:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[18 len 14] - arg3:
                                revert with 'NH{q', 18
                            if (997 * ext_call.return_data[18 len 14]) - (997 * arg3) / ext_call.return_data[18 len 14] - arg3 != 997:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                revert with 'NH{q', 18
                            if 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3) > -2:
                                revert with 'NH{q', 17
                            if (0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3)) + 1 < 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 27
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            else:
                                mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                if not cd[(arg4 + 132)]:
                                    mem[(10 * ceil32(return_data.size)) + 474] = 2
                                    mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                    mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 638] = 160
                                    mem[(10 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 766
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                    call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _7343 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                    _7535 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                    mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                    require return_data.size >= _7343 + (32 * _7535) + 32
                                    mem[(11 * ceil32(return_data.size)) + 602 len 32 * _7535] = mem[(10 * ceil32(return_data.size)) + _7343 + 602 len 32 * _7535]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _10983 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_10983] == bool(mem[_10983])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _11751 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _11943 = mem[_11751]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _11943
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _11943
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _12519 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_12519] == bool(mem[_12519])
                                else:
                                    mem[(10 * ceil32(return_data.size)) + 474] = 3
                                    mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                    mem[(10 * ceil32(return_data.size)) + 538] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                    mem[(10 * ceil32(return_data.size)) + 570] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 602] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 606] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 638] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 670] = 160
                                    mem[(10 * ceil32(return_data.size)) + 766] = 3
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 798
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 3:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 702] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 734] = block.timestamp
                                    require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                    call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=3, data=mem[(10 * ceil32(return_data.size)) + 798 len 96]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 602 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 602
                                    require return_data.size >= 32
                                    _7344 = mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 633 < (10 * ceil32(return_data.size)) + return_data.size + 602
                                    _7536 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 602]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 602] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 602]) + 603 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 602]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 602]) + 603
                                    mem[(11 * ceil32(return_data.size)) + 602] = _7536
                                    require return_data.size >= _7344 + (32 * _7536) + 32
                                    mem[(11 * ceil32(return_data.size)) + 634 len 32 * _7536] = mem[(10 * ceil32(return_data.size)) + _7344 + 634 len 32 * _7536]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _11079 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_11079] == bool(mem[_11079])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _11847 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _12057 = mem[_11847]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _12057
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _12057
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _12615 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_12615] == bool(mem[_12615])
                        else:
                            if ext_call.return_data[50 len 14] and arg3 > -1 / ext_call.return_data[50 len 14]:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[50 len 14]:
                                revert with 'NH{q', 18
                            if ext_call.return_data[50 len 14] * arg3 / ext_call.return_data[50 len 14] != arg3:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not ext_call.return_data[50 len 14] * arg3:
                                if arg3 > ext_call.return_data[18 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[18 len 14] < arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[18 len 14] - arg3 and 997 > -1 / ext_call.return_data[18 len 14] - arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[18 len 14]) - (997 * arg3) / ext_call.return_data[18 len 14] - arg3 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                    revert with 'NH{q', 18
                                if 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3) > -2:
                                    revert with 'NH{q', 17
                                if (0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3)) + 1 < 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    if not cd[(arg4 + 132)]:
                                        mem[(10 * ceil32(return_data.size)) + 474] = 2
                                        mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                        mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                        mem[(10 * ceil32(return_data.size)) + 638] = 160
                                        mem[(10 * ceil32(return_data.size)) + 734] = 2
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + 766
                                        t = (10 * ceil32(return_data.size)) + 506
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                        mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                        require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                        call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + 570
                                        require return_data.size >= 32
                                        _7341 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                        _7533 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                        if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                            revert with 'NH{q', 65
                                        if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0:
                                            revert with 'NH{q', 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                        mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                        require return_data.size >= _7341 + (32 * _7533) + 32
                                        mem[(11 * ceil32(return_data.size)) + 602 len 32 * _7533] = mem[(10 * ceil32(return_data.size)) + _7341 + 602 len 32 * _7533]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10982 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10982] == bool(mem[_10982])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11750 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _11942 = mem[_11750]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _11942
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _11942
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _12518 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_12518] == bool(mem[_12518])
                                    else:
                                        mem[(10 * ceil32(return_data.size)) + 474] = 3
                                        mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(10 * ceil32(return_data.size)) + 538] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                        mem[(10 * ceil32(return_data.size)) + 570] = address(ext_call.return_data[0])
                                        mem[(10 * ceil32(return_data.size)) + 602] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + 606] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        mem[(10 * ceil32(return_data.size)) + 638] = ext_call.return_data[0]
                                        mem[(10 * ceil32(return_data.size)) + 670] = 160
                                        mem[(10 * ceil32(return_data.size)) + 766] = 3
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + 798
                                        t = (10 * ceil32(return_data.size)) + 506
                                        while idx < 3:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + 702] = this.address
                                        mem[(10 * ceil32(return_data.size)) + 734] = block.timestamp
                                        require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                        call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=3, data=mem[(10 * ceil32(return_data.size)) + 798 len 96]), address(this.address), block.timestamp
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + 602 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + 602
                                        require return_data.size >= 32
                                        _7342 = mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 633 < (10 * ceil32(return_data.size)) + return_data.size + 602
                                        _7534 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 602]
                                        if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 602] > test266151307():
                                            revert with 'NH{q', 65
                                        if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 602]) + 603 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 602]) + 1 < 0:
                                            revert with 'NH{q', 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 602]) + 603
                                        mem[(11 * ceil32(return_data.size)) + 602] = _7534
                                        require return_data.size >= _7342 + (32 * _7534) + 32
                                        mem[(11 * ceil32(return_data.size)) + 634 len 32 * _7534] = mem[(10 * ceil32(return_data.size)) + _7342 + 634 len 32 * _7534]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11078 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_11078] == bool(mem[_11078])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11846 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _12054 = mem[_11846]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _12054
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _12054
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _12614 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_12614] == bool(mem[_12614])
                            else:
                                if ext_call.return_data[50 len 14] * arg3 and 1000 > -1 / ext_call.return_data[50 len 14] * arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] * arg3:
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[50 len 14] * arg3 / ext_call.return_data[50 len 14] * arg3 != 1000:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if arg3 > ext_call.return_data[18 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[18 len 14] < arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[18 len 14] - arg3 and 997 > -1 / ext_call.return_data[18 len 14] - arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[18 len 14]) - (997 * arg3) / ext_call.return_data[18 len 14] - arg3 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[50 len 14] * arg3 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3) > -2:
                                    revert with 'NH{q', 17
                                if (1000 * ext_call.return_data[50 len 14] * arg3 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3)) + 1 < 1000 * ext_call.return_data[50 len 14] * arg3 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    if not cd[(arg4 + 132)]:
                                        mem[(10 * ceil32(return_data.size)) + 474] = 2
                                        mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                        mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + 574] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                        mem[(10 * ceil32(return_data.size)) + 638] = 160
                                        mem[(10 * ceil32(return_data.size)) + 734] = 2
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + 766
                                        t = (10 * ceil32(return_data.size)) + 506
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                        mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                        require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                        call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + 570
                                        require return_data.size >= 32
                                        _7339 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                        _7531 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                        if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                            revert with 'NH{q', 65
                                        if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0:
                                            revert with 'NH{q', 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                        mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                        require return_data.size >= _7339 + (32 * _7531) + 32
                                        mem[(11 * ceil32(return_data.size)) + 602 len 32 * _7531] = mem[(10 * ceil32(return_data.size)) + _7339 + 602 len 32 * _7531]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10981 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10981] == bool(mem[_10981])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11749 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _11941 = mem[_11749]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _11941
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _11941
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _12517 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_12517] == bool(mem[_12517])
                                    else:
                                        mem[(10 * ceil32(return_data.size)) + 474] = 3
                                        mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(10 * ceil32(return_data.size)) + 538] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                        mem[(10 * ceil32(return_data.size)) + 570] = address(ext_call.return_data[0])
                                        mem[(10 * ceil32(return_data.size)) + 602] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + 606] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        mem[(10 * ceil32(return_data.size)) + 638] = ext_call.return_data[0]
                                        mem[(10 * ceil32(return_data.size)) + 670] = 160
                                        mem[(10 * ceil32(return_data.size)) + 766] = 3
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + 798
                                        t = (10 * ceil32(return_data.size)) + 506
                                        while idx < 3:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + 702] = this.address
                                        mem[(10 * ceil32(return_data.size)) + 734] = block.timestamp
                                        require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                        call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=3, data=mem[(10 * ceil32(return_data.size)) + 798 len 96]), address(this.address), block.timestamp
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + 602 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + 602
                                        require return_data.size >= 32
                                        _7340 = mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 633 < (10 * ceil32(return_data.size)) + return_data.size + 602
                                        _7532 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 602]
                                        if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 602] > test266151307():
                                            revert with 'NH{q', 65
                                        if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 602]) + 603 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 602]) + 1 < 0:
                                            revert with 'NH{q', 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 602]) + 603
                                        mem[(11 * ceil32(return_data.size)) + 602] = _7532
                                        require return_data.size >= _7340 + (32 * _7532) + 32
                                        mem[(11 * ceil32(return_data.size)) + 634 len 32 * _7532] = mem[(10 * ceil32(return_data.size)) + _7340 + 634 len 32 * _7532]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11077 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_11077] == bool(mem[_11077])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11845 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _12051 = mem[_11845]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _12051
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _12051
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _12613 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_12613] == bool(mem[_12613])
                    else:
                        if ext_call.return_data[18 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 39
                            mem[(8 * ceil32(return_data.size)) + 542] = 'PangolinLibrary: INSUFFICIENT_LI'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'QUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if ext_call.return_data[50 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 39
                            mem[(8 * ceil32(return_data.size)) + 542] = 'PangolinLibrary: INSUFFICIENT_LI'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'QUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if not ext_call.return_data[18 len 14]:
                            if arg3 > ext_call.return_data[50 len 14]:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 30
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if ext_call.return_data[50 len 14] < arg3:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[50 len 14] - arg3:
                                revert with 'NH{q', 18
                            if ext_call.return_data[50 len 14] - arg3 and 997 > -1 / ext_call.return_data[50 len 14] - arg3:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[50 len 14] - arg3:
                                revert with 'NH{q', 18
                            if (997 * ext_call.return_data[50 len 14]) - (997 * arg3) / ext_call.return_data[50 len 14] - arg3 != 997:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                revert with 'NH{q', 18
                            if 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3) > -2:
                                revert with 'NH{q', 17
                            if (0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3)) + 1 < 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 27
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            else:
                                mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                if not cd[(arg4 + 132)]:
                                    mem[(10 * ceil32(return_data.size)) + 474] = 2
                                    mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                    mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 638] = 160
                                    mem[(10 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 766
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                    call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _7349 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                    _7541 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                    mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                    require return_data.size >= _7349 + (32 * _7541) + 32
                                    mem[(11 * ceil32(return_data.size)) + 602 len 32 * _7541] = mem[(10 * ceil32(return_data.size)) + _7349 + 602 len 32 * _7541]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _10986 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_10986] == bool(mem[_10986])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _11754 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _11946 = mem[_11754]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _11946
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _11946
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _12522 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_12522] == bool(mem[_12522])
                                else:
                                    mem[(10 * ceil32(return_data.size)) + 474] = 3
                                    mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                    mem[(10 * ceil32(return_data.size)) + 538] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                    mem[(10 * ceil32(return_data.size)) + 570] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 602] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 606] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 638] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 670] = 160
                                    mem[(10 * ceil32(return_data.size)) + 766] = 3
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 798
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 3:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 702] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 734] = block.timestamp
                                    require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                    call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=3, data=mem[(10 * ceil32(return_data.size)) + 798 len 96]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 602 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 602
                                    require return_data.size >= 32
                                    _7350 = mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 633 < (10 * ceil32(return_data.size)) + return_data.size + 602
                                    _7542 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 602]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 602] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 602]) + 603 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 602]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 602]) + 603
                                    mem[(11 * ceil32(return_data.size)) + 602] = _7542
                                    require return_data.size >= _7350 + (32 * _7542) + 32
                                    mem[(11 * ceil32(return_data.size)) + 634 len 32 * _7542] = mem[(10 * ceil32(return_data.size)) + _7350 + 634 len 32 * _7542]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _11082 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_11082] == bool(mem[_11082])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _11850 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _12066 = mem[_11850]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _12066
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _12066
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _12618 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_12618] == bool(mem[_12618])
                        else:
                            if ext_call.return_data[18 len 14] and arg3 > -1 / ext_call.return_data[18 len 14]:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[18 len 14]:
                                revert with 'NH{q', 18
                            if ext_call.return_data[18 len 14] * arg3 / ext_call.return_data[18 len 14] != arg3:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not ext_call.return_data[18 len 14] * arg3:
                                if arg3 > ext_call.return_data[50 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[50 len 14] < arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[50 len 14] - arg3 and 997 > -1 / ext_call.return_data[50 len 14] - arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[50 len 14]) - (997 * arg3) / ext_call.return_data[50 len 14] - arg3 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                    revert with 'NH{q', 18
                                if 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3) > -2:
                                    revert with 'NH{q', 17
                                if (0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3)) + 1 < 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    if not cd[(arg4 + 132)]:
                                        mem[(10 * ceil32(return_data.size)) + 474] = 2
                                        mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                        mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                        mem[(10 * ceil32(return_data.size)) + 638] = 160
                                        mem[(10 * ceil32(return_data.size)) + 734] = 2
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + 766
                                        t = (10 * ceil32(return_data.size)) + 506
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                        mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                        require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                        call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + 570
                                        require return_data.size >= 32
                                        _7347 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                        _7539 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                        if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                            revert with 'NH{q', 65
                                        if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0:
                                            revert with 'NH{q', 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                        mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                        require return_data.size >= _7347 + (32 * _7539) + 32
                                        mem[(11 * ceil32(return_data.size)) + 602 len 32 * _7539] = mem[(10 * ceil32(return_data.size)) + _7347 + 602 len 32 * _7539]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10985 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10985] == bool(mem[_10985])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11753 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _11945 = mem[_11753]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _11945
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _11945
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _12521 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_12521] == bool(mem[_12521])
                                    else:
                                        mem[(10 * ceil32(return_data.size)) + 474] = 3
                                        mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(10 * ceil32(return_data.size)) + 538] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                        mem[(10 * ceil32(return_data.size)) + 570] = address(ext_call.return_data[0])
                                        mem[(10 * ceil32(return_data.size)) + 602] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + 606] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        mem[(10 * ceil32(return_data.size)) + 638] = ext_call.return_data[0]
                                        mem[(10 * ceil32(return_data.size)) + 670] = 160
                                        mem[(10 * ceil32(return_data.size)) + 766] = 3
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + 798
                                        t = (10 * ceil32(return_data.size)) + 506
                                        while idx < 3:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + 702] = this.address
                                        mem[(10 * ceil32(return_data.size)) + 734] = block.timestamp
                                        require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                        call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=3, data=mem[(10 * ceil32(return_data.size)) + 798 len 96]), address(this.address), block.timestamp
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + 602 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + 602
                                        require return_data.size >= 32
                                        _7348 = mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 633 < (10 * ceil32(return_data.size)) + return_data.size + 602
                                        _7540 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 602]
                                        if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 602] > test266151307():
                                            revert with 'NH{q', 65
                                        if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 602]) + 603 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 602]) + 1 < 0:
                                            revert with 'NH{q', 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 602]) + 603
                                        mem[(11 * ceil32(return_data.size)) + 602] = _7540
                                        require return_data.size >= _7348 + (32 * _7540) + 32
                                        mem[(11 * ceil32(return_data.size)) + 634 len 32 * _7540] = mem[(10 * ceil32(return_data.size)) + _7348 + 634 len 32 * _7540]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11081 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_11081] == bool(mem[_11081])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11849 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _12063 = mem[_11849]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _12063
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _12063
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _12617 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_12617] == bool(mem[_12617])
                            else:
                                if ext_call.return_data[18 len 14] * arg3 and 1000 > -1 / ext_call.return_data[18 len 14] * arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] * arg3:
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[18 len 14] * arg3 / ext_call.return_data[18 len 14] * arg3 != 1000:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if arg3 > ext_call.return_data[50 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[50 len 14] < arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[50 len 14] - arg3 and 997 > -1 / ext_call.return_data[50 len 14] - arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[50 len 14]) - (997 * arg3) / ext_call.return_data[50 len 14] - arg3 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[18 len 14] * arg3 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3) > -2:
                                    revert with 'NH{q', 17
                                if (1000 * ext_call.return_data[18 len 14] * arg3 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3)) + 1 < 1000 * ext_call.return_data[18 len 14] * arg3 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    if not cd[(arg4 + 132)]:
                                        mem[(10 * ceil32(return_data.size)) + 474] = 2
                                        mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                        mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + 574] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                        mem[(10 * ceil32(return_data.size)) + 638] = 160
                                        mem[(10 * ceil32(return_data.size)) + 734] = 2
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + 766
                                        t = (10 * ceil32(return_data.size)) + 506
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                        mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                        require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                        call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + 570
                                        require return_data.size >= 32
                                        _7345 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                        _7537 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                        if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                            revert with 'NH{q', 65
                                        if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0:
                                            revert with 'NH{q', 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                        mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                        require return_data.size >= _7345 + (32 * _7537) + 32
                                        mem[(11 * ceil32(return_data.size)) + 602 len 32 * _7537] = mem[(10 * ceil32(return_data.size)) + _7345 + 602 len 32 * _7537]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10984 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10984] == bool(mem[_10984])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11752 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _11944 = mem[_11752]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _11944
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _11944
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _12520 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_12520] == bool(mem[_12520])
                                    else:
                                        mem[(10 * ceil32(return_data.size)) + 474] = 3
                                        mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(10 * ceil32(return_data.size)) + 538] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                        mem[(10 * ceil32(return_data.size)) + 570] = address(ext_call.return_data[0])
                                        mem[(10 * ceil32(return_data.size)) + 602] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + 606] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        mem[(10 * ceil32(return_data.size)) + 638] = ext_call.return_data[0]
                                        mem[(10 * ceil32(return_data.size)) + 670] = 160
                                        mem[(10 * ceil32(return_data.size)) + 766] = 3
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + 798
                                        t = (10 * ceil32(return_data.size)) + 506
                                        while idx < 3:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + 702] = this.address
                                        mem[(10 * ceil32(return_data.size)) + 734] = block.timestamp
                                        require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                        call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=3, data=mem[(10 * ceil32(return_data.size)) + 798 len 96]), address(this.address), block.timestamp
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + 602 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + 602
                                        require return_data.size >= 32
                                        _7346 = mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 633 < (10 * ceil32(return_data.size)) + return_data.size + 602
                                        _7538 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 602]
                                        if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 602] > test266151307():
                                            revert with 'NH{q', 65
                                        if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 602]) + 603 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 602]) + 1 < 0:
                                            revert with 'NH{q', 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 602]) + 603
                                        mem[(11 * ceil32(return_data.size)) + 602] = _7538
                                        require return_data.size >= _7346 + (32 * _7538) + 32
                                        mem[(11 * ceil32(return_data.size)) + 634 len 32 * _7538] = mem[(10 * ceil32(return_data.size)) + _7346 + 634 len 32 * _7538]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11080 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_11080] == bool(mem[_11080])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11848 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _12060 = mem[_11848]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _12060
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _12060
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _12616 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_12616] == bool(mem[_12616])
            else:
                if address(ext_call.return_data[0]) < address(ext_call.return_data[0]):
                    if address(ext_call.return_data[0]) == address(ext_call.return_data[0]):
                        if ext_call.return_data[50 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 39
                            mem[(8 * ceil32(return_data.size)) + 542] = 'PangolinLibrary: INSUFFICIENT_LI'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'QUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if ext_call.return_data[18 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 39
                            mem[(8 * ceil32(return_data.size)) + 542] = 'PangolinLibrary: INSUFFICIENT_LI'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'QUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if not ext_call.return_data[50 len 14]:
                            if arg3 > ext_call.return_data[18 len 14]:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 30
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if ext_call.return_data[18 len 14] < arg3:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[18 len 14] - arg3:
                                revert with 'NH{q', 18
                            if ext_call.return_data[18 len 14] - arg3 and 997 > -1 / ext_call.return_data[18 len 14] - arg3:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[18 len 14] - arg3:
                                revert with 'NH{q', 18
                            if (997 * ext_call.return_data[18 len 14]) - (997 * arg3) / ext_call.return_data[18 len 14] - arg3 != 997:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                revert with 'NH{q', 18
                            if 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3) > -2:
                                revert with 'NH{q', 17
                            if (0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3)) + 1 < 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 27
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            else:
                                mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                if not cd[(arg4 + 132)]:
                                    mem[(10 * ceil32(return_data.size)) + 474] = 2
                                    mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                    mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 638] = 160
                                    mem[(10 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 766
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                    call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _7355 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                    _7547 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                    mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                    require return_data.size >= _7355 + (32 * _7547) + 32
                                    mem[(11 * ceil32(return_data.size)) + 602 len 32 * _7547] = mem[(10 * ceil32(return_data.size)) + _7355 + 602 len 32 * _7547]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _10989 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_10989] == bool(mem[_10989])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _11757 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _11949 = mem[_11757]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _11949
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _11949
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _12525 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_12525] == bool(mem[_12525])
                                else:
                                    mem[(10 * ceil32(return_data.size)) + 474] = 3
                                    mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                    mem[(10 * ceil32(return_data.size)) + 538] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                    mem[(10 * ceil32(return_data.size)) + 570] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 602] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 606] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 638] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 670] = 160
                                    mem[(10 * ceil32(return_data.size)) + 766] = 3
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 798
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 3:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 702] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 734] = block.timestamp
                                    require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                    call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=3, data=mem[(10 * ceil32(return_data.size)) + 798 len 96]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 602 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 602
                                    require return_data.size >= 32
                                    _7356 = mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 633 < (10 * ceil32(return_data.size)) + return_data.size + 602
                                    _7548 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 602]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 602] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 602]) + 603 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 602]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 602]) + 603
                                    mem[(11 * ceil32(return_data.size)) + 602] = _7548
                                    require return_data.size >= _7356 + (32 * _7548) + 32
                                    mem[(11 * ceil32(return_data.size)) + 634 len 32 * _7548] = mem[(10 * ceil32(return_data.size)) + _7356 + 634 len 32 * _7548]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _11085 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_11085] == bool(mem[_11085])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _11853 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _12075 = mem[_11853]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _12075
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _12075
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _12621 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_12621] == bool(mem[_12621])
                        else:
                            if ext_call.return_data[50 len 14] and arg3 > -1 / ext_call.return_data[50 len 14]:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[50 len 14]:
                                revert with 'NH{q', 18
                            if ext_call.return_data[50 len 14] * arg3 / ext_call.return_data[50 len 14] != arg3:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not ext_call.return_data[50 len 14] * arg3:
                                if arg3 > ext_call.return_data[18 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[18 len 14] < arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[18 len 14] - arg3 and 997 > -1 / ext_call.return_data[18 len 14] - arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[18 len 14]) - (997 * arg3) / ext_call.return_data[18 len 14] - arg3 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                    revert with 'NH{q', 18
                                if 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3) > -2:
                                    revert with 'NH{q', 17
                                if (0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3)) + 1 < 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    if not cd[(arg4 + 132)]:
                                        mem[(10 * ceil32(return_data.size)) + 474] = 2
                                        mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                        mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                        mem[(10 * ceil32(return_data.size)) + 638] = 160
                                        mem[(10 * ceil32(return_data.size)) + 734] = 2
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + 766
                                        t = (10 * ceil32(return_data.size)) + 506
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                        mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                        require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                        call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + 570
                                        require return_data.size >= 32
                                        _7353 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                        _7545 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                        if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                            revert with 'NH{q', 65
                                        if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0:
                                            revert with 'NH{q', 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                        mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                        require return_data.size >= _7353 + (32 * _7545) + 32
                                        mem[(11 * ceil32(return_data.size)) + 602 len 32 * _7545] = mem[(10 * ceil32(return_data.size)) + _7353 + 602 len 32 * _7545]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10988 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10988] == bool(mem[_10988])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11756 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _11948 = mem[_11756]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _11948
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _11948
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _12524 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_12524] == bool(mem[_12524])
                                    else:
                                        mem[(10 * ceil32(return_data.size)) + 474] = 3
                                        mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(10 * ceil32(return_data.size)) + 538] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                        mem[(10 * ceil32(return_data.size)) + 570] = address(ext_call.return_data[0])
                                        mem[(10 * ceil32(return_data.size)) + 602] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + 606] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        mem[(10 * ceil32(return_data.size)) + 638] = ext_call.return_data[0]
                                        mem[(10 * ceil32(return_data.size)) + 670] = 160
                                        mem[(10 * ceil32(return_data.size)) + 766] = 3
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + 798
                                        t = (10 * ceil32(return_data.size)) + 506
                                        while idx < 3:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + 702] = this.address
                                        mem[(10 * ceil32(return_data.size)) + 734] = block.timestamp
                                        require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                        call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=3, data=mem[(10 * ceil32(return_data.size)) + 798 len 96]), address(this.address), block.timestamp
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + 602 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + 602
                                        require return_data.size >= 32
                                        _7354 = mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 633 < (10 * ceil32(return_data.size)) + return_data.size + 602
                                        _7546 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 602]
                                        if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 602] > test266151307():
                                            revert with 'NH{q', 65
                                        if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 602]) + 603 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 602]) + 1 < 0:
                                            revert with 'NH{q', 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 602]) + 603
                                        mem[(11 * ceil32(return_data.size)) + 602] = _7546
                                        require return_data.size >= _7354 + (32 * _7546) + 32
                                        mem[(11 * ceil32(return_data.size)) + 634 len 32 * _7546] = mem[(10 * ceil32(return_data.size)) + _7354 + 634 len 32 * _7546]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11084 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_11084] == bool(mem[_11084])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11852 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _12072 = mem[_11852]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _12072
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _12072
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _12620 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_12620] == bool(mem[_12620])
                            else:
                                if ext_call.return_data[50 len 14] * arg3 and 1000 > -1 / ext_call.return_data[50 len 14] * arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] * arg3:
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[50 len 14] * arg3 / ext_call.return_data[50 len 14] * arg3 != 1000:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if arg3 > ext_call.return_data[18 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[18 len 14] < arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[18 len 14] - arg3 and 997 > -1 / ext_call.return_data[18 len 14] - arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[18 len 14]) - (997 * arg3) / ext_call.return_data[18 len 14] - arg3 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[50 len 14] * arg3 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3) > -2:
                                    revert with 'NH{q', 17
                                if (1000 * ext_call.return_data[50 len 14] * arg3 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3)) + 1 < 1000 * ext_call.return_data[50 len 14] * arg3 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    if not cd[(arg4 + 132)]:
                                        mem[(10 * ceil32(return_data.size)) + 474] = 2
                                        mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                        mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + 574] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                        mem[(10 * ceil32(return_data.size)) + 638] = 160
                                        mem[(10 * ceil32(return_data.size)) + 734] = 2
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + 766
                                        t = (10 * ceil32(return_data.size)) + 506
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                        mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                        require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                        call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + 570
                                        require return_data.size >= 32
                                        _7351 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                        _7543 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                        if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                            revert with 'NH{q', 65
                                        if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0:
                                            revert with 'NH{q', 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                        mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                        require return_data.size >= _7351 + (32 * _7543) + 32
                                        mem[(11 * ceil32(return_data.size)) + 602 len 32 * _7543] = mem[(10 * ceil32(return_data.size)) + _7351 + 602 len 32 * _7543]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10987 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10987] == bool(mem[_10987])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11755 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _11947 = mem[_11755]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _11947
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _11947
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _12523 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_12523] == bool(mem[_12523])
                                    else:
                                        mem[(10 * ceil32(return_data.size)) + 474] = 3
                                        mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(10 * ceil32(return_data.size)) + 538] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                        mem[(10 * ceil32(return_data.size)) + 570] = address(ext_call.return_data[0])
                                        mem[(10 * ceil32(return_data.size)) + 602] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + 606] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        mem[(10 * ceil32(return_data.size)) + 638] = ext_call.return_data[0]
                                        mem[(10 * ceil32(return_data.size)) + 670] = 160
                                        mem[(10 * ceil32(return_data.size)) + 766] = 3
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + 798
                                        t = (10 * ceil32(return_data.size)) + 506
                                        while idx < 3:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + 702] = this.address
                                        mem[(10 * ceil32(return_data.size)) + 734] = block.timestamp
                                        require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                        call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=3, data=mem[(10 * ceil32(return_data.size)) + 798 len 96]), address(this.address), block.timestamp
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + 602 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + 602
                                        require return_data.size >= 32
                                        _7352 = mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 633 < (10 * ceil32(return_data.size)) + return_data.size + 602
                                        _7544 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 602]
                                        if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 602] > test266151307():
                                            revert with 'NH{q', 65
                                        if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 602]) + 603 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 602]) + 1 < 0:
                                            revert with 'NH{q', 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 602]) + 603
                                        mem[(11 * ceil32(return_data.size)) + 602] = _7544
                                        require return_data.size >= _7352 + (32 * _7544) + 32
                                        mem[(11 * ceil32(return_data.size)) + 634 len 32 * _7544] = mem[(10 * ceil32(return_data.size)) + _7352 + 634 len 32 * _7544]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11083 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_11083] == bool(mem[_11083])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11851 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _12069 = mem[_11851]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _12069
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _12069
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _12619 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_12619] == bool(mem[_12619])
                    else:
                        if ext_call.return_data[18 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 39
                            mem[(8 * ceil32(return_data.size)) + 542] = 'PangolinLibrary: INSUFFICIENT_LI'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'QUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if ext_call.return_data[50 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 39
                            mem[(8 * ceil32(return_data.size)) + 542] = 'PangolinLibrary: INSUFFICIENT_LI'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'QUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if not ext_call.return_data[18 len 14]:
                            if arg3 > ext_call.return_data[50 len 14]:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 30
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if ext_call.return_data[50 len 14] < arg3:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[50 len 14] - arg3:
                                revert with 'NH{q', 18
                            if ext_call.return_data[50 len 14] - arg3 and 997 > -1 / ext_call.return_data[50 len 14] - arg3:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[50 len 14] - arg3:
                                revert with 'NH{q', 18
                            if (997 * ext_call.return_data[50 len 14]) - (997 * arg3) / ext_call.return_data[50 len 14] - arg3 != 997:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                revert with 'NH{q', 18
                            if 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3) > -2:
                                revert with 'NH{q', 17
                            if (0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3)) + 1 < 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 27
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            else:
                                mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                if not cd[(arg4 + 132)]:
                                    mem[(10 * ceil32(return_data.size)) + 474] = 2
                                    mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                    mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 638] = 160
                                    mem[(10 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 766
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                    call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _7361 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                    _7553 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                    mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                    require return_data.size >= _7361 + (32 * _7553) + 32
                                    mem[(11 * ceil32(return_data.size)) + 602 len 32 * _7553] = mem[(10 * ceil32(return_data.size)) + _7361 + 602 len 32 * _7553]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _10992 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_10992] == bool(mem[_10992])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _11760 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _11952 = mem[_11760]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _11952
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _11952
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _12528 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_12528] == bool(mem[_12528])
                                else:
                                    mem[(10 * ceil32(return_data.size)) + 474] = 3
                                    mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                    mem[(10 * ceil32(return_data.size)) + 538] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                    mem[(10 * ceil32(return_data.size)) + 570] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 602] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 606] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 638] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 670] = 160
                                    mem[(10 * ceil32(return_data.size)) + 766] = 3
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 798
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 3:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 702] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 734] = block.timestamp
                                    require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                    call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=3, data=mem[(10 * ceil32(return_data.size)) + 798 len 96]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 602 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 602
                                    require return_data.size >= 32
                                    _7362 = mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 633 < (10 * ceil32(return_data.size)) + return_data.size + 602
                                    _7554 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 602]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 602] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 602]) + 603 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 602]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 602]) + 603
                                    mem[(11 * ceil32(return_data.size)) + 602] = _7554
                                    require return_data.size >= _7362 + (32 * _7554) + 32
                                    mem[(11 * ceil32(return_data.size)) + 634 len 32 * _7554] = mem[(10 * ceil32(return_data.size)) + _7362 + 634 len 32 * _7554]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _11088 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_11088] == bool(mem[_11088])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _11856 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _12084 = mem[_11856]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _12084
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _12084
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _12624 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_12624] == bool(mem[_12624])
                        else:
                            if ext_call.return_data[18 len 14] and arg3 > -1 / ext_call.return_data[18 len 14]:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[18 len 14]:
                                revert with 'NH{q', 18
                            if ext_call.return_data[18 len 14] * arg3 / ext_call.return_data[18 len 14] != arg3:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not ext_call.return_data[18 len 14] * arg3:
                                if arg3 > ext_call.return_data[50 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[50 len 14] < arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[50 len 14] - arg3 and 997 > -1 / ext_call.return_data[50 len 14] - arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[50 len 14]) - (997 * arg3) / ext_call.return_data[50 len 14] - arg3 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                    revert with 'NH{q', 18
                                if 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3) > -2:
                                    revert with 'NH{q', 17
                                if (0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3)) + 1 < 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    if not cd[(arg4 + 132)]:
                                        mem[(10 * ceil32(return_data.size)) + 474] = 2
                                        mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                        mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                        mem[(10 * ceil32(return_data.size)) + 638] = 160
                                        mem[(10 * ceil32(return_data.size)) + 734] = 2
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + 766
                                        t = (10 * ceil32(return_data.size)) + 506
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                        mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                        require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                        call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + 570
                                        require return_data.size >= 32
                                        _7359 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                        _7551 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                        if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                            revert with 'NH{q', 65
                                        if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0:
                                            revert with 'NH{q', 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                        mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                        require return_data.size >= _7359 + (32 * _7551) + 32
                                        mem[(11 * ceil32(return_data.size)) + 602 len 32 * _7551] = mem[(10 * ceil32(return_data.size)) + _7359 + 602 len 32 * _7551]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10991 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10991] == bool(mem[_10991])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11759 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _11951 = mem[_11759]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _11951
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _11951
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _12527 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_12527] == bool(mem[_12527])
                                    else:
                                        mem[(10 * ceil32(return_data.size)) + 474] = 3
                                        mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(10 * ceil32(return_data.size)) + 538] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                        mem[(10 * ceil32(return_data.size)) + 570] = address(ext_call.return_data[0])
                                        mem[(10 * ceil32(return_data.size)) + 602] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + 606] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        mem[(10 * ceil32(return_data.size)) + 638] = ext_call.return_data[0]
                                        mem[(10 * ceil32(return_data.size)) + 670] = 160
                                        mem[(10 * ceil32(return_data.size)) + 766] = 3
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + 798
                                        t = (10 * ceil32(return_data.size)) + 506
                                        while idx < 3:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + 702] = this.address
                                        mem[(10 * ceil32(return_data.size)) + 734] = block.timestamp
                                        require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                        call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=3, data=mem[(10 * ceil32(return_data.size)) + 798 len 96]), address(this.address), block.timestamp
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + 602 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + 602
                                        require return_data.size >= 32
                                        _7360 = mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 633 < (10 * ceil32(return_data.size)) + return_data.size + 602
                                        _7552 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 602]
                                        if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 602] > test266151307():
                                            revert with 'NH{q', 65
                                        if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 602]) + 603 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 602]) + 1 < 0:
                                            revert with 'NH{q', 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 602]) + 603
                                        mem[(11 * ceil32(return_data.size)) + 602] = _7552
                                        require return_data.size >= _7360 + (32 * _7552) + 32
                                        mem[(11 * ceil32(return_data.size)) + 634 len 32 * _7552] = mem[(10 * ceil32(return_data.size)) + _7360 + 634 len 32 * _7552]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11087 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_11087] == bool(mem[_11087])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11855 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _12081 = mem[_11855]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _12081
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _12081
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _12623 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_12623] == bool(mem[_12623])
                            else:
                                if ext_call.return_data[18 len 14] * arg3 and 1000 > -1 / ext_call.return_data[18 len 14] * arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] * arg3:
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[18 len 14] * arg3 / ext_call.return_data[18 len 14] * arg3 != 1000:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if arg3 > ext_call.return_data[50 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[50 len 14] < arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[50 len 14] - arg3 and 997 > -1 / ext_call.return_data[50 len 14] - arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[50 len 14]) - (997 * arg3) / ext_call.return_data[50 len 14] - arg3 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[18 len 14] * arg3 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3) > -2:
                                    revert with 'NH{q', 17
                                if (1000 * ext_call.return_data[18 len 14] * arg3 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3)) + 1 < 1000 * ext_call.return_data[18 len 14] * arg3 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    if not cd[(arg4 + 132)]:
                                        mem[(10 * ceil32(return_data.size)) + 474] = 2
                                        mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                        mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + 574] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                        mem[(10 * ceil32(return_data.size)) + 638] = 160
                                        mem[(10 * ceil32(return_data.size)) + 734] = 2
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + 766
                                        t = (10 * ceil32(return_data.size)) + 506
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                        mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                        require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                        call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + 570
                                        require return_data.size >= 32
                                        _7357 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                        _7549 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                        if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                            revert with 'NH{q', 65
                                        if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0:
                                            revert with 'NH{q', 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                        mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                        require return_data.size >= _7357 + (32 * _7549) + 32
                                        mem[(11 * ceil32(return_data.size)) + 602 len 32 * _7549] = mem[(10 * ceil32(return_data.size)) + _7357 + 602 len 32 * _7549]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10990 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10990] == bool(mem[_10990])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11758 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _11950 = mem[_11758]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _11950
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _11950
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _12526 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_12526] == bool(mem[_12526])
                                    else:
                                        mem[(10 * ceil32(return_data.size)) + 474] = 3
                                        mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(10 * ceil32(return_data.size)) + 538] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                        mem[(10 * ceil32(return_data.size)) + 570] = address(ext_call.return_data[0])
                                        mem[(10 * ceil32(return_data.size)) + 602] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + 606] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        mem[(10 * ceil32(return_data.size)) + 638] = ext_call.return_data[0]
                                        mem[(10 * ceil32(return_data.size)) + 670] = 160
                                        mem[(10 * ceil32(return_data.size)) + 766] = 3
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + 798
                                        t = (10 * ceil32(return_data.size)) + 506
                                        while idx < 3:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + 702] = this.address
                                        mem[(10 * ceil32(return_data.size)) + 734] = block.timestamp
                                        require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                        call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=3, data=mem[(10 * ceil32(return_data.size)) + 798 len 96]), address(this.address), block.timestamp
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + 602 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + 602
                                        require return_data.size >= 32
                                        _7358 = mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 633 < (10 * ceil32(return_data.size)) + return_data.size + 602
                                        _7550 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 602]
                                        if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 602] > test266151307():
                                            revert with 'NH{q', 65
                                        if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 602]) + 603 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 602]) + 1 < 0:
                                            revert with 'NH{q', 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 602]) + 603
                                        mem[(11 * ceil32(return_data.size)) + 602] = _7550
                                        require return_data.size >= _7358 + (32 * _7550) + 32
                                        mem[(11 * ceil32(return_data.size)) + 634 len 32 * _7550] = mem[(10 * ceil32(return_data.size)) + _7358 + 634 len 32 * _7550]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11086 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_11086] == bool(mem[_11086])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11854 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _12078 = mem[_11854]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _12078
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _12078
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _12622 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_12622] == bool(mem[_12622])
                else:
                    if address(ext_call.return_data[0]) == address(ext_call.return_data[0]):
                        if ext_call.return_data[50 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 39
                            mem[(8 * ceil32(return_data.size)) + 542] = 'PangolinLibrary: INSUFFICIENT_LI'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'QUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if ext_call.return_data[18 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 39
                            mem[(8 * ceil32(return_data.size)) + 542] = 'PangolinLibrary: INSUFFICIENT_LI'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'QUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if not ext_call.return_data[50 len 14]:
                            if arg3 > ext_call.return_data[18 len 14]:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 30
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if ext_call.return_data[18 len 14] < arg3:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[18 len 14] - arg3:
                                revert with 'NH{q', 18
                            if ext_call.return_data[18 len 14] - arg3 and 997 > -1 / ext_call.return_data[18 len 14] - arg3:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[18 len 14] - arg3:
                                revert with 'NH{q', 18
                            if (997 * ext_call.return_data[18 len 14]) - (997 * arg3) / ext_call.return_data[18 len 14] - arg3 != 997:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                revert with 'NH{q', 18
                            if 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3) > -2:
                                revert with 'NH{q', 17
                            if (0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3)) + 1 < 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 27
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            else:
                                mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                if not cd[(arg4 + 132)]:
                                    mem[(10 * ceil32(return_data.size)) + 474] = 2
                                    mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                    mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 638] = 160
                                    mem[(10 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 766
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                    call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _7367 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                    _7559 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                    mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                    require return_data.size >= _7367 + (32 * _7559) + 32
                                    mem[(11 * ceil32(return_data.size)) + 602 len 32 * _7559] = mem[(10 * ceil32(return_data.size)) + _7367 + 602 len 32 * _7559]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _10995 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_10995] == bool(mem[_10995])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _11763 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _11955 = mem[_11763]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _11955
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _11955
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _12531 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_12531] == bool(mem[_12531])
                                else:
                                    mem[(10 * ceil32(return_data.size)) + 474] = 3
                                    mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                    mem[(10 * ceil32(return_data.size)) + 538] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                    mem[(10 * ceil32(return_data.size)) + 570] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 602] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 606] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 638] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 670] = 160
                                    mem[(10 * ceil32(return_data.size)) + 766] = 3
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 798
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 3:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 702] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 734] = block.timestamp
                                    require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                    call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=3, data=mem[(10 * ceil32(return_data.size)) + 798 len 96]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 602 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 602
                                    require return_data.size >= 32
                                    _7368 = mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 633 < (10 * ceil32(return_data.size)) + return_data.size + 602
                                    _7560 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 602]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 602] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 602]) + 603 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 602]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 602]) + 603
                                    mem[(11 * ceil32(return_data.size)) + 602] = _7560
                                    require return_data.size >= _7368 + (32 * _7560) + 32
                                    mem[(11 * ceil32(return_data.size)) + 634 len 32 * _7560] = mem[(10 * ceil32(return_data.size)) + _7368 + 634 len 32 * _7560]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _11091 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_11091] == bool(mem[_11091])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _11859 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _12093 = mem[_11859]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _12093
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _12093
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _12627 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_12627] == bool(mem[_12627])
                        else:
                            if ext_call.return_data[50 len 14] and arg3 > -1 / ext_call.return_data[50 len 14]:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[50 len 14]:
                                revert with 'NH{q', 18
                            if ext_call.return_data[50 len 14] * arg3 / ext_call.return_data[50 len 14] != arg3:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not ext_call.return_data[50 len 14] * arg3:
                                if arg3 > ext_call.return_data[18 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[18 len 14] < arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[18 len 14] - arg3 and 997 > -1 / ext_call.return_data[18 len 14] - arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[18 len 14]) - (997 * arg3) / ext_call.return_data[18 len 14] - arg3 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                    revert with 'NH{q', 18
                                if 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3) > -2:
                                    revert with 'NH{q', 17
                                if (0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3)) + 1 < 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    if not cd[(arg4 + 132)]:
                                        mem[(10 * ceil32(return_data.size)) + 474] = 2
                                        mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                        mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                        mem[(10 * ceil32(return_data.size)) + 638] = 160
                                        mem[(10 * ceil32(return_data.size)) + 734] = 2
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + 766
                                        t = (10 * ceil32(return_data.size)) + 506
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                        mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                        require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                        call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + 570
                                        require return_data.size >= 32
                                        _7365 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                        _7557 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                        if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                            revert with 'NH{q', 65
                                        if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0:
                                            revert with 'NH{q', 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                        mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                        require return_data.size >= _7365 + (32 * _7557) + 32
                                        mem[(11 * ceil32(return_data.size)) + 602 len 32 * _7557] = mem[(10 * ceil32(return_data.size)) + _7365 + 602 len 32 * _7557]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10994 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10994] == bool(mem[_10994])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11762 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _11954 = mem[_11762]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _11954
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _11954
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _12530 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_12530] == bool(mem[_12530])
                                    else:
                                        mem[(10 * ceil32(return_data.size)) + 474] = 3
                                        mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(10 * ceil32(return_data.size)) + 538] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                        mem[(10 * ceil32(return_data.size)) + 570] = address(ext_call.return_data[0])
                                        mem[(10 * ceil32(return_data.size)) + 602] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + 606] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        mem[(10 * ceil32(return_data.size)) + 638] = ext_call.return_data[0]
                                        mem[(10 * ceil32(return_data.size)) + 670] = 160
                                        mem[(10 * ceil32(return_data.size)) + 766] = 3
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + 798
                                        t = (10 * ceil32(return_data.size)) + 506
                                        while idx < 3:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + 702] = this.address
                                        mem[(10 * ceil32(return_data.size)) + 734] = block.timestamp
                                        require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                        call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=3, data=mem[(10 * ceil32(return_data.size)) + 798 len 96]), address(this.address), block.timestamp
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + 602 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + 602
                                        require return_data.size >= 32
                                        _7366 = mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 633 < (10 * ceil32(return_data.size)) + return_data.size + 602
                                        _7558 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 602]
                                        if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 602] > test266151307():
                                            revert with 'NH{q', 65
                                        if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 602]) + 603 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 602]) + 1 < 0:
                                            revert with 'NH{q', 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 602]) + 603
                                        mem[(11 * ceil32(return_data.size)) + 602] = _7558
                                        require return_data.size >= _7366 + (32 * _7558) + 32
                                        mem[(11 * ceil32(return_data.size)) + 634 len 32 * _7558] = mem[(10 * ceil32(return_data.size)) + _7366 + 634 len 32 * _7558]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11090 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_11090] == bool(mem[_11090])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11858 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _12090 = mem[_11858]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _12090
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _12090
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _12626 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_12626] == bool(mem[_12626])
                            else:
                                if ext_call.return_data[50 len 14] * arg3 and 1000 > -1 / ext_call.return_data[50 len 14] * arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] * arg3:
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[50 len 14] * arg3 / ext_call.return_data[50 len 14] * arg3 != 1000:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if arg3 > ext_call.return_data[18 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[18 len 14] < arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[18 len 14] - arg3 and 997 > -1 / ext_call.return_data[18 len 14] - arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[18 len 14]) - (997 * arg3) / ext_call.return_data[18 len 14] - arg3 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[50 len 14] * arg3 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3) > -2:
                                    revert with 'NH{q', 17
                                if (1000 * ext_call.return_data[50 len 14] * arg3 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3)) + 1 < 1000 * ext_call.return_data[50 len 14] * arg3 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    if not cd[(arg4 + 132)]:
                                        mem[(10 * ceil32(return_data.size)) + 474] = 2
                                        mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                        mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + 574] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                        mem[(10 * ceil32(return_data.size)) + 638] = 160
                                        mem[(10 * ceil32(return_data.size)) + 734] = 2
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + 766
                                        t = (10 * ceil32(return_data.size)) + 506
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                        mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                        require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                        call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + 570
                                        require return_data.size >= 32
                                        _7363 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                        _7555 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                        if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                            revert with 'NH{q', 65
                                        if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0:
                                            revert with 'NH{q', 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                        mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                        require return_data.size >= _7363 + (32 * _7555) + 32
                                        mem[(11 * ceil32(return_data.size)) + 602 len 32 * _7555] = mem[(10 * ceil32(return_data.size)) + _7363 + 602 len 32 * _7555]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10993 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10993] == bool(mem[_10993])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11761 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _11953 = mem[_11761]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _11953
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _11953
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _12529 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_12529] == bool(mem[_12529])
                                    else:
                                        mem[(10 * ceil32(return_data.size)) + 474] = 3
                                        mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(10 * ceil32(return_data.size)) + 538] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                        mem[(10 * ceil32(return_data.size)) + 570] = address(ext_call.return_data[0])
                                        mem[(10 * ceil32(return_data.size)) + 602] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + 606] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        mem[(10 * ceil32(return_data.size)) + 638] = ext_call.return_data[0]
                                        mem[(10 * ceil32(return_data.size)) + 670] = 160
                                        mem[(10 * ceil32(return_data.size)) + 766] = 3
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + 798
                                        t = (10 * ceil32(return_data.size)) + 506
                                        while idx < 3:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + 702] = this.address
                                        mem[(10 * ceil32(return_data.size)) + 734] = block.timestamp
                                        require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                        call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=3, data=mem[(10 * ceil32(return_data.size)) + 798 len 96]), address(this.address), block.timestamp
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + 602 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + 602
                                        require return_data.size >= 32
                                        _7364 = mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 633 < (10 * ceil32(return_data.size)) + return_data.size + 602
                                        _7556 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 602]
                                        if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 602] > test266151307():
                                            revert with 'NH{q', 65
                                        if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 602]) + 603 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 602]) + 1 < 0:
                                            revert with 'NH{q', 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 602]) + 603
                                        mem[(11 * ceil32(return_data.size)) + 602] = _7556
                                        require return_data.size >= _7364 + (32 * _7556) + 32
                                        mem[(11 * ceil32(return_data.size)) + 634 len 32 * _7556] = mem[(10 * ceil32(return_data.size)) + _7364 + 634 len 32 * _7556]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11089 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_11089] == bool(mem[_11089])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11857 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _12087 = mem[_11857]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _12087
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _12087
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _12625 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_12625] == bool(mem[_12625])
                    else:
                        if ext_call.return_data[18 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 39
                            mem[(8 * ceil32(return_data.size)) + 542] = 'PangolinLibrary: INSUFFICIENT_LI'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'QUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if ext_call.return_data[50 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 39
                            mem[(8 * ceil32(return_data.size)) + 542] = 'PangolinLibrary: INSUFFICIENT_LI'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'QUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if not ext_call.return_data[18 len 14]:
                            if arg3 > ext_call.return_data[50 len 14]:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 30
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if ext_call.return_data[50 len 14] < arg3:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[50 len 14] - arg3:
                                revert with 'NH{q', 18
                            if ext_call.return_data[50 len 14] - arg3 and 997 > -1 / ext_call.return_data[50 len 14] - arg3:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[50 len 14] - arg3:
                                revert with 'NH{q', 18
                            if (997 * ext_call.return_data[50 len 14]) - (997 * arg3) / ext_call.return_data[50 len 14] - arg3 != 997:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                revert with 'NH{q', 18
                            if 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3) > -2:
                                revert with 'NH{q', 17
                            if (0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3)) + 1 < 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 27
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            else:
                                mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                if not cd[(arg4 + 132)]:
                                    mem[(10 * ceil32(return_data.size)) + 474] = 2
                                    mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                    mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 638] = 160
                                    mem[(10 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 766
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                    call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _7373 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                    _7565 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                    mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                    require return_data.size >= _7373 + (32 * _7565) + 32
                                    mem[(11 * ceil32(return_data.size)) + 602 len 32 * _7565] = mem[(10 * ceil32(return_data.size)) + _7373 + 602 len 32 * _7565]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _10998 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_10998] == bool(mem[_10998])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _11766 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _11958 = mem[_11766]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _11958
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _11958
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _12534 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_12534] == bool(mem[_12534])
                                else:
                                    mem[(10 * ceil32(return_data.size)) + 474] = 3
                                    mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                    mem[(10 * ceil32(return_data.size)) + 538] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                    mem[(10 * ceil32(return_data.size)) + 570] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 602] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 606] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 638] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 670] = 160
                                    mem[(10 * ceil32(return_data.size)) + 766] = 3
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 798
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 3:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 702] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 734] = block.timestamp
                                    require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                    call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=3, data=mem[(10 * ceil32(return_data.size)) + 798 len 96]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 602 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 602
                                    require return_data.size >= 32
                                    _7374 = mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 633 < (10 * ceil32(return_data.size)) + return_data.size + 602
                                    _7566 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 602]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 602] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 602]) + 603 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 602]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 602]) + 603
                                    mem[(11 * ceil32(return_data.size)) + 602] = _7566
                                    require return_data.size >= _7374 + (32 * _7566) + 32
                                    mem[(11 * ceil32(return_data.size)) + 634 len 32 * _7566] = mem[(10 * ceil32(return_data.size)) + _7374 + 634 len 32 * _7566]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _11094 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_11094] == bool(mem[_11094])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _11862 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _12102 = mem[_11862]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _12102
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _12102
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _12630 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_12630] == bool(mem[_12630])
                        else:
                            if ext_call.return_data[18 len 14] and arg3 > -1 / ext_call.return_data[18 len 14]:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[18 len 14]:
                                revert with 'NH{q', 18
                            if ext_call.return_data[18 len 14] * arg3 / ext_call.return_data[18 len 14] != arg3:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not ext_call.return_data[18 len 14] * arg3:
                                if arg3 > ext_call.return_data[50 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[50 len 14] < arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[50 len 14] - arg3 and 997 > -1 / ext_call.return_data[50 len 14] - arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[50 len 14]) - (997 * arg3) / ext_call.return_data[50 len 14] - arg3 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                    revert with 'NH{q', 18
                                if 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3) > -2:
                                    revert with 'NH{q', 17
                                if (0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3)) + 1 < 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    if not cd[(arg4 + 132)]:
                                        mem[(10 * ceil32(return_data.size)) + 474] = 2
                                        mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                        mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                        mem[(10 * ceil32(return_data.size)) + 638] = 160
                                        mem[(10 * ceil32(return_data.size)) + 734] = 2
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + 766
                                        t = (10 * ceil32(return_data.size)) + 506
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                        mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                        require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                        call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + 570
                                        require return_data.size >= 32
                                        _7371 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                        _7563 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                        if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                            revert with 'NH{q', 65
                                        if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0:
                                            revert with 'NH{q', 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                        mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                        require return_data.size >= _7371 + (32 * _7563) + 32
                                        mem[(11 * ceil32(return_data.size)) + 602 len 32 * _7563] = mem[(10 * ceil32(return_data.size)) + _7371 + 602 len 32 * _7563]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10997 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10997] == bool(mem[_10997])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11765 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _11957 = mem[_11765]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _11957
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _11957
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _12533 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_12533] == bool(mem[_12533])
                                    else:
                                        mem[(10 * ceil32(return_data.size)) + 474] = 3
                                        mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(10 * ceil32(return_data.size)) + 538] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                        mem[(10 * ceil32(return_data.size)) + 570] = address(ext_call.return_data[0])
                                        mem[(10 * ceil32(return_data.size)) + 602] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + 606] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        mem[(10 * ceil32(return_data.size)) + 638] = ext_call.return_data[0]
                                        mem[(10 * ceil32(return_data.size)) + 670] = 160
                                        mem[(10 * ceil32(return_data.size)) + 766] = 3
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + 798
                                        t = (10 * ceil32(return_data.size)) + 506
                                        while idx < 3:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + 702] = this.address
                                        mem[(10 * ceil32(return_data.size)) + 734] = block.timestamp
                                        require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                        call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=3, data=mem[(10 * ceil32(return_data.size)) + 798 len 96]), address(this.address), block.timestamp
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + 602 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + 602
                                        require return_data.size >= 32
                                        _7372 = mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 633 < (10 * ceil32(return_data.size)) + return_data.size + 602
                                        _7564 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 602]
                                        if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 602] > test266151307():
                                            revert with 'NH{q', 65
                                        if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 602]) + 603 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 602]) + 1 < 0:
                                            revert with 'NH{q', 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 602]) + 603
                                        mem[(11 * ceil32(return_data.size)) + 602] = _7564
                                        require return_data.size >= _7372 + (32 * _7564) + 32
                                        mem[(11 * ceil32(return_data.size)) + 634 len 32 * _7564] = mem[(10 * ceil32(return_data.size)) + _7372 + 634 len 32 * _7564]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11093 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_11093] == bool(mem[_11093])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11861 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _12099 = mem[_11861]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _12099
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _12099
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _12629 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_12629] == bool(mem[_12629])
                            else:
                                if ext_call.return_data[18 len 14] * arg3 and 1000 > -1 / ext_call.return_data[18 len 14] * arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] * arg3:
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[18 len 14] * arg3 / ext_call.return_data[18 len 14] * arg3 != 1000:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if arg3 > ext_call.return_data[50 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[50 len 14] < arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[50 len 14] - arg3 and 997 > -1 / ext_call.return_data[50 len 14] - arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[50 len 14]) - (997 * arg3) / ext_call.return_data[50 len 14] - arg3 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[18 len 14] * arg3 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3) > -2:
                                    revert with 'NH{q', 17
                                if (1000 * ext_call.return_data[18 len 14] * arg3 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3)) + 1 < 1000 * ext_call.return_data[18 len 14] * arg3 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    if not cd[(arg4 + 132)]:
                                        mem[(10 * ceil32(return_data.size)) + 474] = 2
                                        mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                        mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + 574] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                        mem[(10 * ceil32(return_data.size)) + 638] = 160
                                        mem[(10 * ceil32(return_data.size)) + 734] = 2
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + 766
                                        t = (10 * ceil32(return_data.size)) + 506
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                        mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                        require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                        call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + 570
                                        require return_data.size >= 32
                                        _7369 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                        _7561 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                        if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                            revert with 'NH{q', 65
                                        if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0:
                                            revert with 'NH{q', 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                        mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                        require return_data.size >= _7369 + (32 * _7561) + 32
                                        mem[(11 * ceil32(return_data.size)) + 602 len 32 * _7561] = mem[(10 * ceil32(return_data.size)) + _7369 + 602 len 32 * _7561]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10996 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10996] == bool(mem[_10996])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11764 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _11956 = mem[_11764]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _11956
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _11956
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _12532 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_12532] == bool(mem[_12532])
                                    else:
                                        mem[(10 * ceil32(return_data.size)) + 474] = 3
                                        mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(10 * ceil32(return_data.size)) + 538] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                        mem[(10 * ceil32(return_data.size)) + 570] = address(ext_call.return_data[0])
                                        mem[(10 * ceil32(return_data.size)) + 602] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + 606] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        mem[(10 * ceil32(return_data.size)) + 638] = ext_call.return_data[0]
                                        mem[(10 * ceil32(return_data.size)) + 670] = 160
                                        mem[(10 * ceil32(return_data.size)) + 766] = 3
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + 798
                                        t = (10 * ceil32(return_data.size)) + 506
                                        while idx < 3:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + 702] = this.address
                                        mem[(10 * ceil32(return_data.size)) + 734] = block.timestamp
                                        require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                        call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=3, data=mem[(10 * ceil32(return_data.size)) + 798 len 96]), address(this.address), block.timestamp
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + 602 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + 602
                                        require return_data.size >= 32
                                        _7370 = mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 633 < (10 * ceil32(return_data.size)) + return_data.size + 602
                                        _7562 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 602]
                                        if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 602] > test266151307():
                                            revert with 'NH{q', 65
                                        if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 602]) + 603 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 602]) + 1 < 0:
                                            revert with 'NH{q', 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 602]) + 603
                                        mem[(11 * ceil32(return_data.size)) + 602] = _7562
                                        require return_data.size >= _7370 + (32 * _7562) + 32
                                        mem[(11 * ceil32(return_data.size)) + 634 len 32 * _7562] = mem[(10 * ceil32(return_data.size)) + _7370 + 634 len 32 * _7562]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11092 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_11092] == bool(mem[_11092])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11860 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _12096 = mem[_11860]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _12096
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _12096
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _12628 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_12628] == bool(mem[_12628])
        else:
            if address(ext_call.return_data[0]) < address(ext_call.return_data[0]):
                if address(ext_call.return_data[0]) < address(ext_call.return_data[0]):
                    if address(ext_call.return_data[0]) == address(ext_call.return_data[0]):
                        if ext_call.return_data[50 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 39
                            mem[(8 * ceil32(return_data.size)) + 542] = 'PangolinLibrary: INSUFFICIENT_LI'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'QUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if ext_call.return_data[18 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 39
                            mem[(8 * ceil32(return_data.size)) + 542] = 'PangolinLibrary: INSUFFICIENT_LI'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'QUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if not ext_call.return_data[50 len 14]:
                            if arg3 > ext_call.return_data[18 len 14]:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 30
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if ext_call.return_data[18 len 14] < arg3:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[18 len 14] - arg3:
                                revert with 'NH{q', 18
                            if ext_call.return_data[18 len 14] - arg3 and 997 > -1 / ext_call.return_data[18 len 14] - arg3:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[18 len 14] - arg3:
                                revert with 'NH{q', 18
                            if (997 * ext_call.return_data[18 len 14]) - (997 * arg3) / ext_call.return_data[18 len 14] - arg3 != 997:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                revert with 'NH{q', 18
                            if 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3) > -2:
                                revert with 'NH{q', 17
                            if (0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3)) + 1 < 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 27
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            else:
                                mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                if not cd[(arg4 + 132)]:
                                    mem[(10 * ceil32(return_data.size)) + 474] = 2
                                    mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                    mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 638] = 160
                                    mem[(10 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 766
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                    call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _7379 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                    _7571 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                    mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                    require return_data.size >= _7379 + (32 * _7571) + 32
                                    mem[(11 * ceil32(return_data.size)) + 602 len 32 * _7571] = mem[(10 * ceil32(return_data.size)) + _7379 + 602 len 32 * _7571]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _11001 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_11001] == bool(mem[_11001])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _11769 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _11961 = mem[_11769]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _11961
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _11961
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _12537 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_12537] == bool(mem[_12537])
                                else:
                                    mem[(10 * ceil32(return_data.size)) + 474] = 3
                                    mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                    mem[(10 * ceil32(return_data.size)) + 538] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                    mem[(10 * ceil32(return_data.size)) + 570] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 602] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 606] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 638] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 670] = 160
                                    mem[(10 * ceil32(return_data.size)) + 766] = 3
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 798
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 3:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 702] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 734] = block.timestamp
                                    require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                    call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=3, data=mem[(10 * ceil32(return_data.size)) + 798 len 96]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 602 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 602
                                    require return_data.size >= 32
                                    _7380 = mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 633 < (10 * ceil32(return_data.size)) + return_data.size + 602
                                    _7572 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 602]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 602] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 602]) + 603 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 602]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 602]) + 603
                                    mem[(11 * ceil32(return_data.size)) + 602] = _7572
                                    require return_data.size >= _7380 + (32 * _7572) + 32
                                    mem[(11 * ceil32(return_data.size)) + 634 len 32 * _7572] = mem[(10 * ceil32(return_data.size)) + _7380 + 634 len 32 * _7572]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _11097 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_11097] == bool(mem[_11097])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _11865 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _12111 = mem[_11865]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _12111
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _12111
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _12633 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_12633] == bool(mem[_12633])
                        else:
                            if ext_call.return_data[50 len 14] and arg3 > -1 / ext_call.return_data[50 len 14]:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[50 len 14]:
                                revert with 'NH{q', 18
                            if ext_call.return_data[50 len 14] * arg3 / ext_call.return_data[50 len 14] != arg3:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not ext_call.return_data[50 len 14] * arg3:
                                if arg3 > ext_call.return_data[18 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[18 len 14] < arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[18 len 14] - arg3 and 997 > -1 / ext_call.return_data[18 len 14] - arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[18 len 14]) - (997 * arg3) / ext_call.return_data[18 len 14] - arg3 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                    revert with 'NH{q', 18
                                if 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3) > -2:
                                    revert with 'NH{q', 17
                                if (0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3)) + 1 < 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    if not cd[(arg4 + 132)]:
                                        mem[(10 * ceil32(return_data.size)) + 474] = 2
                                        mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                        mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                        mem[(10 * ceil32(return_data.size)) + 638] = 160
                                        mem[(10 * ceil32(return_data.size)) + 734] = 2
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + 766
                                        t = (10 * ceil32(return_data.size)) + 506
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                        mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                        require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                        call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + 570
                                        require return_data.size >= 32
                                        _7377 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                        _7569 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                        if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                            revert with 'NH{q', 65
                                        if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0:
                                            revert with 'NH{q', 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                        mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                        require return_data.size >= _7377 + (32 * _7569) + 32
                                        mem[(11 * ceil32(return_data.size)) + 602 len 32 * _7569] = mem[(10 * ceil32(return_data.size)) + _7377 + 602 len 32 * _7569]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11000 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_11000] == bool(mem[_11000])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11768 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _11960 = mem[_11768]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _11960
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _11960
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _12536 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_12536] == bool(mem[_12536])
                                    else:
                                        mem[(10 * ceil32(return_data.size)) + 474] = 3
                                        mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(10 * ceil32(return_data.size)) + 538] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                        mem[(10 * ceil32(return_data.size)) + 570] = address(ext_call.return_data[0])
                                        mem[(10 * ceil32(return_data.size)) + 602] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + 606] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        mem[(10 * ceil32(return_data.size)) + 638] = ext_call.return_data[0]
                                        mem[(10 * ceil32(return_data.size)) + 670] = 160
                                        mem[(10 * ceil32(return_data.size)) + 766] = 3
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + 798
                                        t = (10 * ceil32(return_data.size)) + 506
                                        while idx < 3:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + 702] = this.address
                                        mem[(10 * ceil32(return_data.size)) + 734] = block.timestamp
                                        require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                        call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=3, data=mem[(10 * ceil32(return_data.size)) + 798 len 96]), address(this.address), block.timestamp
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + 602 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + 602
                                        require return_data.size >= 32
                                        _7378 = mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 633 < (10 * ceil32(return_data.size)) + return_data.size + 602
                                        _7570 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 602]
                                        if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 602] > test266151307():
                                            revert with 'NH{q', 65
                                        if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 602]) + 603 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 602]) + 1 < 0:
                                            revert with 'NH{q', 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 602]) + 603
                                        mem[(11 * ceil32(return_data.size)) + 602] = _7570
                                        require return_data.size >= _7378 + (32 * _7570) + 32
                                        mem[(11 * ceil32(return_data.size)) + 634 len 32 * _7570] = mem[(10 * ceil32(return_data.size)) + _7378 + 634 len 32 * _7570]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11096 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_11096] == bool(mem[_11096])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11864 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _12108 = mem[_11864]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _12108
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _12108
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _12632 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_12632] == bool(mem[_12632])
                            else:
                                if ext_call.return_data[50 len 14] * arg3 and 1000 > -1 / ext_call.return_data[50 len 14] * arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] * arg3:
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[50 len 14] * arg3 / ext_call.return_data[50 len 14] * arg3 != 1000:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if arg3 > ext_call.return_data[18 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[18 len 14] < arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[18 len 14] - arg3 and 997 > -1 / ext_call.return_data[18 len 14] - arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[18 len 14]) - (997 * arg3) / ext_call.return_data[18 len 14] - arg3 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[50 len 14] * arg3 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3) > -2:
                                    revert with 'NH{q', 17
                                if (1000 * ext_call.return_data[50 len 14] * arg3 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3)) + 1 < 1000 * ext_call.return_data[50 len 14] * arg3 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    if not cd[(arg4 + 132)]:
                                        mem[(10 * ceil32(return_data.size)) + 474] = 2
                                        mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                        mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + 574] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                        mem[(10 * ceil32(return_data.size)) + 638] = 160
                                        mem[(10 * ceil32(return_data.size)) + 734] = 2
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + 766
                                        t = (10 * ceil32(return_data.size)) + 506
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                        mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                        require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                        call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + 570
                                        require return_data.size >= 32
                                        _7375 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                        _7567 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                        if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                            revert with 'NH{q', 65
                                        if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0:
                                            revert with 'NH{q', 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                        mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                        require return_data.size >= _7375 + (32 * _7567) + 32
                                        mem[(11 * ceil32(return_data.size)) + 602 len 32 * _7567] = mem[(10 * ceil32(return_data.size)) + _7375 + 602 len 32 * _7567]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10999 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10999] == bool(mem[_10999])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11767 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _11959 = mem[_11767]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _11959
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _11959
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _12535 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_12535] == bool(mem[_12535])
                                    else:
                                        mem[(10 * ceil32(return_data.size)) + 474] = 3
                                        mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(10 * ceil32(return_data.size)) + 538] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                        mem[(10 * ceil32(return_data.size)) + 570] = address(ext_call.return_data[0])
                                        mem[(10 * ceil32(return_data.size)) + 602] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + 606] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        mem[(10 * ceil32(return_data.size)) + 638] = ext_call.return_data[0]
                                        mem[(10 * ceil32(return_data.size)) + 670] = 160
                                        mem[(10 * ceil32(return_data.size)) + 766] = 3
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + 798
                                        t = (10 * ceil32(return_data.size)) + 506
                                        while idx < 3:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + 702] = this.address
                                        mem[(10 * ceil32(return_data.size)) + 734] = block.timestamp
                                        require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                        call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=3, data=mem[(10 * ceil32(return_data.size)) + 798 len 96]), address(this.address), block.timestamp
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + 602 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + 602
                                        require return_data.size >= 32
                                        _7376 = mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 633 < (10 * ceil32(return_data.size)) + return_data.size + 602
                                        _7568 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 602]
                                        if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 602] > test266151307():
                                            revert with 'NH{q', 65
                                        if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 602]) + 603 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 602]) + 1 < 0:
                                            revert with 'NH{q', 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 602]) + 603
                                        mem[(11 * ceil32(return_data.size)) + 602] = _7568
                                        require return_data.size >= _7376 + (32 * _7568) + 32
                                        mem[(11 * ceil32(return_data.size)) + 634 len 32 * _7568] = mem[(10 * ceil32(return_data.size)) + _7376 + 634 len 32 * _7568]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11095 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_11095] == bool(mem[_11095])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11863 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _12105 = mem[_11863]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _12105
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _12105
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _12631 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_12631] == bool(mem[_12631])
                    else:
                        if ext_call.return_data[18 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 39
                            mem[(8 * ceil32(return_data.size)) + 542] = 'PangolinLibrary: INSUFFICIENT_LI'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'QUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if ext_call.return_data[50 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 39
                            mem[(8 * ceil32(return_data.size)) + 542] = 'PangolinLibrary: INSUFFICIENT_LI'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'QUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if not ext_call.return_data[18 len 14]:
                            if arg3 > ext_call.return_data[50 len 14]:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 30
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if ext_call.return_data[50 len 14] < arg3:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[50 len 14] - arg3:
                                revert with 'NH{q', 18
                            if ext_call.return_data[50 len 14] - arg3 and 997 > -1 / ext_call.return_data[50 len 14] - arg3:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[50 len 14] - arg3:
                                revert with 'NH{q', 18
                            if (997 * ext_call.return_data[50 len 14]) - (997 * arg3) / ext_call.return_data[50 len 14] - arg3 != 997:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                revert with 'NH{q', 18
                            if 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3) > -2:
                                revert with 'NH{q', 17
                            if (0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3)) + 1 < 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 27
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            else:
                                mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                if not cd[(arg4 + 132)]:
                                    mem[(10 * ceil32(return_data.size)) + 474] = 2
                                    mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                    mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 638] = 160
                                    mem[(10 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 766
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                    call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _7385 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                    _7577 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                    mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                    require return_data.size >= _7385 + (32 * _7577) + 32
                                    mem[(11 * ceil32(return_data.size)) + 602 len 32 * _7577] = mem[(10 * ceil32(return_data.size)) + _7385 + 602 len 32 * _7577]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _11004 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_11004] == bool(mem[_11004])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _11772 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _11964 = mem[_11772]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _11964
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _11964
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _12540 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_12540] == bool(mem[_12540])
                                else:
                                    mem[(10 * ceil32(return_data.size)) + 474] = 3
                                    mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                    mem[(10 * ceil32(return_data.size)) + 538] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                    mem[(10 * ceil32(return_data.size)) + 570] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 602] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 606] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 638] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 670] = 160
                                    mem[(10 * ceil32(return_data.size)) + 766] = 3
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 798
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 3:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 702] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 734] = block.timestamp
                                    require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                    call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=3, data=mem[(10 * ceil32(return_data.size)) + 798 len 96]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 602 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 602
                                    require return_data.size >= 32
                                    _7386 = mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 633 < (10 * ceil32(return_data.size)) + return_data.size + 602
                                    _7578 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 602]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 602] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 602]) + 603 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 602]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 602]) + 603
                                    mem[(11 * ceil32(return_data.size)) + 602] = _7578
                                    require return_data.size >= _7386 + (32 * _7578) + 32
                                    mem[(11 * ceil32(return_data.size)) + 634 len 32 * _7578] = mem[(10 * ceil32(return_data.size)) + _7386 + 634 len 32 * _7578]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _11100 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_11100] == bool(mem[_11100])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _11868 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _12120 = mem[_11868]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _12120
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _12120
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _12636 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_12636] == bool(mem[_12636])
                        else:
                            if ext_call.return_data[18 len 14] and arg3 > -1 / ext_call.return_data[18 len 14]:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[18 len 14]:
                                revert with 'NH{q', 18
                            if ext_call.return_data[18 len 14] * arg3 / ext_call.return_data[18 len 14] != arg3:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not ext_call.return_data[18 len 14] * arg3:
                                if arg3 > ext_call.return_data[50 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[50 len 14] < arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[50 len 14] - arg3 and 997 > -1 / ext_call.return_data[50 len 14] - arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[50 len 14]) - (997 * arg3) / ext_call.return_data[50 len 14] - arg3 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                    revert with 'NH{q', 18
                                if 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3) > -2:
                                    revert with 'NH{q', 17
                                if (0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3)) + 1 < 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    if not cd[(arg4 + 132)]:
                                        mem[(10 * ceil32(return_data.size)) + 474] = 2
                                        mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                        mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                        mem[(10 * ceil32(return_data.size)) + 638] = 160
                                        mem[(10 * ceil32(return_data.size)) + 734] = 2
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + 766
                                        t = (10 * ceil32(return_data.size)) + 506
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                        mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                        require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                        call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + 570
                                        require return_data.size >= 32
                                        _7383 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                        _7575 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                        if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                            revert with 'NH{q', 65
                                        if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0:
                                            revert with 'NH{q', 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                        mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                        require return_data.size >= _7383 + (32 * _7575) + 32
                                        mem[(11 * ceil32(return_data.size)) + 602 len 32 * _7575] = mem[(10 * ceil32(return_data.size)) + _7383 + 602 len 32 * _7575]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11003 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_11003] == bool(mem[_11003])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11771 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _11963 = mem[_11771]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _11963
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _11963
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _12539 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_12539] == bool(mem[_12539])
                                    else:
                                        mem[(10 * ceil32(return_data.size)) + 474] = 3
                                        mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(10 * ceil32(return_data.size)) + 538] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                        mem[(10 * ceil32(return_data.size)) + 570] = address(ext_call.return_data[0])
                                        mem[(10 * ceil32(return_data.size)) + 602] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + 606] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        mem[(10 * ceil32(return_data.size)) + 638] = ext_call.return_data[0]
                                        mem[(10 * ceil32(return_data.size)) + 670] = 160
                                        mem[(10 * ceil32(return_data.size)) + 766] = 3
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + 798
                                        t = (10 * ceil32(return_data.size)) + 506
                                        while idx < 3:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + 702] = this.address
                                        mem[(10 * ceil32(return_data.size)) + 734] = block.timestamp
                                        require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                        call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=3, data=mem[(10 * ceil32(return_data.size)) + 798 len 96]), address(this.address), block.timestamp
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + 602 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + 602
                                        require return_data.size >= 32
                                        _7384 = mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 633 < (10 * ceil32(return_data.size)) + return_data.size + 602
                                        _7576 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 602]
                                        if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 602] > test266151307():
                                            revert with 'NH{q', 65
                                        if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 602]) + 603 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 602]) + 1 < 0:
                                            revert with 'NH{q', 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 602]) + 603
                                        mem[(11 * ceil32(return_data.size)) + 602] = _7576
                                        require return_data.size >= _7384 + (32 * _7576) + 32
                                        mem[(11 * ceil32(return_data.size)) + 634 len 32 * _7576] = mem[(10 * ceil32(return_data.size)) + _7384 + 634 len 32 * _7576]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11099 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_11099] == bool(mem[_11099])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11867 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _12117 = mem[_11867]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _12117
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _12117
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _12635 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_12635] == bool(mem[_12635])
                            else:
                                if ext_call.return_data[18 len 14] * arg3 and 1000 > -1 / ext_call.return_data[18 len 14] * arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] * arg3:
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[18 len 14] * arg3 / ext_call.return_data[18 len 14] * arg3 != 1000:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if arg3 > ext_call.return_data[50 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[50 len 14] < arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[50 len 14] - arg3 and 997 > -1 / ext_call.return_data[50 len 14] - arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[50 len 14]) - (997 * arg3) / ext_call.return_data[50 len 14] - arg3 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[18 len 14] * arg3 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3) > -2:
                                    revert with 'NH{q', 17
                                if (1000 * ext_call.return_data[18 len 14] * arg3 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3)) + 1 < 1000 * ext_call.return_data[18 len 14] * arg3 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    if not cd[(arg4 + 132)]:
                                        mem[(10 * ceil32(return_data.size)) + 474] = 2
                                        mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                        mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + 574] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                        mem[(10 * ceil32(return_data.size)) + 638] = 160
                                        mem[(10 * ceil32(return_data.size)) + 734] = 2
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + 766
                                        t = (10 * ceil32(return_data.size)) + 506
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                        mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                        require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                        call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + 570
                                        require return_data.size >= 32
                                        _7381 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                        _7573 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                        if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                            revert with 'NH{q', 65
                                        if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0:
                                            revert with 'NH{q', 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                        mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                        require return_data.size >= _7381 + (32 * _7573) + 32
                                        mem[(11 * ceil32(return_data.size)) + 602 len 32 * _7573] = mem[(10 * ceil32(return_data.size)) + _7381 + 602 len 32 * _7573]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11002 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_11002] == bool(mem[_11002])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11770 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _11962 = mem[_11770]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _11962
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _11962
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _12538 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_12538] == bool(mem[_12538])
                                    else:
                                        mem[(10 * ceil32(return_data.size)) + 474] = 3
                                        mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(10 * ceil32(return_data.size)) + 538] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                        mem[(10 * ceil32(return_data.size)) + 570] = address(ext_call.return_data[0])
                                        mem[(10 * ceil32(return_data.size)) + 602] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + 606] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        mem[(10 * ceil32(return_data.size)) + 638] = ext_call.return_data[0]
                                        mem[(10 * ceil32(return_data.size)) + 670] = 160
                                        mem[(10 * ceil32(return_data.size)) + 766] = 3
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + 798
                                        t = (10 * ceil32(return_data.size)) + 506
                                        while idx < 3:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + 702] = this.address
                                        mem[(10 * ceil32(return_data.size)) + 734] = block.timestamp
                                        require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                        call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=3, data=mem[(10 * ceil32(return_data.size)) + 798 len 96]), address(this.address), block.timestamp
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + 602 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + 602
                                        require return_data.size >= 32
                                        _7382 = mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 633 < (10 * ceil32(return_data.size)) + return_data.size + 602
                                        _7574 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 602]
                                        if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 602] > test266151307():
                                            revert with 'NH{q', 65
                                        if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 602]) + 603 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 602]) + 1 < 0:
                                            revert with 'NH{q', 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 602]) + 603
                                        mem[(11 * ceil32(return_data.size)) + 602] = _7574
                                        require return_data.size >= _7382 + (32 * _7574) + 32
                                        mem[(11 * ceil32(return_data.size)) + 634 len 32 * _7574] = mem[(10 * ceil32(return_data.size)) + _7382 + 634 len 32 * _7574]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11098 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_11098] == bool(mem[_11098])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11866 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _12114 = mem[_11866]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _12114
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _12114
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _12634 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_12634] == bool(mem[_12634])
                else:
                    if address(ext_call.return_data[0]) == address(ext_call.return_data[0]):
                        if ext_call.return_data[50 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 39
                            mem[(8 * ceil32(return_data.size)) + 542] = 'PangolinLibrary: INSUFFICIENT_LI'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'QUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if ext_call.return_data[18 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 39
                            mem[(8 * ceil32(return_data.size)) + 542] = 'PangolinLibrary: INSUFFICIENT_LI'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'QUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if not ext_call.return_data[50 len 14]:
                            if arg3 > ext_call.return_data[18 len 14]:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 30
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if ext_call.return_data[18 len 14] < arg3:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[18 len 14] - arg3:
                                revert with 'NH{q', 18
                            if ext_call.return_data[18 len 14] - arg3 and 997 > -1 / ext_call.return_data[18 len 14] - arg3:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[18 len 14] - arg3:
                                revert with 'NH{q', 18
                            if (997 * ext_call.return_data[18 len 14]) - (997 * arg3) / ext_call.return_data[18 len 14] - arg3 != 997:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                revert with 'NH{q', 18
                            if 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3) > -2:
                                revert with 'NH{q', 17
                            if (0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3)) + 1 < 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 27
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            else:
                                mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                if not cd[(arg4 + 132)]:
                                    mem[(10 * ceil32(return_data.size)) + 474] = 2
                                    mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                    mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 638] = 160
                                    mem[(10 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 766
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                    call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _7391 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                    _7583 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                    mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                    require return_data.size >= _7391 + (32 * _7583) + 32
                                    mem[(11 * ceil32(return_data.size)) + 602 len 32 * _7583] = mem[(10 * ceil32(return_data.size)) + _7391 + 602 len 32 * _7583]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _11007 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_11007] == bool(mem[_11007])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _11775 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _11967 = mem[_11775]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _11967
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _11967
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _12543 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_12543] == bool(mem[_12543])
                                else:
                                    mem[(10 * ceil32(return_data.size)) + 474] = 3
                                    mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                    mem[(10 * ceil32(return_data.size)) + 538] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                    mem[(10 * ceil32(return_data.size)) + 570] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 602] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 606] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 638] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 670] = 160
                                    mem[(10 * ceil32(return_data.size)) + 766] = 3
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 798
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 3:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 702] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 734] = block.timestamp
                                    require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                    call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=3, data=mem[(10 * ceil32(return_data.size)) + 798 len 96]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 602 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 602
                                    require return_data.size >= 32
                                    _7392 = mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 633 < (10 * ceil32(return_data.size)) + return_data.size + 602
                                    _7584 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 602]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 602] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 602]) + 603 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 602]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 602]) + 603
                                    mem[(11 * ceil32(return_data.size)) + 602] = _7584
                                    require return_data.size >= _7392 + (32 * _7584) + 32
                                    mem[(11 * ceil32(return_data.size)) + 634 len 32 * _7584] = mem[(10 * ceil32(return_data.size)) + _7392 + 634 len 32 * _7584]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _11103 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_11103] == bool(mem[_11103])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _11871 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _12129 = mem[_11871]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _12129
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _12129
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _12639 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_12639] == bool(mem[_12639])
                        else:
                            if ext_call.return_data[50 len 14] and arg3 > -1 / ext_call.return_data[50 len 14]:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[50 len 14]:
                                revert with 'NH{q', 18
                            if ext_call.return_data[50 len 14] * arg3 / ext_call.return_data[50 len 14] != arg3:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not ext_call.return_data[50 len 14] * arg3:
                                if arg3 > ext_call.return_data[18 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[18 len 14] < arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[18 len 14] - arg3 and 997 > -1 / ext_call.return_data[18 len 14] - arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[18 len 14]) - (997 * arg3) / ext_call.return_data[18 len 14] - arg3 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                    revert with 'NH{q', 18
                                if 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3) > -2:
                                    revert with 'NH{q', 17
                                if (0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3)) + 1 < 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    if not cd[(arg4 + 132)]:
                                        mem[(10 * ceil32(return_data.size)) + 474] = 2
                                        mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                        mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                        mem[(10 * ceil32(return_data.size)) + 638] = 160
                                        mem[(10 * ceil32(return_data.size)) + 734] = 2
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + 766
                                        t = (10 * ceil32(return_data.size)) + 506
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                        mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                        require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                        call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + 570
                                        require return_data.size >= 32
                                        _7389 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                        _7581 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                        if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                            revert with 'NH{q', 65
                                        if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0:
                                            revert with 'NH{q', 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                        mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                        require return_data.size >= _7389 + (32 * _7581) + 32
                                        mem[(11 * ceil32(return_data.size)) + 602 len 32 * _7581] = mem[(10 * ceil32(return_data.size)) + _7389 + 602 len 32 * _7581]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11006 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_11006] == bool(mem[_11006])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11774 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _11966 = mem[_11774]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _11966
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _11966
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _12542 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_12542] == bool(mem[_12542])
                                    else:
                                        mem[(10 * ceil32(return_data.size)) + 474] = 3
                                        mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(10 * ceil32(return_data.size)) + 538] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                        mem[(10 * ceil32(return_data.size)) + 570] = address(ext_call.return_data[0])
                                        mem[(10 * ceil32(return_data.size)) + 602] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + 606] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        mem[(10 * ceil32(return_data.size)) + 638] = ext_call.return_data[0]
                                        mem[(10 * ceil32(return_data.size)) + 670] = 160
                                        mem[(10 * ceil32(return_data.size)) + 766] = 3
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + 798
                                        t = (10 * ceil32(return_data.size)) + 506
                                        while idx < 3:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + 702] = this.address
                                        mem[(10 * ceil32(return_data.size)) + 734] = block.timestamp
                                        require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                        call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=3, data=mem[(10 * ceil32(return_data.size)) + 798 len 96]), address(this.address), block.timestamp
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + 602 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + 602
                                        require return_data.size >= 32
                                        _7390 = mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 633 < (10 * ceil32(return_data.size)) + return_data.size + 602
                                        _7582 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 602]
                                        if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 602] > test266151307():
                                            revert with 'NH{q', 65
                                        if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 602]) + 603 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 602]) + 1 < 0:
                                            revert with 'NH{q', 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 602]) + 603
                                        mem[(11 * ceil32(return_data.size)) + 602] = _7582
                                        require return_data.size >= _7390 + (32 * _7582) + 32
                                        mem[(11 * ceil32(return_data.size)) + 634 len 32 * _7582] = mem[(10 * ceil32(return_data.size)) + _7390 + 634 len 32 * _7582]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11102 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_11102] == bool(mem[_11102])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11870 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _12126 = mem[_11870]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _12126
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _12126
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _12638 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_12638] == bool(mem[_12638])
                            else:
                                if ext_call.return_data[50 len 14] * arg3 and 1000 > -1 / ext_call.return_data[50 len 14] * arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] * arg3:
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[50 len 14] * arg3 / ext_call.return_data[50 len 14] * arg3 != 1000:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if arg3 > ext_call.return_data[18 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[18 len 14] < arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[18 len 14] - arg3 and 997 > -1 / ext_call.return_data[18 len 14] - arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[18 len 14]) - (997 * arg3) / ext_call.return_data[18 len 14] - arg3 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[50 len 14] * arg3 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3) > -2:
                                    revert with 'NH{q', 17
                                if (1000 * ext_call.return_data[50 len 14] * arg3 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3)) + 1 < 1000 * ext_call.return_data[50 len 14] * arg3 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    if not cd[(arg4 + 132)]:
                                        mem[(10 * ceil32(return_data.size)) + 474] = 2
                                        mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                        mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + 574] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                        mem[(10 * ceil32(return_data.size)) + 638] = 160
                                        mem[(10 * ceil32(return_data.size)) + 734] = 2
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + 766
                                        t = (10 * ceil32(return_data.size)) + 506
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                        mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                        require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                        call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + 570
                                        require return_data.size >= 32
                                        _7387 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                        _7579 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                        if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                            revert with 'NH{q', 65
                                        if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0:
                                            revert with 'NH{q', 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                        mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                        require return_data.size >= _7387 + (32 * _7579) + 32
                                        mem[(11 * ceil32(return_data.size)) + 602 len 32 * _7579] = mem[(10 * ceil32(return_data.size)) + _7387 + 602 len 32 * _7579]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11005 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_11005] == bool(mem[_11005])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11773 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _11965 = mem[_11773]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _11965
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _11965
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _12541 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_12541] == bool(mem[_12541])
                                    else:
                                        mem[(10 * ceil32(return_data.size)) + 474] = 3
                                        mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(10 * ceil32(return_data.size)) + 538] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                        mem[(10 * ceil32(return_data.size)) + 570] = address(ext_call.return_data[0])
                                        mem[(10 * ceil32(return_data.size)) + 602] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + 606] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        mem[(10 * ceil32(return_data.size)) + 638] = ext_call.return_data[0]
                                        mem[(10 * ceil32(return_data.size)) + 670] = 160
                                        mem[(10 * ceil32(return_data.size)) + 766] = 3
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + 798
                                        t = (10 * ceil32(return_data.size)) + 506
                                        while idx < 3:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + 702] = this.address
                                        mem[(10 * ceil32(return_data.size)) + 734] = block.timestamp
                                        require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                        call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=3, data=mem[(10 * ceil32(return_data.size)) + 798 len 96]), address(this.address), block.timestamp
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + 602 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + 602
                                        require return_data.size >= 32
                                        _7388 = mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 633 < (10 * ceil32(return_data.size)) + return_data.size + 602
                                        _7580 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 602]
                                        if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 602] > test266151307():
                                            revert with 'NH{q', 65
                                        if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 602]) + 603 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 602]) + 1 < 0:
                                            revert with 'NH{q', 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 602]) + 603
                                        mem[(11 * ceil32(return_data.size)) + 602] = _7580
                                        require return_data.size >= _7388 + (32 * _7580) + 32
                                        mem[(11 * ceil32(return_data.size)) + 634 len 32 * _7580] = mem[(10 * ceil32(return_data.size)) + _7388 + 634 len 32 * _7580]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11101 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_11101] == bool(mem[_11101])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11869 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _12123 = mem[_11869]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _12123
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _12123
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _12637 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_12637] == bool(mem[_12637])
                    else:
                        if ext_call.return_data[18 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 39
                            mem[(8 * ceil32(return_data.size)) + 542] = 'PangolinLibrary: INSUFFICIENT_LI'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'QUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if ext_call.return_data[50 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 39
                            mem[(8 * ceil32(return_data.size)) + 542] = 'PangolinLibrary: INSUFFICIENT_LI'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'QUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if not ext_call.return_data[18 len 14]:
                            if arg3 > ext_call.return_data[50 len 14]:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 30
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if ext_call.return_data[50 len 14] < arg3:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[50 len 14] - arg3:
                                revert with 'NH{q', 18
                            if ext_call.return_data[50 len 14] - arg3 and 997 > -1 / ext_call.return_data[50 len 14] - arg3:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[50 len 14] - arg3:
                                revert with 'NH{q', 18
                            if (997 * ext_call.return_data[50 len 14]) - (997 * arg3) / ext_call.return_data[50 len 14] - arg3 != 997:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                revert with 'NH{q', 18
                            if 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3) > -2:
                                revert with 'NH{q', 17
                            if (0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3)) + 1 < 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 27
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            else:
                                mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                if not cd[(arg4 + 132)]:
                                    mem[(10 * ceil32(return_data.size)) + 474] = 2
                                    mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                    mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 638] = 160
                                    mem[(10 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 766
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                    call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _7397 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                    _7589 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                    mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                    require return_data.size >= _7397 + (32 * _7589) + 32
                                    mem[(11 * ceil32(return_data.size)) + 602 len 32 * _7589] = mem[(10 * ceil32(return_data.size)) + _7397 + 602 len 32 * _7589]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _11010 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_11010] == bool(mem[_11010])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _11778 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _11970 = mem[_11778]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _11970
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _11970
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _12546 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_12546] == bool(mem[_12546])
                                else:
                                    mem[(10 * ceil32(return_data.size)) + 474] = 3
                                    mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                    mem[(10 * ceil32(return_data.size)) + 538] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                    mem[(10 * ceil32(return_data.size)) + 570] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 602] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 606] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 638] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 670] = 160
                                    mem[(10 * ceil32(return_data.size)) + 766] = 3
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 798
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 3:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 702] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 734] = block.timestamp
                                    require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                    call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=3, data=mem[(10 * ceil32(return_data.size)) + 798 len 96]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 602 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 602
                                    require return_data.size >= 32
                                    _7398 = mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 633 < (10 * ceil32(return_data.size)) + return_data.size + 602
                                    _7590 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 602]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 602] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 602]) + 603 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 602]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 602]) + 603
                                    mem[(11 * ceil32(return_data.size)) + 602] = _7590
                                    require return_data.size >= _7398 + (32 * _7590) + 32
                                    mem[(11 * ceil32(return_data.size)) + 634 len 32 * _7590] = mem[(10 * ceil32(return_data.size)) + _7398 + 634 len 32 * _7590]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _11106 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_11106] == bool(mem[_11106])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _11874 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _12138 = mem[_11874]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _12138
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _12138
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _12642 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_12642] == bool(mem[_12642])
                        else:
                            if ext_call.return_data[18 len 14] and arg3 > -1 / ext_call.return_data[18 len 14]:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[18 len 14]:
                                revert with 'NH{q', 18
                            if ext_call.return_data[18 len 14] * arg3 / ext_call.return_data[18 len 14] != arg3:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not ext_call.return_data[18 len 14] * arg3:
                                if arg3 > ext_call.return_data[50 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[50 len 14] < arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[50 len 14] - arg3 and 997 > -1 / ext_call.return_data[50 len 14] - arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[50 len 14]) - (997 * arg3) / ext_call.return_data[50 len 14] - arg3 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                    revert with 'NH{q', 18
                                if 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3) > -2:
                                    revert with 'NH{q', 17
                                if (0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3)) + 1 < 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    if not cd[(arg4 + 132)]:
                                        mem[(10 * ceil32(return_data.size)) + 474] = 2
                                        mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                        mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                        mem[(10 * ceil32(return_data.size)) + 638] = 160
                                        mem[(10 * ceil32(return_data.size)) + 734] = 2
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + 766
                                        t = (10 * ceil32(return_data.size)) + 506
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                        mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                        require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                        call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + 570
                                        require return_data.size >= 32
                                        _7395 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                        _7587 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                        if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                            revert with 'NH{q', 65
                                        if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0:
                                            revert with 'NH{q', 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                        mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                        require return_data.size >= _7395 + (32 * _7587) + 32
                                        mem[(11 * ceil32(return_data.size)) + 602 len 32 * _7587] = mem[(10 * ceil32(return_data.size)) + _7395 + 602 len 32 * _7587]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11009 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_11009] == bool(mem[_11009])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11777 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _11969 = mem[_11777]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _11969
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _11969
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _12545 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_12545] == bool(mem[_12545])
                                    else:
                                        mem[(10 * ceil32(return_data.size)) + 474] = 3
                                        mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(10 * ceil32(return_data.size)) + 538] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                        mem[(10 * ceil32(return_data.size)) + 570] = address(ext_call.return_data[0])
                                        mem[(10 * ceil32(return_data.size)) + 602] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + 606] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        mem[(10 * ceil32(return_data.size)) + 638] = ext_call.return_data[0]
                                        mem[(10 * ceil32(return_data.size)) + 670] = 160
                                        mem[(10 * ceil32(return_data.size)) + 766] = 3
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + 798
                                        t = (10 * ceil32(return_data.size)) + 506
                                        while idx < 3:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + 702] = this.address
                                        mem[(10 * ceil32(return_data.size)) + 734] = block.timestamp
                                        require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                        call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=3, data=mem[(10 * ceil32(return_data.size)) + 798 len 96]), address(this.address), block.timestamp
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + 602 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + 602
                                        require return_data.size >= 32
                                        _7396 = mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 633 < (10 * ceil32(return_data.size)) + return_data.size + 602
                                        _7588 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 602]
                                        if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 602] > test266151307():
                                            revert with 'NH{q', 65
                                        if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 602]) + 603 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 602]) + 1 < 0:
                                            revert with 'NH{q', 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 602]) + 603
                                        mem[(11 * ceil32(return_data.size)) + 602] = _7588
                                        require return_data.size >= _7396 + (32 * _7588) + 32
                                        mem[(11 * ceil32(return_data.size)) + 634 len 32 * _7588] = mem[(10 * ceil32(return_data.size)) + _7396 + 634 len 32 * _7588]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11105 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_11105] == bool(mem[_11105])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11873 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _12135 = mem[_11873]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _12135
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _12135
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _12641 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_12641] == bool(mem[_12641])
                            else:
                                if ext_call.return_data[18 len 14] * arg3 and 1000 > -1 / ext_call.return_data[18 len 14] * arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] * arg3:
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[18 len 14] * arg3 / ext_call.return_data[18 len 14] * arg3 != 1000:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if arg3 > ext_call.return_data[50 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[50 len 14] < arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[50 len 14] - arg3 and 997 > -1 / ext_call.return_data[50 len 14] - arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[50 len 14]) - (997 * arg3) / ext_call.return_data[50 len 14] - arg3 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[18 len 14] * arg3 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3) > -2:
                                    revert with 'NH{q', 17
                                if (1000 * ext_call.return_data[18 len 14] * arg3 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3)) + 1 < 1000 * ext_call.return_data[18 len 14] * arg3 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    if not cd[(arg4 + 132)]:
                                        mem[(10 * ceil32(return_data.size)) + 474] = 2
                                        mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                        mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + 574] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                        mem[(10 * ceil32(return_data.size)) + 638] = 160
                                        mem[(10 * ceil32(return_data.size)) + 734] = 2
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + 766
                                        t = (10 * ceil32(return_data.size)) + 506
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                        mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                        require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                        call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + 570
                                        require return_data.size >= 32
                                        _7393 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                        _7585 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                        if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                            revert with 'NH{q', 65
                                        if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0:
                                            revert with 'NH{q', 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                        mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                        require return_data.size >= _7393 + (32 * _7585) + 32
                                        mem[(11 * ceil32(return_data.size)) + 602 len 32 * _7585] = mem[(10 * ceil32(return_data.size)) + _7393 + 602 len 32 * _7585]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11008 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_11008] == bool(mem[_11008])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11776 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _11968 = mem[_11776]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _11968
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _11968
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _12544 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_12544] == bool(mem[_12544])
                                    else:
                                        mem[(10 * ceil32(return_data.size)) + 474] = 3
                                        mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(10 * ceil32(return_data.size)) + 538] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                        mem[(10 * ceil32(return_data.size)) + 570] = address(ext_call.return_data[0])
                                        mem[(10 * ceil32(return_data.size)) + 602] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + 606] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        mem[(10 * ceil32(return_data.size)) + 638] = ext_call.return_data[0]
                                        mem[(10 * ceil32(return_data.size)) + 670] = 160
                                        mem[(10 * ceil32(return_data.size)) + 766] = 3
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + 798
                                        t = (10 * ceil32(return_data.size)) + 506
                                        while idx < 3:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + 702] = this.address
                                        mem[(10 * ceil32(return_data.size)) + 734] = block.timestamp
                                        require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                        call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=3, data=mem[(10 * ceil32(return_data.size)) + 798 len 96]), address(this.address), block.timestamp
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + 602 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + 602
                                        require return_data.size >= 32
                                        _7394 = mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 633 < (10 * ceil32(return_data.size)) + return_data.size + 602
                                        _7586 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 602]
                                        if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 602] > test266151307():
                                            revert with 'NH{q', 65
                                        if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 602]) + 603 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 602]) + 1 < 0:
                                            revert with 'NH{q', 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 602]) + 603
                                        mem[(11 * ceil32(return_data.size)) + 602] = _7586
                                        require return_data.size >= _7394 + (32 * _7586) + 32
                                        mem[(11 * ceil32(return_data.size)) + 634 len 32 * _7586] = mem[(10 * ceil32(return_data.size)) + _7394 + 634 len 32 * _7586]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11104 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_11104] == bool(mem[_11104])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11872 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _12132 = mem[_11872]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _12132
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _12132
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _12640 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_12640] == bool(mem[_12640])
            else:
                if address(ext_call.return_data[0]) < address(ext_call.return_data[0]):
                    if address(ext_call.return_data[0]) == address(ext_call.return_data[0]):
                        if ext_call.return_data[50 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 39
                            mem[(8 * ceil32(return_data.size)) + 542] = 'PangolinLibrary: INSUFFICIENT_LI'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'QUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if ext_call.return_data[18 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 39
                            mem[(8 * ceil32(return_data.size)) + 542] = 'PangolinLibrary: INSUFFICIENT_LI'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'QUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if not ext_call.return_data[50 len 14]:
                            if arg3 > ext_call.return_data[18 len 14]:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 30
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if ext_call.return_data[18 len 14] < arg3:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[18 len 14] - arg3:
                                revert with 'NH{q', 18
                            if ext_call.return_data[18 len 14] - arg3 and 997 > -1 / ext_call.return_data[18 len 14] - arg3:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[18 len 14] - arg3:
                                revert with 'NH{q', 18
                            if (997 * ext_call.return_data[18 len 14]) - (997 * arg3) / ext_call.return_data[18 len 14] - arg3 != 997:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                revert with 'NH{q', 18
                            if 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3) > -2:
                                revert with 'NH{q', 17
                            if (0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3)) + 1 < 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 27
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            else:
                                mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                if not cd[(arg4 + 132)]:
                                    mem[(10 * ceil32(return_data.size)) + 474] = 2
                                    mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                    mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 638] = 160
                                    mem[(10 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 766
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                    call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _7403 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                    _7595 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                    mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                    require return_data.size >= _7403 + (32 * _7595) + 32
                                    mem[(11 * ceil32(return_data.size)) + 602 len 32 * _7595] = mem[(10 * ceil32(return_data.size)) + _7403 + 602 len 32 * _7595]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _11013 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_11013] == bool(mem[_11013])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _11781 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _11973 = mem[_11781]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _11973
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _11973
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _12549 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_12549] == bool(mem[_12549])
                                else:
                                    mem[(10 * ceil32(return_data.size)) + 474] = 3
                                    mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                    mem[(10 * ceil32(return_data.size)) + 538] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                    mem[(10 * ceil32(return_data.size)) + 570] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 602] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 606] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 638] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 670] = 160
                                    mem[(10 * ceil32(return_data.size)) + 766] = 3
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 798
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 3:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 702] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 734] = block.timestamp
                                    require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                    call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=3, data=mem[(10 * ceil32(return_data.size)) + 798 len 96]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 602 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 602
                                    require return_data.size >= 32
                                    _7404 = mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 633 < (10 * ceil32(return_data.size)) + return_data.size + 602
                                    _7596 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 602]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 602] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 602]) + 603 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 602]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 602]) + 603
                                    mem[(11 * ceil32(return_data.size)) + 602] = _7596
                                    require return_data.size >= _7404 + (32 * _7596) + 32
                                    mem[(11 * ceil32(return_data.size)) + 634 len 32 * _7596] = mem[(10 * ceil32(return_data.size)) + _7404 + 634 len 32 * _7596]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _11109 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_11109] == bool(mem[_11109])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _11877 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _12147 = mem[_11877]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _12147
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _12147
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _12645 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_12645] == bool(mem[_12645])
                        else:
                            if ext_call.return_data[50 len 14] and arg3 > -1 / ext_call.return_data[50 len 14]:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[50 len 14]:
                                revert with 'NH{q', 18
                            if ext_call.return_data[50 len 14] * arg3 / ext_call.return_data[50 len 14] != arg3:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not ext_call.return_data[50 len 14] * arg3:
                                if arg3 > ext_call.return_data[18 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[18 len 14] < arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[18 len 14] - arg3 and 997 > -1 / ext_call.return_data[18 len 14] - arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[18 len 14]) - (997 * arg3) / ext_call.return_data[18 len 14] - arg3 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                    revert with 'NH{q', 18
                                if 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3) > -2:
                                    revert with 'NH{q', 17
                                if (0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3)) + 1 < 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    if not cd[(arg4 + 132)]:
                                        mem[(10 * ceil32(return_data.size)) + 474] = 2
                                        mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                        mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                        mem[(10 * ceil32(return_data.size)) + 638] = 160
                                        mem[(10 * ceil32(return_data.size)) + 734] = 2
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + 766
                                        t = (10 * ceil32(return_data.size)) + 506
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                        mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                        require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                        call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + 570
                                        require return_data.size >= 32
                                        _7401 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                        _7593 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                        if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                            revert with 'NH{q', 65
                                        if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0:
                                            revert with 'NH{q', 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                        mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                        require return_data.size >= _7401 + (32 * _7593) + 32
                                        mem[(11 * ceil32(return_data.size)) + 602 len 32 * _7593] = mem[(10 * ceil32(return_data.size)) + _7401 + 602 len 32 * _7593]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11012 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_11012] == bool(mem[_11012])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11780 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _11972 = mem[_11780]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _11972
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _11972
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _12548 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_12548] == bool(mem[_12548])
                                    else:
                                        mem[(10 * ceil32(return_data.size)) + 474] = 3
                                        mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(10 * ceil32(return_data.size)) + 538] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                        mem[(10 * ceil32(return_data.size)) + 570] = address(ext_call.return_data[0])
                                        mem[(10 * ceil32(return_data.size)) + 602] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + 606] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        mem[(10 * ceil32(return_data.size)) + 638] = ext_call.return_data[0]
                                        mem[(10 * ceil32(return_data.size)) + 670] = 160
                                        mem[(10 * ceil32(return_data.size)) + 766] = 3
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + 798
                                        t = (10 * ceil32(return_data.size)) + 506
                                        while idx < 3:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + 702] = this.address
                                        mem[(10 * ceil32(return_data.size)) + 734] = block.timestamp
                                        require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                        call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=3, data=mem[(10 * ceil32(return_data.size)) + 798 len 96]), address(this.address), block.timestamp
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + 602 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + 602
                                        require return_data.size >= 32
                                        _7402 = mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 633 < (10 * ceil32(return_data.size)) + return_data.size + 602
                                        _7594 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 602]
                                        if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 602] > test266151307():
                                            revert with 'NH{q', 65
                                        if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 602]) + 603 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 602]) + 1 < 0:
                                            revert with 'NH{q', 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 602]) + 603
                                        mem[(11 * ceil32(return_data.size)) + 602] = _7594
                                        require return_data.size >= _7402 + (32 * _7594) + 32
                                        mem[(11 * ceil32(return_data.size)) + 634 len 32 * _7594] = mem[(10 * ceil32(return_data.size)) + _7402 + 634 len 32 * _7594]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11108 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_11108] == bool(mem[_11108])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11876 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _12144 = mem[_11876]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _12144
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _12144
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _12644 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_12644] == bool(mem[_12644])
                            else:
                                if ext_call.return_data[50 len 14] * arg3 and 1000 > -1 / ext_call.return_data[50 len 14] * arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] * arg3:
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[50 len 14] * arg3 / ext_call.return_data[50 len 14] * arg3 != 1000:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if arg3 > ext_call.return_data[18 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[18 len 14] < arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[18 len 14] - arg3 and 997 > -1 / ext_call.return_data[18 len 14] - arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[18 len 14]) - (997 * arg3) / ext_call.return_data[18 len 14] - arg3 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[50 len 14] * arg3 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3) > -2:
                                    revert with 'NH{q', 17
                                if (1000 * ext_call.return_data[50 len 14] * arg3 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3)) + 1 < 1000 * ext_call.return_data[50 len 14] * arg3 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    if not cd[(arg4 + 132)]:
                                        mem[(10 * ceil32(return_data.size)) + 474] = 2
                                        mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                        mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + 574] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                        mem[(10 * ceil32(return_data.size)) + 638] = 160
                                        mem[(10 * ceil32(return_data.size)) + 734] = 2
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + 766
                                        t = (10 * ceil32(return_data.size)) + 506
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                        mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                        require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                        call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + 570
                                        require return_data.size >= 32
                                        _7399 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                        _7591 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                        if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                            revert with 'NH{q', 65
                                        if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0:
                                            revert with 'NH{q', 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                        mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                        require return_data.size >= _7399 + (32 * _7591) + 32
                                        mem[(11 * ceil32(return_data.size)) + 602 len 32 * _7591] = mem[(10 * ceil32(return_data.size)) + _7399 + 602 len 32 * _7591]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11011 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_11011] == bool(mem[_11011])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11779 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _11971 = mem[_11779]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _11971
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _11971
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _12547 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_12547] == bool(mem[_12547])
                                    else:
                                        mem[(10 * ceil32(return_data.size)) + 474] = 3
                                        mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(10 * ceil32(return_data.size)) + 538] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                        mem[(10 * ceil32(return_data.size)) + 570] = address(ext_call.return_data[0])
                                        mem[(10 * ceil32(return_data.size)) + 602] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + 606] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        mem[(10 * ceil32(return_data.size)) + 638] = ext_call.return_data[0]
                                        mem[(10 * ceil32(return_data.size)) + 670] = 160
                                        mem[(10 * ceil32(return_data.size)) + 766] = 3
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + 798
                                        t = (10 * ceil32(return_data.size)) + 506
                                        while idx < 3:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + 702] = this.address
                                        mem[(10 * ceil32(return_data.size)) + 734] = block.timestamp
                                        require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                        call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=3, data=mem[(10 * ceil32(return_data.size)) + 798 len 96]), address(this.address), block.timestamp
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + 602 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + 602
                                        require return_data.size >= 32
                                        _7400 = mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 633 < (10 * ceil32(return_data.size)) + return_data.size + 602
                                        _7592 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 602]
                                        if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 602] > test266151307():
                                            revert with 'NH{q', 65
                                        if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 602]) + 603 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 602]) + 1 < 0:
                                            revert with 'NH{q', 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 602]) + 603
                                        mem[(11 * ceil32(return_data.size)) + 602] = _7592
                                        require return_data.size >= _7400 + (32 * _7592) + 32
                                        mem[(11 * ceil32(return_data.size)) + 634 len 32 * _7592] = mem[(10 * ceil32(return_data.size)) + _7400 + 634 len 32 * _7592]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11107 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_11107] == bool(mem[_11107])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11875 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _12141 = mem[_11875]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _12141
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _12141
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _12643 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_12643] == bool(mem[_12643])
                    else:
                        if ext_call.return_data[18 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 39
                            mem[(8 * ceil32(return_data.size)) + 542] = 'PangolinLibrary: INSUFFICIENT_LI'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'QUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if ext_call.return_data[50 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 39
                            mem[(8 * ceil32(return_data.size)) + 542] = 'PangolinLibrary: INSUFFICIENT_LI'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'QUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if not ext_call.return_data[18 len 14]:
                            if arg3 > ext_call.return_data[50 len 14]:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 30
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if ext_call.return_data[50 len 14] < arg3:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[50 len 14] - arg3:
                                revert with 'NH{q', 18
                            if ext_call.return_data[50 len 14] - arg3 and 997 > -1 / ext_call.return_data[50 len 14] - arg3:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[50 len 14] - arg3:
                                revert with 'NH{q', 18
                            if (997 * ext_call.return_data[50 len 14]) - (997 * arg3) / ext_call.return_data[50 len 14] - arg3 != 997:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                revert with 'NH{q', 18
                            if 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3) > -2:
                                revert with 'NH{q', 17
                            if (0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3)) + 1 < 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 27
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            else:
                                mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                if not cd[(arg4 + 132)]:
                                    mem[(10 * ceil32(return_data.size)) + 474] = 2
                                    mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                    mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 638] = 160
                                    mem[(10 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 766
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                    call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _7409 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                    _7601 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                    mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                    require return_data.size >= _7409 + (32 * _7601) + 32
                                    mem[(11 * ceil32(return_data.size)) + 602 len 32 * _7601] = mem[(10 * ceil32(return_data.size)) + _7409 + 602 len 32 * _7601]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _11016 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_11016] == bool(mem[_11016])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _11784 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _11976 = mem[_11784]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _11976
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _11976
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _12552 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_12552] == bool(mem[_12552])
                                else:
                                    mem[(10 * ceil32(return_data.size)) + 474] = 3
                                    mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                    mem[(10 * ceil32(return_data.size)) + 538] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                    mem[(10 * ceil32(return_data.size)) + 570] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 602] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 606] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 638] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 670] = 160
                                    mem[(10 * ceil32(return_data.size)) + 766] = 3
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 798
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 3:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 702] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 734] = block.timestamp
                                    require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                    call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=3, data=mem[(10 * ceil32(return_data.size)) + 798 len 96]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 602 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 602
                                    require return_data.size >= 32
                                    _7410 = mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 633 < (10 * ceil32(return_data.size)) + return_data.size + 602
                                    _7602 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 602]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 602] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 602]) + 603 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 602]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 602]) + 603
                                    mem[(11 * ceil32(return_data.size)) + 602] = _7602
                                    require return_data.size >= _7410 + (32 * _7602) + 32
                                    mem[(11 * ceil32(return_data.size)) + 634 len 32 * _7602] = mem[(10 * ceil32(return_data.size)) + _7410 + 634 len 32 * _7602]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _11112 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_11112] == bool(mem[_11112])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _11880 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _12156 = mem[_11880]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _12156
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _12156
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _12648 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_12648] == bool(mem[_12648])
                        else:
                            if ext_call.return_data[18 len 14] and arg3 > -1 / ext_call.return_data[18 len 14]:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[18 len 14]:
                                revert with 'NH{q', 18
                            if ext_call.return_data[18 len 14] * arg3 / ext_call.return_data[18 len 14] != arg3:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not ext_call.return_data[18 len 14] * arg3:
                                if arg3 > ext_call.return_data[50 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[50 len 14] < arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[50 len 14] - arg3 and 997 > -1 / ext_call.return_data[50 len 14] - arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[50 len 14]) - (997 * arg3) / ext_call.return_data[50 len 14] - arg3 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                    revert with 'NH{q', 18
                                if 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3) > -2:
                                    revert with 'NH{q', 17
                                if (0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3)) + 1 < 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    if not cd[(arg4 + 132)]:
                                        mem[(10 * ceil32(return_data.size)) + 474] = 2
                                        mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                        mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                        mem[(10 * ceil32(return_data.size)) + 638] = 160
                                        mem[(10 * ceil32(return_data.size)) + 734] = 2
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + 766
                                        t = (10 * ceil32(return_data.size)) + 506
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                        mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                        require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                        call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + 570
                                        require return_data.size >= 32
                                        _7407 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                        _7599 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                        if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                            revert with 'NH{q', 65
                                        if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0:
                                            revert with 'NH{q', 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                        mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                        require return_data.size >= _7407 + (32 * _7599) + 32
                                        mem[(11 * ceil32(return_data.size)) + 602 len 32 * _7599] = mem[(10 * ceil32(return_data.size)) + _7407 + 602 len 32 * _7599]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11015 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_11015] == bool(mem[_11015])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11783 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _11975 = mem[_11783]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _11975
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _11975
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _12551 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_12551] == bool(mem[_12551])
                                    else:
                                        mem[(10 * ceil32(return_data.size)) + 474] = 3
                                        mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(10 * ceil32(return_data.size)) + 538] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                        mem[(10 * ceil32(return_data.size)) + 570] = address(ext_call.return_data[0])
                                        mem[(10 * ceil32(return_data.size)) + 602] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + 606] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        mem[(10 * ceil32(return_data.size)) + 638] = ext_call.return_data[0]
                                        mem[(10 * ceil32(return_data.size)) + 670] = 160
                                        mem[(10 * ceil32(return_data.size)) + 766] = 3
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + 798
                                        t = (10 * ceil32(return_data.size)) + 506
                                        while idx < 3:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + 702] = this.address
                                        mem[(10 * ceil32(return_data.size)) + 734] = block.timestamp
                                        require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                        call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=3, data=mem[(10 * ceil32(return_data.size)) + 798 len 96]), address(this.address), block.timestamp
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + 602 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + 602
                                        require return_data.size >= 32
                                        _7408 = mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 633 < (10 * ceil32(return_data.size)) + return_data.size + 602
                                        _7600 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 602]
                                        if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 602] > test266151307():
                                            revert with 'NH{q', 65
                                        if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 602]) + 603 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 602]) + 1 < 0:
                                            revert with 'NH{q', 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 602]) + 603
                                        mem[(11 * ceil32(return_data.size)) + 602] = _7600
                                        require return_data.size >= _7408 + (32 * _7600) + 32
                                        mem[(11 * ceil32(return_data.size)) + 634 len 32 * _7600] = mem[(10 * ceil32(return_data.size)) + _7408 + 634 len 32 * _7600]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11111 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_11111] == bool(mem[_11111])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11879 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _12153 = mem[_11879]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _12153
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _12153
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _12647 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_12647] == bool(mem[_12647])
                            else:
                                if ext_call.return_data[18 len 14] * arg3 and 1000 > -1 / ext_call.return_data[18 len 14] * arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] * arg3:
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[18 len 14] * arg3 / ext_call.return_data[18 len 14] * arg3 != 1000:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if arg3 > ext_call.return_data[50 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[50 len 14] < arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[50 len 14] - arg3 and 997 > -1 / ext_call.return_data[50 len 14] - arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[50 len 14]) - (997 * arg3) / ext_call.return_data[50 len 14] - arg3 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[18 len 14] * arg3 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3) > -2:
                                    revert with 'NH{q', 17
                                if (1000 * ext_call.return_data[18 len 14] * arg3 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3)) + 1 < 1000 * ext_call.return_data[18 len 14] * arg3 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    if not cd[(arg4 + 132)]:
                                        mem[(10 * ceil32(return_data.size)) + 474] = 2
                                        mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                        mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + 574] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                        mem[(10 * ceil32(return_data.size)) + 638] = 160
                                        mem[(10 * ceil32(return_data.size)) + 734] = 2
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + 766
                                        t = (10 * ceil32(return_data.size)) + 506
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                        mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                        require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                        call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + 570
                                        require return_data.size >= 32
                                        _7405 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                        _7597 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                        if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                            revert with 'NH{q', 65
                                        if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0:
                                            revert with 'NH{q', 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                        mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                        require return_data.size >= _7405 + (32 * _7597) + 32
                                        mem[(11 * ceil32(return_data.size)) + 602 len 32 * _7597] = mem[(10 * ceil32(return_data.size)) + _7405 + 602 len 32 * _7597]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11014 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_11014] == bool(mem[_11014])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11782 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _11974 = mem[_11782]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _11974
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _11974
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _12550 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_12550] == bool(mem[_12550])
                                    else:
                                        mem[(10 * ceil32(return_data.size)) + 474] = 3
                                        mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(10 * ceil32(return_data.size)) + 538] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                        mem[(10 * ceil32(return_data.size)) + 570] = address(ext_call.return_data[0])
                                        mem[(10 * ceil32(return_data.size)) + 602] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + 606] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        mem[(10 * ceil32(return_data.size)) + 638] = ext_call.return_data[0]
                                        mem[(10 * ceil32(return_data.size)) + 670] = 160
                                        mem[(10 * ceil32(return_data.size)) + 766] = 3
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + 798
                                        t = (10 * ceil32(return_data.size)) + 506
                                        while idx < 3:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + 702] = this.address
                                        mem[(10 * ceil32(return_data.size)) + 734] = block.timestamp
                                        require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                        call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=3, data=mem[(10 * ceil32(return_data.size)) + 798 len 96]), address(this.address), block.timestamp
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + 602 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + 602
                                        require return_data.size >= 32
                                        _7406 = mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 633 < (10 * ceil32(return_data.size)) + return_data.size + 602
                                        _7598 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 602]
                                        if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 602] > test266151307():
                                            revert with 'NH{q', 65
                                        if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 602]) + 603 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 602]) + 1 < 0:
                                            revert with 'NH{q', 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 602]) + 603
                                        mem[(11 * ceil32(return_data.size)) + 602] = _7598
                                        require return_data.size >= _7406 + (32 * _7598) + 32
                                        mem[(11 * ceil32(return_data.size)) + 634 len 32 * _7598] = mem[(10 * ceil32(return_data.size)) + _7406 + 634 len 32 * _7598]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11110 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_11110] == bool(mem[_11110])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11878 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _12150 = mem[_11878]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _12150
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _12150
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _12646 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_12646] == bool(mem[_12646])
                else:
                    if address(ext_call.return_data[0]) == address(ext_call.return_data[0]):
                        if ext_call.return_data[50 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 39
                            mem[(8 * ceil32(return_data.size)) + 542] = 'PangolinLibrary: INSUFFICIENT_LI'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'QUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if ext_call.return_data[18 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 39
                            mem[(8 * ceil32(return_data.size)) + 542] = 'PangolinLibrary: INSUFFICIENT_LI'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'QUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if not ext_call.return_data[50 len 14]:
                            if arg3 > ext_call.return_data[18 len 14]:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 30
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if ext_call.return_data[18 len 14] < arg3:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[18 len 14] - arg3:
                                revert with 'NH{q', 18
                            if ext_call.return_data[18 len 14] - arg3 and 997 > -1 / ext_call.return_data[18 len 14] - arg3:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[18 len 14] - arg3:
                                revert with 'NH{q', 18
                            if (997 * ext_call.return_data[18 len 14]) - (997 * arg3) / ext_call.return_data[18 len 14] - arg3 != 997:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                revert with 'NH{q', 18
                            if 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3) > -2:
                                revert with 'NH{q', 17
                            if (0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3)) + 1 < 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 27
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            else:
                                mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                if not cd[(arg4 + 132)]:
                                    mem[(10 * ceil32(return_data.size)) + 474] = 2
                                    mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                    mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 638] = 160
                                    mem[(10 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 766
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                    call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _7415 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                    _7607 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                    mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                    require return_data.size >= _7415 + (32 * _7607) + 32
                                    mem[(11 * ceil32(return_data.size)) + 602 len 32 * _7607] = mem[(10 * ceil32(return_data.size)) + _7415 + 602 len 32 * _7607]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _11019 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_11019] == bool(mem[_11019])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _11787 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _11979 = mem[_11787]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _11979
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _11979
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _12555 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_12555] == bool(mem[_12555])
                                else:
                                    mem[(10 * ceil32(return_data.size)) + 474] = 3
                                    mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                    mem[(10 * ceil32(return_data.size)) + 538] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                    mem[(10 * ceil32(return_data.size)) + 570] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 602] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 606] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 638] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 670] = 160
                                    mem[(10 * ceil32(return_data.size)) + 766] = 3
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 798
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 3:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 702] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 734] = block.timestamp
                                    require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                    call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=3, data=mem[(10 * ceil32(return_data.size)) + 798 len 96]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 602 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 602
                                    require return_data.size >= 32
                                    _7416 = mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 633 < (10 * ceil32(return_data.size)) + return_data.size + 602
                                    _7608 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 602]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 602] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 602]) + 603 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 602]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 602]) + 603
                                    mem[(11 * ceil32(return_data.size)) + 602] = _7608
                                    require return_data.size >= _7416 + (32 * _7608) + 32
                                    mem[(11 * ceil32(return_data.size)) + 634 len 32 * _7608] = mem[(10 * ceil32(return_data.size)) + _7416 + 634 len 32 * _7608]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _11115 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_11115] == bool(mem[_11115])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _11883 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _12165 = mem[_11883]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _12165
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _12165
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _12651 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_12651] == bool(mem[_12651])
                        else:
                            if ext_call.return_data[50 len 14] and arg3 > -1 / ext_call.return_data[50 len 14]:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[50 len 14]:
                                revert with 'NH{q', 18
                            if ext_call.return_data[50 len 14] * arg3 / ext_call.return_data[50 len 14] != arg3:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not ext_call.return_data[50 len 14] * arg3:
                                if arg3 > ext_call.return_data[18 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[18 len 14] < arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[18 len 14] - arg3 and 997 > -1 / ext_call.return_data[18 len 14] - arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[18 len 14]) - (997 * arg3) / ext_call.return_data[18 len 14] - arg3 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                    revert with 'NH{q', 18
                                if 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3) > -2:
                                    revert with 'NH{q', 17
                                if (0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3)) + 1 < 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    if not cd[(arg4 + 132)]:
                                        mem[(10 * ceil32(return_data.size)) + 474] = 2
                                        mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                        mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                        mem[(10 * ceil32(return_data.size)) + 638] = 160
                                        mem[(10 * ceil32(return_data.size)) + 734] = 2
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + 766
                                        t = (10 * ceil32(return_data.size)) + 506
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                        mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                        require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                        call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + 570
                                        require return_data.size >= 32
                                        _7413 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                        _7605 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                        if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                            revert with 'NH{q', 65
                                        if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0:
                                            revert with 'NH{q', 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                        mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                        require return_data.size >= _7413 + (32 * _7605) + 32
                                        mem[(11 * ceil32(return_data.size)) + 602 len 32 * _7605] = mem[(10 * ceil32(return_data.size)) + _7413 + 602 len 32 * _7605]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11018 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_11018] == bool(mem[_11018])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11786 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _11978 = mem[_11786]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _11978
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _11978
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _12554 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_12554] == bool(mem[_12554])
                                    else:
                                        mem[(10 * ceil32(return_data.size)) + 474] = 3
                                        mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(10 * ceil32(return_data.size)) + 538] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                        mem[(10 * ceil32(return_data.size)) + 570] = address(ext_call.return_data[0])
                                        mem[(10 * ceil32(return_data.size)) + 602] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + 606] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        mem[(10 * ceil32(return_data.size)) + 638] = ext_call.return_data[0]
                                        mem[(10 * ceil32(return_data.size)) + 670] = 160
                                        mem[(10 * ceil32(return_data.size)) + 766] = 3
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + 798
                                        t = (10 * ceil32(return_data.size)) + 506
                                        while idx < 3:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + 702] = this.address
                                        mem[(10 * ceil32(return_data.size)) + 734] = block.timestamp
                                        require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                        call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=3, data=mem[(10 * ceil32(return_data.size)) + 798 len 96]), address(this.address), block.timestamp
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + 602 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + 602
                                        require return_data.size >= 32
                                        _7414 = mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 633 < (10 * ceil32(return_data.size)) + return_data.size + 602
                                        _7606 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 602]
                                        if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 602] > test266151307():
                                            revert with 'NH{q', 65
                                        if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 602]) + 603 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 602]) + 1 < 0:
                                            revert with 'NH{q', 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 602]) + 603
                                        mem[(11 * ceil32(return_data.size)) + 602] = _7606
                                        require return_data.size >= _7414 + (32 * _7606) + 32
                                        mem[(11 * ceil32(return_data.size)) + 634 len 32 * _7606] = mem[(10 * ceil32(return_data.size)) + _7414 + 634 len 32 * _7606]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11114 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_11114] == bool(mem[_11114])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11882 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _12162 = mem[_11882]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _12162
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _12162
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _12650 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_12650] == bool(mem[_12650])
                            else:
                                if ext_call.return_data[50 len 14] * arg3 and 1000 > -1 / ext_call.return_data[50 len 14] * arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] * arg3:
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[50 len 14] * arg3 / ext_call.return_data[50 len 14] * arg3 != 1000:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if arg3 > ext_call.return_data[18 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[18 len 14] < arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[18 len 14] - arg3 and 997 > -1 / ext_call.return_data[18 len 14] - arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[18 len 14]) - (997 * arg3) / ext_call.return_data[18 len 14] - arg3 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[50 len 14] * arg3 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3) > -2:
                                    revert with 'NH{q', 17
                                if (1000 * ext_call.return_data[50 len 14] * arg3 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3)) + 1 < 1000 * ext_call.return_data[50 len 14] * arg3 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    if not cd[(arg4 + 132)]:
                                        mem[(10 * ceil32(return_data.size)) + 474] = 2
                                        mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                        mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + 574] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                        mem[(10 * ceil32(return_data.size)) + 638] = 160
                                        mem[(10 * ceil32(return_data.size)) + 734] = 2
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + 766
                                        t = (10 * ceil32(return_data.size)) + 506
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                        mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                        require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                        call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + 570
                                        require return_data.size >= 32
                                        _7411 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                        _7603 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                        if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                            revert with 'NH{q', 65
                                        if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0:
                                            revert with 'NH{q', 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                        mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                        require return_data.size >= _7411 + (32 * _7603) + 32
                                        mem[(11 * ceil32(return_data.size)) + 602 len 32 * _7603] = mem[(10 * ceil32(return_data.size)) + _7411 + 602 len 32 * _7603]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11017 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_11017] == bool(mem[_11017])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11785 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _11977 = mem[_11785]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _11977
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _11977
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _12553 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_12553] == bool(mem[_12553])
                                    else:
                                        mem[(10 * ceil32(return_data.size)) + 474] = 3
                                        mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(10 * ceil32(return_data.size)) + 538] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                        mem[(10 * ceil32(return_data.size)) + 570] = address(ext_call.return_data[0])
                                        mem[(10 * ceil32(return_data.size)) + 602] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + 606] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        mem[(10 * ceil32(return_data.size)) + 638] = ext_call.return_data[0]
                                        mem[(10 * ceil32(return_data.size)) + 670] = 160
                                        mem[(10 * ceil32(return_data.size)) + 766] = 3
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + 798
                                        t = (10 * ceil32(return_data.size)) + 506
                                        while idx < 3:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + 702] = this.address
                                        mem[(10 * ceil32(return_data.size)) + 734] = block.timestamp
                                        require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                        call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=3, data=mem[(10 * ceil32(return_data.size)) + 798 len 96]), address(this.address), block.timestamp
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + 602 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + 602
                                        require return_data.size >= 32
                                        _7412 = mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 633 < (10 * ceil32(return_data.size)) + return_data.size + 602
                                        _7604 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 602]
                                        if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 602] > test266151307():
                                            revert with 'NH{q', 65
                                        if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 602]) + 603 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 602]) + 1 < 0:
                                            revert with 'NH{q', 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 602]) + 603
                                        mem[(11 * ceil32(return_data.size)) + 602] = _7604
                                        require return_data.size >= _7412 + (32 * _7604) + 32
                                        mem[(11 * ceil32(return_data.size)) + 634 len 32 * _7604] = mem[(10 * ceil32(return_data.size)) + _7412 + 634 len 32 * _7604]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11113 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_11113] == bool(mem[_11113])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11881 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _12159 = mem[_11881]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _12159
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _12159
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _12649 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_12649] == bool(mem[_12649])
                    else:
                        if ext_call.return_data[18 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 39
                            mem[(8 * ceil32(return_data.size)) + 542] = 'PangolinLibrary: INSUFFICIENT_LI'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'QUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if ext_call.return_data[50 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 39
                            mem[(8 * ceil32(return_data.size)) + 542] = 'PangolinLibrary: INSUFFICIENT_LI'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'QUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if not ext_call.return_data[18 len 14]:
                            if arg3 > ext_call.return_data[50 len 14]:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 30
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if ext_call.return_data[50 len 14] < arg3:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[50 len 14] - arg3:
                                revert with 'NH{q', 18
                            if ext_call.return_data[50 len 14] - arg3 and 997 > -1 / ext_call.return_data[50 len 14] - arg3:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[50 len 14] - arg3:
                                revert with 'NH{q', 18
                            if (997 * ext_call.return_data[50 len 14]) - (997 * arg3) / ext_call.return_data[50 len 14] - arg3 != 997:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                revert with 'NH{q', 18
                            if 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3) > -2:
                                revert with 'NH{q', 17
                            if (0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3)) + 1 < 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 27
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            else:
                                mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                if not cd[(arg4 + 132)]:
                                    mem[(10 * ceil32(return_data.size)) + 474] = 2
                                    mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                    mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 638] = 160
                                    mem[(10 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 766
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                    call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _7421 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                    _7613 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                    mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                    require return_data.size >= _7421 + (32 * _7613) + 32
                                    mem[(11 * ceil32(return_data.size)) + 602 len 32 * _7613] = mem[(10 * ceil32(return_data.size)) + _7421 + 602 len 32 * _7613]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _11022 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_11022] == bool(mem[_11022])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _11790 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _11982 = mem[_11790]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _11982
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _11982
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _12558 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_12558] == bool(mem[_12558])
                                else:
                                    mem[(10 * ceil32(return_data.size)) + 474] = 3
                                    mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                    mem[(10 * ceil32(return_data.size)) + 538] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                    mem[(10 * ceil32(return_data.size)) + 570] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 602] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 606] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 638] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 670] = 160
                                    mem[(10 * ceil32(return_data.size)) + 766] = 3
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 798
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 3:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 702] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 734] = block.timestamp
                                    require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                    call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=3, data=mem[(10 * ceil32(return_data.size)) + 798 len 96]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 602 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 602
                                    require return_data.size >= 32
                                    _7422 = mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 633 < (10 * ceil32(return_data.size)) + return_data.size + 602
                                    _7614 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 602]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 602] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 602]) + 603 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 602]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 602]) + 603
                                    mem[(11 * ceil32(return_data.size)) + 602] = _7614
                                    require return_data.size >= _7422 + (32 * _7614) + 32
                                    mem[(11 * ceil32(return_data.size)) + 634 len 32 * _7614] = mem[(10 * ceil32(return_data.size)) + _7422 + 634 len 32 * _7614]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _11118 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_11118] == bool(mem[_11118])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _11886 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _12174 = mem[_11886]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _12174
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _12174
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _12654 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_12654] == bool(mem[_12654])
                        else:
                            if ext_call.return_data[18 len 14] and arg3 > -1 / ext_call.return_data[18 len 14]:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[18 len 14]:
                                revert with 'NH{q', 18
                            if ext_call.return_data[18 len 14] * arg3 / ext_call.return_data[18 len 14] != arg3:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not ext_call.return_data[18 len 14] * arg3:
                                if arg3 > ext_call.return_data[50 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[50 len 14] < arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[50 len 14] - arg3 and 997 > -1 / ext_call.return_data[50 len 14] - arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[50 len 14]) - (997 * arg3) / ext_call.return_data[50 len 14] - arg3 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                    revert with 'NH{q', 18
                                if 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3) > -2:
                                    revert with 'NH{q', 17
                                if (0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3)) + 1 < 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    if not cd[(arg4 + 132)]:
                                        mem[(10 * ceil32(return_data.size)) + 474] = 2
                                        mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                        mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                        mem[(10 * ceil32(return_data.size)) + 638] = 160
                                        mem[(10 * ceil32(return_data.size)) + 734] = 2
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + 766
                                        t = (10 * ceil32(return_data.size)) + 506
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                        mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                        require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                        call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + 570
                                        require return_data.size >= 32
                                        _7419 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                        _7611 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                        if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                            revert with 'NH{q', 65
                                        if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0:
                                            revert with 'NH{q', 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                        mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                        require return_data.size >= _7419 + (32 * _7611) + 32
                                        mem[(11 * ceil32(return_data.size)) + 602 len 32 * _7611] = mem[(10 * ceil32(return_data.size)) + _7419 + 602 len 32 * _7611]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11021 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_11021] == bool(mem[_11021])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11789 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _11981 = mem[_11789]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _11981
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _11981
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _12557 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_12557] == bool(mem[_12557])
                                    else:
                                        mem[(10 * ceil32(return_data.size)) + 474] = 3
                                        mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(10 * ceil32(return_data.size)) + 538] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                        mem[(10 * ceil32(return_data.size)) + 570] = address(ext_call.return_data[0])
                                        mem[(10 * ceil32(return_data.size)) + 602] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + 606] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        mem[(10 * ceil32(return_data.size)) + 638] = ext_call.return_data[0]
                                        mem[(10 * ceil32(return_data.size)) + 670] = 160
                                        mem[(10 * ceil32(return_data.size)) + 766] = 3
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + 798
                                        t = (10 * ceil32(return_data.size)) + 506
                                        while idx < 3:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + 702] = this.address
                                        mem[(10 * ceil32(return_data.size)) + 734] = block.timestamp
                                        require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                        call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=3, data=mem[(10 * ceil32(return_data.size)) + 798 len 96]), address(this.address), block.timestamp
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + 602 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + 602
                                        require return_data.size >= 32
                                        _7420 = mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 633 < (10 * ceil32(return_data.size)) + return_data.size + 602
                                        _7612 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 602]
                                        if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 602] > test266151307():
                                            revert with 'NH{q', 65
                                        if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 602]) + 603 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 602]) + 1 < 0:
                                            revert with 'NH{q', 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 602]) + 603
                                        mem[(11 * ceil32(return_data.size)) + 602] = _7612
                                        require return_data.size >= _7420 + (32 * _7612) + 32
                                        mem[(11 * ceil32(return_data.size)) + 634 len 32 * _7612] = mem[(10 * ceil32(return_data.size)) + _7420 + 634 len 32 * _7612]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11117 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_11117] == bool(mem[_11117])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11885 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _12171 = mem[_11885]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _12171
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _12171
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _12653 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_12653] == bool(mem[_12653])
                            else:
                                if ext_call.return_data[18 len 14] * arg3 and 1000 > -1 / ext_call.return_data[18 len 14] * arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] * arg3:
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[18 len 14] * arg3 / ext_call.return_data[18 len 14] * arg3 != 1000:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if arg3 > ext_call.return_data[50 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[50 len 14] < arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[50 len 14] - arg3 and 997 > -1 / ext_call.return_data[50 len 14] - arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[50 len 14]) - (997 * arg3) / ext_call.return_data[50 len 14] - arg3 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[18 len 14] * arg3 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3) > -2:
                                    revert with 'NH{q', 17
                                if (1000 * ext_call.return_data[18 len 14] * arg3 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3)) + 1 < 1000 * ext_call.return_data[18 len 14] * arg3 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    if not cd[(arg4 + 132)]:
                                        mem[(10 * ceil32(return_data.size)) + 474] = 2
                                        mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                        mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + 574] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                        mem[(10 * ceil32(return_data.size)) + 638] = 160
                                        mem[(10 * ceil32(return_data.size)) + 734] = 2
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + 766
                                        t = (10 * ceil32(return_data.size)) + 506
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                        mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                        require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                        call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + 570
                                        require return_data.size >= 32
                                        _7417 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                        _7609 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                        if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                            revert with 'NH{q', 65
                                        if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0:
                                            revert with 'NH{q', 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                        mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                        require return_data.size >= _7417 + (32 * _7609) + 32
                                        mem[(11 * ceil32(return_data.size)) + 602 len 32 * _7609] = mem[(10 * ceil32(return_data.size)) + _7417 + 602 len 32 * _7609]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11020 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_11020] == bool(mem[_11020])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11788 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _11980 = mem[_11788]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _11980
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _11980
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _12556 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_12556] == bool(mem[_12556])
                                    else:
                                        mem[(10 * ceil32(return_data.size)) + 474] = 3
                                        mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(10 * ceil32(return_data.size)) + 538] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                        mem[(10 * ceil32(return_data.size)) + 570] = address(ext_call.return_data[0])
                                        mem[(10 * ceil32(return_data.size)) + 602] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + 606] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        mem[(10 * ceil32(return_data.size)) + 638] = ext_call.return_data[0]
                                        mem[(10 * ceil32(return_data.size)) + 670] = 160
                                        mem[(10 * ceil32(return_data.size)) + 766] = 3
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + 798
                                        t = (10 * ceil32(return_data.size)) + 506
                                        while idx < 3:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + 702] = this.address
                                        mem[(10 * ceil32(return_data.size)) + 734] = block.timestamp
                                        require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                        call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=3, data=mem[(10 * ceil32(return_data.size)) + 798 len 96]), address(this.address), block.timestamp
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + 602 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + 602
                                        require return_data.size >= 32
                                        _7418 = mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 633 < (10 * ceil32(return_data.size)) + return_data.size + 602
                                        _7610 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 602]
                                        if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 602] > test266151307():
                                            revert with 'NH{q', 65
                                        if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 602]) + 603 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 602]) + 1 < 0:
                                            revert with 'NH{q', 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 602]) + 603
                                        mem[(11 * ceil32(return_data.size)) + 602] = _7610
                                        require return_data.size >= _7418 + (32 * _7610) + 32
                                        mem[(11 * ceil32(return_data.size)) + 634 len 32 * _7610] = mem[(10 * ceil32(return_data.size)) + _7418 + 634 len 32 * _7610]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11116 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_11116] == bool(mem[_11116])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11884 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _12168 = mem[_11884]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _12168
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _12168
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _12652 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_12652] == bool(mem[_12652])
    else:
        mem[(4 * ceil32(return_data.size)) + 132] = arg2
        require ext_code.size(address(ext_call.return_data[0]))
        call address(ext_call.return_data[0]).approve(address arg1, uint256 arg2) with:
             gas gas_remaining wei
            args address(cd[(arg4 + 68)]), arg2
        mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == bool(ext_call.return_data[0])
        require ext_code.size(address(cd[(arg4 + 68)]))
        call address(cd[(arg4 + 68)]).liquidateVault(uint256 arg1) with:
             gas gas_remaining wei
            args cd[(arg4 + 36)]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require ext_code.size(address(cd[(arg4 + 68)]))
        call address(cd[(arg4 + 68)]).getPaid(address arg1) with:
             gas gas_remaining wei
            args this.address
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        mem[(6 * ceil32(return_data.size)) + 100] = this.address
        require ext_code.size(address(cd[(arg4 + 100)]))
        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                gas gas_remaining wei
               args this.address
        mem[(6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if not address(ext_call.return_data[0]):
            revert with 0, 'PangolinLibrary: ZERO_ADDRESS'
        if not address(ext_call.return_data[0]):
            revert with 0, 'PangolinLibrary: ZERO_ADDRESS'
        mem[(7 * ceil32(return_data.size)) + 128] = address(ext_call.return_data[0])
        mem[(7 * ceil32(return_data.size)) + 148] = address(ext_call.return_data[0])
        mem[(7 * ceil32(return_data.size)) + 96] = 40
        mem[(7 * ceil32(return_data.size)) + 200] = 0xff00000000000000000000000000000000000000000000000000000000000000
        mem[(7 * ceil32(return_data.size)) + 201] = 0xefa94de7a4656d787667c749f7e1223d71e9fd88000000000000000000000000
        mem[(7 * ceil32(return_data.size)) + 221] = sha3(address(ext_call.return_data[0]), address(ext_call.return_data[0]))
        mem[(7 * ceil32(return_data.size)) + 253] = 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545
        mem[(7 * ceil32(return_data.size)) + 168] = 85
        if not address(ext_call.return_data[0]):
            revert with 0, 'PangolinLibrary: ZERO_ADDRESS'
        mem[(7 * ceil32(return_data.size)) + 317] = address(ext_call.return_data[0])
        mem[(7 * ceil32(return_data.size)) + 337] = address(ext_call.return_data[0])
        mem[(7 * ceil32(return_data.size)) + 285] = 40
        mem[(7 * ceil32(return_data.size)) + 389] = 0xff00000000000000000000000000000000000000000000000000000000000000
        mem[(7 * ceil32(return_data.size)) + 390] = 0xefa94de7a4656d787667c749f7e1223d71e9fd88000000000000000000000000
        mem[(7 * ceil32(return_data.size)) + 410] = sha3(address(ext_call.return_data[0]), address(ext_call.return_data[0]))
        mem[(7 * ceil32(return_data.size)) + 442] = 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545
        mem[(7 * ceil32(return_data.size)) + 357] = 85
        require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
        staticcall address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).getReserves() with:
                gas gas_remaining wei
        mem[(7 * ceil32(return_data.size)) + 474 len 96] = ext_call.return_data[0 len 96]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 96
        require ext_call.return_data[0] == ext_call.return_data[18 len 14]
        require ext_call.return_data[32] == ext_call.return_data[50 len 14]
        require ext_call.return_data[64] == ext_call.return_data[92 len 4]
        if arg2 <= 0:
            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
            mem[(8 * ceil32(return_data.size)) + 478] = 32
            mem[(8 * ceil32(return_data.size)) + 510] = 43
            mem[(8 * ceil32(return_data.size)) + 542] = 'PangolinLibrary: INSUFFICIENT_OU'
            mem[(8 * ceil32(return_data.size)) + 574] = 'TPUT_AMOUNT'
            revert with memory
              from (8 * ceil32(return_data.size)) + 474
               len ceil32(return_data.size) + 132
        if address(ext_call.return_data[0]) < address(ext_call.return_data[0]):
            if address(ext_call.return_data[0]) < address(ext_call.return_data[0]):
                if address(ext_call.return_data[0]) < address(ext_call.return_data[0]):
                    if address(ext_call.return_data[0]) == address(ext_call.return_data[0]):
                        if ext_call.return_data[50 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 39
                            mem[(8 * ceil32(return_data.size)) + 542] = 'PangolinLibrary: INSUFFICIENT_LI'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'QUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if ext_call.return_data[18 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 39
                            mem[(8 * ceil32(return_data.size)) + 542] = 'PangolinLibrary: INSUFFICIENT_LI'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'QUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if not ext_call.return_data[50 len 14]:
                            if arg2 > ext_call.return_data[18 len 14]:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 30
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if ext_call.return_data[18 len 14] < arg2:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[18 len 14] - arg2:
                                revert with 'NH{q', 18
                            if ext_call.return_data[18 len 14] - arg2 and 997 > -1 / ext_call.return_data[18 len 14] - arg2:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[18 len 14] - arg2:
                                revert with 'NH{q', 18
                            if (997 * ext_call.return_data[18 len 14]) - (997 * arg2) / ext_call.return_data[18 len 14] - arg2 != 997:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                revert with 'NH{q', 18
                            if 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2) > -2:
                                revert with 'NH{q', 17
                            if (0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2)) + 1 < 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 27
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            else:
                                mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                if not cd[(arg4 + 132)]:
                                    mem[(10 * ceil32(return_data.size)) + 474] = 2
                                    mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                    mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 638] = 160
                                    mem[(10 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 766
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                    call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _7427 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                    _7619 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                    mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                    require return_data.size >= _7427 + (32 * _7619) + 32
                                    mem[(11 * ceil32(return_data.size)) + 602 len 32 * _7619] = mem[(10 * ceil32(return_data.size)) + _7427 + 602 len 32 * _7619]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _11025 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_11025] == bool(mem[_11025])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _11793 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _11985 = mem[_11793]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _11985
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _11985
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _12561 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_12561] == bool(mem[_12561])
                                else:
                                    mem[(10 * ceil32(return_data.size)) + 474] = 3
                                    mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                    mem[(10 * ceil32(return_data.size)) + 538] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                    mem[(10 * ceil32(return_data.size)) + 570] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 602] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 606] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 638] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 670] = 160
                                    mem[(10 * ceil32(return_data.size)) + 766] = 3
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 798
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 3:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 702] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 734] = block.timestamp
                                    require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                    call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=3, data=mem[(10 * ceil32(return_data.size)) + 798 len 96]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 602 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 602
                                    require return_data.size >= 32
                                    _7428 = mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 633 < (10 * ceil32(return_data.size)) + return_data.size + 602
                                    _7620 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 602]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 602] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 602]) + 603 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 602]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 602]) + 603
                                    mem[(11 * ceil32(return_data.size)) + 602] = _7620
                                    require return_data.size >= _7428 + (32 * _7620) + 32
                                    mem[(11 * ceil32(return_data.size)) + 634 len 32 * _7620] = mem[(10 * ceil32(return_data.size)) + _7428 + 634 len 32 * _7620]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _11121 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_11121] == bool(mem[_11121])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _11889 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _12183 = mem[_11889]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _12183
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _12183
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _12657 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_12657] == bool(mem[_12657])
                        else:
                            if ext_call.return_data[50 len 14] and arg2 > -1 / ext_call.return_data[50 len 14]:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[50 len 14]:
                                revert with 'NH{q', 18
                            if ext_call.return_data[50 len 14] * arg2 / ext_call.return_data[50 len 14] != arg2:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not ext_call.return_data[50 len 14] * arg2:
                                if arg2 > ext_call.return_data[18 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[18 len 14] < arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[18 len 14] - arg2 and 997 > -1 / ext_call.return_data[18 len 14] - arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[18 len 14]) - (997 * arg2) / ext_call.return_data[18 len 14] - arg2 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                    revert with 'NH{q', 18
                                if 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2) > -2:
                                    revert with 'NH{q', 17
                                if (0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2)) + 1 < 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    if not cd[(arg4 + 132)]:
                                        mem[(10 * ceil32(return_data.size)) + 474] = 2
                                        mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                        mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                        mem[(10 * ceil32(return_data.size)) + 638] = 160
                                        mem[(10 * ceil32(return_data.size)) + 734] = 2
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + 766
                                        t = (10 * ceil32(return_data.size)) + 506
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                        mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                        require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                        call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + 570
                                        require return_data.size >= 32
                                        _7425 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                        _7617 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                        if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                            revert with 'NH{q', 65
                                        if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0:
                                            revert with 'NH{q', 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                        mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                        require return_data.size >= _7425 + (32 * _7617) + 32
                                        mem[(11 * ceil32(return_data.size)) + 602 len 32 * _7617] = mem[(10 * ceil32(return_data.size)) + _7425 + 602 len 32 * _7617]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11024 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_11024] == bool(mem[_11024])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11792 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _11984 = mem[_11792]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _11984
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _11984
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _12560 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_12560] == bool(mem[_12560])
                                    else:
                                        mem[(10 * ceil32(return_data.size)) + 474] = 3
                                        mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(10 * ceil32(return_data.size)) + 538] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                        mem[(10 * ceil32(return_data.size)) + 570] = address(ext_call.return_data[0])
                                        mem[(10 * ceil32(return_data.size)) + 602] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + 606] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        mem[(10 * ceil32(return_data.size)) + 638] = ext_call.return_data[0]
                                        mem[(10 * ceil32(return_data.size)) + 670] = 160
                                        mem[(10 * ceil32(return_data.size)) + 766] = 3
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + 798
                                        t = (10 * ceil32(return_data.size)) + 506
                                        while idx < 3:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + 702] = this.address
                                        mem[(10 * ceil32(return_data.size)) + 734] = block.timestamp
                                        require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                        call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=3, data=mem[(10 * ceil32(return_data.size)) + 798 len 96]), address(this.address), block.timestamp
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + 602 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + 602
                                        require return_data.size >= 32
                                        _7426 = mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 633 < (10 * ceil32(return_data.size)) + return_data.size + 602
                                        _7618 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 602]
                                        if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 602] > test266151307():
                                            revert with 'NH{q', 65
                                        if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 602]) + 603 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 602]) + 1 < 0:
                                            revert with 'NH{q', 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 602]) + 603
                                        mem[(11 * ceil32(return_data.size)) + 602] = _7618
                                        require return_data.size >= _7426 + (32 * _7618) + 32
                                        mem[(11 * ceil32(return_data.size)) + 634 len 32 * _7618] = mem[(10 * ceil32(return_data.size)) + _7426 + 634 len 32 * _7618]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11120 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_11120] == bool(mem[_11120])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11888 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _12180 = mem[_11888]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _12180
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _12180
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _12656 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_12656] == bool(mem[_12656])
                            else:
                                if ext_call.return_data[50 len 14] * arg2 and 1000 > -1 / ext_call.return_data[50 len 14] * arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] * arg2:
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[50 len 14] * arg2 / ext_call.return_data[50 len 14] * arg2 != 1000:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if arg2 > ext_call.return_data[18 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[18 len 14] < arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[18 len 14] - arg2 and 997 > -1 / ext_call.return_data[18 len 14] - arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[18 len 14]) - (997 * arg2) / ext_call.return_data[18 len 14] - arg2 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[50 len 14] * arg2 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2) > -2:
                                    revert with 'NH{q', 17
                                if (1000 * ext_call.return_data[50 len 14] * arg2 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2)) + 1 < 1000 * ext_call.return_data[50 len 14] * arg2 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    if not cd[(arg4 + 132)]:
                                        mem[(10 * ceil32(return_data.size)) + 474] = 2
                                        mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                        mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + 574] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                        mem[(10 * ceil32(return_data.size)) + 638] = 160
                                        mem[(10 * ceil32(return_data.size)) + 734] = 2
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + 766
                                        t = (10 * ceil32(return_data.size)) + 506
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                        mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                        require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                        call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + 570
                                        require return_data.size >= 32
                                        _7423 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                        _7615 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                        if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                            revert with 'NH{q', 65
                                        if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0:
                                            revert with 'NH{q', 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                        mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                        require return_data.size >= _7423 + (32 * _7615) + 32
                                        mem[(11 * ceil32(return_data.size)) + 602 len 32 * _7615] = mem[(10 * ceil32(return_data.size)) + _7423 + 602 len 32 * _7615]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11023 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_11023] == bool(mem[_11023])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11791 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _11983 = mem[_11791]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _11983
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _11983
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _12559 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_12559] == bool(mem[_12559])
                                    else:
                                        mem[(10 * ceil32(return_data.size)) + 474] = 3
                                        mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(10 * ceil32(return_data.size)) + 538] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                        mem[(10 * ceil32(return_data.size)) + 570] = address(ext_call.return_data[0])
                                        mem[(10 * ceil32(return_data.size)) + 602] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + 606] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        mem[(10 * ceil32(return_data.size)) + 638] = ext_call.return_data[0]
                                        mem[(10 * ceil32(return_data.size)) + 670] = 160
                                        mem[(10 * ceil32(return_data.size)) + 766] = 3
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + 798
                                        t = (10 * ceil32(return_data.size)) + 506
                                        while idx < 3:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + 702] = this.address
                                        mem[(10 * ceil32(return_data.size)) + 734] = block.timestamp
                                        require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                        call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=3, data=mem[(10 * ceil32(return_data.size)) + 798 len 96]), address(this.address), block.timestamp
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + 602 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + 602
                                        require return_data.size >= 32
                                        _7424 = mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 633 < (10 * ceil32(return_data.size)) + return_data.size + 602
                                        _7616 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 602]
                                        if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 602] > test266151307():
                                            revert with 'NH{q', 65
                                        if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 602]) + 603 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 602]) + 1 < 0:
                                            revert with 'NH{q', 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 602]) + 603
                                        mem[(11 * ceil32(return_data.size)) + 602] = _7616
                                        require return_data.size >= _7424 + (32 * _7616) + 32
                                        mem[(11 * ceil32(return_data.size)) + 634 len 32 * _7616] = mem[(10 * ceil32(return_data.size)) + _7424 + 634 len 32 * _7616]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11119 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_11119] == bool(mem[_11119])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11887 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _12177 = mem[_11887]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _12177
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _12177
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _12655 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_12655] == bool(mem[_12655])
                    else:
                        if ext_call.return_data[18 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 39
                            mem[(8 * ceil32(return_data.size)) + 542] = 'PangolinLibrary: INSUFFICIENT_LI'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'QUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if ext_call.return_data[50 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 39
                            mem[(8 * ceil32(return_data.size)) + 542] = 'PangolinLibrary: INSUFFICIENT_LI'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'QUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if not ext_call.return_data[18 len 14]:
                            if arg2 > ext_call.return_data[50 len 14]:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 30
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if ext_call.return_data[50 len 14] < arg2:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[50 len 14] - arg2:
                                revert with 'NH{q', 18
                            if ext_call.return_data[50 len 14] - arg2 and 997 > -1 / ext_call.return_data[50 len 14] - arg2:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[50 len 14] - arg2:
                                revert with 'NH{q', 18
                            if (997 * ext_call.return_data[50 len 14]) - (997 * arg2) / ext_call.return_data[50 len 14] - arg2 != 997:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                revert with 'NH{q', 18
                            if 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2) > -2:
                                revert with 'NH{q', 17
                            if (0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2)) + 1 < 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 27
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            else:
                                mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                if not cd[(arg4 + 132)]:
                                    mem[(10 * ceil32(return_data.size)) + 474] = 2
                                    mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                    mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 638] = 160
                                    mem[(10 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 766
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                    call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _7433 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                    _7625 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                    mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                    require return_data.size >= _7433 + (32 * _7625) + 32
                                    mem[(11 * ceil32(return_data.size)) + 602 len 32 * _7625] = mem[(10 * ceil32(return_data.size)) + _7433 + 602 len 32 * _7625]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _11028 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_11028] == bool(mem[_11028])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _11796 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _11988 = mem[_11796]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _11988
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _11988
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _12564 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_12564] == bool(mem[_12564])
                                else:
                                    mem[(10 * ceil32(return_data.size)) + 474] = 3
                                    mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                    mem[(10 * ceil32(return_data.size)) + 538] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                    mem[(10 * ceil32(return_data.size)) + 570] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 602] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 606] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 638] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 670] = 160
                                    mem[(10 * ceil32(return_data.size)) + 766] = 3
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 798
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 3:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 702] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 734] = block.timestamp
                                    require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                    call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=3, data=mem[(10 * ceil32(return_data.size)) + 798 len 96]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 602 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 602
                                    require return_data.size >= 32
                                    _7434 = mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 633 < (10 * ceil32(return_data.size)) + return_data.size + 602
                                    _7626 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 602]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 602] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 602]) + 603 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 602]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 602]) + 603
                                    mem[(11 * ceil32(return_data.size)) + 602] = _7626
                                    require return_data.size >= _7434 + (32 * _7626) + 32
                                    mem[(11 * ceil32(return_data.size)) + 634 len 32 * _7626] = mem[(10 * ceil32(return_data.size)) + _7434 + 634 len 32 * _7626]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _11124 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_11124] == bool(mem[_11124])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _11892 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _12192 = mem[_11892]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _12192
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _12192
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _12660 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_12660] == bool(mem[_12660])
                        else:
                            if ext_call.return_data[18 len 14] and arg2 > -1 / ext_call.return_data[18 len 14]:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[18 len 14]:
                                revert with 'NH{q', 18
                            if ext_call.return_data[18 len 14] * arg2 / ext_call.return_data[18 len 14] != arg2:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not ext_call.return_data[18 len 14] * arg2:
                                if arg2 > ext_call.return_data[50 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[50 len 14] < arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[50 len 14] - arg2 and 997 > -1 / ext_call.return_data[50 len 14] - arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[50 len 14]) - (997 * arg2) / ext_call.return_data[50 len 14] - arg2 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                    revert with 'NH{q', 18
                                if 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2) > -2:
                                    revert with 'NH{q', 17
                                if (0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2)) + 1 < 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    if not cd[(arg4 + 132)]:
                                        mem[(10 * ceil32(return_data.size)) + 474] = 2
                                        mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                        mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                        mem[(10 * ceil32(return_data.size)) + 638] = 160
                                        mem[(10 * ceil32(return_data.size)) + 734] = 2
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + 766
                                        t = (10 * ceil32(return_data.size)) + 506
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                        mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                        require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                        call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + 570
                                        require return_data.size >= 32
                                        _7431 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                        _7623 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                        if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                            revert with 'NH{q', 65
                                        if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0:
                                            revert with 'NH{q', 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                        mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                        require return_data.size >= _7431 + (32 * _7623) + 32
                                        mem[(11 * ceil32(return_data.size)) + 602 len 32 * _7623] = mem[(10 * ceil32(return_data.size)) + _7431 + 602 len 32 * _7623]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11027 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_11027] == bool(mem[_11027])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11795 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _11987 = mem[_11795]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _11987
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _11987
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _12563 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_12563] == bool(mem[_12563])
                                    else:
                                        mem[(10 * ceil32(return_data.size)) + 474] = 3
                                        mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(10 * ceil32(return_data.size)) + 538] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                        mem[(10 * ceil32(return_data.size)) + 570] = address(ext_call.return_data[0])
                                        mem[(10 * ceil32(return_data.size)) + 602] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + 606] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        mem[(10 * ceil32(return_data.size)) + 638] = ext_call.return_data[0]
                                        mem[(10 * ceil32(return_data.size)) + 670] = 160
                                        mem[(10 * ceil32(return_data.size)) + 766] = 3
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + 798
                                        t = (10 * ceil32(return_data.size)) + 506
                                        while idx < 3:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + 702] = this.address
                                        mem[(10 * ceil32(return_data.size)) + 734] = block.timestamp
                                        require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                        call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=3, data=mem[(10 * ceil32(return_data.size)) + 798 len 96]), address(this.address), block.timestamp
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + 602 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + 602
                                        require return_data.size >= 32
                                        _7432 = mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 633 < (10 * ceil32(return_data.size)) + return_data.size + 602
                                        _7624 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 602]
                                        if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 602] > test266151307():
                                            revert with 'NH{q', 65
                                        if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 602]) + 603 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 602]) + 1 < 0:
                                            revert with 'NH{q', 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 602]) + 603
                                        mem[(11 * ceil32(return_data.size)) + 602] = _7624
                                        require return_data.size >= _7432 + (32 * _7624) + 32
                                        mem[(11 * ceil32(return_data.size)) + 634 len 32 * _7624] = mem[(10 * ceil32(return_data.size)) + _7432 + 634 len 32 * _7624]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11123 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_11123] == bool(mem[_11123])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11891 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _12189 = mem[_11891]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _12189
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _12189
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _12659 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_12659] == bool(mem[_12659])
                            else:
                                if ext_call.return_data[18 len 14] * arg2 and 1000 > -1 / ext_call.return_data[18 len 14] * arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] * arg2:
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[18 len 14] * arg2 / ext_call.return_data[18 len 14] * arg2 != 1000:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if arg2 > ext_call.return_data[50 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[50 len 14] < arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[50 len 14] - arg2 and 997 > -1 / ext_call.return_data[50 len 14] - arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[50 len 14]) - (997 * arg2) / ext_call.return_data[50 len 14] - arg2 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[18 len 14] * arg2 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2) > -2:
                                    revert with 'NH{q', 17
                                if (1000 * ext_call.return_data[18 len 14] * arg2 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2)) + 1 < 1000 * ext_call.return_data[18 len 14] * arg2 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    if not cd[(arg4 + 132)]:
                                        mem[(10 * ceil32(return_data.size)) + 474] = 2
                                        mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                        mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + 574] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                        mem[(10 * ceil32(return_data.size)) + 638] = 160
                                        mem[(10 * ceil32(return_data.size)) + 734] = 2
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + 766
                                        t = (10 * ceil32(return_data.size)) + 506
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                        mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                        require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                        call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + 570
                                        require return_data.size >= 32
                                        _7429 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                        _7621 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                        if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                            revert with 'NH{q', 65
                                        if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0:
                                            revert with 'NH{q', 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                        mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                        require return_data.size >= _7429 + (32 * _7621) + 32
                                        mem[(11 * ceil32(return_data.size)) + 602 len 32 * _7621] = mem[(10 * ceil32(return_data.size)) + _7429 + 602 len 32 * _7621]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11026 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_11026] == bool(mem[_11026])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11794 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _11986 = mem[_11794]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _11986
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _11986
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _12562 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_12562] == bool(mem[_12562])
                                    else:
                                        mem[(10 * ceil32(return_data.size)) + 474] = 3
                                        mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(10 * ceil32(return_data.size)) + 538] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                        mem[(10 * ceil32(return_data.size)) + 570] = address(ext_call.return_data[0])
                                        mem[(10 * ceil32(return_data.size)) + 602] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + 606] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        mem[(10 * ceil32(return_data.size)) + 638] = ext_call.return_data[0]
                                        mem[(10 * ceil32(return_data.size)) + 670] = 160
                                        mem[(10 * ceil32(return_data.size)) + 766] = 3
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + 798
                                        t = (10 * ceil32(return_data.size)) + 506
                                        while idx < 3:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + 702] = this.address
                                        mem[(10 * ceil32(return_data.size)) + 734] = block.timestamp
                                        require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                        call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=3, data=mem[(10 * ceil32(return_data.size)) + 798 len 96]), address(this.address), block.timestamp
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + 602 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + 602
                                        require return_data.size >= 32
                                        _7430 = mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 633 < (10 * ceil32(return_data.size)) + return_data.size + 602
                                        _7622 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 602]
                                        if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 602] > test266151307():
                                            revert with 'NH{q', 65
                                        if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 602]) + 603 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 602]) + 1 < 0:
                                            revert with 'NH{q', 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 602]) + 603
                                        mem[(11 * ceil32(return_data.size)) + 602] = _7622
                                        require return_data.size >= _7430 + (32 * _7622) + 32
                                        mem[(11 * ceil32(return_data.size)) + 634 len 32 * _7622] = mem[(10 * ceil32(return_data.size)) + _7430 + 634 len 32 * _7622]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11122 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_11122] == bool(mem[_11122])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11890 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _12186 = mem[_11890]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _12186
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _12186
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _12658 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_12658] == bool(mem[_12658])
                else:
                    if address(ext_call.return_data[0]) == address(ext_call.return_data[0]):
                        if ext_call.return_data[50 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 39
                            mem[(8 * ceil32(return_data.size)) + 542] = 'PangolinLibrary: INSUFFICIENT_LI'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'QUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if ext_call.return_data[18 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 39
                            mem[(8 * ceil32(return_data.size)) + 542] = 'PangolinLibrary: INSUFFICIENT_LI'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'QUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if not ext_call.return_data[50 len 14]:
                            if arg2 > ext_call.return_data[18 len 14]:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 30
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if ext_call.return_data[18 len 14] < arg2:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[18 len 14] - arg2:
                                revert with 'NH{q', 18
                            if ext_call.return_data[18 len 14] - arg2 and 997 > -1 / ext_call.return_data[18 len 14] - arg2:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[18 len 14] - arg2:
                                revert with 'NH{q', 18
                            if (997 * ext_call.return_data[18 len 14]) - (997 * arg2) / ext_call.return_data[18 len 14] - arg2 != 997:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                revert with 'NH{q', 18
                            if 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2) > -2:
                                revert with 'NH{q', 17
                            if (0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2)) + 1 < 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 27
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            else:
                                mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                if not cd[(arg4 + 132)]:
                                    mem[(10 * ceil32(return_data.size)) + 474] = 2
                                    mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                    mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 638] = 160
                                    mem[(10 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 766
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                    call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _7439 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                    _7631 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                    mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                    require return_data.size >= _7439 + (32 * _7631) + 32
                                    mem[(11 * ceil32(return_data.size)) + 602 len 32 * _7631] = mem[(10 * ceil32(return_data.size)) + _7439 + 602 len 32 * _7631]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _11031 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_11031] == bool(mem[_11031])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _11799 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _11991 = mem[_11799]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _11991
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _11991
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _12567 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_12567] == bool(mem[_12567])
                                else:
                                    mem[(10 * ceil32(return_data.size)) + 474] = 3
                                    mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                    mem[(10 * ceil32(return_data.size)) + 538] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                    mem[(10 * ceil32(return_data.size)) + 570] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 602] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 606] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 638] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 670] = 160
                                    mem[(10 * ceil32(return_data.size)) + 766] = 3
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 798
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 3:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 702] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 734] = block.timestamp
                                    require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                    call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=3, data=mem[(10 * ceil32(return_data.size)) + 798 len 96]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 602 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 602
                                    require return_data.size >= 32
                                    _7440 = mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 633 < (10 * ceil32(return_data.size)) + return_data.size + 602
                                    _7632 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 602]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 602] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 602]) + 603 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 602]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 602]) + 603
                                    mem[(11 * ceil32(return_data.size)) + 602] = _7632
                                    require return_data.size >= _7440 + (32 * _7632) + 32
                                    mem[(11 * ceil32(return_data.size)) + 634 len 32 * _7632] = mem[(10 * ceil32(return_data.size)) + _7440 + 634 len 32 * _7632]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _11127 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_11127] == bool(mem[_11127])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _11895 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _12201 = mem[_11895]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _12201
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _12201
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _12663 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_12663] == bool(mem[_12663])
                        else:
                            if ext_call.return_data[50 len 14] and arg2 > -1 / ext_call.return_data[50 len 14]:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[50 len 14]:
                                revert with 'NH{q', 18
                            if ext_call.return_data[50 len 14] * arg2 / ext_call.return_data[50 len 14] != arg2:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not ext_call.return_data[50 len 14] * arg2:
                                if arg2 > ext_call.return_data[18 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[18 len 14] < arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[18 len 14] - arg2 and 997 > -1 / ext_call.return_data[18 len 14] - arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[18 len 14]) - (997 * arg2) / ext_call.return_data[18 len 14] - arg2 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                    revert with 'NH{q', 18
                                if 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2) > -2:
                                    revert with 'NH{q', 17
                                if (0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2)) + 1 < 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    if not cd[(arg4 + 132)]:
                                        mem[(10 * ceil32(return_data.size)) + 474] = 2
                                        mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                        mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                        mem[(10 * ceil32(return_data.size)) + 638] = 160
                                        mem[(10 * ceil32(return_data.size)) + 734] = 2
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + 766
                                        t = (10 * ceil32(return_data.size)) + 506
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                        mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                        require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                        call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + 570
                                        require return_data.size >= 32
                                        _7437 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                        _7629 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                        if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                            revert with 'NH{q', 65
                                        if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0:
                                            revert with 'NH{q', 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                        mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                        require return_data.size >= _7437 + (32 * _7629) + 32
                                        mem[(11 * ceil32(return_data.size)) + 602 len 32 * _7629] = mem[(10 * ceil32(return_data.size)) + _7437 + 602 len 32 * _7629]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11030 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_11030] == bool(mem[_11030])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11798 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _11990 = mem[_11798]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _11990
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _11990
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _12566 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_12566] == bool(mem[_12566])
                                    else:
                                        mem[(10 * ceil32(return_data.size)) + 474] = 3
                                        mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(10 * ceil32(return_data.size)) + 538] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                        mem[(10 * ceil32(return_data.size)) + 570] = address(ext_call.return_data[0])
                                        mem[(10 * ceil32(return_data.size)) + 602] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + 606] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        mem[(10 * ceil32(return_data.size)) + 638] = ext_call.return_data[0]
                                        mem[(10 * ceil32(return_data.size)) + 670] = 160
                                        mem[(10 * ceil32(return_data.size)) + 766] = 3
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + 798
                                        t = (10 * ceil32(return_data.size)) + 506
                                        while idx < 3:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + 702] = this.address
                                        mem[(10 * ceil32(return_data.size)) + 734] = block.timestamp
                                        require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                        call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=3, data=mem[(10 * ceil32(return_data.size)) + 798 len 96]), address(this.address), block.timestamp
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + 602 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + 602
                                        require return_data.size >= 32
                                        _7438 = mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 633 < (10 * ceil32(return_data.size)) + return_data.size + 602
                                        _7630 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 602]
                                        if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 602] > test266151307():
                                            revert with 'NH{q', 65
                                        if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 602]) + 603 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 602]) + 1 < 0:
                                            revert with 'NH{q', 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 602]) + 603
                                        mem[(11 * ceil32(return_data.size)) + 602] = _7630
                                        require return_data.size >= _7438 + (32 * _7630) + 32
                                        mem[(11 * ceil32(return_data.size)) + 634 len 32 * _7630] = mem[(10 * ceil32(return_data.size)) + _7438 + 634 len 32 * _7630]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11126 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_11126] == bool(mem[_11126])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11894 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _12198 = mem[_11894]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _12198
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _12198
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _12662 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_12662] == bool(mem[_12662])
                            else:
                                if ext_call.return_data[50 len 14] * arg2 and 1000 > -1 / ext_call.return_data[50 len 14] * arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] * arg2:
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[50 len 14] * arg2 / ext_call.return_data[50 len 14] * arg2 != 1000:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if arg2 > ext_call.return_data[18 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[18 len 14] < arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[18 len 14] - arg2 and 997 > -1 / ext_call.return_data[18 len 14] - arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[18 len 14]) - (997 * arg2) / ext_call.return_data[18 len 14] - arg2 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[50 len 14] * arg2 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2) > -2:
                                    revert with 'NH{q', 17
                                if (1000 * ext_call.return_data[50 len 14] * arg2 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2)) + 1 < 1000 * ext_call.return_data[50 len 14] * arg2 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    if not cd[(arg4 + 132)]:
                                        mem[(10 * ceil32(return_data.size)) + 474] = 2
                                        mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                        mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + 574] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                        mem[(10 * ceil32(return_data.size)) + 638] = 160
                                        mem[(10 * ceil32(return_data.size)) + 734] = 2
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + 766
                                        t = (10 * ceil32(return_data.size)) + 506
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                        mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                        require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                        call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + 570
                                        require return_data.size >= 32
                                        _7435 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                        _7627 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                        if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                            revert with 'NH{q', 65
                                        if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0:
                                            revert with 'NH{q', 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                        mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                        require return_data.size >= _7435 + (32 * _7627) + 32
                                        mem[(11 * ceil32(return_data.size)) + 602 len 32 * _7627] = mem[(10 * ceil32(return_data.size)) + _7435 + 602 len 32 * _7627]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11029 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_11029] == bool(mem[_11029])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11797 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _11989 = mem[_11797]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _11989
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _11989
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _12565 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_12565] == bool(mem[_12565])
                                    else:
                                        mem[(10 * ceil32(return_data.size)) + 474] = 3
                                        mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(10 * ceil32(return_data.size)) + 538] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                        mem[(10 * ceil32(return_data.size)) + 570] = address(ext_call.return_data[0])
                                        mem[(10 * ceil32(return_data.size)) + 602] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + 606] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        mem[(10 * ceil32(return_data.size)) + 638] = ext_call.return_data[0]
                                        mem[(10 * ceil32(return_data.size)) + 670] = 160
                                        mem[(10 * ceil32(return_data.size)) + 766] = 3
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + 798
                                        t = (10 * ceil32(return_data.size)) + 506
                                        while idx < 3:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + 702] = this.address
                                        mem[(10 * ceil32(return_data.size)) + 734] = block.timestamp
                                        require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                        call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=3, data=mem[(10 * ceil32(return_data.size)) + 798 len 96]), address(this.address), block.timestamp
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + 602 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + 602
                                        require return_data.size >= 32
                                        _7436 = mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 633 < (10 * ceil32(return_data.size)) + return_data.size + 602
                                        _7628 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 602]
                                        if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 602] > test266151307():
                                            revert with 'NH{q', 65
                                        if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 602]) + 603 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 602]) + 1 < 0:
                                            revert with 'NH{q', 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 602]) + 603
                                        mem[(11 * ceil32(return_data.size)) + 602] = _7628
                                        require return_data.size >= _7436 + (32 * _7628) + 32
                                        mem[(11 * ceil32(return_data.size)) + 634 len 32 * _7628] = mem[(10 * ceil32(return_data.size)) + _7436 + 634 len 32 * _7628]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11125 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_11125] == bool(mem[_11125])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11893 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _12195 = mem[_11893]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _12195
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _12195
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _12661 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_12661] == bool(mem[_12661])
                    else:
                        if ext_call.return_data[18 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 39
                            mem[(8 * ceil32(return_data.size)) + 542] = 'PangolinLibrary: INSUFFICIENT_LI'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'QUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if ext_call.return_data[50 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 39
                            mem[(8 * ceil32(return_data.size)) + 542] = 'PangolinLibrary: INSUFFICIENT_LI'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'QUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if not ext_call.return_data[18 len 14]:
                            if arg2 > ext_call.return_data[50 len 14]:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 30
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if ext_call.return_data[50 len 14] < arg2:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[50 len 14] - arg2:
                                revert with 'NH{q', 18
                            if ext_call.return_data[50 len 14] - arg2 and 997 > -1 / ext_call.return_data[50 len 14] - arg2:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[50 len 14] - arg2:
                                revert with 'NH{q', 18
                            if (997 * ext_call.return_data[50 len 14]) - (997 * arg2) / ext_call.return_data[50 len 14] - arg2 != 997:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                revert with 'NH{q', 18
                            if 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2) > -2:
                                revert with 'NH{q', 17
                            if (0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2)) + 1 < 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 27
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            else:
                                mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                if not cd[(arg4 + 132)]:
                                    mem[(10 * ceil32(return_data.size)) + 474] = 2
                                    mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                    mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 638] = 160
                                    mem[(10 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 766
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                    call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _7445 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                    _7637 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                    mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                    require return_data.size >= _7445 + (32 * _7637) + 32
                                    mem[(11 * ceil32(return_data.size)) + 602 len 32 * _7637] = mem[(10 * ceil32(return_data.size)) + _7445 + 602 len 32 * _7637]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _11034 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_11034] == bool(mem[_11034])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _11802 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _11994 = mem[_11802]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _11994
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _11994
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _12570 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_12570] == bool(mem[_12570])
                                else:
                                    mem[(10 * ceil32(return_data.size)) + 474] = 3
                                    mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                    mem[(10 * ceil32(return_data.size)) + 538] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                    mem[(10 * ceil32(return_data.size)) + 570] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 602] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 606] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 638] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 670] = 160
                                    mem[(10 * ceil32(return_data.size)) + 766] = 3
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 798
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 3:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 702] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 734] = block.timestamp
                                    require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                    call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=3, data=mem[(10 * ceil32(return_data.size)) + 798 len 96]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 602 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 602
                                    require return_data.size >= 32
                                    _7446 = mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 633 < (10 * ceil32(return_data.size)) + return_data.size + 602
                                    _7638 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 602]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 602] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 602]) + 603 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 602]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 602]) + 603
                                    mem[(11 * ceil32(return_data.size)) + 602] = _7638
                                    require return_data.size >= _7446 + (32 * _7638) + 32
                                    mem[(11 * ceil32(return_data.size)) + 634 len 32 * _7638] = mem[(10 * ceil32(return_data.size)) + _7446 + 634 len 32 * _7638]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _11130 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_11130] == bool(mem[_11130])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _11898 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _12210 = mem[_11898]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _12210
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _12210
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _12666 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_12666] == bool(mem[_12666])
                        else:
                            if ext_call.return_data[18 len 14] and arg2 > -1 / ext_call.return_data[18 len 14]:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[18 len 14]:
                                revert with 'NH{q', 18
                            if ext_call.return_data[18 len 14] * arg2 / ext_call.return_data[18 len 14] != arg2:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not ext_call.return_data[18 len 14] * arg2:
                                if arg2 > ext_call.return_data[50 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[50 len 14] < arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[50 len 14] - arg2 and 997 > -1 / ext_call.return_data[50 len 14] - arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[50 len 14]) - (997 * arg2) / ext_call.return_data[50 len 14] - arg2 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                    revert with 'NH{q', 18
                                if 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2) > -2:
                                    revert with 'NH{q', 17
                                if (0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2)) + 1 < 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    if not cd[(arg4 + 132)]:
                                        mem[(10 * ceil32(return_data.size)) + 474] = 2
                                        mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                        mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                        mem[(10 * ceil32(return_data.size)) + 638] = 160
                                        mem[(10 * ceil32(return_data.size)) + 734] = 2
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + 766
                                        t = (10 * ceil32(return_data.size)) + 506
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                        mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                        require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                        call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + 570
                                        require return_data.size >= 32
                                        _7443 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                        _7635 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                        if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                            revert with 'NH{q', 65
                                        if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0:
                                            revert with 'NH{q', 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                        mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                        require return_data.size >= _7443 + (32 * _7635) + 32
                                        mem[(11 * ceil32(return_data.size)) + 602 len 32 * _7635] = mem[(10 * ceil32(return_data.size)) + _7443 + 602 len 32 * _7635]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11033 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_11033] == bool(mem[_11033])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11801 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _11993 = mem[_11801]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _11993
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _11993
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _12569 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_12569] == bool(mem[_12569])
                                    else:
                                        mem[(10 * ceil32(return_data.size)) + 474] = 3
                                        mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(10 * ceil32(return_data.size)) + 538] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                        mem[(10 * ceil32(return_data.size)) + 570] = address(ext_call.return_data[0])
                                        mem[(10 * ceil32(return_data.size)) + 602] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + 606] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        mem[(10 * ceil32(return_data.size)) + 638] = ext_call.return_data[0]
                                        mem[(10 * ceil32(return_data.size)) + 670] = 160
                                        mem[(10 * ceil32(return_data.size)) + 766] = 3
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + 798
                                        t = (10 * ceil32(return_data.size)) + 506
                                        while idx < 3:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + 702] = this.address
                                        mem[(10 * ceil32(return_data.size)) + 734] = block.timestamp
                                        require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                        call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=3, data=mem[(10 * ceil32(return_data.size)) + 798 len 96]), address(this.address), block.timestamp
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + 602 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + 602
                                        require return_data.size >= 32
                                        _7444 = mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 633 < (10 * ceil32(return_data.size)) + return_data.size + 602
                                        _7636 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 602]
                                        if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 602] > test266151307():
                                            revert with 'NH{q', 65
                                        if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 602]) + 603 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 602]) + 1 < 0:
                                            revert with 'NH{q', 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 602]) + 603
                                        mem[(11 * ceil32(return_data.size)) + 602] = _7636
                                        require return_data.size >= _7444 + (32 * _7636) + 32
                                        mem[(11 * ceil32(return_data.size)) + 634 len 32 * _7636] = mem[(10 * ceil32(return_data.size)) + _7444 + 634 len 32 * _7636]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11129 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_11129] == bool(mem[_11129])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11897 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _12207 = mem[_11897]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _12207
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _12207
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _12665 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_12665] == bool(mem[_12665])
                            else:
                                if ext_call.return_data[18 len 14] * arg2 and 1000 > -1 / ext_call.return_data[18 len 14] * arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] * arg2:
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[18 len 14] * arg2 / ext_call.return_data[18 len 14] * arg2 != 1000:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if arg2 > ext_call.return_data[50 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[50 len 14] < arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[50 len 14] - arg2 and 997 > -1 / ext_call.return_data[50 len 14] - arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[50 len 14]) - (997 * arg2) / ext_call.return_data[50 len 14] - arg2 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[18 len 14] * arg2 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2) > -2:
                                    revert with 'NH{q', 17
                                if (1000 * ext_call.return_data[18 len 14] * arg2 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2)) + 1 < 1000 * ext_call.return_data[18 len 14] * arg2 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    if not cd[(arg4 + 132)]:
                                        mem[(10 * ceil32(return_data.size)) + 474] = 2
                                        mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                        mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + 574] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                        mem[(10 * ceil32(return_data.size)) + 638] = 160
                                        mem[(10 * ceil32(return_data.size)) + 734] = 2
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + 766
                                        t = (10 * ceil32(return_data.size)) + 506
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                        mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                        require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                        call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + 570
                                        require return_data.size >= 32
                                        _7441 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                        _7633 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                        if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                            revert with 'NH{q', 65
                                        if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0:
                                            revert with 'NH{q', 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                        mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                        require return_data.size >= _7441 + (32 * _7633) + 32
                                        mem[(11 * ceil32(return_data.size)) + 602 len 32 * _7633] = mem[(10 * ceil32(return_data.size)) + _7441 + 602 len 32 * _7633]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11032 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_11032] == bool(mem[_11032])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11800 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _11992 = mem[_11800]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _11992
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _11992
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _12568 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_12568] == bool(mem[_12568])
                                    else:
                                        mem[(10 * ceil32(return_data.size)) + 474] = 3
                                        mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(10 * ceil32(return_data.size)) + 538] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                        mem[(10 * ceil32(return_data.size)) + 570] = address(ext_call.return_data[0])
                                        mem[(10 * ceil32(return_data.size)) + 602] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + 606] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        mem[(10 * ceil32(return_data.size)) + 638] = ext_call.return_data[0]
                                        mem[(10 * ceil32(return_data.size)) + 670] = 160
                                        mem[(10 * ceil32(return_data.size)) + 766] = 3
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + 798
                                        t = (10 * ceil32(return_data.size)) + 506
                                        while idx < 3:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + 702] = this.address
                                        mem[(10 * ceil32(return_data.size)) + 734] = block.timestamp
                                        require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                        call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=3, data=mem[(10 * ceil32(return_data.size)) + 798 len 96]), address(this.address), block.timestamp
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + 602 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + 602
                                        require return_data.size >= 32
                                        _7442 = mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 633 < (10 * ceil32(return_data.size)) + return_data.size + 602
                                        _7634 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 602]
                                        if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 602] > test266151307():
                                            revert with 'NH{q', 65
                                        if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 602]) + 603 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 602]) + 1 < 0:
                                            revert with 'NH{q', 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 602]) + 603
                                        mem[(11 * ceil32(return_data.size)) + 602] = _7634
                                        require return_data.size >= _7442 + (32 * _7634) + 32
                                        mem[(11 * ceil32(return_data.size)) + 634 len 32 * _7634] = mem[(10 * ceil32(return_data.size)) + _7442 + 634 len 32 * _7634]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11128 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_11128] == bool(mem[_11128])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11896 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _12204 = mem[_11896]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _12204
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _12204
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _12664 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_12664] == bool(mem[_12664])
            else:
                if address(ext_call.return_data[0]) < address(ext_call.return_data[0]):
                    if address(ext_call.return_data[0]) == address(ext_call.return_data[0]):
                        if ext_call.return_data[50 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 39
                            mem[(8 * ceil32(return_data.size)) + 542] = 'PangolinLibrary: INSUFFICIENT_LI'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'QUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if ext_call.return_data[18 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 39
                            mem[(8 * ceil32(return_data.size)) + 542] = 'PangolinLibrary: INSUFFICIENT_LI'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'QUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if not ext_call.return_data[50 len 14]:
                            if arg2 > ext_call.return_data[18 len 14]:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 30
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if ext_call.return_data[18 len 14] < arg2:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[18 len 14] - arg2:
                                revert with 'NH{q', 18
                            if ext_call.return_data[18 len 14] - arg2 and 997 > -1 / ext_call.return_data[18 len 14] - arg2:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[18 len 14] - arg2:
                                revert with 'NH{q', 18
                            if (997 * ext_call.return_data[18 len 14]) - (997 * arg2) / ext_call.return_data[18 len 14] - arg2 != 997:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                revert with 'NH{q', 18
                            if 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2) > -2:
                                revert with 'NH{q', 17
                            if (0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2)) + 1 < 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 27
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            else:
                                mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                if not cd[(arg4 + 132)]:
                                    mem[(10 * ceil32(return_data.size)) + 474] = 2
                                    mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                    mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 638] = 160
                                    mem[(10 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 766
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                    call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _7451 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                    _7643 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                    mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                    require return_data.size >= _7451 + (32 * _7643) + 32
                                    mem[(11 * ceil32(return_data.size)) + 602 len 32 * _7643] = mem[(10 * ceil32(return_data.size)) + _7451 + 602 len 32 * _7643]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _11037 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_11037] == bool(mem[_11037])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _11805 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _11997 = mem[_11805]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _11997
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _11997
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _12573 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_12573] == bool(mem[_12573])
                                else:
                                    mem[(10 * ceil32(return_data.size)) + 474] = 3
                                    mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                    mem[(10 * ceil32(return_data.size)) + 538] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                    mem[(10 * ceil32(return_data.size)) + 570] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 602] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 606] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 638] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 670] = 160
                                    mem[(10 * ceil32(return_data.size)) + 766] = 3
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 798
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 3:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 702] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 734] = block.timestamp
                                    require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                    call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=3, data=mem[(10 * ceil32(return_data.size)) + 798 len 96]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 602 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 602
                                    require return_data.size >= 32
                                    _7452 = mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 633 < (10 * ceil32(return_data.size)) + return_data.size + 602
                                    _7644 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 602]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 602] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 602]) + 603 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 602]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 602]) + 603
                                    mem[(11 * ceil32(return_data.size)) + 602] = _7644
                                    require return_data.size >= _7452 + (32 * _7644) + 32
                                    mem[(11 * ceil32(return_data.size)) + 634 len 32 * _7644] = mem[(10 * ceil32(return_data.size)) + _7452 + 634 len 32 * _7644]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _11133 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_11133] == bool(mem[_11133])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _11901 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _12219 = mem[_11901]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _12219
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _12219
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _12669 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_12669] == bool(mem[_12669])
                        else:
                            if ext_call.return_data[50 len 14] and arg2 > -1 / ext_call.return_data[50 len 14]:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[50 len 14]:
                                revert with 'NH{q', 18
                            if ext_call.return_data[50 len 14] * arg2 / ext_call.return_data[50 len 14] != arg2:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not ext_call.return_data[50 len 14] * arg2:
                                if arg2 > ext_call.return_data[18 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[18 len 14] < arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[18 len 14] - arg2 and 997 > -1 / ext_call.return_data[18 len 14] - arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[18 len 14]) - (997 * arg2) / ext_call.return_data[18 len 14] - arg2 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                    revert with 'NH{q', 18
                                if 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2) > -2:
                                    revert with 'NH{q', 17
                                if (0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2)) + 1 < 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    if not cd[(arg4 + 132)]:
                                        mem[(10 * ceil32(return_data.size)) + 474] = 2
                                        mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                        mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                        mem[(10 * ceil32(return_data.size)) + 638] = 160
                                        mem[(10 * ceil32(return_data.size)) + 734] = 2
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + 766
                                        t = (10 * ceil32(return_data.size)) + 506
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                        mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                        require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                        call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + 570
                                        require return_data.size >= 32
                                        _7449 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                        _7641 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                        if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                            revert with 'NH{q', 65
                                        if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0:
                                            revert with 'NH{q', 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                        mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                        require return_data.size >= _7449 + (32 * _7641) + 32
                                        mem[(11 * ceil32(return_data.size)) + 602 len 32 * _7641] = mem[(10 * ceil32(return_data.size)) + _7449 + 602 len 32 * _7641]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11036 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_11036] == bool(mem[_11036])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11804 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _11996 = mem[_11804]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _11996
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _11996
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _12572 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_12572] == bool(mem[_12572])
                                    else:
                                        mem[(10 * ceil32(return_data.size)) + 474] = 3
                                        mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(10 * ceil32(return_data.size)) + 538] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                        mem[(10 * ceil32(return_data.size)) + 570] = address(ext_call.return_data[0])
                                        mem[(10 * ceil32(return_data.size)) + 602] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + 606] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        mem[(10 * ceil32(return_data.size)) + 638] = ext_call.return_data[0]
                                        mem[(10 * ceil32(return_data.size)) + 670] = 160
                                        mem[(10 * ceil32(return_data.size)) + 766] = 3
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + 798
                                        t = (10 * ceil32(return_data.size)) + 506
                                        while idx < 3:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + 702] = this.address
                                        mem[(10 * ceil32(return_data.size)) + 734] = block.timestamp
                                        require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                        call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=3, data=mem[(10 * ceil32(return_data.size)) + 798 len 96]), address(this.address), block.timestamp
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + 602 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + 602
                                        require return_data.size >= 32
                                        _7450 = mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 633 < (10 * ceil32(return_data.size)) + return_data.size + 602
                                        _7642 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 602]
                                        if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 602] > test266151307():
                                            revert with 'NH{q', 65
                                        if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 602]) + 603 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 602]) + 1 < 0:
                                            revert with 'NH{q', 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 602]) + 603
                                        mem[(11 * ceil32(return_data.size)) + 602] = _7642
                                        require return_data.size >= _7450 + (32 * _7642) + 32
                                        mem[(11 * ceil32(return_data.size)) + 634 len 32 * _7642] = mem[(10 * ceil32(return_data.size)) + _7450 + 634 len 32 * _7642]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11132 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_11132] == bool(mem[_11132])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11900 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _12216 = mem[_11900]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _12216
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _12216
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _12668 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_12668] == bool(mem[_12668])
                            else:
                                if ext_call.return_data[50 len 14] * arg2 and 1000 > -1 / ext_call.return_data[50 len 14] * arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] * arg2:
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[50 len 14] * arg2 / ext_call.return_data[50 len 14] * arg2 != 1000:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if arg2 > ext_call.return_data[18 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[18 len 14] < arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[18 len 14] - arg2 and 997 > -1 / ext_call.return_data[18 len 14] - arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[18 len 14]) - (997 * arg2) / ext_call.return_data[18 len 14] - arg2 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[50 len 14] * arg2 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2) > -2:
                                    revert with 'NH{q', 17
                                if (1000 * ext_call.return_data[50 len 14] * arg2 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2)) + 1 < 1000 * ext_call.return_data[50 len 14] * arg2 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    if not cd[(arg4 + 132)]:
                                        mem[(10 * ceil32(return_data.size)) + 474] = 2
                                        mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                        mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + 574] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                        mem[(10 * ceil32(return_data.size)) + 638] = 160
                                        mem[(10 * ceil32(return_data.size)) + 734] = 2
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + 766
                                        t = (10 * ceil32(return_data.size)) + 506
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                        mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                        require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                        call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + 570
                                        require return_data.size >= 32
                                        _7447 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                        _7639 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                        if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                            revert with 'NH{q', 65
                                        if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0:
                                            revert with 'NH{q', 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                        mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                        require return_data.size >= _7447 + (32 * _7639) + 32
                                        mem[(11 * ceil32(return_data.size)) + 602 len 32 * _7639] = mem[(10 * ceil32(return_data.size)) + _7447 + 602 len 32 * _7639]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11035 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_11035] == bool(mem[_11035])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11803 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _11995 = mem[_11803]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _11995
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _11995
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _12571 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_12571] == bool(mem[_12571])
                                    else:
                                        mem[(10 * ceil32(return_data.size)) + 474] = 3
                                        mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(10 * ceil32(return_data.size)) + 538] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                        mem[(10 * ceil32(return_data.size)) + 570] = address(ext_call.return_data[0])
                                        mem[(10 * ceil32(return_data.size)) + 602] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + 606] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        mem[(10 * ceil32(return_data.size)) + 638] = ext_call.return_data[0]
                                        mem[(10 * ceil32(return_data.size)) + 670] = 160
                                        mem[(10 * ceil32(return_data.size)) + 766] = 3
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + 798
                                        t = (10 * ceil32(return_data.size)) + 506
                                        while idx < 3:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + 702] = this.address
                                        mem[(10 * ceil32(return_data.size)) + 734] = block.timestamp
                                        require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                        call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=3, data=mem[(10 * ceil32(return_data.size)) + 798 len 96]), address(this.address), block.timestamp
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + 602 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + 602
                                        require return_data.size >= 32
                                        _7448 = mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 633 < (10 * ceil32(return_data.size)) + return_data.size + 602
                                        _7640 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 602]
                                        if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 602] > test266151307():
                                            revert with 'NH{q', 65
                                        if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 602]) + 603 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 602]) + 1 < 0:
                                            revert with 'NH{q', 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 602]) + 603
                                        mem[(11 * ceil32(return_data.size)) + 602] = _7640
                                        require return_data.size >= _7448 + (32 * _7640) + 32
                                        mem[(11 * ceil32(return_data.size)) + 634 len 32 * _7640] = mem[(10 * ceil32(return_data.size)) + _7448 + 634 len 32 * _7640]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11131 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_11131] == bool(mem[_11131])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11899 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _12213 = mem[_11899]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _12213
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _12213
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _12667 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_12667] == bool(mem[_12667])
                    else:
                        if ext_call.return_data[18 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 39
                            mem[(8 * ceil32(return_data.size)) + 542] = 'PangolinLibrary: INSUFFICIENT_LI'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'QUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if ext_call.return_data[50 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 39
                            mem[(8 * ceil32(return_data.size)) + 542] = 'PangolinLibrary: INSUFFICIENT_LI'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'QUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if not ext_call.return_data[18 len 14]:
                            if arg2 > ext_call.return_data[50 len 14]:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 30
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if ext_call.return_data[50 len 14] < arg2:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[50 len 14] - arg2:
                                revert with 'NH{q', 18
                            if ext_call.return_data[50 len 14] - arg2 and 997 > -1 / ext_call.return_data[50 len 14] - arg2:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[50 len 14] - arg2:
                                revert with 'NH{q', 18
                            if (997 * ext_call.return_data[50 len 14]) - (997 * arg2) / ext_call.return_data[50 len 14] - arg2 != 997:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                revert with 'NH{q', 18
                            if 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2) > -2:
                                revert with 'NH{q', 17
                            if (0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2)) + 1 < 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 27
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            else:
                                mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                if not cd[(arg4 + 132)]:
                                    mem[(10 * ceil32(return_data.size)) + 474] = 2
                                    mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                    mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 638] = 160
                                    mem[(10 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 766
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                    call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _7457 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                    _7649 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                    mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                    require return_data.size >= _7457 + (32 * _7649) + 32
                                    mem[(11 * ceil32(return_data.size)) + 602 len 32 * _7649] = mem[(10 * ceil32(return_data.size)) + _7457 + 602 len 32 * _7649]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _11040 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_11040] == bool(mem[_11040])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _11808 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _12000 = mem[_11808]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _12000
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _12000
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _12576 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_12576] == bool(mem[_12576])
                                else:
                                    mem[(10 * ceil32(return_data.size)) + 474] = 3
                                    mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                    mem[(10 * ceil32(return_data.size)) + 538] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                    mem[(10 * ceil32(return_data.size)) + 570] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 602] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 606] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 638] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 670] = 160
                                    mem[(10 * ceil32(return_data.size)) + 766] = 3
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 798
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 3:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 702] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 734] = block.timestamp
                                    require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                    call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=3, data=mem[(10 * ceil32(return_data.size)) + 798 len 96]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 602 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 602
                                    require return_data.size >= 32
                                    _7458 = mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 633 < (10 * ceil32(return_data.size)) + return_data.size + 602
                                    _7650 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 602]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 602] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 602]) + 603 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 602]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 602]) + 603
                                    mem[(11 * ceil32(return_data.size)) + 602] = _7650
                                    require return_data.size >= _7458 + (32 * _7650) + 32
                                    mem[(11 * ceil32(return_data.size)) + 634 len 32 * _7650] = mem[(10 * ceil32(return_data.size)) + _7458 + 634 len 32 * _7650]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _11136 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_11136] == bool(mem[_11136])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _11904 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _12228 = mem[_11904]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _12228
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _12228
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _12672 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_12672] == bool(mem[_12672])
                        else:
                            if ext_call.return_data[18 len 14] and arg2 > -1 / ext_call.return_data[18 len 14]:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[18 len 14]:
                                revert with 'NH{q', 18
                            if ext_call.return_data[18 len 14] * arg2 / ext_call.return_data[18 len 14] != arg2:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not ext_call.return_data[18 len 14] * arg2:
                                if arg2 > ext_call.return_data[50 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[50 len 14] < arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[50 len 14] - arg2 and 997 > -1 / ext_call.return_data[50 len 14] - arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[50 len 14]) - (997 * arg2) / ext_call.return_data[50 len 14] - arg2 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                    revert with 'NH{q', 18
                                if 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2) > -2:
                                    revert with 'NH{q', 17
                                if (0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2)) + 1 < 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    if not cd[(arg4 + 132)]:
                                        mem[(10 * ceil32(return_data.size)) + 474] = 2
                                        mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                        mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                        mem[(10 * ceil32(return_data.size)) + 638] = 160
                                        mem[(10 * ceil32(return_data.size)) + 734] = 2
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + 766
                                        t = (10 * ceil32(return_data.size)) + 506
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                        mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                        require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                        call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + 570
                                        require return_data.size >= 32
                                        _7455 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                        _7647 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                        if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                            revert with 'NH{q', 65
                                        if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0:
                                            revert with 'NH{q', 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                        mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                        require return_data.size >= _7455 + (32 * _7647) + 32
                                        mem[(11 * ceil32(return_data.size)) + 602 len 32 * _7647] = mem[(10 * ceil32(return_data.size)) + _7455 + 602 len 32 * _7647]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11039 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_11039] == bool(mem[_11039])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11807 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _11999 = mem[_11807]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _11999
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _11999
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _12575 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_12575] == bool(mem[_12575])
                                    else:
                                        mem[(10 * ceil32(return_data.size)) + 474] = 3
                                        mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(10 * ceil32(return_data.size)) + 538] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                        mem[(10 * ceil32(return_data.size)) + 570] = address(ext_call.return_data[0])
                                        mem[(10 * ceil32(return_data.size)) + 602] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + 606] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        mem[(10 * ceil32(return_data.size)) + 638] = ext_call.return_data[0]
                                        mem[(10 * ceil32(return_data.size)) + 670] = 160
                                        mem[(10 * ceil32(return_data.size)) + 766] = 3
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + 798
                                        t = (10 * ceil32(return_data.size)) + 506
                                        while idx < 3:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + 702] = this.address
                                        mem[(10 * ceil32(return_data.size)) + 734] = block.timestamp
                                        require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                        call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=3, data=mem[(10 * ceil32(return_data.size)) + 798 len 96]), address(this.address), block.timestamp
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + 602 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + 602
                                        require return_data.size >= 32
                                        _7456 = mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 633 < (10 * ceil32(return_data.size)) + return_data.size + 602
                                        _7648 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 602]
                                        if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 602] > test266151307():
                                            revert with 'NH{q', 65
                                        if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 602]) + 603 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 602]) + 1 < 0:
                                            revert with 'NH{q', 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 602]) + 603
                                        mem[(11 * ceil32(return_data.size)) + 602] = _7648
                                        require return_data.size >= _7456 + (32 * _7648) + 32
                                        mem[(11 * ceil32(return_data.size)) + 634 len 32 * _7648] = mem[(10 * ceil32(return_data.size)) + _7456 + 634 len 32 * _7648]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11135 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_11135] == bool(mem[_11135])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11903 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _12225 = mem[_11903]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _12225
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _12225
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _12671 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_12671] == bool(mem[_12671])
                            else:
                                if ext_call.return_data[18 len 14] * arg2 and 1000 > -1 / ext_call.return_data[18 len 14] * arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] * arg2:
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[18 len 14] * arg2 / ext_call.return_data[18 len 14] * arg2 != 1000:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if arg2 > ext_call.return_data[50 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[50 len 14] < arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[50 len 14] - arg2 and 997 > -1 / ext_call.return_data[50 len 14] - arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[50 len 14]) - (997 * arg2) / ext_call.return_data[50 len 14] - arg2 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[18 len 14] * arg2 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2) > -2:
                                    revert with 'NH{q', 17
                                if (1000 * ext_call.return_data[18 len 14] * arg2 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2)) + 1 < 1000 * ext_call.return_data[18 len 14] * arg2 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    if not cd[(arg4 + 132)]:
                                        mem[(10 * ceil32(return_data.size)) + 474] = 2
                                        mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                        mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + 574] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                        mem[(10 * ceil32(return_data.size)) + 638] = 160
                                        mem[(10 * ceil32(return_data.size)) + 734] = 2
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + 766
                                        t = (10 * ceil32(return_data.size)) + 506
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                        mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                        require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                        call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + 570
                                        require return_data.size >= 32
                                        _7453 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                        _7645 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                        if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                            revert with 'NH{q', 65
                                        if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0:
                                            revert with 'NH{q', 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                        mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                        require return_data.size >= _7453 + (32 * _7645) + 32
                                        mem[(11 * ceil32(return_data.size)) + 602 len 32 * _7645] = mem[(10 * ceil32(return_data.size)) + _7453 + 602 len 32 * _7645]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11038 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_11038] == bool(mem[_11038])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11806 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _11998 = mem[_11806]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _11998
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _11998
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _12574 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_12574] == bool(mem[_12574])
                                    else:
                                        mem[(10 * ceil32(return_data.size)) + 474] = 3
                                        mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(10 * ceil32(return_data.size)) + 538] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                        mem[(10 * ceil32(return_data.size)) + 570] = address(ext_call.return_data[0])
                                        mem[(10 * ceil32(return_data.size)) + 602] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + 606] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        mem[(10 * ceil32(return_data.size)) + 638] = ext_call.return_data[0]
                                        mem[(10 * ceil32(return_data.size)) + 670] = 160
                                        mem[(10 * ceil32(return_data.size)) + 766] = 3
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + 798
                                        t = (10 * ceil32(return_data.size)) + 506
                                        while idx < 3:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + 702] = this.address
                                        mem[(10 * ceil32(return_data.size)) + 734] = block.timestamp
                                        require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                        call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=3, data=mem[(10 * ceil32(return_data.size)) + 798 len 96]), address(this.address), block.timestamp
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + 602 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + 602
                                        require return_data.size >= 32
                                        _7454 = mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 633 < (10 * ceil32(return_data.size)) + return_data.size + 602
                                        _7646 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 602]
                                        if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 602] > test266151307():
                                            revert with 'NH{q', 65
                                        if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 602]) + 603 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 602]) + 1 < 0:
                                            revert with 'NH{q', 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 602]) + 603
                                        mem[(11 * ceil32(return_data.size)) + 602] = _7646
                                        require return_data.size >= _7454 + (32 * _7646) + 32
                                        mem[(11 * ceil32(return_data.size)) + 634 len 32 * _7646] = mem[(10 * ceil32(return_data.size)) + _7454 + 634 len 32 * _7646]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11134 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_11134] == bool(mem[_11134])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11902 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _12222 = mem[_11902]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _12222
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _12222
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _12670 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_12670] == bool(mem[_12670])
                else:
                    if address(ext_call.return_data[0]) == address(ext_call.return_data[0]):
                        if ext_call.return_data[50 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 39
                            mem[(8 * ceil32(return_data.size)) + 542] = 'PangolinLibrary: INSUFFICIENT_LI'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'QUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if ext_call.return_data[18 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 39
                            mem[(8 * ceil32(return_data.size)) + 542] = 'PangolinLibrary: INSUFFICIENT_LI'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'QUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if not ext_call.return_data[50 len 14]:
                            if arg2 > ext_call.return_data[18 len 14]:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 30
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if ext_call.return_data[18 len 14] < arg2:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[18 len 14] - arg2:
                                revert with 'NH{q', 18
                            if ext_call.return_data[18 len 14] - arg2 and 997 > -1 / ext_call.return_data[18 len 14] - arg2:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[18 len 14] - arg2:
                                revert with 'NH{q', 18
                            if (997 * ext_call.return_data[18 len 14]) - (997 * arg2) / ext_call.return_data[18 len 14] - arg2 != 997:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                revert with 'NH{q', 18
                            if 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2) > -2:
                                revert with 'NH{q', 17
                            if (0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2)) + 1 < 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 27
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            else:
                                mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                if not cd[(arg4 + 132)]:
                                    mem[(10 * ceil32(return_data.size)) + 474] = 2
                                    mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                    mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 638] = 160
                                    mem[(10 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 766
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                    call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _7463 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                    _7655 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                    mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                    require return_data.size >= _7463 + (32 * _7655) + 32
                                    mem[(11 * ceil32(return_data.size)) + 602 len 32 * _7655] = mem[(10 * ceil32(return_data.size)) + _7463 + 602 len 32 * _7655]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _11043 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_11043] == bool(mem[_11043])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _11811 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _12003 = mem[_11811]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _12003
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _12003
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _12579 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_12579] == bool(mem[_12579])
                                else:
                                    mem[(10 * ceil32(return_data.size)) + 474] = 3
                                    mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                    mem[(10 * ceil32(return_data.size)) + 538] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                    mem[(10 * ceil32(return_data.size)) + 570] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 602] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 606] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 638] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 670] = 160
                                    mem[(10 * ceil32(return_data.size)) + 766] = 3
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 798
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 3:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 702] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 734] = block.timestamp
                                    require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                    call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=3, data=mem[(10 * ceil32(return_data.size)) + 798 len 96]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 602 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 602
                                    require return_data.size >= 32
                                    _7464 = mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 633 < (10 * ceil32(return_data.size)) + return_data.size + 602
                                    _7656 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 602]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 602] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 602]) + 603 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 602]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 602]) + 603
                                    mem[(11 * ceil32(return_data.size)) + 602] = _7656
                                    require return_data.size >= _7464 + (32 * _7656) + 32
                                    mem[(11 * ceil32(return_data.size)) + 634 len 32 * _7656] = mem[(10 * ceil32(return_data.size)) + _7464 + 634 len 32 * _7656]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _11139 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_11139] == bool(mem[_11139])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _11907 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _12237 = mem[_11907]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _12237
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _12237
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _12675 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_12675] == bool(mem[_12675])
                        else:
                            if ext_call.return_data[50 len 14] and arg2 > -1 / ext_call.return_data[50 len 14]:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[50 len 14]:
                                revert with 'NH{q', 18
                            if ext_call.return_data[50 len 14] * arg2 / ext_call.return_data[50 len 14] != arg2:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not ext_call.return_data[50 len 14] * arg2:
                                if arg2 > ext_call.return_data[18 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[18 len 14] < arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[18 len 14] - arg2 and 997 > -1 / ext_call.return_data[18 len 14] - arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[18 len 14]) - (997 * arg2) / ext_call.return_data[18 len 14] - arg2 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                    revert with 'NH{q', 18
                                if 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2) > -2:
                                    revert with 'NH{q', 17
                                if (0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2)) + 1 < 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    if not cd[(arg4 + 132)]:
                                        mem[(10 * ceil32(return_data.size)) + 474] = 2
                                        mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                        mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                        mem[(10 * ceil32(return_data.size)) + 638] = 160
                                        mem[(10 * ceil32(return_data.size)) + 734] = 2
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + 766
                                        t = (10 * ceil32(return_data.size)) + 506
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                        mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                        require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                        call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + 570
                                        require return_data.size >= 32
                                        _7461 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                        _7653 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                        if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                            revert with 'NH{q', 65
                                        if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0:
                                            revert with 'NH{q', 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                        mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                        require return_data.size >= _7461 + (32 * _7653) + 32
                                        mem[(11 * ceil32(return_data.size)) + 602 len 32 * _7653] = mem[(10 * ceil32(return_data.size)) + _7461 + 602 len 32 * _7653]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11042 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_11042] == bool(mem[_11042])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11810 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _12002 = mem[_11810]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _12002
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _12002
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _12578 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_12578] == bool(mem[_12578])
                                    else:
                                        mem[(10 * ceil32(return_data.size)) + 474] = 3
                                        mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(10 * ceil32(return_data.size)) + 538] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                        mem[(10 * ceil32(return_data.size)) + 570] = address(ext_call.return_data[0])
                                        mem[(10 * ceil32(return_data.size)) + 602] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + 606] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        mem[(10 * ceil32(return_data.size)) + 638] = ext_call.return_data[0]
                                        mem[(10 * ceil32(return_data.size)) + 670] = 160
                                        mem[(10 * ceil32(return_data.size)) + 766] = 3
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + 798
                                        t = (10 * ceil32(return_data.size)) + 506
                                        while idx < 3:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + 702] = this.address
                                        mem[(10 * ceil32(return_data.size)) + 734] = block.timestamp
                                        require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                        call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=3, data=mem[(10 * ceil32(return_data.size)) + 798 len 96]), address(this.address), block.timestamp
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + 602 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + 602
                                        require return_data.size >= 32
                                        _7462 = mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 633 < (10 * ceil32(return_data.size)) + return_data.size + 602
                                        _7654 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 602]
                                        if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 602] > test266151307():
                                            revert with 'NH{q', 65
                                        if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 602]) + 603 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 602]) + 1 < 0:
                                            revert with 'NH{q', 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 602]) + 603
                                        mem[(11 * ceil32(return_data.size)) + 602] = _7654
                                        require return_data.size >= _7462 + (32 * _7654) + 32
                                        mem[(11 * ceil32(return_data.size)) + 634 len 32 * _7654] = mem[(10 * ceil32(return_data.size)) + _7462 + 634 len 32 * _7654]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11138 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_11138] == bool(mem[_11138])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11906 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _12234 = mem[_11906]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _12234
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _12234
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _12674 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_12674] == bool(mem[_12674])
                            else:
                                if ext_call.return_data[50 len 14] * arg2 and 1000 > -1 / ext_call.return_data[50 len 14] * arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] * arg2:
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[50 len 14] * arg2 / ext_call.return_data[50 len 14] * arg2 != 1000:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if arg2 > ext_call.return_data[18 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[18 len 14] < arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[18 len 14] - arg2 and 997 > -1 / ext_call.return_data[18 len 14] - arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[18 len 14]) - (997 * arg2) / ext_call.return_data[18 len 14] - arg2 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[50 len 14] * arg2 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2) > -2:
                                    revert with 'NH{q', 17
                                if (1000 * ext_call.return_data[50 len 14] * arg2 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2)) + 1 < 1000 * ext_call.return_data[50 len 14] * arg2 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    if not cd[(arg4 + 132)]:
                                        mem[(10 * ceil32(return_data.size)) + 474] = 2
                                        mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                        mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + 574] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                        mem[(10 * ceil32(return_data.size)) + 638] = 160
                                        mem[(10 * ceil32(return_data.size)) + 734] = 2
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + 766
                                        t = (10 * ceil32(return_data.size)) + 506
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                        mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                        require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                        call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + 570
                                        require return_data.size >= 32
                                        _7459 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                        _7651 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                        if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                            revert with 'NH{q', 65
                                        if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0:
                                            revert with 'NH{q', 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                        mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                        require return_data.size >= _7459 + (32 * _7651) + 32
                                        mem[(11 * ceil32(return_data.size)) + 602 len 32 * _7651] = mem[(10 * ceil32(return_data.size)) + _7459 + 602 len 32 * _7651]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11041 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_11041] == bool(mem[_11041])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11809 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _12001 = mem[_11809]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _12001
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _12001
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _12577 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_12577] == bool(mem[_12577])
                                    else:
                                        mem[(10 * ceil32(return_data.size)) + 474] = 3
                                        mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(10 * ceil32(return_data.size)) + 538] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                        mem[(10 * ceil32(return_data.size)) + 570] = address(ext_call.return_data[0])
                                        mem[(10 * ceil32(return_data.size)) + 602] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + 606] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        mem[(10 * ceil32(return_data.size)) + 638] = ext_call.return_data[0]
                                        mem[(10 * ceil32(return_data.size)) + 670] = 160
                                        mem[(10 * ceil32(return_data.size)) + 766] = 3
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + 798
                                        t = (10 * ceil32(return_data.size)) + 506
                                        while idx < 3:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + 702] = this.address
                                        mem[(10 * ceil32(return_data.size)) + 734] = block.timestamp
                                        require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                        call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=3, data=mem[(10 * ceil32(return_data.size)) + 798 len 96]), address(this.address), block.timestamp
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + 602 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + 602
                                        require return_data.size >= 32
                                        _7460 = mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 633 < (10 * ceil32(return_data.size)) + return_data.size + 602
                                        _7652 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 602]
                                        if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 602] > test266151307():
                                            revert with 'NH{q', 65
                                        if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 602]) + 603 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 602]) + 1 < 0:
                                            revert with 'NH{q', 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 602]) + 603
                                        mem[(11 * ceil32(return_data.size)) + 602] = _7652
                                        require return_data.size >= _7460 + (32 * _7652) + 32
                                        mem[(11 * ceil32(return_data.size)) + 634 len 32 * _7652] = mem[(10 * ceil32(return_data.size)) + _7460 + 634 len 32 * _7652]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11137 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_11137] == bool(mem[_11137])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11905 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _12231 = mem[_11905]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _12231
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _12231
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _12673 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_12673] == bool(mem[_12673])
                    else:
                        if ext_call.return_data[18 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 39
                            mem[(8 * ceil32(return_data.size)) + 542] = 'PangolinLibrary: INSUFFICIENT_LI'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'QUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if ext_call.return_data[50 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 39
                            mem[(8 * ceil32(return_data.size)) + 542] = 'PangolinLibrary: INSUFFICIENT_LI'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'QUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if not ext_call.return_data[18 len 14]:
                            if arg2 > ext_call.return_data[50 len 14]:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 30
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if ext_call.return_data[50 len 14] < arg2:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[50 len 14] - arg2:
                                revert with 'NH{q', 18
                            if ext_call.return_data[50 len 14] - arg2 and 997 > -1 / ext_call.return_data[50 len 14] - arg2:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[50 len 14] - arg2:
                                revert with 'NH{q', 18
                            if (997 * ext_call.return_data[50 len 14]) - (997 * arg2) / ext_call.return_data[50 len 14] - arg2 != 997:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                revert with 'NH{q', 18
                            if 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2) > -2:
                                revert with 'NH{q', 17
                            if (0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2)) + 1 < 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 27
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            else:
                                mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                if not cd[(arg4 + 132)]:
                                    mem[(10 * ceil32(return_data.size)) + 474] = 2
                                    mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                    mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 638] = 160
                                    mem[(10 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 766
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                    call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _7469 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                    _7661 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                    mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                    require return_data.size >= _7469 + (32 * _7661) + 32
                                    mem[(11 * ceil32(return_data.size)) + 602 len 32 * _7661] = mem[(10 * ceil32(return_data.size)) + _7469 + 602 len 32 * _7661]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _11046 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_11046] == bool(mem[_11046])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _11814 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _12006 = mem[_11814]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _12006
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _12006
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _12582 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_12582] == bool(mem[_12582])
                                else:
                                    mem[(10 * ceil32(return_data.size)) + 474] = 3
                                    mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                    mem[(10 * ceil32(return_data.size)) + 538] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                    mem[(10 * ceil32(return_data.size)) + 570] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 602] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 606] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 638] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 670] = 160
                                    mem[(10 * ceil32(return_data.size)) + 766] = 3
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 798
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 3:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 702] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 734] = block.timestamp
                                    require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                    call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=3, data=mem[(10 * ceil32(return_data.size)) + 798 len 96]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 602 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 602
                                    require return_data.size >= 32
                                    _7470 = mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 633 < (10 * ceil32(return_data.size)) + return_data.size + 602
                                    _7662 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 602]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 602] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 602]) + 603 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 602]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 602]) + 603
                                    mem[(11 * ceil32(return_data.size)) + 602] = _7662
                                    require return_data.size >= _7470 + (32 * _7662) + 32
                                    mem[(11 * ceil32(return_data.size)) + 634 len 32 * _7662] = mem[(10 * ceil32(return_data.size)) + _7470 + 634 len 32 * _7662]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _11142 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_11142] == bool(mem[_11142])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _11910 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _12246 = mem[_11910]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _12246
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _12246
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _12678 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_12678] == bool(mem[_12678])
                        else:
                            if ext_call.return_data[18 len 14] and arg2 > -1 / ext_call.return_data[18 len 14]:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[18 len 14]:
                                revert with 'NH{q', 18
                            if ext_call.return_data[18 len 14] * arg2 / ext_call.return_data[18 len 14] != arg2:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not ext_call.return_data[18 len 14] * arg2:
                                if arg2 > ext_call.return_data[50 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[50 len 14] < arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[50 len 14] - arg2 and 997 > -1 / ext_call.return_data[50 len 14] - arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[50 len 14]) - (997 * arg2) / ext_call.return_data[50 len 14] - arg2 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                    revert with 'NH{q', 18
                                if 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2) > -2:
                                    revert with 'NH{q', 17
                                if (0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2)) + 1 < 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    if not cd[(arg4 + 132)]:
                                        mem[(10 * ceil32(return_data.size)) + 474] = 2
                                        mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                        mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                        mem[(10 * ceil32(return_data.size)) + 638] = 160
                                        mem[(10 * ceil32(return_data.size)) + 734] = 2
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + 766
                                        t = (10 * ceil32(return_data.size)) + 506
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                        mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                        require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                        call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + 570
                                        require return_data.size >= 32
                                        _7467 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                        _7659 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                        if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                            revert with 'NH{q', 65
                                        if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0:
                                            revert with 'NH{q', 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                        mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                        require return_data.size >= _7467 + (32 * _7659) + 32
                                        mem[(11 * ceil32(return_data.size)) + 602 len 32 * _7659] = mem[(10 * ceil32(return_data.size)) + _7467 + 602 len 32 * _7659]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11045 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_11045] == bool(mem[_11045])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11813 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _12005 = mem[_11813]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _12005
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _12005
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _12581 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_12581] == bool(mem[_12581])
                                    else:
                                        mem[(10 * ceil32(return_data.size)) + 474] = 3
                                        mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(10 * ceil32(return_data.size)) + 538] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                        mem[(10 * ceil32(return_data.size)) + 570] = address(ext_call.return_data[0])
                                        mem[(10 * ceil32(return_data.size)) + 602] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + 606] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        mem[(10 * ceil32(return_data.size)) + 638] = ext_call.return_data[0]
                                        mem[(10 * ceil32(return_data.size)) + 670] = 160
                                        mem[(10 * ceil32(return_data.size)) + 766] = 3
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + 798
                                        t = (10 * ceil32(return_data.size)) + 506
                                        while idx < 3:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + 702] = this.address
                                        mem[(10 * ceil32(return_data.size)) + 734] = block.timestamp
                                        require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                        call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=3, data=mem[(10 * ceil32(return_data.size)) + 798 len 96]), address(this.address), block.timestamp
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + 602 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + 602
                                        require return_data.size >= 32
                                        _7468 = mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 633 < (10 * ceil32(return_data.size)) + return_data.size + 602
                                        _7660 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 602]
                                        if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 602] > test266151307():
                                            revert with 'NH{q', 65
                                        if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 602]) + 603 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 602]) + 1 < 0:
                                            revert with 'NH{q', 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 602]) + 603
                                        mem[(11 * ceil32(return_data.size)) + 602] = _7660
                                        require return_data.size >= _7468 + (32 * _7660) + 32
                                        mem[(11 * ceil32(return_data.size)) + 634 len 32 * _7660] = mem[(10 * ceil32(return_data.size)) + _7468 + 634 len 32 * _7660]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11141 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_11141] == bool(mem[_11141])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11909 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _12243 = mem[_11909]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _12243
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _12243
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _12677 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_12677] == bool(mem[_12677])
                            else:
                                if ext_call.return_data[18 len 14] * arg2 and 1000 > -1 / ext_call.return_data[18 len 14] * arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] * arg2:
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[18 len 14] * arg2 / ext_call.return_data[18 len 14] * arg2 != 1000:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if arg2 > ext_call.return_data[50 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[50 len 14] < arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[50 len 14] - arg2 and 997 > -1 / ext_call.return_data[50 len 14] - arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[50 len 14]) - (997 * arg2) / ext_call.return_data[50 len 14] - arg2 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[18 len 14] * arg2 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2) > -2:
                                    revert with 'NH{q', 17
                                if (1000 * ext_call.return_data[18 len 14] * arg2 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2)) + 1 < 1000 * ext_call.return_data[18 len 14] * arg2 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    if not cd[(arg4 + 132)]:
                                        mem[(10 * ceil32(return_data.size)) + 474] = 2
                                        mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                        mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + 574] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                        mem[(10 * ceil32(return_data.size)) + 638] = 160
                                        mem[(10 * ceil32(return_data.size)) + 734] = 2
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + 766
                                        t = (10 * ceil32(return_data.size)) + 506
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                        mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                        require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                        call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + 570
                                        require return_data.size >= 32
                                        _7465 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                        _7657 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                        if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                            revert with 'NH{q', 65
                                        if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0:
                                            revert with 'NH{q', 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                        mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                        require return_data.size >= _7465 + (32 * _7657) + 32
                                        mem[(11 * ceil32(return_data.size)) + 602 len 32 * _7657] = mem[(10 * ceil32(return_data.size)) + _7465 + 602 len 32 * _7657]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11044 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_11044] == bool(mem[_11044])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11812 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _12004 = mem[_11812]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _12004
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _12004
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _12580 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_12580] == bool(mem[_12580])
                                    else:
                                        mem[(10 * ceil32(return_data.size)) + 474] = 3
                                        mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(10 * ceil32(return_data.size)) + 538] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                        mem[(10 * ceil32(return_data.size)) + 570] = address(ext_call.return_data[0])
                                        mem[(10 * ceil32(return_data.size)) + 602] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + 606] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        mem[(10 * ceil32(return_data.size)) + 638] = ext_call.return_data[0]
                                        mem[(10 * ceil32(return_data.size)) + 670] = 160
                                        mem[(10 * ceil32(return_data.size)) + 766] = 3
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + 798
                                        t = (10 * ceil32(return_data.size)) + 506
                                        while idx < 3:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + 702] = this.address
                                        mem[(10 * ceil32(return_data.size)) + 734] = block.timestamp
                                        require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                        call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=3, data=mem[(10 * ceil32(return_data.size)) + 798 len 96]), address(this.address), block.timestamp
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + 602 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + 602
                                        require return_data.size >= 32
                                        _7466 = mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 633 < (10 * ceil32(return_data.size)) + return_data.size + 602
                                        _7658 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 602]
                                        if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 602] > test266151307():
                                            revert with 'NH{q', 65
                                        if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 602]) + 603 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 602]) + 1 < 0:
                                            revert with 'NH{q', 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 602]) + 603
                                        mem[(11 * ceil32(return_data.size)) + 602] = _7658
                                        require return_data.size >= _7466 + (32 * _7658) + 32
                                        mem[(11 * ceil32(return_data.size)) + 634 len 32 * _7658] = mem[(10 * ceil32(return_data.size)) + _7466 + 634 len 32 * _7658]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11140 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_11140] == bool(mem[_11140])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11908 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _12240 = mem[_11908]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _12240
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _12240
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _12676 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_12676] == bool(mem[_12676])
        else:
            if address(ext_call.return_data[0]) < address(ext_call.return_data[0]):
                if address(ext_call.return_data[0]) < address(ext_call.return_data[0]):
                    if address(ext_call.return_data[0]) == address(ext_call.return_data[0]):
                        if ext_call.return_data[50 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 39
                            mem[(8 * ceil32(return_data.size)) + 542] = 'PangolinLibrary: INSUFFICIENT_LI'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'QUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if ext_call.return_data[18 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 39
                            mem[(8 * ceil32(return_data.size)) + 542] = 'PangolinLibrary: INSUFFICIENT_LI'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'QUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if not ext_call.return_data[50 len 14]:
                            if arg2 > ext_call.return_data[18 len 14]:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 30
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if ext_call.return_data[18 len 14] < arg2:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[18 len 14] - arg2:
                                revert with 'NH{q', 18
                            if ext_call.return_data[18 len 14] - arg2 and 997 > -1 / ext_call.return_data[18 len 14] - arg2:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[18 len 14] - arg2:
                                revert with 'NH{q', 18
                            if (997 * ext_call.return_data[18 len 14]) - (997 * arg2) / ext_call.return_data[18 len 14] - arg2 != 997:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                revert with 'NH{q', 18
                            if 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2) > -2:
                                revert with 'NH{q', 17
                            if (0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2)) + 1 < 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 27
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            else:
                                mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                if not cd[(arg4 + 132)]:
                                    mem[(10 * ceil32(return_data.size)) + 474] = 2
                                    mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                    mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 638] = 160
                                    mem[(10 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 766
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                    call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _7475 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                    _7667 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                    mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                    require return_data.size >= _7475 + (32 * _7667) + 32
                                    mem[(11 * ceil32(return_data.size)) + 602 len 32 * _7667] = mem[(10 * ceil32(return_data.size)) + _7475 + 602 len 32 * _7667]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _11049 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_11049] == bool(mem[_11049])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _11817 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _12009 = mem[_11817]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _12009
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _12009
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _12585 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_12585] == bool(mem[_12585])
                                else:
                                    mem[(10 * ceil32(return_data.size)) + 474] = 3
                                    mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                    mem[(10 * ceil32(return_data.size)) + 538] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                    mem[(10 * ceil32(return_data.size)) + 570] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 602] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 606] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 638] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 670] = 160
                                    mem[(10 * ceil32(return_data.size)) + 766] = 3
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 798
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 3:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 702] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 734] = block.timestamp
                                    require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                    call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=3, data=mem[(10 * ceil32(return_data.size)) + 798 len 96]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 602 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 602
                                    require return_data.size >= 32
                                    _7476 = mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 633 < (10 * ceil32(return_data.size)) + return_data.size + 602
                                    _7668 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 602]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 602] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 602]) + 603 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 602]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 602]) + 603
                                    mem[(11 * ceil32(return_data.size)) + 602] = _7668
                                    require return_data.size >= _7476 + (32 * _7668) + 32
                                    mem[(11 * ceil32(return_data.size)) + 634 len 32 * _7668] = mem[(10 * ceil32(return_data.size)) + _7476 + 634 len 32 * _7668]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _11145 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_11145] == bool(mem[_11145])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _11913 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _12255 = mem[_11913]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _12255
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _12255
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _12681 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_12681] == bool(mem[_12681])
                        else:
                            if ext_call.return_data[50 len 14] and arg2 > -1 / ext_call.return_data[50 len 14]:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[50 len 14]:
                                revert with 'NH{q', 18
                            if ext_call.return_data[50 len 14] * arg2 / ext_call.return_data[50 len 14] != arg2:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not ext_call.return_data[50 len 14] * arg2:
                                if arg2 > ext_call.return_data[18 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[18 len 14] < arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[18 len 14] - arg2 and 997 > -1 / ext_call.return_data[18 len 14] - arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[18 len 14]) - (997 * arg2) / ext_call.return_data[18 len 14] - arg2 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                    revert with 'NH{q', 18
                                if 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2) > -2:
                                    revert with 'NH{q', 17
                                if (0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2)) + 1 < 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    if not cd[(arg4 + 132)]:
                                        mem[(10 * ceil32(return_data.size)) + 474] = 2
                                        mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                        mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                        mem[(10 * ceil32(return_data.size)) + 638] = 160
                                        mem[(10 * ceil32(return_data.size)) + 734] = 2
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + 766
                                        t = (10 * ceil32(return_data.size)) + 506
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                        mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                        require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                        call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + 570
                                        require return_data.size >= 32
                                        _7473 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                        _7665 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                        if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                            revert with 'NH{q', 65
                                        if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0:
                                            revert with 'NH{q', 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                        mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                        require return_data.size >= _7473 + (32 * _7665) + 32
                                        mem[(11 * ceil32(return_data.size)) + 602 len 32 * _7665] = mem[(10 * ceil32(return_data.size)) + _7473 + 602 len 32 * _7665]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11048 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_11048] == bool(mem[_11048])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11816 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _12008 = mem[_11816]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _12008
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _12008
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _12584 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_12584] == bool(mem[_12584])
                                    else:
                                        mem[(10 * ceil32(return_data.size)) + 474] = 3
                                        mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(10 * ceil32(return_data.size)) + 538] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                        mem[(10 * ceil32(return_data.size)) + 570] = address(ext_call.return_data[0])
                                        mem[(10 * ceil32(return_data.size)) + 602] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + 606] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        mem[(10 * ceil32(return_data.size)) + 638] = ext_call.return_data[0]
                                        mem[(10 * ceil32(return_data.size)) + 670] = 160
                                        mem[(10 * ceil32(return_data.size)) + 766] = 3
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + 798
                                        t = (10 * ceil32(return_data.size)) + 506
                                        while idx < 3:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + 702] = this.address
                                        mem[(10 * ceil32(return_data.size)) + 734] = block.timestamp
                                        require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                        call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=3, data=mem[(10 * ceil32(return_data.size)) + 798 len 96]), address(this.address), block.timestamp
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + 602 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + 602
                                        require return_data.size >= 32
                                        _7474 = mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 633 < (10 * ceil32(return_data.size)) + return_data.size + 602
                                        _7666 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 602]
                                        if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 602] > test266151307():
                                            revert with 'NH{q', 65
                                        if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 602]) + 603 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 602]) + 1 < 0:
                                            revert with 'NH{q', 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 602]) + 603
                                        mem[(11 * ceil32(return_data.size)) + 602] = _7666
                                        require return_data.size >= _7474 + (32 * _7666) + 32
                                        mem[(11 * ceil32(return_data.size)) + 634 len 32 * _7666] = mem[(10 * ceil32(return_data.size)) + _7474 + 634 len 32 * _7666]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11144 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_11144] == bool(mem[_11144])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11912 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _12252 = mem[_11912]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _12252
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _12252
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _12680 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_12680] == bool(mem[_12680])
                            else:
                                if ext_call.return_data[50 len 14] * arg2 and 1000 > -1 / ext_call.return_data[50 len 14] * arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] * arg2:
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[50 len 14] * arg2 / ext_call.return_data[50 len 14] * arg2 != 1000:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if arg2 > ext_call.return_data[18 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[18 len 14] < arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[18 len 14] - arg2 and 997 > -1 / ext_call.return_data[18 len 14] - arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[18 len 14]) - (997 * arg2) / ext_call.return_data[18 len 14] - arg2 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[50 len 14] * arg2 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2) > -2:
                                    revert with 'NH{q', 17
                                if (1000 * ext_call.return_data[50 len 14] * arg2 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2)) + 1 < 1000 * ext_call.return_data[50 len 14] * arg2 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    if not cd[(arg4 + 132)]:
                                        mem[(10 * ceil32(return_data.size)) + 474] = 2
                                        mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                        mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + 574] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                        mem[(10 * ceil32(return_data.size)) + 638] = 160
                                        mem[(10 * ceil32(return_data.size)) + 734] = 2
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + 766
                                        t = (10 * ceil32(return_data.size)) + 506
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                        mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                        require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                        call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + 570
                                        require return_data.size >= 32
                                        _7471 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                        _7663 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                        if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                            revert with 'NH{q', 65
                                        if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0:
                                            revert with 'NH{q', 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                        mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                        require return_data.size >= _7471 + (32 * _7663) + 32
                                        mem[(11 * ceil32(return_data.size)) + 602 len 32 * _7663] = mem[(10 * ceil32(return_data.size)) + _7471 + 602 len 32 * _7663]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11047 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_11047] == bool(mem[_11047])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11815 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _12007 = mem[_11815]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _12007
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _12007
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _12583 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_12583] == bool(mem[_12583])
                                    else:
                                        mem[(10 * ceil32(return_data.size)) + 474] = 3
                                        mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(10 * ceil32(return_data.size)) + 538] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                        mem[(10 * ceil32(return_data.size)) + 570] = address(ext_call.return_data[0])
                                        mem[(10 * ceil32(return_data.size)) + 602] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + 606] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        mem[(10 * ceil32(return_data.size)) + 638] = ext_call.return_data[0]
                                        mem[(10 * ceil32(return_data.size)) + 670] = 160
                                        mem[(10 * ceil32(return_data.size)) + 766] = 3
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + 798
                                        t = (10 * ceil32(return_data.size)) + 506
                                        while idx < 3:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + 702] = this.address
                                        mem[(10 * ceil32(return_data.size)) + 734] = block.timestamp
                                        require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                        call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=3, data=mem[(10 * ceil32(return_data.size)) + 798 len 96]), address(this.address), block.timestamp
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + 602 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + 602
                                        require return_data.size >= 32
                                        _7472 = mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 633 < (10 * ceil32(return_data.size)) + return_data.size + 602
                                        _7664 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 602]
                                        if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 602] > test266151307():
                                            revert with 'NH{q', 65
                                        if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 602]) + 603 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 602]) + 1 < 0:
                                            revert with 'NH{q', 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 602]) + 603
                                        mem[(11 * ceil32(return_data.size)) + 602] = _7664
                                        require return_data.size >= _7472 + (32 * _7664) + 32
                                        mem[(11 * ceil32(return_data.size)) + 634 len 32 * _7664] = mem[(10 * ceil32(return_data.size)) + _7472 + 634 len 32 * _7664]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11143 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_11143] == bool(mem[_11143])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11911 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _12249 = mem[_11911]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _12249
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _12249
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _12679 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_12679] == bool(mem[_12679])
                    else:
                        if ext_call.return_data[18 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 39
                            mem[(8 * ceil32(return_data.size)) + 542] = 'PangolinLibrary: INSUFFICIENT_LI'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'QUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if ext_call.return_data[50 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 39
                            mem[(8 * ceil32(return_data.size)) + 542] = 'PangolinLibrary: INSUFFICIENT_LI'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'QUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if not ext_call.return_data[18 len 14]:
                            if arg2 > ext_call.return_data[50 len 14]:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 30
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if ext_call.return_data[50 len 14] < arg2:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[50 len 14] - arg2:
                                revert with 'NH{q', 18
                            if ext_call.return_data[50 len 14] - arg2 and 997 > -1 / ext_call.return_data[50 len 14] - arg2:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[50 len 14] - arg2:
                                revert with 'NH{q', 18
                            if (997 * ext_call.return_data[50 len 14]) - (997 * arg2) / ext_call.return_data[50 len 14] - arg2 != 997:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                revert with 'NH{q', 18
                            if 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2) > -2:
                                revert with 'NH{q', 17
                            if (0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2)) + 1 < 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 27
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            else:
                                mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                if not cd[(arg4 + 132)]:
                                    mem[(10 * ceil32(return_data.size)) + 474] = 2
                                    mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                    mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 638] = 160
                                    mem[(10 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 766
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                    call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _7481 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                    _7673 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                    mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                    require return_data.size >= _7481 + (32 * _7673) + 32
                                    mem[(11 * ceil32(return_data.size)) + 602 len 32 * _7673] = mem[(10 * ceil32(return_data.size)) + _7481 + 602 len 32 * _7673]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _11052 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_11052] == bool(mem[_11052])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _11820 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _12012 = mem[_11820]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _12012
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _12012
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _12588 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_12588] == bool(mem[_12588])
                                else:
                                    mem[(10 * ceil32(return_data.size)) + 474] = 3
                                    mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                    mem[(10 * ceil32(return_data.size)) + 538] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                    mem[(10 * ceil32(return_data.size)) + 570] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 602] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 606] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 638] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 670] = 160
                                    mem[(10 * ceil32(return_data.size)) + 766] = 3
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 798
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 3:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 702] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 734] = block.timestamp
                                    require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                    call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=3, data=mem[(10 * ceil32(return_data.size)) + 798 len 96]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 602 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 602
                                    require return_data.size >= 32
                                    _7482 = mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 633 < (10 * ceil32(return_data.size)) + return_data.size + 602
                                    _7674 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 602]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 602] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 602]) + 603 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 602]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 602]) + 603
                                    mem[(11 * ceil32(return_data.size)) + 602] = _7674
                                    require return_data.size >= _7482 + (32 * _7674) + 32
                                    mem[(11 * ceil32(return_data.size)) + 634 len 32 * _7674] = mem[(10 * ceil32(return_data.size)) + _7482 + 634 len 32 * _7674]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _11148 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_11148] == bool(mem[_11148])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _11916 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _12264 = mem[_11916]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _12264
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _12264
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _12684 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_12684] == bool(mem[_12684])
                        else:
                            if ext_call.return_data[18 len 14] and arg2 > -1 / ext_call.return_data[18 len 14]:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[18 len 14]:
                                revert with 'NH{q', 18
                            if ext_call.return_data[18 len 14] * arg2 / ext_call.return_data[18 len 14] != arg2:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not ext_call.return_data[18 len 14] * arg2:
                                if arg2 > ext_call.return_data[50 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[50 len 14] < arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[50 len 14] - arg2 and 997 > -1 / ext_call.return_data[50 len 14] - arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[50 len 14]) - (997 * arg2) / ext_call.return_data[50 len 14] - arg2 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                    revert with 'NH{q', 18
                                if 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2) > -2:
                                    revert with 'NH{q', 17
                                if (0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2)) + 1 < 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    if not cd[(arg4 + 132)]:
                                        mem[(10 * ceil32(return_data.size)) + 474] = 2
                                        mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                        mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                        mem[(10 * ceil32(return_data.size)) + 638] = 160
                                        mem[(10 * ceil32(return_data.size)) + 734] = 2
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + 766
                                        t = (10 * ceil32(return_data.size)) + 506
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                        mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                        require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                        call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + 570
                                        require return_data.size >= 32
                                        _7479 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                        _7671 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                        if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                            revert with 'NH{q', 65
                                        if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0:
                                            revert with 'NH{q', 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                        mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                        require return_data.size >= _7479 + (32 * _7671) + 32
                                        mem[(11 * ceil32(return_data.size)) + 602 len 32 * _7671] = mem[(10 * ceil32(return_data.size)) + _7479 + 602 len 32 * _7671]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11051 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_11051] == bool(mem[_11051])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11819 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _12011 = mem[_11819]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _12011
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _12011
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _12587 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_12587] == bool(mem[_12587])
                                    else:
                                        mem[(10 * ceil32(return_data.size)) + 474] = 3
                                        mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(10 * ceil32(return_data.size)) + 538] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                        mem[(10 * ceil32(return_data.size)) + 570] = address(ext_call.return_data[0])
                                        mem[(10 * ceil32(return_data.size)) + 602] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + 606] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        mem[(10 * ceil32(return_data.size)) + 638] = ext_call.return_data[0]
                                        mem[(10 * ceil32(return_data.size)) + 670] = 160
                                        mem[(10 * ceil32(return_data.size)) + 766] = 3
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + 798
                                        t = (10 * ceil32(return_data.size)) + 506
                                        while idx < 3:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + 702] = this.address
                                        mem[(10 * ceil32(return_data.size)) + 734] = block.timestamp
                                        require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                        call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=3, data=mem[(10 * ceil32(return_data.size)) + 798 len 96]), address(this.address), block.timestamp
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + 602 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + 602
                                        require return_data.size >= 32
                                        _7480 = mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 633 < (10 * ceil32(return_data.size)) + return_data.size + 602
                                        _7672 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 602]
                                        if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 602] > test266151307():
                                            revert with 'NH{q', 65
                                        if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 602]) + 603 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 602]) + 1 < 0:
                                            revert with 'NH{q', 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 602]) + 603
                                        mem[(11 * ceil32(return_data.size)) + 602] = _7672
                                        require return_data.size >= _7480 + (32 * _7672) + 32
                                        mem[(11 * ceil32(return_data.size)) + 634 len 32 * _7672] = mem[(10 * ceil32(return_data.size)) + _7480 + 634 len 32 * _7672]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11147 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_11147] == bool(mem[_11147])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11915 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _12261 = mem[_11915]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _12261
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _12261
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _12683 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_12683] == bool(mem[_12683])
                            else:
                                if ext_call.return_data[18 len 14] * arg2 and 1000 > -1 / ext_call.return_data[18 len 14] * arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] * arg2:
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[18 len 14] * arg2 / ext_call.return_data[18 len 14] * arg2 != 1000:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if arg2 > ext_call.return_data[50 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[50 len 14] < arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[50 len 14] - arg2 and 997 > -1 / ext_call.return_data[50 len 14] - arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[50 len 14]) - (997 * arg2) / ext_call.return_data[50 len 14] - arg2 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[18 len 14] * arg2 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2) > -2:
                                    revert with 'NH{q', 17
                                if (1000 * ext_call.return_data[18 len 14] * arg2 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2)) + 1 < 1000 * ext_call.return_data[18 len 14] * arg2 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    if not cd[(arg4 + 132)]:
                                        mem[(10 * ceil32(return_data.size)) + 474] = 2
                                        mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                        mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + 574] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                        mem[(10 * ceil32(return_data.size)) + 638] = 160
                                        mem[(10 * ceil32(return_data.size)) + 734] = 2
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + 766
                                        t = (10 * ceil32(return_data.size)) + 506
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                        mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                        require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                        call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + 570
                                        require return_data.size >= 32
                                        _7477 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                        _7669 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                        if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                            revert with 'NH{q', 65
                                        if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0:
                                            revert with 'NH{q', 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                        mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                        require return_data.size >= _7477 + (32 * _7669) + 32
                                        mem[(11 * ceil32(return_data.size)) + 602 len 32 * _7669] = mem[(10 * ceil32(return_data.size)) + _7477 + 602 len 32 * _7669]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11050 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_11050] == bool(mem[_11050])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11818 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _12010 = mem[_11818]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _12010
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _12010
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _12586 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_12586] == bool(mem[_12586])
                                    else:
                                        mem[(10 * ceil32(return_data.size)) + 474] = 3
                                        mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(10 * ceil32(return_data.size)) + 538] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                        mem[(10 * ceil32(return_data.size)) + 570] = address(ext_call.return_data[0])
                                        mem[(10 * ceil32(return_data.size)) + 602] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + 606] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        mem[(10 * ceil32(return_data.size)) + 638] = ext_call.return_data[0]
                                        mem[(10 * ceil32(return_data.size)) + 670] = 160
                                        mem[(10 * ceil32(return_data.size)) + 766] = 3
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + 798
                                        t = (10 * ceil32(return_data.size)) + 506
                                        while idx < 3:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + 702] = this.address
                                        mem[(10 * ceil32(return_data.size)) + 734] = block.timestamp
                                        require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                        call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=3, data=mem[(10 * ceil32(return_data.size)) + 798 len 96]), address(this.address), block.timestamp
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + 602 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + 602
                                        require return_data.size >= 32
                                        _7478 = mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 633 < (10 * ceil32(return_data.size)) + return_data.size + 602
                                        _7670 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 602]
                                        if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 602] > test266151307():
                                            revert with 'NH{q', 65
                                        if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 602]) + 603 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 602]) + 1 < 0:
                                            revert with 'NH{q', 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 602]) + 603
                                        mem[(11 * ceil32(return_data.size)) + 602] = _7670
                                        require return_data.size >= _7478 + (32 * _7670) + 32
                                        mem[(11 * ceil32(return_data.size)) + 634 len 32 * _7670] = mem[(10 * ceil32(return_data.size)) + _7478 + 634 len 32 * _7670]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11146 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_11146] == bool(mem[_11146])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11914 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _12258 = mem[_11914]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _12258
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _12258
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _12682 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_12682] == bool(mem[_12682])
                else:
                    if address(ext_call.return_data[0]) == address(ext_call.return_data[0]):
                        if ext_call.return_data[50 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 39
                            mem[(8 * ceil32(return_data.size)) + 542] = 'PangolinLibrary: INSUFFICIENT_LI'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'QUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if ext_call.return_data[18 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 39
                            mem[(8 * ceil32(return_data.size)) + 542] = 'PangolinLibrary: INSUFFICIENT_LI'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'QUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if not ext_call.return_data[50 len 14]:
                            if arg2 > ext_call.return_data[18 len 14]:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 30
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if ext_call.return_data[18 len 14] < arg2:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[18 len 14] - arg2:
                                revert with 'NH{q', 18
                            if ext_call.return_data[18 len 14] - arg2 and 997 > -1 / ext_call.return_data[18 len 14] - arg2:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[18 len 14] - arg2:
                                revert with 'NH{q', 18
                            if (997 * ext_call.return_data[18 len 14]) - (997 * arg2) / ext_call.return_data[18 len 14] - arg2 != 997:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                revert with 'NH{q', 18
                            if 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2) > -2:
                                revert with 'NH{q', 17
                            if (0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2)) + 1 < 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 27
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            else:
                                mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                if not cd[(arg4 + 132)]:
                                    mem[(10 * ceil32(return_data.size)) + 474] = 2
                                    mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                    mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 638] = 160
                                    mem[(10 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 766
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                    call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _7487 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                    _7679 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                    mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                    require return_data.size >= _7487 + (32 * _7679) + 32
                                    mem[(11 * ceil32(return_data.size)) + 602 len 32 * _7679] = mem[(10 * ceil32(return_data.size)) + _7487 + 602 len 32 * _7679]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _11055 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_11055] == bool(mem[_11055])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _11823 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _12015 = mem[_11823]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _12015
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _12015
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _12591 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_12591] == bool(mem[_12591])
                                else:
                                    mem[(10 * ceil32(return_data.size)) + 474] = 3
                                    mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                    mem[(10 * ceil32(return_data.size)) + 538] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                    mem[(10 * ceil32(return_data.size)) + 570] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 602] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 606] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 638] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 670] = 160
                                    mem[(10 * ceil32(return_data.size)) + 766] = 3
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 798
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 3:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 702] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 734] = block.timestamp
                                    require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                    call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=3, data=mem[(10 * ceil32(return_data.size)) + 798 len 96]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 602 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 602
                                    require return_data.size >= 32
                                    _7488 = mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 633 < (10 * ceil32(return_data.size)) + return_data.size + 602
                                    _7680 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 602]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 602] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 602]) + 603 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 602]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 602]) + 603
                                    mem[(11 * ceil32(return_data.size)) + 602] = _7680
                                    require return_data.size >= _7488 + (32 * _7680) + 32
                                    mem[(11 * ceil32(return_data.size)) + 634 len 32 * _7680] = mem[(10 * ceil32(return_data.size)) + _7488 + 634 len 32 * _7680]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _11151 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_11151] == bool(mem[_11151])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _11919 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _12273 = mem[_11919]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _12273
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _12273
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _12687 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_12687] == bool(mem[_12687])
                        else:
                            if ext_call.return_data[50 len 14] and arg2 > -1 / ext_call.return_data[50 len 14]:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[50 len 14]:
                                revert with 'NH{q', 18
                            if ext_call.return_data[50 len 14] * arg2 / ext_call.return_data[50 len 14] != arg2:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not ext_call.return_data[50 len 14] * arg2:
                                if arg2 > ext_call.return_data[18 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[18 len 14] < arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[18 len 14] - arg2 and 997 > -1 / ext_call.return_data[18 len 14] - arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[18 len 14]) - (997 * arg2) / ext_call.return_data[18 len 14] - arg2 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                    revert with 'NH{q', 18
                                if 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2) > -2:
                                    revert with 'NH{q', 17
                                if (0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2)) + 1 < 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    if not cd[(arg4 + 132)]:
                                        mem[(10 * ceil32(return_data.size)) + 474] = 2
                                        mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                        mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                        mem[(10 * ceil32(return_data.size)) + 638] = 160
                                        mem[(10 * ceil32(return_data.size)) + 734] = 2
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + 766
                                        t = (10 * ceil32(return_data.size)) + 506
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                        mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                        require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                        call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + 570
                                        require return_data.size >= 32
                                        _7485 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                        _7677 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                        if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                            revert with 'NH{q', 65
                                        if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0:
                                            revert with 'NH{q', 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                        mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                        require return_data.size >= _7485 + (32 * _7677) + 32
                                        mem[(11 * ceil32(return_data.size)) + 602 len 32 * _7677] = mem[(10 * ceil32(return_data.size)) + _7485 + 602 len 32 * _7677]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11054 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_11054] == bool(mem[_11054])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11822 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _12014 = mem[_11822]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _12014
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _12014
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _12590 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_12590] == bool(mem[_12590])
                                    else:
                                        mem[(10 * ceil32(return_data.size)) + 474] = 3
                                        mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(10 * ceil32(return_data.size)) + 538] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                        mem[(10 * ceil32(return_data.size)) + 570] = address(ext_call.return_data[0])
                                        mem[(10 * ceil32(return_data.size)) + 602] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + 606] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        mem[(10 * ceil32(return_data.size)) + 638] = ext_call.return_data[0]
                                        mem[(10 * ceil32(return_data.size)) + 670] = 160
                                        mem[(10 * ceil32(return_data.size)) + 766] = 3
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + 798
                                        t = (10 * ceil32(return_data.size)) + 506
                                        while idx < 3:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + 702] = this.address
                                        mem[(10 * ceil32(return_data.size)) + 734] = block.timestamp
                                        require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                        call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=3, data=mem[(10 * ceil32(return_data.size)) + 798 len 96]), address(this.address), block.timestamp
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + 602 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + 602
                                        require return_data.size >= 32
                                        _7486 = mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 633 < (10 * ceil32(return_data.size)) + return_data.size + 602
                                        _7678 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 602]
                                        if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 602] > test266151307():
                                            revert with 'NH{q', 65
                                        if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 602]) + 603 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 602]) + 1 < 0:
                                            revert with 'NH{q', 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 602]) + 603
                                        mem[(11 * ceil32(return_data.size)) + 602] = _7678
                                        require return_data.size >= _7486 + (32 * _7678) + 32
                                        mem[(11 * ceil32(return_data.size)) + 634 len 32 * _7678] = mem[(10 * ceil32(return_data.size)) + _7486 + 634 len 32 * _7678]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11150 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_11150] == bool(mem[_11150])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11918 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _12270 = mem[_11918]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _12270
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _12270
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _12686 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_12686] == bool(mem[_12686])
                            else:
                                if ext_call.return_data[50 len 14] * arg2 and 1000 > -1 / ext_call.return_data[50 len 14] * arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] * arg2:
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[50 len 14] * arg2 / ext_call.return_data[50 len 14] * arg2 != 1000:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if arg2 > ext_call.return_data[18 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[18 len 14] < arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[18 len 14] - arg2 and 997 > -1 / ext_call.return_data[18 len 14] - arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[18 len 14]) - (997 * arg2) / ext_call.return_data[18 len 14] - arg2 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[50 len 14] * arg2 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2) > -2:
                                    revert with 'NH{q', 17
                                if (1000 * ext_call.return_data[50 len 14] * arg2 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2)) + 1 < 1000 * ext_call.return_data[50 len 14] * arg2 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    if not cd[(arg4 + 132)]:
                                        mem[(10 * ceil32(return_data.size)) + 474] = 2
                                        mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                        mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + 574] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                        mem[(10 * ceil32(return_data.size)) + 638] = 160
                                        mem[(10 * ceil32(return_data.size)) + 734] = 2
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + 766
                                        t = (10 * ceil32(return_data.size)) + 506
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                        mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                        require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                        call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + 570
                                        require return_data.size >= 32
                                        _7483 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                        _7675 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                        if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                            revert with 'NH{q', 65
                                        if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0:
                                            revert with 'NH{q', 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                        mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                        require return_data.size >= _7483 + (32 * _7675) + 32
                                        mem[(11 * ceil32(return_data.size)) + 602 len 32 * _7675] = mem[(10 * ceil32(return_data.size)) + _7483 + 602 len 32 * _7675]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11053 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_11053] == bool(mem[_11053])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11821 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _12013 = mem[_11821]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _12013
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _12013
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _12589 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_12589] == bool(mem[_12589])
                                    else:
                                        mem[(10 * ceil32(return_data.size)) + 474] = 3
                                        mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(10 * ceil32(return_data.size)) + 538] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                        mem[(10 * ceil32(return_data.size)) + 570] = address(ext_call.return_data[0])
                                        mem[(10 * ceil32(return_data.size)) + 602] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + 606] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        mem[(10 * ceil32(return_data.size)) + 638] = ext_call.return_data[0]
                                        mem[(10 * ceil32(return_data.size)) + 670] = 160
                                        mem[(10 * ceil32(return_data.size)) + 766] = 3
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + 798
                                        t = (10 * ceil32(return_data.size)) + 506
                                        while idx < 3:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + 702] = this.address
                                        mem[(10 * ceil32(return_data.size)) + 734] = block.timestamp
                                        require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                        call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=3, data=mem[(10 * ceil32(return_data.size)) + 798 len 96]), address(this.address), block.timestamp
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + 602 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + 602
                                        require return_data.size >= 32
                                        _7484 = mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 633 < (10 * ceil32(return_data.size)) + return_data.size + 602
                                        _7676 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 602]
                                        if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 602] > test266151307():
                                            revert with 'NH{q', 65
                                        if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 602]) + 603 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 602]) + 1 < 0:
                                            revert with 'NH{q', 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 602]) + 603
                                        mem[(11 * ceil32(return_data.size)) + 602] = _7676
                                        require return_data.size >= _7484 + (32 * _7676) + 32
                                        mem[(11 * ceil32(return_data.size)) + 634 len 32 * _7676] = mem[(10 * ceil32(return_data.size)) + _7484 + 634 len 32 * _7676]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11149 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_11149] == bool(mem[_11149])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11917 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _12267 = mem[_11917]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _12267
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _12267
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _12685 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_12685] == bool(mem[_12685])
                    else:
                        if ext_call.return_data[18 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 39
                            mem[(8 * ceil32(return_data.size)) + 542] = 'PangolinLibrary: INSUFFICIENT_LI'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'QUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if ext_call.return_data[50 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 39
                            mem[(8 * ceil32(return_data.size)) + 542] = 'PangolinLibrary: INSUFFICIENT_LI'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'QUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if not ext_call.return_data[18 len 14]:
                            if arg2 > ext_call.return_data[50 len 14]:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 30
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if ext_call.return_data[50 len 14] < arg2:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[50 len 14] - arg2:
                                revert with 'NH{q', 18
                            if ext_call.return_data[50 len 14] - arg2 and 997 > -1 / ext_call.return_data[50 len 14] - arg2:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[50 len 14] - arg2:
                                revert with 'NH{q', 18
                            if (997 * ext_call.return_data[50 len 14]) - (997 * arg2) / ext_call.return_data[50 len 14] - arg2 != 997:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                revert with 'NH{q', 18
                            if 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2) > -2:
                                revert with 'NH{q', 17
                            if (0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2)) + 1 < 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 27
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            else:
                                mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                if not cd[(arg4 + 132)]:
                                    mem[(10 * ceil32(return_data.size)) + 474] = 2
                                    mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                    mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 638] = 160
                                    mem[(10 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 766
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                    call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _7493 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                    _7685 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                    mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                    require return_data.size >= _7493 + (32 * _7685) + 32
                                    mem[(11 * ceil32(return_data.size)) + 602 len 32 * _7685] = mem[(10 * ceil32(return_data.size)) + _7493 + 602 len 32 * _7685]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _11058 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_11058] == bool(mem[_11058])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _11826 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _12018 = mem[_11826]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _12018
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _12018
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _12594 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_12594] == bool(mem[_12594])
                                else:
                                    mem[(10 * ceil32(return_data.size)) + 474] = 3
                                    mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                    mem[(10 * ceil32(return_data.size)) + 538] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                    mem[(10 * ceil32(return_data.size)) + 570] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 602] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 606] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 638] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 670] = 160
                                    mem[(10 * ceil32(return_data.size)) + 766] = 3
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 798
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 3:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 702] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 734] = block.timestamp
                                    require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                    call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=3, data=mem[(10 * ceil32(return_data.size)) + 798 len 96]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 602 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 602
                                    require return_data.size >= 32
                                    _7494 = mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 633 < (10 * ceil32(return_data.size)) + return_data.size + 602
                                    _7686 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 602]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 602] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 602]) + 603 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 602]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 602]) + 603
                                    mem[(11 * ceil32(return_data.size)) + 602] = _7686
                                    require return_data.size >= _7494 + (32 * _7686) + 32
                                    mem[(11 * ceil32(return_data.size)) + 634 len 32 * _7686] = mem[(10 * ceil32(return_data.size)) + _7494 + 634 len 32 * _7686]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _11154 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_11154] == bool(mem[_11154])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _11922 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _12282 = mem[_11922]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _12282
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _12282
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _12690 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_12690] == bool(mem[_12690])
                        else:
                            if ext_call.return_data[18 len 14] and arg2 > -1 / ext_call.return_data[18 len 14]:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[18 len 14]:
                                revert with 'NH{q', 18
                            if ext_call.return_data[18 len 14] * arg2 / ext_call.return_data[18 len 14] != arg2:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not ext_call.return_data[18 len 14] * arg2:
                                if arg2 > ext_call.return_data[50 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[50 len 14] < arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[50 len 14] - arg2 and 997 > -1 / ext_call.return_data[50 len 14] - arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[50 len 14]) - (997 * arg2) / ext_call.return_data[50 len 14] - arg2 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                    revert with 'NH{q', 18
                                if 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2) > -2:
                                    revert with 'NH{q', 17
                                if (0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2)) + 1 < 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    if not cd[(arg4 + 132)]:
                                        mem[(10 * ceil32(return_data.size)) + 474] = 2
                                        mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                        mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                        mem[(10 * ceil32(return_data.size)) + 638] = 160
                                        mem[(10 * ceil32(return_data.size)) + 734] = 2
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + 766
                                        t = (10 * ceil32(return_data.size)) + 506
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                        mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                        require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                        call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + 570
                                        require return_data.size >= 32
                                        _7491 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                        _7683 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                        if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                            revert with 'NH{q', 65
                                        if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0:
                                            revert with 'NH{q', 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                        mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                        require return_data.size >= _7491 + (32 * _7683) + 32
                                        mem[(11 * ceil32(return_data.size)) + 602 len 32 * _7683] = mem[(10 * ceil32(return_data.size)) + _7491 + 602 len 32 * _7683]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11057 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_11057] == bool(mem[_11057])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11825 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _12017 = mem[_11825]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _12017
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _12017
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _12593 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_12593] == bool(mem[_12593])
                                    else:
                                        mem[(10 * ceil32(return_data.size)) + 474] = 3
                                        mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(10 * ceil32(return_data.size)) + 538] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                        mem[(10 * ceil32(return_data.size)) + 570] = address(ext_call.return_data[0])
                                        mem[(10 * ceil32(return_data.size)) + 602] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + 606] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        mem[(10 * ceil32(return_data.size)) + 638] = ext_call.return_data[0]
                                        mem[(10 * ceil32(return_data.size)) + 670] = 160
                                        mem[(10 * ceil32(return_data.size)) + 766] = 3
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + 798
                                        t = (10 * ceil32(return_data.size)) + 506
                                        while idx < 3:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + 702] = this.address
                                        mem[(10 * ceil32(return_data.size)) + 734] = block.timestamp
                                        require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                        call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=3, data=mem[(10 * ceil32(return_data.size)) + 798 len 96]), address(this.address), block.timestamp
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + 602 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + 602
                                        require return_data.size >= 32
                                        _7492 = mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 633 < (10 * ceil32(return_data.size)) + return_data.size + 602
                                        _7684 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 602]
                                        if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 602] > test266151307():
                                            revert with 'NH{q', 65
                                        if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 602]) + 603 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 602]) + 1 < 0:
                                            revert with 'NH{q', 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 602]) + 603
                                        mem[(11 * ceil32(return_data.size)) + 602] = _7684
                                        require return_data.size >= _7492 + (32 * _7684) + 32
                                        mem[(11 * ceil32(return_data.size)) + 634 len 32 * _7684] = mem[(10 * ceil32(return_data.size)) + _7492 + 634 len 32 * _7684]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11153 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_11153] == bool(mem[_11153])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11921 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _12279 = mem[_11921]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _12279
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _12279
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _12689 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_12689] == bool(mem[_12689])
                            else:
                                if ext_call.return_data[18 len 14] * arg2 and 1000 > -1 / ext_call.return_data[18 len 14] * arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] * arg2:
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[18 len 14] * arg2 / ext_call.return_data[18 len 14] * arg2 != 1000:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if arg2 > ext_call.return_data[50 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[50 len 14] < arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[50 len 14] - arg2 and 997 > -1 / ext_call.return_data[50 len 14] - arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[50 len 14]) - (997 * arg2) / ext_call.return_data[50 len 14] - arg2 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[18 len 14] * arg2 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2) > -2:
                                    revert with 'NH{q', 17
                                if (1000 * ext_call.return_data[18 len 14] * arg2 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2)) + 1 < 1000 * ext_call.return_data[18 len 14] * arg2 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    if not cd[(arg4 + 132)]:
                                        mem[(10 * ceil32(return_data.size)) + 474] = 2
                                        mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                        mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + 574] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                        mem[(10 * ceil32(return_data.size)) + 638] = 160
                                        mem[(10 * ceil32(return_data.size)) + 734] = 2
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + 766
                                        t = (10 * ceil32(return_data.size)) + 506
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                        mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                        require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                        call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + 570
                                        require return_data.size >= 32
                                        _7489 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                        _7681 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                        if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                            revert with 'NH{q', 65
                                        if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0:
                                            revert with 'NH{q', 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                        mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                        require return_data.size >= _7489 + (32 * _7681) + 32
                                        mem[(11 * ceil32(return_data.size)) + 602 len 32 * _7681] = mem[(10 * ceil32(return_data.size)) + _7489 + 602 len 32 * _7681]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11056 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_11056] == bool(mem[_11056])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11824 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _12016 = mem[_11824]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _12016
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _12016
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _12592 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_12592] == bool(mem[_12592])
                                    else:
                                        mem[(10 * ceil32(return_data.size)) + 474] = 3
                                        mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(10 * ceil32(return_data.size)) + 538] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                        mem[(10 * ceil32(return_data.size)) + 570] = address(ext_call.return_data[0])
                                        mem[(10 * ceil32(return_data.size)) + 602] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + 606] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        mem[(10 * ceil32(return_data.size)) + 638] = ext_call.return_data[0]
                                        mem[(10 * ceil32(return_data.size)) + 670] = 160
                                        mem[(10 * ceil32(return_data.size)) + 766] = 3
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + 798
                                        t = (10 * ceil32(return_data.size)) + 506
                                        while idx < 3:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + 702] = this.address
                                        mem[(10 * ceil32(return_data.size)) + 734] = block.timestamp
                                        require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                        call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=3, data=mem[(10 * ceil32(return_data.size)) + 798 len 96]), address(this.address), block.timestamp
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + 602 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + 602
                                        require return_data.size >= 32
                                        _7490 = mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 633 < (10 * ceil32(return_data.size)) + return_data.size + 602
                                        _7682 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 602]
                                        if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 602] > test266151307():
                                            revert with 'NH{q', 65
                                        if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 602]) + 603 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 602]) + 1 < 0:
                                            revert with 'NH{q', 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 602]) + 603
                                        mem[(11 * ceil32(return_data.size)) + 602] = _7682
                                        require return_data.size >= _7490 + (32 * _7682) + 32
                                        mem[(11 * ceil32(return_data.size)) + 634 len 32 * _7682] = mem[(10 * ceil32(return_data.size)) + _7490 + 634 len 32 * _7682]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11152 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_11152] == bool(mem[_11152])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11920 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _12276 = mem[_11920]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _12276
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _12276
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _12688 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_12688] == bool(mem[_12688])
            else:
                if address(ext_call.return_data[0]) < address(ext_call.return_data[0]):
                    if address(ext_call.return_data[0]) == address(ext_call.return_data[0]):
                        if ext_call.return_data[50 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 39
                            mem[(8 * ceil32(return_data.size)) + 542] = 'PangolinLibrary: INSUFFICIENT_LI'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'QUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if ext_call.return_data[18 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 39
                            mem[(8 * ceil32(return_data.size)) + 542] = 'PangolinLibrary: INSUFFICIENT_LI'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'QUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if not ext_call.return_data[50 len 14]:
                            if arg2 > ext_call.return_data[18 len 14]:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 30
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if ext_call.return_data[18 len 14] < arg2:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[18 len 14] - arg2:
                                revert with 'NH{q', 18
                            if ext_call.return_data[18 len 14] - arg2 and 997 > -1 / ext_call.return_data[18 len 14] - arg2:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[18 len 14] - arg2:
                                revert with 'NH{q', 18
                            if (997 * ext_call.return_data[18 len 14]) - (997 * arg2) / ext_call.return_data[18 len 14] - arg2 != 997:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                revert with 'NH{q', 18
                            if 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2) > -2:
                                revert with 'NH{q', 17
                            if (0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2)) + 1 < 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 27
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            else:
                                mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                if not cd[(arg4 + 132)]:
                                    mem[(10 * ceil32(return_data.size)) + 474] = 2
                                    mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                    mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 638] = 160
                                    mem[(10 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 766
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                    call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _7499 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                    _7691 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                    mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                    require return_data.size >= _7499 + (32 * _7691) + 32
                                    mem[(11 * ceil32(return_data.size)) + 602 len 32 * _7691] = mem[(10 * ceil32(return_data.size)) + _7499 + 602 len 32 * _7691]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _11061 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_11061] == bool(mem[_11061])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _11829 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _12021 = mem[_11829]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _12021
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _12021
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _12597 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_12597] == bool(mem[_12597])
                                else:
                                    mem[(10 * ceil32(return_data.size)) + 474] = 3
                                    mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                    mem[(10 * ceil32(return_data.size)) + 538] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                    mem[(10 * ceil32(return_data.size)) + 570] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 602] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 606] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 638] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 670] = 160
                                    mem[(10 * ceil32(return_data.size)) + 766] = 3
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 798
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 3:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 702] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 734] = block.timestamp
                                    require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                    call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=3, data=mem[(10 * ceil32(return_data.size)) + 798 len 96]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 602 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 602
                                    require return_data.size >= 32
                                    _7500 = mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 633 < (10 * ceil32(return_data.size)) + return_data.size + 602
                                    _7692 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 602]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 602] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 602]) + 603 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 602]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 602]) + 603
                                    mem[(11 * ceil32(return_data.size)) + 602] = _7692
                                    require return_data.size >= _7500 + (32 * _7692) + 32
                                    mem[(11 * ceil32(return_data.size)) + 634 len 32 * _7692] = mem[(10 * ceil32(return_data.size)) + _7500 + 634 len 32 * _7692]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _11157 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_11157] == bool(mem[_11157])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _11925 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _12291 = mem[_11925]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _12291
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _12291
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _12693 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_12693] == bool(mem[_12693])
                        else:
                            if ext_call.return_data[50 len 14] and arg2 > -1 / ext_call.return_data[50 len 14]:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[50 len 14]:
                                revert with 'NH{q', 18
                            if ext_call.return_data[50 len 14] * arg2 / ext_call.return_data[50 len 14] != arg2:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not ext_call.return_data[50 len 14] * arg2:
                                if arg2 > ext_call.return_data[18 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[18 len 14] < arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[18 len 14] - arg2 and 997 > -1 / ext_call.return_data[18 len 14] - arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[18 len 14]) - (997 * arg2) / ext_call.return_data[18 len 14] - arg2 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                    revert with 'NH{q', 18
                                if 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2) > -2:
                                    revert with 'NH{q', 17
                                if (0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2)) + 1 < 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    if not cd[(arg4 + 132)]:
                                        mem[(10 * ceil32(return_data.size)) + 474] = 2
                                        mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                        mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                        mem[(10 * ceil32(return_data.size)) + 638] = 160
                                        mem[(10 * ceil32(return_data.size)) + 734] = 2
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + 766
                                        t = (10 * ceil32(return_data.size)) + 506
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                        mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                        require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                        call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + 570
                                        require return_data.size >= 32
                                        _7497 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                        _7689 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                        if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                            revert with 'NH{q', 65
                                        if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0:
                                            revert with 'NH{q', 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                        mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                        require return_data.size >= _7497 + (32 * _7689) + 32
                                        mem[(11 * ceil32(return_data.size)) + 602 len 32 * _7689] = mem[(10 * ceil32(return_data.size)) + _7497 + 602 len 32 * _7689]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11060 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_11060] == bool(mem[_11060])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11828 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _12020 = mem[_11828]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _12020
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _12020
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _12596 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_12596] == bool(mem[_12596])
                                    else:
                                        mem[(10 * ceil32(return_data.size)) + 474] = 3
                                        mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(10 * ceil32(return_data.size)) + 538] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                        mem[(10 * ceil32(return_data.size)) + 570] = address(ext_call.return_data[0])
                                        mem[(10 * ceil32(return_data.size)) + 602] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + 606] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        mem[(10 * ceil32(return_data.size)) + 638] = ext_call.return_data[0]
                                        mem[(10 * ceil32(return_data.size)) + 670] = 160
                                        mem[(10 * ceil32(return_data.size)) + 766] = 3
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + 798
                                        t = (10 * ceil32(return_data.size)) + 506
                                        while idx < 3:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + 702] = this.address
                                        mem[(10 * ceil32(return_data.size)) + 734] = block.timestamp
                                        require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                        call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=3, data=mem[(10 * ceil32(return_data.size)) + 798 len 96]), address(this.address), block.timestamp
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + 602 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + 602
                                        require return_data.size >= 32
                                        _7498 = mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 633 < (10 * ceil32(return_data.size)) + return_data.size + 602
                                        _7690 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 602]
                                        if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 602] > test266151307():
                                            revert with 'NH{q', 65
                                        if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 602]) + 603 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 602]) + 1 < 0:
                                            revert with 'NH{q', 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 602]) + 603
                                        mem[(11 * ceil32(return_data.size)) + 602] = _7690
                                        require return_data.size >= _7498 + (32 * _7690) + 32
                                        mem[(11 * ceil32(return_data.size)) + 634 len 32 * _7690] = mem[(10 * ceil32(return_data.size)) + _7498 + 634 len 32 * _7690]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11156 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_11156] == bool(mem[_11156])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11924 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _12288 = mem[_11924]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _12288
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _12288
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _12692 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_12692] == bool(mem[_12692])
                            else:
                                if ext_call.return_data[50 len 14] * arg2 and 1000 > -1 / ext_call.return_data[50 len 14] * arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] * arg2:
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[50 len 14] * arg2 / ext_call.return_data[50 len 14] * arg2 != 1000:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if arg2 > ext_call.return_data[18 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[18 len 14] < arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[18 len 14] - arg2 and 997 > -1 / ext_call.return_data[18 len 14] - arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[18 len 14]) - (997 * arg2) / ext_call.return_data[18 len 14] - arg2 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[50 len 14] * arg2 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2) > -2:
                                    revert with 'NH{q', 17
                                if (1000 * ext_call.return_data[50 len 14] * arg2 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2)) + 1 < 1000 * ext_call.return_data[50 len 14] * arg2 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    if not cd[(arg4 + 132)]:
                                        mem[(10 * ceil32(return_data.size)) + 474] = 2
                                        mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                        mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + 574] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                        mem[(10 * ceil32(return_data.size)) + 638] = 160
                                        mem[(10 * ceil32(return_data.size)) + 734] = 2
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + 766
                                        t = (10 * ceil32(return_data.size)) + 506
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                        mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                        require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                        call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + 570
                                        require return_data.size >= 32
                                        _7495 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                        _7687 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                        if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                            revert with 'NH{q', 65
                                        if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0:
                                            revert with 'NH{q', 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                        mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                        require return_data.size >= _7495 + (32 * _7687) + 32
                                        mem[(11 * ceil32(return_data.size)) + 602 len 32 * _7687] = mem[(10 * ceil32(return_data.size)) + _7495 + 602 len 32 * _7687]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11059 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_11059] == bool(mem[_11059])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11827 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _12019 = mem[_11827]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _12019
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _12019
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _12595 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_12595] == bool(mem[_12595])
                                    else:
                                        mem[(10 * ceil32(return_data.size)) + 474] = 3
                                        mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(10 * ceil32(return_data.size)) + 538] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                        mem[(10 * ceil32(return_data.size)) + 570] = address(ext_call.return_data[0])
                                        mem[(10 * ceil32(return_data.size)) + 602] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + 606] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        mem[(10 * ceil32(return_data.size)) + 638] = ext_call.return_data[0]
                                        mem[(10 * ceil32(return_data.size)) + 670] = 160
                                        mem[(10 * ceil32(return_data.size)) + 766] = 3
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + 798
                                        t = (10 * ceil32(return_data.size)) + 506
                                        while idx < 3:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + 702] = this.address
                                        mem[(10 * ceil32(return_data.size)) + 734] = block.timestamp
                                        require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                        call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=3, data=mem[(10 * ceil32(return_data.size)) + 798 len 96]), address(this.address), block.timestamp
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + 602 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + 602
                                        require return_data.size >= 32
                                        _7496 = mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 633 < (10 * ceil32(return_data.size)) + return_data.size + 602
                                        _7688 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 602]
                                        if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 602] > test266151307():
                                            revert with 'NH{q', 65
                                        if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 602]) + 603 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 602]) + 1 < 0:
                                            revert with 'NH{q', 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 602]) + 603
                                        mem[(11 * ceil32(return_data.size)) + 602] = _7688
                                        require return_data.size >= _7496 + (32 * _7688) + 32
                                        mem[(11 * ceil32(return_data.size)) + 634 len 32 * _7688] = mem[(10 * ceil32(return_data.size)) + _7496 + 634 len 32 * _7688]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11155 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_11155] == bool(mem[_11155])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11923 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _12285 = mem[_11923]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _12285
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _12285
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _12691 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_12691] == bool(mem[_12691])
                    else:
                        if ext_call.return_data[18 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 39
                            mem[(8 * ceil32(return_data.size)) + 542] = 'PangolinLibrary: INSUFFICIENT_LI'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'QUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if ext_call.return_data[50 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 39
                            mem[(8 * ceil32(return_data.size)) + 542] = 'PangolinLibrary: INSUFFICIENT_LI'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'QUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if not ext_call.return_data[18 len 14]:
                            if arg2 > ext_call.return_data[50 len 14]:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 30
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if ext_call.return_data[50 len 14] < arg2:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[50 len 14] - arg2:
                                revert with 'NH{q', 18
                            if ext_call.return_data[50 len 14] - arg2 and 997 > -1 / ext_call.return_data[50 len 14] - arg2:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[50 len 14] - arg2:
                                revert with 'NH{q', 18
                            if (997 * ext_call.return_data[50 len 14]) - (997 * arg2) / ext_call.return_data[50 len 14] - arg2 != 997:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                revert with 'NH{q', 18
                            if 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2) > -2:
                                revert with 'NH{q', 17
                            if (0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2)) + 1 < 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 27
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            else:
                                mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                if not cd[(arg4 + 132)]:
                                    mem[(10 * ceil32(return_data.size)) + 474] = 2
                                    mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                    mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 638] = 160
                                    mem[(10 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 766
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                    call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _7505 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                    _7697 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                    mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                    require return_data.size >= _7505 + (32 * _7697) + 32
                                    mem[(11 * ceil32(return_data.size)) + 602 len 32 * _7697] = mem[(10 * ceil32(return_data.size)) + _7505 + 602 len 32 * _7697]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _11064 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_11064] == bool(mem[_11064])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _11832 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _12024 = mem[_11832]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _12024
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _12024
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _12600 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_12600] == bool(mem[_12600])
                                else:
                                    mem[(10 * ceil32(return_data.size)) + 474] = 3
                                    mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                    mem[(10 * ceil32(return_data.size)) + 538] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                    mem[(10 * ceil32(return_data.size)) + 570] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 602] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 606] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 638] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 670] = 160
                                    mem[(10 * ceil32(return_data.size)) + 766] = 3
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 798
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 3:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 702] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 734] = block.timestamp
                                    require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                    call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=3, data=mem[(10 * ceil32(return_data.size)) + 798 len 96]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 602 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 602
                                    require return_data.size >= 32
                                    _7506 = mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 633 < (10 * ceil32(return_data.size)) + return_data.size + 602
                                    _7698 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 602]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 602] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 602]) + 603 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 602]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 602]) + 603
                                    mem[(11 * ceil32(return_data.size)) + 602] = _7698
                                    require return_data.size >= _7506 + (32 * _7698) + 32
                                    mem[(11 * ceil32(return_data.size)) + 634 len 32 * _7698] = mem[(10 * ceil32(return_data.size)) + _7506 + 634 len 32 * _7698]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _11160 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_11160] == bool(mem[_11160])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _11928 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _12300 = mem[_11928]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _12300
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _12300
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _12696 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_12696] == bool(mem[_12696])
                        else:
                            if ext_call.return_data[18 len 14] and arg2 > -1 / ext_call.return_data[18 len 14]:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[18 len 14]:
                                revert with 'NH{q', 18
                            if ext_call.return_data[18 len 14] * arg2 / ext_call.return_data[18 len 14] != arg2:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not ext_call.return_data[18 len 14] * arg2:
                                if arg2 > ext_call.return_data[50 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[50 len 14] < arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[50 len 14] - arg2 and 997 > -1 / ext_call.return_data[50 len 14] - arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[50 len 14]) - (997 * arg2) / ext_call.return_data[50 len 14] - arg2 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                    revert with 'NH{q', 18
                                if 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2) > -2:
                                    revert with 'NH{q', 17
                                if (0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2)) + 1 < 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    if not cd[(arg4 + 132)]:
                                        mem[(10 * ceil32(return_data.size)) + 474] = 2
                                        mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                        mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                        mem[(10 * ceil32(return_data.size)) + 638] = 160
                                        mem[(10 * ceil32(return_data.size)) + 734] = 2
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + 766
                                        t = (10 * ceil32(return_data.size)) + 506
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                        mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                        require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                        call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + 570
                                        require return_data.size >= 32
                                        _7503 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                        _7695 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                        if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                            revert with 'NH{q', 65
                                        if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0:
                                            revert with 'NH{q', 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                        mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                        require return_data.size >= _7503 + (32 * _7695) + 32
                                        mem[(11 * ceil32(return_data.size)) + 602 len 32 * _7695] = mem[(10 * ceil32(return_data.size)) + _7503 + 602 len 32 * _7695]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11063 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_11063] == bool(mem[_11063])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11831 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _12023 = mem[_11831]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _12023
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _12023
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _12599 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_12599] == bool(mem[_12599])
                                    else:
                                        mem[(10 * ceil32(return_data.size)) + 474] = 3
                                        mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(10 * ceil32(return_data.size)) + 538] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                        mem[(10 * ceil32(return_data.size)) + 570] = address(ext_call.return_data[0])
                                        mem[(10 * ceil32(return_data.size)) + 602] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + 606] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        mem[(10 * ceil32(return_data.size)) + 638] = ext_call.return_data[0]
                                        mem[(10 * ceil32(return_data.size)) + 670] = 160
                                        mem[(10 * ceil32(return_data.size)) + 766] = 3
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + 798
                                        t = (10 * ceil32(return_data.size)) + 506
                                        while idx < 3:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + 702] = this.address
                                        mem[(10 * ceil32(return_data.size)) + 734] = block.timestamp
                                        require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                        call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=3, data=mem[(10 * ceil32(return_data.size)) + 798 len 96]), address(this.address), block.timestamp
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + 602 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + 602
                                        require return_data.size >= 32
                                        _7504 = mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 633 < (10 * ceil32(return_data.size)) + return_data.size + 602
                                        _7696 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 602]
                                        if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 602] > test266151307():
                                            revert with 'NH{q', 65
                                        if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 602]) + 603 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 602]) + 1 < 0:
                                            revert with 'NH{q', 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 602]) + 603
                                        mem[(11 * ceil32(return_data.size)) + 602] = _7696
                                        require return_data.size >= _7504 + (32 * _7696) + 32
                                        mem[(11 * ceil32(return_data.size)) + 634 len 32 * _7696] = mem[(10 * ceil32(return_data.size)) + _7504 + 634 len 32 * _7696]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11159 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_11159] == bool(mem[_11159])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11927 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _12297 = mem[_11927]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _12297
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _12297
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _12695 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_12695] == bool(mem[_12695])
                            else:
                                if ext_call.return_data[18 len 14] * arg2 and 1000 > -1 / ext_call.return_data[18 len 14] * arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] * arg2:
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[18 len 14] * arg2 / ext_call.return_data[18 len 14] * arg2 != 1000:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if arg2 > ext_call.return_data[50 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[50 len 14] < arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[50 len 14] - arg2 and 997 > -1 / ext_call.return_data[50 len 14] - arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[50 len 14]) - (997 * arg2) / ext_call.return_data[50 len 14] - arg2 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[18 len 14] * arg2 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2) > -2:
                                    revert with 'NH{q', 17
                                if (1000 * ext_call.return_data[18 len 14] * arg2 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2)) + 1 < 1000 * ext_call.return_data[18 len 14] * arg2 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    if not cd[(arg4 + 132)]:
                                        mem[(10 * ceil32(return_data.size)) + 474] = 2
                                        mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                        mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + 574] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                        mem[(10 * ceil32(return_data.size)) + 638] = 160
                                        mem[(10 * ceil32(return_data.size)) + 734] = 2
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + 766
                                        t = (10 * ceil32(return_data.size)) + 506
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                        mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                        require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                        call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + 570
                                        require return_data.size >= 32
                                        _7501 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                        _7693 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                        if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                            revert with 'NH{q', 65
                                        if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0:
                                            revert with 'NH{q', 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                        mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                        require return_data.size >= _7501 + (32 * _7693) + 32
                                        mem[(11 * ceil32(return_data.size)) + 602 len 32 * _7693] = mem[(10 * ceil32(return_data.size)) + _7501 + 602 len 32 * _7693]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11062 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_11062] == bool(mem[_11062])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11830 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _12022 = mem[_11830]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _12022
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _12022
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _12598 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_12598] == bool(mem[_12598])
                                    else:
                                        mem[(10 * ceil32(return_data.size)) + 474] = 3
                                        mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(10 * ceil32(return_data.size)) + 538] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                        mem[(10 * ceil32(return_data.size)) + 570] = address(ext_call.return_data[0])
                                        mem[(10 * ceil32(return_data.size)) + 602] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + 606] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        mem[(10 * ceil32(return_data.size)) + 638] = ext_call.return_data[0]
                                        mem[(10 * ceil32(return_data.size)) + 670] = 160
                                        mem[(10 * ceil32(return_data.size)) + 766] = 3
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + 798
                                        t = (10 * ceil32(return_data.size)) + 506
                                        while idx < 3:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + 702] = this.address
                                        mem[(10 * ceil32(return_data.size)) + 734] = block.timestamp
                                        require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                        call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=3, data=mem[(10 * ceil32(return_data.size)) + 798 len 96]), address(this.address), block.timestamp
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + 602 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + 602
                                        require return_data.size >= 32
                                        _7502 = mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 633 < (10 * ceil32(return_data.size)) + return_data.size + 602
                                        _7694 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 602]
                                        if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 602] > test266151307():
                                            revert with 'NH{q', 65
                                        if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 602]) + 603 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 602]) + 1 < 0:
                                            revert with 'NH{q', 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 602]) + 603
                                        mem[(11 * ceil32(return_data.size)) + 602] = _7694
                                        require return_data.size >= _7502 + (32 * _7694) + 32
                                        mem[(11 * ceil32(return_data.size)) + 634 len 32 * _7694] = mem[(10 * ceil32(return_data.size)) + _7502 + 634 len 32 * _7694]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11158 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_11158] == bool(mem[_11158])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11926 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _12294 = mem[_11926]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _12294
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _12294
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _12694 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_12694] == bool(mem[_12694])
                else:
                    if address(ext_call.return_data[0]) == address(ext_call.return_data[0]):
                        if ext_call.return_data[50 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 39
                            mem[(8 * ceil32(return_data.size)) + 542] = 'PangolinLibrary: INSUFFICIENT_LI'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'QUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if ext_call.return_data[18 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 39
                            mem[(8 * ceil32(return_data.size)) + 542] = 'PangolinLibrary: INSUFFICIENT_LI'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'QUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if not ext_call.return_data[50 len 14]:
                            if arg2 > ext_call.return_data[18 len 14]:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 30
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if ext_call.return_data[18 len 14] < arg2:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[18 len 14] - arg2:
                                revert with 'NH{q', 18
                            if ext_call.return_data[18 len 14] - arg2 and 997 > -1 / ext_call.return_data[18 len 14] - arg2:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[18 len 14] - arg2:
                                revert with 'NH{q', 18
                            if (997 * ext_call.return_data[18 len 14]) - (997 * arg2) / ext_call.return_data[18 len 14] - arg2 != 997:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                revert with 'NH{q', 18
                            if 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2) > -2:
                                revert with 'NH{q', 17
                            if (0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2)) + 1 < 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 27
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            else:
                                mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                if not cd[(arg4 + 132)]:
                                    mem[(10 * ceil32(return_data.size)) + 474] = 2
                                    mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                    mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 638] = 160
                                    mem[(10 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 766
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                    call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _7511 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                    _7703 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                    mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                    require return_data.size >= _7511 + (32 * _7703) + 32
                                    mem[(11 * ceil32(return_data.size)) + 602 len 32 * _7703] = mem[(10 * ceil32(return_data.size)) + _7511 + 602 len 32 * _7703]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _11067 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_11067] == bool(mem[_11067])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _11835 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _12027 = mem[_11835]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _12027
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _12027
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _12603 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_12603] == bool(mem[_12603])
                                else:
                                    mem[(10 * ceil32(return_data.size)) + 474] = 3
                                    mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                    mem[(10 * ceil32(return_data.size)) + 538] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                    mem[(10 * ceil32(return_data.size)) + 570] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 602] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 606] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 638] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 670] = 160
                                    mem[(10 * ceil32(return_data.size)) + 766] = 3
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 798
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 3:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 702] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 734] = block.timestamp
                                    require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                    call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=3, data=mem[(10 * ceil32(return_data.size)) + 798 len 96]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 602 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 602
                                    require return_data.size >= 32
                                    _7512 = mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 633 < (10 * ceil32(return_data.size)) + return_data.size + 602
                                    _7704 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 602]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 602] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 602]) + 603 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 602]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 602]) + 603
                                    mem[(11 * ceil32(return_data.size)) + 602] = _7704
                                    require return_data.size >= _7512 + (32 * _7704) + 32
                                    mem[(11 * ceil32(return_data.size)) + 634 len 32 * _7704] = mem[(10 * ceil32(return_data.size)) + _7512 + 634 len 32 * _7704]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _11163 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_11163] == bool(mem[_11163])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _11931 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _12309 = mem[_11931]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _12309
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _12309
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _12699 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_12699] == bool(mem[_12699])
                        else:
                            if ext_call.return_data[50 len 14] and arg2 > -1 / ext_call.return_data[50 len 14]:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[50 len 14]:
                                revert with 'NH{q', 18
                            if ext_call.return_data[50 len 14] * arg2 / ext_call.return_data[50 len 14] != arg2:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not ext_call.return_data[50 len 14] * arg2:
                                if arg2 > ext_call.return_data[18 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[18 len 14] < arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[18 len 14] - arg2 and 997 > -1 / ext_call.return_data[18 len 14] - arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[18 len 14]) - (997 * arg2) / ext_call.return_data[18 len 14] - arg2 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                    revert with 'NH{q', 18
                                if 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2) > -2:
                                    revert with 'NH{q', 17
                                if (0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2)) + 1 < 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    if not cd[(arg4 + 132)]:
                                        mem[(10 * ceil32(return_data.size)) + 474] = 2
                                        mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                        mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                        mem[(10 * ceil32(return_data.size)) + 638] = 160
                                        mem[(10 * ceil32(return_data.size)) + 734] = 2
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + 766
                                        t = (10 * ceil32(return_data.size)) + 506
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                        mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                        require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                        call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + 570
                                        require return_data.size >= 32
                                        _7509 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                        _7701 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                        if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                            revert with 'NH{q', 65
                                        if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0:
                                            revert with 'NH{q', 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                        mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                        require return_data.size >= _7509 + (32 * _7701) + 32
                                        mem[(11 * ceil32(return_data.size)) + 602 len 32 * _7701] = mem[(10 * ceil32(return_data.size)) + _7509 + 602 len 32 * _7701]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11066 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_11066] == bool(mem[_11066])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11834 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _12026 = mem[_11834]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _12026
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _12026
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _12602 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_12602] == bool(mem[_12602])
                                    else:
                                        mem[(10 * ceil32(return_data.size)) + 474] = 3
                                        mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(10 * ceil32(return_data.size)) + 538] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                        mem[(10 * ceil32(return_data.size)) + 570] = address(ext_call.return_data[0])
                                        mem[(10 * ceil32(return_data.size)) + 602] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + 606] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        mem[(10 * ceil32(return_data.size)) + 638] = ext_call.return_data[0]
                                        mem[(10 * ceil32(return_data.size)) + 670] = 160
                                        mem[(10 * ceil32(return_data.size)) + 766] = 3
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + 798
                                        t = (10 * ceil32(return_data.size)) + 506
                                        while idx < 3:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + 702] = this.address
                                        mem[(10 * ceil32(return_data.size)) + 734] = block.timestamp
                                        require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                        call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=3, data=mem[(10 * ceil32(return_data.size)) + 798 len 96]), address(this.address), block.timestamp
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + 602 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + 602
                                        require return_data.size >= 32
                                        _7510 = mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 633 < (10 * ceil32(return_data.size)) + return_data.size + 602
                                        _7702 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 602]
                                        if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 602] > test266151307():
                                            revert with 'NH{q', 65
                                        if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 602]) + 603 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 602]) + 1 < 0:
                                            revert with 'NH{q', 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 602]) + 603
                                        mem[(11 * ceil32(return_data.size)) + 602] = _7702
                                        require return_data.size >= _7510 + (32 * _7702) + 32
                                        mem[(11 * ceil32(return_data.size)) + 634 len 32 * _7702] = mem[(10 * ceil32(return_data.size)) + _7510 + 634 len 32 * _7702]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11162 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_11162] == bool(mem[_11162])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11930 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _12306 = mem[_11930]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _12306
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _12306
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _12698 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_12698] == bool(mem[_12698])
                            else:
                                if ext_call.return_data[50 len 14] * arg2 and 1000 > -1 / ext_call.return_data[50 len 14] * arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] * arg2:
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[50 len 14] * arg2 / ext_call.return_data[50 len 14] * arg2 != 1000:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if arg2 > ext_call.return_data[18 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[18 len 14] < arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[18 len 14] - arg2 and 997 > -1 / ext_call.return_data[18 len 14] - arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[18 len 14]) - (997 * arg2) / ext_call.return_data[18 len 14] - arg2 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[50 len 14] * arg2 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2) > -2:
                                    revert with 'NH{q', 17
                                if (1000 * ext_call.return_data[50 len 14] * arg2 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2)) + 1 < 1000 * ext_call.return_data[50 len 14] * arg2 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    if not cd[(arg4 + 132)]:
                                        mem[(10 * ceil32(return_data.size)) + 474] = 2
                                        mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                        mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + 574] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                        mem[(10 * ceil32(return_data.size)) + 638] = 160
                                        mem[(10 * ceil32(return_data.size)) + 734] = 2
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + 766
                                        t = (10 * ceil32(return_data.size)) + 506
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                        mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                        require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                        call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + 570
                                        require return_data.size >= 32
                                        _7507 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                        _7699 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                        if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                            revert with 'NH{q', 65
                                        if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0:
                                            revert with 'NH{q', 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                        mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                        require return_data.size >= _7507 + (32 * _7699) + 32
                                        mem[(11 * ceil32(return_data.size)) + 602 len 32 * _7699] = mem[(10 * ceil32(return_data.size)) + _7507 + 602 len 32 * _7699]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11065 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_11065] == bool(mem[_11065])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11833 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _12025 = mem[_11833]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _12025
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _12025
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _12601 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_12601] == bool(mem[_12601])
                                    else:
                                        mem[(10 * ceil32(return_data.size)) + 474] = 3
                                        mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(10 * ceil32(return_data.size)) + 538] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                        mem[(10 * ceil32(return_data.size)) + 570] = address(ext_call.return_data[0])
                                        mem[(10 * ceil32(return_data.size)) + 602] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + 606] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        mem[(10 * ceil32(return_data.size)) + 638] = ext_call.return_data[0]
                                        mem[(10 * ceil32(return_data.size)) + 670] = 160
                                        mem[(10 * ceil32(return_data.size)) + 766] = 3
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + 798
                                        t = (10 * ceil32(return_data.size)) + 506
                                        while idx < 3:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + 702] = this.address
                                        mem[(10 * ceil32(return_data.size)) + 734] = block.timestamp
                                        require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                        call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=3, data=mem[(10 * ceil32(return_data.size)) + 798 len 96]), address(this.address), block.timestamp
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + 602 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + 602
                                        require return_data.size >= 32
                                        _7508 = mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 633 < (10 * ceil32(return_data.size)) + return_data.size + 602
                                        _7700 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 602]
                                        if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 602] > test266151307():
                                            revert with 'NH{q', 65
                                        if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 602]) + 603 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 602]) + 1 < 0:
                                            revert with 'NH{q', 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 602]) + 603
                                        mem[(11 * ceil32(return_data.size)) + 602] = _7700
                                        require return_data.size >= _7508 + (32 * _7700) + 32
                                        mem[(11 * ceil32(return_data.size)) + 634 len 32 * _7700] = mem[(10 * ceil32(return_data.size)) + _7508 + 634 len 32 * _7700]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11161 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_11161] == bool(mem[_11161])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11929 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _12303 = mem[_11929]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _12303
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _12303
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _12697 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_12697] == bool(mem[_12697])
                    else:
                        if ext_call.return_data[18 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 39
                            mem[(8 * ceil32(return_data.size)) + 542] = 'PangolinLibrary: INSUFFICIENT_LI'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'QUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if ext_call.return_data[50 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 39
                            mem[(8 * ceil32(return_data.size)) + 542] = 'PangolinLibrary: INSUFFICIENT_LI'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'QUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if not ext_call.return_data[18 len 14]:
                            if arg2 > ext_call.return_data[50 len 14]:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 30
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if ext_call.return_data[50 len 14] < arg2:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[50 len 14] - arg2:
                                revert with 'NH{q', 18
                            if ext_call.return_data[50 len 14] - arg2 and 997 > -1 / ext_call.return_data[50 len 14] - arg2:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[50 len 14] - arg2:
                                revert with 'NH{q', 18
                            if (997 * ext_call.return_data[50 len 14]) - (997 * arg2) / ext_call.return_data[50 len 14] - arg2 != 997:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                revert with 'NH{q', 18
                            if 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2) > -2:
                                revert with 'NH{q', 17
                            if (0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2)) + 1 < 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 27
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            else:
                                mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                require ext_code.size(address(cd[(arg4 + 100)]))
                                call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                if not cd[(arg4 + 132)]:
                                    mem[(10 * ceil32(return_data.size)) + 474] = 2
                                    mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                    mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 638] = 160
                                    mem[(10 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 766
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                    call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _7517 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                    _7709 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                    mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                    require return_data.size >= _7517 + (32 * _7709) + 32
                                    mem[(11 * ceil32(return_data.size)) + 602 len 32 * _7709] = mem[(10 * ceil32(return_data.size)) + _7517 + 602 len 32 * _7709]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _11070 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_11070] == bool(mem[_11070])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _11838 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _12030 = mem[_11838]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _12030
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _12030
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _12606 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_12606] == bool(mem[_12606])
                                else:
                                    mem[(10 * ceil32(return_data.size)) + 474] = 3
                                    mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                    mem[(10 * ceil32(return_data.size)) + 538] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                    mem[(10 * ceil32(return_data.size)) + 570] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 602] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 606] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 638] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 670] = 160
                                    mem[(10 * ceil32(return_data.size)) + 766] = 3
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 798
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 3:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 702] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 734] = block.timestamp
                                    require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                    call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=3, data=mem[(10 * ceil32(return_data.size)) + 798 len 96]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 602 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 602
                                    require return_data.size >= 32
                                    _7518 = mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 633 < (10 * ceil32(return_data.size)) + return_data.size + 602
                                    _7710 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 602]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 602] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 602]) + 603 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 602]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 602]) + 603
                                    mem[(11 * ceil32(return_data.size)) + 602] = _7710
                                    require return_data.size >= _7518 + (32 * _7710) + 32
                                    mem[(11 * ceil32(return_data.size)) + 634 len 32 * _7710] = mem[(10 * ceil32(return_data.size)) + _7518 + 634 len 32 * _7710]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _11166 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_11166] == bool(mem[_11166])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _11934 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _12318 = mem[_11934]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _12318
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _12318
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _12702 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_12702] == bool(mem[_12702])
                        else:
                            if ext_call.return_data[18 len 14] and arg2 > -1 / ext_call.return_data[18 len 14]:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[18 len 14]:
                                revert with 'NH{q', 18
                            if ext_call.return_data[18 len 14] * arg2 / ext_call.return_data[18 len 14] != arg2:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not ext_call.return_data[18 len 14] * arg2:
                                if arg2 > ext_call.return_data[50 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[50 len 14] < arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[50 len 14] - arg2 and 997 > -1 / ext_call.return_data[50 len 14] - arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[50 len 14]) - (997 * arg2) / ext_call.return_data[50 len 14] - arg2 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                    revert with 'NH{q', 18
                                if 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2) > -2:
                                    revert with 'NH{q', 17
                                if (0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2)) + 1 < 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    if not cd[(arg4 + 132)]:
                                        mem[(10 * ceil32(return_data.size)) + 474] = 2
                                        mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                        mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                        mem[(10 * ceil32(return_data.size)) + 638] = 160
                                        mem[(10 * ceil32(return_data.size)) + 734] = 2
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + 766
                                        t = (10 * ceil32(return_data.size)) + 506
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                        mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                        require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                        call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + 570
                                        require return_data.size >= 32
                                        _7515 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                        _7707 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                        if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                            revert with 'NH{q', 65
                                        if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0:
                                            revert with 'NH{q', 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                        mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                        require return_data.size >= _7515 + (32 * _7707) + 32
                                        mem[(11 * ceil32(return_data.size)) + 602 len 32 * _7707] = mem[(10 * ceil32(return_data.size)) + _7515 + 602 len 32 * _7707]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11069 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_11069] == bool(mem[_11069])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11837 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _12029 = mem[_11837]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _12029
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _12029
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _12605 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_12605] == bool(mem[_12605])
                                    else:
                                        mem[(10 * ceil32(return_data.size)) + 474] = 3
                                        mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(10 * ceil32(return_data.size)) + 538] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                        mem[(10 * ceil32(return_data.size)) + 570] = address(ext_call.return_data[0])
                                        mem[(10 * ceil32(return_data.size)) + 602] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + 606] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        mem[(10 * ceil32(return_data.size)) + 638] = ext_call.return_data[0]
                                        mem[(10 * ceil32(return_data.size)) + 670] = 160
                                        mem[(10 * ceil32(return_data.size)) + 766] = 3
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + 798
                                        t = (10 * ceil32(return_data.size)) + 506
                                        while idx < 3:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + 702] = this.address
                                        mem[(10 * ceil32(return_data.size)) + 734] = block.timestamp
                                        require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                        call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=3, data=mem[(10 * ceil32(return_data.size)) + 798 len 96]), address(this.address), block.timestamp
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + 602 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + 602
                                        require return_data.size >= 32
                                        _7516 = mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 633 < (10 * ceil32(return_data.size)) + return_data.size + 602
                                        _7708 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 602]
                                        if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 602] > test266151307():
                                            revert with 'NH{q', 65
                                        if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 602]) + 603 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 602]) + 1 < 0:
                                            revert with 'NH{q', 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 602]) + 603
                                        mem[(11 * ceil32(return_data.size)) + 602] = _7708
                                        require return_data.size >= _7516 + (32 * _7708) + 32
                                        mem[(11 * ceil32(return_data.size)) + 634 len 32 * _7708] = mem[(10 * ceil32(return_data.size)) + _7516 + 634 len 32 * _7708]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11165 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_11165] == bool(mem[_11165])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11933 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _12315 = mem[_11933]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _12315
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _12315
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _12701 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_12701] == bool(mem[_12701])
                            else:
                                if ext_call.return_data[18 len 14] * arg2 and 1000 > -1 / ext_call.return_data[18 len 14] * arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] * arg2:
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[18 len 14] * arg2 / ext_call.return_data[18 len 14] * arg2 != 1000:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if arg2 > ext_call.return_data[50 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[50 len 14] < arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[50 len 14] - arg2 and 997 > -1 / ext_call.return_data[50 len 14] - arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[50 len 14]) - (997 * arg2) / ext_call.return_data[50 len 14] - arg2 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[18 len 14] * arg2 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2) > -2:
                                    revert with 'NH{q', 17
                                if (1000 * ext_call.return_data[18 len 14] * arg2 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2)) + 1 < 1000 * ext_call.return_data[18 len 14] * arg2 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    if not cd[(arg4 + 132)]:
                                        mem[(10 * ceil32(return_data.size)) + 474] = 2
                                        mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                        mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + 574] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                        mem[(10 * ceil32(return_data.size)) + 638] = 160
                                        mem[(10 * ceil32(return_data.size)) + 734] = 2
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + 766
                                        t = (10 * ceil32(return_data.size)) + 506
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                        mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                        require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                        call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + 570
                                        require return_data.size >= 32
                                        _7513 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                        _7705 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                        if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                            revert with 'NH{q', 65
                                        if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0:
                                            revert with 'NH{q', 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                        mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                        require return_data.size >= _7513 + (32 * _7705) + 32
                                        mem[(11 * ceil32(return_data.size)) + 602 len 32 * _7705] = mem[(10 * ceil32(return_data.size)) + _7513 + 602 len 32 * _7705]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11068 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_11068] == bool(mem[_11068])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11836 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _12028 = mem[_11836]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _12028
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _12028
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _12604 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_12604] == bool(mem[_12604])
                                    else:
                                        mem[(10 * ceil32(return_data.size)) + 474] = 3
                                        mem[(10 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(10 * ceil32(return_data.size)) + 538] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                        mem[(10 * ceil32(return_data.size)) + 570] = address(ext_call.return_data[0])
                                        mem[(10 * ceil32(return_data.size)) + 602] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + 606] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        mem[(10 * ceil32(return_data.size)) + 638] = ext_call.return_data[0]
                                        mem[(10 * ceil32(return_data.size)) + 670] = 160
                                        mem[(10 * ceil32(return_data.size)) + 766] = 3
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + 798
                                        t = (10 * ceil32(return_data.size)) + 506
                                        while idx < 3:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + 702] = this.address
                                        mem[(10 * ceil32(return_data.size)) + 734] = block.timestamp
                                        require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                        call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=3, data=mem[(10 * ceil32(return_data.size)) + 798 len 96]), address(this.address), block.timestamp
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + 602 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + 602
                                        require return_data.size >= 32
                                        _7514 = mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 633 < (10 * ceil32(return_data.size)) + return_data.size + 602
                                        _7706 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 602]
                                        if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 602] > test266151307():
                                            revert with 'NH{q', 65
                                        if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 602]) + 603 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 602]) + 1 < 0:
                                            revert with 'NH{q', 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 602 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 602]) + 603
                                        mem[(11 * ceil32(return_data.size)) + 602] = _7706
                                        require return_data.size >= _7514 + (32 * _7706) + 32
                                        mem[(11 * ceil32(return_data.size)) + 634 len 32 * _7706] = mem[(10 * ceil32(return_data.size)) + _7514 + 634 len 32 * _7706]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11164 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_11164] == bool(mem[_11164])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11932 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _12312 = mem[_11932]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _12312
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _12312
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _12700 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_12700] == bool(mem[_12700])
}



}
