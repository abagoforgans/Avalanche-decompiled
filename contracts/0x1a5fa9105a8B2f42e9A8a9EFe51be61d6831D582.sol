contract main {




// =====================  Runtime code  =====================


#
#  - liquidateFlashloan(address arg1, address arg2, address arg3, address arg4, address arg5, address arg6, address arg7, uint256 arg8)
#  - checkAccount(address arg1, address arg2, address[] arg3, address[] arg4, address[] arg5, address[] arg6, uint256[] arg7, uint256 arg8)
#
function _fallback() payable {
    revert
}

function withdraw(address arg1) payable {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    require ext_code.size(arg1)
    staticcall arg1.0x70a08231 with:
            gas gas_remaining wei
           args this.address
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_code.size(arg1)
    call arg1.0xa9059cbb with:
         gas gas_remaining wei
        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == bool(ext_call.return_data[0])
}

function joeCall(address arg1, uint256 arg2, uint256 arg3, bytes arg4) payable {
    require calldata.size - 4 >= 128
    require arg1 == arg1
    require arg4 <= test266151307()
    require arg4 + 35 < calldata.size
    require arg4.length <= test266151307()
    require arg4 + arg4.length + 36 <= calldata.size
    require arg4.length >= 128
    require cd[(arg4 + 36)] == address(cd[(arg4 + 36)])
    require cd[(arg4 + 68)] == address(cd[(arg4 + 68)])
    require cd[(arg4 + 100)] == address(cd[(arg4 + 100)])
    require cd[(arg4 + 132)] == address(cd[(arg4 + 132)])
    require ext_code.size(msg.sender)
    staticcall msg.sender.token0() with:
            gas gas_remaining wei
    mem[96] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
    require ext_code.size(msg.sender)
    staticcall msg.sender.token1() with:
            gas gas_remaining wei
    mem[ceil32(return_data.size) + 96] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
    mem[(2 * ceil32(return_data.size)) + 100] = address(ext_call.return_data[0])
    mem[(2 * ceil32(return_data.size)) + 132] = address(ext_call.return_data[0])
    require ext_code.size(0x9ad6c38be94206ca50bb0d90783181662f0cfa10)
    staticcall 0x9ad6c38be94206ca50bb0d90783181662f0cfa10.getPair(address rg1, address rg2) with:
            gas gas_remaining wei
           args address(ext_call.return_data[0]), address(ext_call.return_data[0])
    mem[(2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
    if ext_call.return_data[12 len 20] != msg.sender:
        revert with 0, 'Sender wrong'
    if address(cd[(arg4 + 100)]) == address(cd[(arg4 + 68)]):
        require ext_code.size(address(cd[(arg4 + 68)]))
        if arg2:
            call address(cd[(arg4 + 68)]).approve(address rg1, uint256 rg2) with:
                 gas gas_remaining wei
                args address(cd[(arg4 + 132)]), arg2
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == bool(ext_call.return_data[0])
            require ext_code.size(address(cd[(arg4 + 132)]))
            call address(cd[(arg4 + 132)]).liquidationCall(address rg1, address rg2, address rg3, uint256 rg4, bool rg5) with:
                 gas gas_remaining wei
                args address(cd[(arg4 + 100)]), address(cd[(arg4 + 68)]), address(cd[(arg4 + 36)]), arg2, 0
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            if arg2 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                revert with 0, 17
            if 1 > !(1000 * arg2 / 997):
                revert with 0, 17
            require ext_code.size(address(cd[(arg4 + 68)]))
            call address(cd[(arg4 + 68)]).0xa9059cbb with:
                 gas gas_remaining wei
                args msg.sender, (1000 * arg2 / 997) + 1
        else:
            call address(cd[(arg4 + 68)]).approve(address rg1, uint256 rg2) with:
                 gas gas_remaining wei
                args address(cd[(arg4 + 132)]), arg3
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == bool(ext_call.return_data[0])
            require ext_code.size(address(cd[(arg4 + 132)]))
            call address(cd[(arg4 + 132)]).liquidationCall(address rg1, address rg2, address rg3, uint256 rg4, bool rg5) with:
                 gas gas_remaining wei
                args address(cd[(arg4 + 100)]), address(cd[(arg4 + 68)]), address(cd[(arg4 + 36)]), arg3, 0
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            if arg3 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                revert with 0, 17
            if 1 > !(1000 * arg3 / 997):
                revert with 0, 17
            require ext_code.size(address(cd[(arg4 + 68)]))
            call address(cd[(arg4 + 68)]).0xa9059cbb with:
                 gas gas_remaining wei
                args msg.sender, (1000 * arg3 / 997) + 1
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == bool(ext_call.return_data[0])
        require ext_code.size(address(cd[(arg4 + 68)]))
        staticcall address(cd[(arg4 + 68)]).0x70a08231 with:
                gas gas_remaining wei
               args this.address
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(address(cd[(arg4 + 68)]))
        call address(cd[(arg4 + 68)]).0xa9059cbb with:
             gas gas_remaining wei
            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == bool(ext_call.return_data[0])
    else:
        mem[(4 * ceil32(return_data.size)) + 100] = this.address
        require ext_code.size(address(cd[(arg4 + 100)]))
        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                gas gas_remaining wei
               args this.address
        mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        mem[(6 * ceil32(return_data.size)) + 100] = address(cd[(arg4 + 132)])
        if not arg2:
            mem[(6 * ceil32(return_data.size)) + 132] = arg3
            require ext_code.size(address(cd[(arg4 + 68)]))
            call address(cd[(arg4 + 68)]).approve(address rg1, uint256 rg2) with:
                 gas gas_remaining wei
                args address(cd[(arg4 + 132)]), arg3
            mem[(6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == bool(ext_call.return_data[0])
            mem[(7 * ceil32(return_data.size)) + 132] = address(cd[(arg4 + 68)])
            mem[(7 * ceil32(return_data.size)) + 164] = address(cd[(arg4 + 36)])
            mem[(7 * ceil32(return_data.size)) + 196] = arg3
            mem[(7 * ceil32(return_data.size)) + 228] = 0
            require ext_code.size(address(cd[(arg4 + 132)]))
            call address(cd[(arg4 + 132)]).liquidationCall(address rg1, address rg2, address rg3, uint256 rg4, bool rg5) with:
                 gas gas_remaining wei
                args address(cd[(arg4 + 100)]), address(cd[(arg4 + 68)]), address(cd[(arg4 + 36)]), arg3, 0
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            mem[(7 * ceil32(return_data.size)) + 100] = this.address
            require ext_code.size(address(cd[(arg4 + 100)]))
            staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if ext_call.return_data[0] < ext_call.return_data[0]:
                revert with 0, 17
            if not address(ext_call.return_data[0]):
                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
            if not address(ext_call.return_data[0]):
                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
            mem[(8 * ceil32(return_data.size)) + 128] = address(ext_call.return_data[0])
            mem[(8 * ceil32(return_data.size)) + 148] = address(ext_call.return_data[0])
            mem[(8 * ceil32(return_data.size)) + 96] = 40
            mem[(8 * ceil32(return_data.size)) + 200] = 0xff00000000000000000000000000000000000000000000000000000000000000
            mem[(8 * ceil32(return_data.size)) + 201] = 0x9ad6c38be94206ca50bb0d90783181662f0cfa10000000000000000000000000
            mem[(8 * ceil32(return_data.size)) + 221] = sha3(address(ext_call.return_data[0]), address(ext_call.return_data[0]))
            mem[(8 * ceil32(return_data.size)) + 253] = 0xbbca9af0511ad1a1da383135cf3a8d2ac620e549ef9f6ae3a4c33c2fed0af91
            mem[(8 * ceil32(return_data.size)) + 168] = 85
            if not address(ext_call.return_data[0]):
                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
            mem[(8 * ceil32(return_data.size)) + 317] = address(ext_call.return_data[0])
            mem[(8 * ceil32(return_data.size)) + 337] = address(ext_call.return_data[0])
            mem[(8 * ceil32(return_data.size)) + 285] = 40
            mem[(8 * ceil32(return_data.size)) + 389] = 0xff00000000000000000000000000000000000000000000000000000000000000
            mem[(8 * ceil32(return_data.size)) + 390] = 0x9ad6c38be94206ca50bb0d90783181662f0cfa10000000000000000000000000
            mem[(8 * ceil32(return_data.size)) + 410] = sha3(address(ext_call.return_data[0]), address(ext_call.return_data[0]))
            mem[(8 * ceil32(return_data.size)) + 442] = 0xbbca9af0511ad1a1da383135cf3a8d2ac620e549ef9f6ae3a4c33c2fed0af91
            mem[(8 * ceil32(return_data.size)) + 357] = 85
            require ext_code.size(address(sha3(0, 11157320132538271434, sha3(address(ext_call.return_data[0]), address(ext_call.return_data[0])), 0xbbca9af0511ad1a1da383135cf3a8d2ac620e549ef9f6ae3a4c33c2fed0af91)))
            staticcall address(sha3(0, 11157320132538271434, sha3(address(ext_call.return_data[0]), address(ext_call.return_data[0])), 0xbbca9af0511ad1a1da383135cf3a8d2ac620e549ef9f6ae3a4c33c2fed0af91)).getReserves() with:
                    gas gas_remaining wei
            mem[(8 * ceil32(return_data.size)) + 474 len 96] = ext_call.return_data[0 len 96]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 96
            require ext_call.return_data[0] == ext_call.return_data[18 len 14]
            require ext_call.return_data[32] == ext_call.return_data[50 len 14]
            require ext_call.return_data[64] == ext_call.return_data[92 len 4]
            if arg3 <= 0:
                revert with 0, 
                            'SpiritswapLibrary: INSUFFICIENT_OUTPUT_AMOUNT',
                            mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
            if address(ext_call.return_data[0]) < address(ext_call.return_data[0]):
                if address(ext_call.return_data[0]) < address(ext_call.return_data[0]):
                    if address(ext_call.return_data[0]) < address(ext_call.return_data[0]):
                        if address(ext_call.return_data[0]) == address(ext_call.return_data[0]):
                            if ext_call.return_data[50 len 14] <= 0:
                                revert with 0, 
                                            'SpiritswapLibrary: INSUFFICIENT_LIQUIDITY',
                                            mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                            if ext_call.return_data[18 len 14] <= 0:
                                revert with 0, 
                                            'SpiritswapLibrary: INSUFFICIENT_LIQUIDITY',
                                            mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                            if not ext_call.return_data[50 len 14]:
                                if arg3 > ext_call.return_data[18 len 14]:
                                    revert with 0, 'SafeMath: subtraction overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                if ext_call.return_data[18 len 14] < arg3:
                                    revert with 0, 17
                                if not ext_call.return_data[18 len 14] - arg3:
                                    revert with 0, 18
                                if ext_call.return_data[18 len 14] - arg3 and 997 > -1 / ext_call.return_data[18 len 14] - arg3:
                                    revert with 0, 17
                                if not ext_call.return_data[18 len 14] - arg3:
                                    revert with 0, 18
                                if (997 * ext_call.return_data[18 len 14]) - (997 * arg3) / ext_call.return_data[18 len 14] - arg3 != 997:
                                    revert with 0, 'SafeMath: multiplication overflow', mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                                if not (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                    revert with 0, 18
                                if 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3) > -2:
                                    revert with 0, 17
                                if (0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3)) + 1 < 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                    revert with 0, 'SafeMath: addition overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                    mem[(10 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(12 * ceil32(return_data.size)) + 510 len 20 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(14 * ceil32(return_data.size)) + 542 len 24 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(10 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                    mem[(10 * ceil32(return_data.size)) + 510] = 0
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).approve(address rg1, uint256 rg2) with:
                                         gas gas_remaining wei
                                        args 0x60ae616a2155ee3d9a68541ba4544862310933d4, 0, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                    mem[(10 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(12 * ceil32(return_data.size)) + 474] = 2
                                    mem[(12 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                    mem[(12 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(12 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(12 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    mem[(12 * ceil32(return_data.size)) + 606] = 0
                                    mem[(12 * ceil32(return_data.size)) + 638] = 160
                                    mem[(12 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (12 * ceil32(return_data.size)) + 766
                                    t = (12 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(12 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(12 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                    call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                         gas gas_remaining wei
                                        args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1, 0, 160, address(this.address), block.timestamp, 2, mem[(12 * ceil32(return_data.size)) + 766 len 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(12 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (13 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _4553 = mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32
                                    require mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                    require (12 * ceil32(return_data.size)) + return_data.size + 570 > (12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 601
                                    _4649 = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                    if mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                        revert with 0, 65
                                    if ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0 or (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307():
                                        revert with 0, 65
                                    mem[64] = (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                    mem[(13 * ceil32(return_data.size)) + 570] = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                    require _4553 + (32 * _4649) + 32 <= return_data.size
                                    mem[(13 * ceil32(return_data.size)) + 602 len 32 * _4649] = mem[(12 * ceil32(return_data.size)) + _4553 + 602 len 32 * _4649]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _6377 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_6377] == bool(mem[_6377])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _6761 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _6857 = mem[_6761]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _6857
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _6857
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7145 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7145] == bool(mem[_7145])
                            else:
                                if ext_call.return_data[50 len 14] and arg3 > -1 / ext_call.return_data[50 len 14]:
                                    revert with 0, 17
                                if not ext_call.return_data[50 len 14]:
                                    revert with 0, 18
                                if ext_call.return_data[50 len 14] * arg3 / ext_call.return_data[50 len 14] != arg3:
                                    revert with 0, 'SafeMath: multiplication overflow', mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                                if not ext_call.return_data[50 len 14] * arg3:
                                    if arg3 > ext_call.return_data[18 len 14]:
                                        revert with 0, 'SafeMath: subtraction overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                    if ext_call.return_data[18 len 14] < arg3:
                                        revert with 0, 17
                                    if not ext_call.return_data[18 len 14] - arg3:
                                        revert with 0, 18
                                    if ext_call.return_data[18 len 14] - arg3 and 997 > -1 / ext_call.return_data[18 len 14] - arg3:
                                        revert with 0, 17
                                    if not ext_call.return_data[18 len 14] - arg3:
                                        revert with 0, 18
                                    if (997 * ext_call.return_data[18 len 14]) - (997 * arg3) / ext_call.return_data[18 len 14] - arg3 != 997:
                                        revert with 0, 'SafeMath: multiplication overflow', mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                                    if not (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                        revert with 0, 18
                                    if 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3) > -2:
                                        revert with 0, 17
                                    if (0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3)) + 1 < 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                        revert with 0, 'SafeMath: addition overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                    if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                        mem[(10 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address, mem[(12 * ceil32(return_data.size)) + 510 len 20 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(14 * ceil32(return_data.size)) + 542 len 24 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    else:
                                        mem[(10 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                        mem[(10 * ceil32(return_data.size)) + 510] = 0
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).approve(address rg1, uint256 rg2) with:
                                             gas gas_remaining wei
                                            args 0x60ae616a2155ee3d9a68541ba4544862310933d4, 0, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                        mem[(10 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        mem[(12 * ceil32(return_data.size)) + 474] = 2
                                        mem[(12 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(12 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                        mem[(12 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(12 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        mem[(12 * ceil32(return_data.size)) + 606] = 0
                                        mem[(12 * ceil32(return_data.size)) + 638] = 160
                                        mem[(12 * ceil32(return_data.size)) + 734] = 2
                                        idx = 0
                                        s = (12 * ceil32(return_data.size)) + 766
                                        t = (12 * ceil32(return_data.size)) + 506
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(12 * ceil32(return_data.size)) + 670] = this.address
                                        mem[(12 * ceil32(return_data.size)) + 702] = block.timestamp
                                        require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                        call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                             gas gas_remaining wei
                                            args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1, 0, 160, address(this.address), block.timestamp, 2, mem[(12 * ceil32(return_data.size)) + 766 len 64]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(12 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (13 * ceil32(return_data.size)) + 570
                                        require return_data.size >= 32
                                        _4552 = mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32
                                        require mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                        require (12 * ceil32(return_data.size)) + return_data.size + 570 > (12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 601
                                        _4648 = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                        if mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                            revert with 0, 65
                                        if ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0 or (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307():
                                            revert with 0, 65
                                        mem[64] = (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                        mem[(13 * ceil32(return_data.size)) + 570] = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                        require _4552 + (32 * _4648) + 32 <= return_data.size
                                        mem[(13 * ceil32(return_data.size)) + 602 len 32 * _4648] = mem[(12 * ceil32(return_data.size)) + _4552 + 602 len 32 * _4648]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6376 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_6376] == bool(mem[_6376])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6760 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _6856 = mem[_6760]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _6856
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _6856
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _7144 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_7144] == bool(mem[_7144])
                                else:
                                    if ext_call.return_data[50 len 14] * arg3 and 1000 > -1 / ext_call.return_data[50 len 14] * arg3:
                                        revert with 0, 17
                                    if not ext_call.return_data[50 len 14] * arg3:
                                        revert with 0, 18
                                    if 1000 * ext_call.return_data[50 len 14] * arg3 / ext_call.return_data[50 len 14] * arg3 != 1000:
                                        revert with 0, 'SafeMath: multiplication overflow', mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                                    if arg3 > ext_call.return_data[18 len 14]:
                                        revert with 0, 'SafeMath: subtraction overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                    if ext_call.return_data[18 len 14] < arg3:
                                        revert with 0, 17
                                    if not ext_call.return_data[18 len 14] - arg3:
                                        revert with 0, 18
                                    if ext_call.return_data[18 len 14] - arg3 and 997 > -1 / ext_call.return_data[18 len 14] - arg3:
                                        revert with 0, 17
                                    if not ext_call.return_data[18 len 14] - arg3:
                                        revert with 0, 18
                                    if (997 * ext_call.return_data[18 len 14]) - (997 * arg3) / ext_call.return_data[18 len 14] - arg3 != 997:
                                        revert with 0, 'SafeMath: multiplication overflow', mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                                    if not (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                        revert with 0, 18
                                    if 1000 * ext_call.return_data[50 len 14] * arg3 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3) > -2:
                                        revert with 0, 17
                                    if (1000 * ext_call.return_data[50 len 14] * arg3 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3)) + 1 < 1000 * ext_call.return_data[50 len 14] * arg3 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                        revert with 0, 'SafeMath: addition overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                    if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                        mem[(10 * ceil32(return_data.size)) + 510] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address, mem[(12 * ceil32(return_data.size)) + 510 len 20 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(14 * ceil32(return_data.size)) + 542 len 24 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    else:
                                        mem[(10 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                        mem[(10 * ceil32(return_data.size)) + 510] = 0
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).approve(address rg1, uint256 rg2) with:
                                             gas gas_remaining wei
                                            args 0x60ae616a2155ee3d9a68541ba4544862310933d4, 0, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                        mem[(10 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        mem[(12 * ceil32(return_data.size)) + 474] = 2
                                        mem[(12 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(12 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                        mem[(12 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(12 * ceil32(return_data.size)) + 574] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        mem[(12 * ceil32(return_data.size)) + 606] = 0
                                        mem[(12 * ceil32(return_data.size)) + 638] = 160
                                        mem[(12 * ceil32(return_data.size)) + 734] = 2
                                        idx = 0
                                        s = (12 * ceil32(return_data.size)) + 766
                                        t = (12 * ceil32(return_data.size)) + 506
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(12 * ceil32(return_data.size)) + 670] = this.address
                                        mem[(12 * ceil32(return_data.size)) + 702] = block.timestamp
                                        require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                        call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                             gas gas_remaining wei
                                            args (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1, 0, 160, address(this.address), block.timestamp, 2, mem[(12 * ceil32(return_data.size)) + 766 len 64]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(12 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (13 * ceil32(return_data.size)) + 570
                                        require return_data.size >= 32
                                        _4551 = mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32
                                        require mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                        require (12 * ceil32(return_data.size)) + return_data.size + 570 > (12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 601
                                        _4647 = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                        if mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                            revert with 0, 65
                                        if ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0 or (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307():
                                            revert with 0, 65
                                        mem[64] = (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                        mem[(13 * ceil32(return_data.size)) + 570] = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                        require _4551 + (32 * _4647) + 32 <= return_data.size
                                        mem[(13 * ceil32(return_data.size)) + 602 len 32 * _4647] = mem[(12 * ceil32(return_data.size)) + _4551 + 602 len 32 * _4647]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6375 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_6375] == bool(mem[_6375])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6759 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _6855 = mem[_6759]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _6855
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _6855
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _7143 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_7143] == bool(mem[_7143])
                        else:
                            if ext_call.return_data[18 len 14] <= 0:
                                revert with 0, 
                                            'SpiritswapLibrary: INSUFFICIENT_LIQUIDITY',
                                            mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                            if ext_call.return_data[50 len 14] <= 0:
                                revert with 0, 
                                            'SpiritswapLibrary: INSUFFICIENT_LIQUIDITY',
                                            mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                            if not ext_call.return_data[18 len 14]:
                                if arg3 > ext_call.return_data[50 len 14]:
                                    revert with 0, 'SafeMath: subtraction overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                if ext_call.return_data[50 len 14] < arg3:
                                    revert with 0, 17
                                if not ext_call.return_data[50 len 14] - arg3:
                                    revert with 0, 18
                                if ext_call.return_data[50 len 14] - arg3 and 997 > -1 / ext_call.return_data[50 len 14] - arg3:
                                    revert with 0, 17
                                if not ext_call.return_data[50 len 14] - arg3:
                                    revert with 0, 18
                                if (997 * ext_call.return_data[50 len 14]) - (997 * arg3) / ext_call.return_data[50 len 14] - arg3 != 997:
                                    revert with 0, 'SafeMath: multiplication overflow', mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                                if not (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                    revert with 0, 18
                                if 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3) > -2:
                                    revert with 0, 17
                                if (0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3)) + 1 < 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                    revert with 0, 'SafeMath: addition overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                    mem[(10 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(12 * ceil32(return_data.size)) + 510 len 20 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(14 * ceil32(return_data.size)) + 542 len 24 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(10 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                    mem[(10 * ceil32(return_data.size)) + 510] = 0
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).approve(address rg1, uint256 rg2) with:
                                         gas gas_remaining wei
                                        args 0x60ae616a2155ee3d9a68541ba4544862310933d4, 0, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                    mem[(10 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(12 * ceil32(return_data.size)) + 474] = 2
                                    mem[(12 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                    mem[(12 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(12 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(12 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    mem[(12 * ceil32(return_data.size)) + 606] = 0
                                    mem[(12 * ceil32(return_data.size)) + 638] = 160
                                    mem[(12 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (12 * ceil32(return_data.size)) + 766
                                    t = (12 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(12 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(12 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                    call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                         gas gas_remaining wei
                                        args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1, 0, 160, address(this.address), block.timestamp, 2, mem[(12 * ceil32(return_data.size)) + 766 len 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(12 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (13 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _4556 = mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32
                                    require mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                    require (12 * ceil32(return_data.size)) + return_data.size + 570 > (12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 601
                                    _4652 = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                    if mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                        revert with 0, 65
                                    if ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0 or (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307():
                                        revert with 0, 65
                                    mem[64] = (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                    mem[(13 * ceil32(return_data.size)) + 570] = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                    require _4556 + (32 * _4652) + 32 <= return_data.size
                                    mem[(13 * ceil32(return_data.size)) + 602 len 32 * _4652] = mem[(12 * ceil32(return_data.size)) + _4556 + 602 len 32 * _4652]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _6380 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_6380] == bool(mem[_6380])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _6764 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _6860 = mem[_6764]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _6860
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _6860
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7148 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7148] == bool(mem[_7148])
                            else:
                                if ext_call.return_data[18 len 14] and arg3 > -1 / ext_call.return_data[18 len 14]:
                                    revert with 0, 17
                                if not ext_call.return_data[18 len 14]:
                                    revert with 0, 18
                                if ext_call.return_data[18 len 14] * arg3 / ext_call.return_data[18 len 14] != arg3:
                                    revert with 0, 'SafeMath: multiplication overflow', mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                                if not ext_call.return_data[18 len 14] * arg3:
                                    if arg3 > ext_call.return_data[50 len 14]:
                                        revert with 0, 'SafeMath: subtraction overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                    if ext_call.return_data[50 len 14] < arg3:
                                        revert with 0, 17
                                    if not ext_call.return_data[50 len 14] - arg3:
                                        revert with 0, 18
                                    if ext_call.return_data[50 len 14] - arg3 and 997 > -1 / ext_call.return_data[50 len 14] - arg3:
                                        revert with 0, 17
                                    if not ext_call.return_data[50 len 14] - arg3:
                                        revert with 0, 18
                                    if (997 * ext_call.return_data[50 len 14]) - (997 * arg3) / ext_call.return_data[50 len 14] - arg3 != 997:
                                        revert with 0, 'SafeMath: multiplication overflow', mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                                    if not (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                        revert with 0, 18
                                    if 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3) > -2:
                                        revert with 0, 17
                                    if (0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3)) + 1 < 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                        revert with 0, 'SafeMath: addition overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                    if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                        mem[(10 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address, mem[(12 * ceil32(return_data.size)) + 510 len 20 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(14 * ceil32(return_data.size)) + 542 len 24 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    else:
                                        mem[(10 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                        mem[(10 * ceil32(return_data.size)) + 510] = 0
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).approve(address rg1, uint256 rg2) with:
                                             gas gas_remaining wei
                                            args 0x60ae616a2155ee3d9a68541ba4544862310933d4, 0, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                        mem[(10 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        mem[(12 * ceil32(return_data.size)) + 474] = 2
                                        mem[(12 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(12 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                        mem[(12 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(12 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        mem[(12 * ceil32(return_data.size)) + 606] = 0
                                        mem[(12 * ceil32(return_data.size)) + 638] = 160
                                        mem[(12 * ceil32(return_data.size)) + 734] = 2
                                        idx = 0
                                        s = (12 * ceil32(return_data.size)) + 766
                                        t = (12 * ceil32(return_data.size)) + 506
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(12 * ceil32(return_data.size)) + 670] = this.address
                                        mem[(12 * ceil32(return_data.size)) + 702] = block.timestamp
                                        require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                        call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                             gas gas_remaining wei
                                            args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1, 0, 160, address(this.address), block.timestamp, 2, mem[(12 * ceil32(return_data.size)) + 766 len 64]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(12 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (13 * ceil32(return_data.size)) + 570
                                        require return_data.size >= 32
                                        _4555 = mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32
                                        require mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                        require (12 * ceil32(return_data.size)) + return_data.size + 570 > (12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 601
                                        _4651 = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                        if mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                            revert with 0, 65
                                        if ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0 or (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307():
                                            revert with 0, 65
                                        mem[64] = (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                        mem[(13 * ceil32(return_data.size)) + 570] = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                        require _4555 + (32 * _4651) + 32 <= return_data.size
                                        mem[(13 * ceil32(return_data.size)) + 602 len 32 * _4651] = mem[(12 * ceil32(return_data.size)) + _4555 + 602 len 32 * _4651]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6379 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_6379] == bool(mem[_6379])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6763 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _6859 = mem[_6763]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _6859
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _6859
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _7147 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_7147] == bool(mem[_7147])
                                else:
                                    if ext_call.return_data[18 len 14] * arg3 and 1000 > -1 / ext_call.return_data[18 len 14] * arg3:
                                        revert with 0, 17
                                    if not ext_call.return_data[18 len 14] * arg3:
                                        revert with 0, 18
                                    if 1000 * ext_call.return_data[18 len 14] * arg3 / ext_call.return_data[18 len 14] * arg3 != 1000:
                                        revert with 0, 'SafeMath: multiplication overflow', mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                                    if arg3 > ext_call.return_data[50 len 14]:
                                        revert with 0, 'SafeMath: subtraction overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                    if ext_call.return_data[50 len 14] < arg3:
                                        revert with 0, 17
                                    if not ext_call.return_data[50 len 14] - arg3:
                                        revert with 0, 18
                                    if ext_call.return_data[50 len 14] - arg3 and 997 > -1 / ext_call.return_data[50 len 14] - arg3:
                                        revert with 0, 17
                                    if not ext_call.return_data[50 len 14] - arg3:
                                        revert with 0, 18
                                    if (997 * ext_call.return_data[50 len 14]) - (997 * arg3) / ext_call.return_data[50 len 14] - arg3 != 997:
                                        revert with 0, 'SafeMath: multiplication overflow', mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                                    if not (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                        revert with 0, 18
                                    if 1000 * ext_call.return_data[18 len 14] * arg3 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3) > -2:
                                        revert with 0, 17
                                    if (1000 * ext_call.return_data[18 len 14] * arg3 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3)) + 1 < 1000 * ext_call.return_data[18 len 14] * arg3 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                        revert with 0, 'SafeMath: addition overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                    if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                        mem[(10 * ceil32(return_data.size)) + 510] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address, mem[(12 * ceil32(return_data.size)) + 510 len 20 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(14 * ceil32(return_data.size)) + 542 len 24 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    else:
                                        mem[(10 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                        mem[(10 * ceil32(return_data.size)) + 510] = 0
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).approve(address rg1, uint256 rg2) with:
                                             gas gas_remaining wei
                                            args 0x60ae616a2155ee3d9a68541ba4544862310933d4, 0, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                        mem[(10 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        mem[(12 * ceil32(return_data.size)) + 474] = 2
                                        mem[(12 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(12 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                        mem[(12 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(12 * ceil32(return_data.size)) + 574] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        mem[(12 * ceil32(return_data.size)) + 606] = 0
                                        mem[(12 * ceil32(return_data.size)) + 638] = 160
                                        mem[(12 * ceil32(return_data.size)) + 734] = 2
                                        idx = 0
                                        s = (12 * ceil32(return_data.size)) + 766
                                        t = (12 * ceil32(return_data.size)) + 506
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(12 * ceil32(return_data.size)) + 670] = this.address
                                        mem[(12 * ceil32(return_data.size)) + 702] = block.timestamp
                                        require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                        call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                             gas gas_remaining wei
                                            args (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1, 0, 160, address(this.address), block.timestamp, 2, mem[(12 * ceil32(return_data.size)) + 766 len 64]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(12 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (13 * ceil32(return_data.size)) + 570
                                        require return_data.size >= 32
                                        _4554 = mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32
                                        require mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                        require (12 * ceil32(return_data.size)) + return_data.size + 570 > (12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 601
                                        _4650 = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                        if mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                            revert with 0, 65
                                        if ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0 or (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307():
                                            revert with 0, 65
                                        mem[64] = (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                        mem[(13 * ceil32(return_data.size)) + 570] = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                        require _4554 + (32 * _4650) + 32 <= return_data.size
                                        mem[(13 * ceil32(return_data.size)) + 602 len 32 * _4650] = mem[(12 * ceil32(return_data.size)) + _4554 + 602 len 32 * _4650]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6378 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_6378] == bool(mem[_6378])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6762 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _6858 = mem[_6762]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _6858
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _6858
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _7146 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_7146] == bool(mem[_7146])
                    else:
                        if address(ext_call.return_data[0]) == address(ext_call.return_data[0]):
                            if ext_call.return_data[50 len 14] <= 0:
                                revert with 0, 
                                            'SpiritswapLibrary: INSUFFICIENT_LIQUIDITY',
                                            mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                            if ext_call.return_data[18 len 14] <= 0:
                                revert with 0, 
                                            'SpiritswapLibrary: INSUFFICIENT_LIQUIDITY',
                                            mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                            if not ext_call.return_data[50 len 14]:
                                if arg3 > ext_call.return_data[18 len 14]:
                                    revert with 0, 'SafeMath: subtraction overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                if ext_call.return_data[18 len 14] < arg3:
                                    revert with 0, 17
                                if not ext_call.return_data[18 len 14] - arg3:
                                    revert with 0, 18
                                if ext_call.return_data[18 len 14] - arg3 and 997 > -1 / ext_call.return_data[18 len 14] - arg3:
                                    revert with 0, 17
                                if not ext_call.return_data[18 len 14] - arg3:
                                    revert with 0, 18
                                if (997 * ext_call.return_data[18 len 14]) - (997 * arg3) / ext_call.return_data[18 len 14] - arg3 != 997:
                                    revert with 0, 'SafeMath: multiplication overflow', mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                                if not (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                    revert with 0, 18
                                if 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3) > -2:
                                    revert with 0, 17
                                if (0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3)) + 1 < 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                    revert with 0, 'SafeMath: addition overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                    mem[(10 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(12 * ceil32(return_data.size)) + 510 len 20 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(14 * ceil32(return_data.size)) + 542 len 24 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(10 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                    mem[(10 * ceil32(return_data.size)) + 510] = 0
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).approve(address rg1, uint256 rg2) with:
                                         gas gas_remaining wei
                                        args 0x60ae616a2155ee3d9a68541ba4544862310933d4, 0, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                    mem[(10 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(12 * ceil32(return_data.size)) + 474] = 2
                                    mem[(12 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                    mem[(12 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(12 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(12 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    mem[(12 * ceil32(return_data.size)) + 606] = 0
                                    mem[(12 * ceil32(return_data.size)) + 638] = 160
                                    mem[(12 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (12 * ceil32(return_data.size)) + 766
                                    t = (12 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(12 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(12 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                    call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                         gas gas_remaining wei
                                        args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1, 0, 160, address(this.address), block.timestamp, 2, mem[(12 * ceil32(return_data.size)) + 766 len 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(12 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (13 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _4559 = mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32
                                    require mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                    require (12 * ceil32(return_data.size)) + return_data.size + 570 > (12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 601
                                    _4655 = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                    if mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                        revert with 0, 65
                                    if ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0 or (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307():
                                        revert with 0, 65
                                    mem[64] = (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                    mem[(13 * ceil32(return_data.size)) + 570] = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                    require _4559 + (32 * _4655) + 32 <= return_data.size
                                    mem[(13 * ceil32(return_data.size)) + 602 len 32 * _4655] = mem[(12 * ceil32(return_data.size)) + _4559 + 602 len 32 * _4655]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _6383 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_6383] == bool(mem[_6383])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _6767 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _6863 = mem[_6767]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _6863
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _6863
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7151 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7151] == bool(mem[_7151])
                            else:
                                if ext_call.return_data[50 len 14] and arg3 > -1 / ext_call.return_data[50 len 14]:
                                    revert with 0, 17
                                if not ext_call.return_data[50 len 14]:
                                    revert with 0, 18
                                if ext_call.return_data[50 len 14] * arg3 / ext_call.return_data[50 len 14] != arg3:
                                    revert with 0, 'SafeMath: multiplication overflow', mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                                if not ext_call.return_data[50 len 14] * arg3:
                                    if arg3 > ext_call.return_data[18 len 14]:
                                        revert with 0, 'SafeMath: subtraction overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                    if ext_call.return_data[18 len 14] < arg3:
                                        revert with 0, 17
                                    if not ext_call.return_data[18 len 14] - arg3:
                                        revert with 0, 18
                                    if ext_call.return_data[18 len 14] - arg3 and 997 > -1 / ext_call.return_data[18 len 14] - arg3:
                                        revert with 0, 17
                                    if not ext_call.return_data[18 len 14] - arg3:
                                        revert with 0, 18
                                    if (997 * ext_call.return_data[18 len 14]) - (997 * arg3) / ext_call.return_data[18 len 14] - arg3 != 997:
                                        revert with 0, 'SafeMath: multiplication overflow', mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                                    if not (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                        revert with 0, 18
                                    if 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3) > -2:
                                        revert with 0, 17
                                    if (0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3)) + 1 < 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                        revert with 0, 'SafeMath: addition overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                    if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                        mem[(10 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address, mem[(12 * ceil32(return_data.size)) + 510 len 20 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(14 * ceil32(return_data.size)) + 542 len 24 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    else:
                                        mem[(10 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                        mem[(10 * ceil32(return_data.size)) + 510] = 0
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).approve(address rg1, uint256 rg2) with:
                                             gas gas_remaining wei
                                            args 0x60ae616a2155ee3d9a68541ba4544862310933d4, 0, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                        mem[(10 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        mem[(12 * ceil32(return_data.size)) + 474] = 2
                                        mem[(12 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(12 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                        mem[(12 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(12 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        mem[(12 * ceil32(return_data.size)) + 606] = 0
                                        mem[(12 * ceil32(return_data.size)) + 638] = 160
                                        mem[(12 * ceil32(return_data.size)) + 734] = 2
                                        idx = 0
                                        s = (12 * ceil32(return_data.size)) + 766
                                        t = (12 * ceil32(return_data.size)) + 506
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(12 * ceil32(return_data.size)) + 670] = this.address
                                        mem[(12 * ceil32(return_data.size)) + 702] = block.timestamp
                                        require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                        call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                             gas gas_remaining wei
                                            args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1, 0, 160, address(this.address), block.timestamp, 2, mem[(12 * ceil32(return_data.size)) + 766 len 64]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(12 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (13 * ceil32(return_data.size)) + 570
                                        require return_data.size >= 32
                                        _4558 = mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32
                                        require mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                        require (12 * ceil32(return_data.size)) + return_data.size + 570 > (12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 601
                                        _4654 = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                        if mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                            revert with 0, 65
                                        if ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0 or (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307():
                                            revert with 0, 65
                                        mem[64] = (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                        mem[(13 * ceil32(return_data.size)) + 570] = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                        require _4558 + (32 * _4654) + 32 <= return_data.size
                                        mem[(13 * ceil32(return_data.size)) + 602 len 32 * _4654] = mem[(12 * ceil32(return_data.size)) + _4558 + 602 len 32 * _4654]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6382 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_6382] == bool(mem[_6382])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6766 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _6862 = mem[_6766]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _6862
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _6862
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _7150 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_7150] == bool(mem[_7150])
                                else:
                                    if ext_call.return_data[50 len 14] * arg3 and 1000 > -1 / ext_call.return_data[50 len 14] * arg3:
                                        revert with 0, 17
                                    if not ext_call.return_data[50 len 14] * arg3:
                                        revert with 0, 18
                                    if 1000 * ext_call.return_data[50 len 14] * arg3 / ext_call.return_data[50 len 14] * arg3 != 1000:
                                        revert with 0, 'SafeMath: multiplication overflow', mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                                    if arg3 > ext_call.return_data[18 len 14]:
                                        revert with 0, 'SafeMath: subtraction overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                    if ext_call.return_data[18 len 14] < arg3:
                                        revert with 0, 17
                                    if not ext_call.return_data[18 len 14] - arg3:
                                        revert with 0, 18
                                    if ext_call.return_data[18 len 14] - arg3 and 997 > -1 / ext_call.return_data[18 len 14] - arg3:
                                        revert with 0, 17
                                    if not ext_call.return_data[18 len 14] - arg3:
                                        revert with 0, 18
                                    if (997 * ext_call.return_data[18 len 14]) - (997 * arg3) / ext_call.return_data[18 len 14] - arg3 != 997:
                                        revert with 0, 'SafeMath: multiplication overflow', mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                                    if not (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                        revert with 0, 18
                                    if 1000 * ext_call.return_data[50 len 14] * arg3 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3) > -2:
                                        revert with 0, 17
                                    if (1000 * ext_call.return_data[50 len 14] * arg3 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3)) + 1 < 1000 * ext_call.return_data[50 len 14] * arg3 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                        revert with 0, 'SafeMath: addition overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                    if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                        mem[(10 * ceil32(return_data.size)) + 510] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address, mem[(12 * ceil32(return_data.size)) + 510 len 20 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(14 * ceil32(return_data.size)) + 542 len 24 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    else:
                                        mem[(10 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                        mem[(10 * ceil32(return_data.size)) + 510] = 0
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).approve(address rg1, uint256 rg2) with:
                                             gas gas_remaining wei
                                            args 0x60ae616a2155ee3d9a68541ba4544862310933d4, 0, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                        mem[(10 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        mem[(12 * ceil32(return_data.size)) + 474] = 2
                                        mem[(12 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(12 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                        mem[(12 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(12 * ceil32(return_data.size)) + 574] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        mem[(12 * ceil32(return_data.size)) + 606] = 0
                                        mem[(12 * ceil32(return_data.size)) + 638] = 160
                                        mem[(12 * ceil32(return_data.size)) + 734] = 2
                                        idx = 0
                                        s = (12 * ceil32(return_data.size)) + 766
                                        t = (12 * ceil32(return_data.size)) + 506
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(12 * ceil32(return_data.size)) + 670] = this.address
                                        mem[(12 * ceil32(return_data.size)) + 702] = block.timestamp
                                        require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                        call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                             gas gas_remaining wei
                                            args (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1, 0, 160, address(this.address), block.timestamp, 2, mem[(12 * ceil32(return_data.size)) + 766 len 64]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(12 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (13 * ceil32(return_data.size)) + 570
                                        require return_data.size >= 32
                                        _4557 = mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32
                                        require mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                        require (12 * ceil32(return_data.size)) + return_data.size + 570 > (12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 601
                                        _4653 = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                        if mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                            revert with 0, 65
                                        if ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0 or (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307():
                                            revert with 0, 65
                                        mem[64] = (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                        mem[(13 * ceil32(return_data.size)) + 570] = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                        require _4557 + (32 * _4653) + 32 <= return_data.size
                                        mem[(13 * ceil32(return_data.size)) + 602 len 32 * _4653] = mem[(12 * ceil32(return_data.size)) + _4557 + 602 len 32 * _4653]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6381 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_6381] == bool(mem[_6381])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6765 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _6861 = mem[_6765]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _6861
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _6861
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _7149 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_7149] == bool(mem[_7149])
                        else:
                            if ext_call.return_data[18 len 14] <= 0:
                                revert with 0, 
                                            'SpiritswapLibrary: INSUFFICIENT_LIQUIDITY',
                                            mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                            if ext_call.return_data[50 len 14] <= 0:
                                revert with 0, 
                                            'SpiritswapLibrary: INSUFFICIENT_LIQUIDITY',
                                            mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                            if not ext_call.return_data[18 len 14]:
                                if arg3 > ext_call.return_data[50 len 14]:
                                    revert with 0, 'SafeMath: subtraction overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                if ext_call.return_data[50 len 14] < arg3:
                                    revert with 0, 17
                                if not ext_call.return_data[50 len 14] - arg3:
                                    revert with 0, 18
                                if ext_call.return_data[50 len 14] - arg3 and 997 > -1 / ext_call.return_data[50 len 14] - arg3:
                                    revert with 0, 17
                                if not ext_call.return_data[50 len 14] - arg3:
                                    revert with 0, 18
                                if (997 * ext_call.return_data[50 len 14]) - (997 * arg3) / ext_call.return_data[50 len 14] - arg3 != 997:
                                    revert with 0, 'SafeMath: multiplication overflow', mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                                if not (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                    revert with 0, 18
                                if 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3) > -2:
                                    revert with 0, 17
                                if (0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3)) + 1 < 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                    revert with 0, 'SafeMath: addition overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                    mem[(10 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(12 * ceil32(return_data.size)) + 510 len 20 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(14 * ceil32(return_data.size)) + 542 len 24 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(10 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                    mem[(10 * ceil32(return_data.size)) + 510] = 0
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).approve(address rg1, uint256 rg2) with:
                                         gas gas_remaining wei
                                        args 0x60ae616a2155ee3d9a68541ba4544862310933d4, 0, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                    mem[(10 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(12 * ceil32(return_data.size)) + 474] = 2
                                    mem[(12 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                    mem[(12 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(12 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(12 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    mem[(12 * ceil32(return_data.size)) + 606] = 0
                                    mem[(12 * ceil32(return_data.size)) + 638] = 160
                                    mem[(12 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (12 * ceil32(return_data.size)) + 766
                                    t = (12 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(12 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(12 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                    call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                         gas gas_remaining wei
                                        args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1, 0, 160, address(this.address), block.timestamp, 2, mem[(12 * ceil32(return_data.size)) + 766 len 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(12 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (13 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _4562 = mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32
                                    require mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                    require (12 * ceil32(return_data.size)) + return_data.size + 570 > (12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 601
                                    _4658 = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                    if mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                        revert with 0, 65
                                    if ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0 or (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307():
                                        revert with 0, 65
                                    mem[64] = (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                    mem[(13 * ceil32(return_data.size)) + 570] = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                    require _4562 + (32 * _4658) + 32 <= return_data.size
                                    mem[(13 * ceil32(return_data.size)) + 602 len 32 * _4658] = mem[(12 * ceil32(return_data.size)) + _4562 + 602 len 32 * _4658]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _6386 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_6386] == bool(mem[_6386])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _6770 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _6866 = mem[_6770]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _6866
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _6866
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7154 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7154] == bool(mem[_7154])
                            else:
                                if ext_call.return_data[18 len 14] and arg3 > -1 / ext_call.return_data[18 len 14]:
                                    revert with 0, 17
                                if not ext_call.return_data[18 len 14]:
                                    revert with 0, 18
                                if ext_call.return_data[18 len 14] * arg3 / ext_call.return_data[18 len 14] != arg3:
                                    revert with 0, 'SafeMath: multiplication overflow', mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                                if not ext_call.return_data[18 len 14] * arg3:
                                    if arg3 > ext_call.return_data[50 len 14]:
                                        revert with 0, 'SafeMath: subtraction overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                    if ext_call.return_data[50 len 14] < arg3:
                                        revert with 0, 17
                                    if not ext_call.return_data[50 len 14] - arg3:
                                        revert with 0, 18
                                    if ext_call.return_data[50 len 14] - arg3 and 997 > -1 / ext_call.return_data[50 len 14] - arg3:
                                        revert with 0, 17
                                    if not ext_call.return_data[50 len 14] - arg3:
                                        revert with 0, 18
                                    if (997 * ext_call.return_data[50 len 14]) - (997 * arg3) / ext_call.return_data[50 len 14] - arg3 != 997:
                                        revert with 0, 'SafeMath: multiplication overflow', mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                                    if not (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                        revert with 0, 18
                                    if 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3) > -2:
                                        revert with 0, 17
                                    if (0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3)) + 1 < 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                        revert with 0, 'SafeMath: addition overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                    if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                        mem[(10 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address, mem[(12 * ceil32(return_data.size)) + 510 len 20 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(14 * ceil32(return_data.size)) + 542 len 24 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    else:
                                        mem[(10 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                        mem[(10 * ceil32(return_data.size)) + 510] = 0
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).approve(address rg1, uint256 rg2) with:
                                             gas gas_remaining wei
                                            args 0x60ae616a2155ee3d9a68541ba4544862310933d4, 0, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                        mem[(10 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        mem[(12 * ceil32(return_data.size)) + 474] = 2
                                        mem[(12 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(12 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                        mem[(12 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(12 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        mem[(12 * ceil32(return_data.size)) + 606] = 0
                                        mem[(12 * ceil32(return_data.size)) + 638] = 160
                                        mem[(12 * ceil32(return_data.size)) + 734] = 2
                                        idx = 0
                                        s = (12 * ceil32(return_data.size)) + 766
                                        t = (12 * ceil32(return_data.size)) + 506
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(12 * ceil32(return_data.size)) + 670] = this.address
                                        mem[(12 * ceil32(return_data.size)) + 702] = block.timestamp
                                        require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                        call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                             gas gas_remaining wei
                                            args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1, 0, 160, address(this.address), block.timestamp, 2, mem[(12 * ceil32(return_data.size)) + 766 len 64]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(12 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (13 * ceil32(return_data.size)) + 570
                                        require return_data.size >= 32
                                        _4561 = mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32
                                        require mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                        require (12 * ceil32(return_data.size)) + return_data.size + 570 > (12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 601
                                        _4657 = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                        if mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                            revert with 0, 65
                                        if ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0 or (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307():
                                            revert with 0, 65
                                        mem[64] = (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                        mem[(13 * ceil32(return_data.size)) + 570] = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                        require _4561 + (32 * _4657) + 32 <= return_data.size
                                        mem[(13 * ceil32(return_data.size)) + 602 len 32 * _4657] = mem[(12 * ceil32(return_data.size)) + _4561 + 602 len 32 * _4657]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6385 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_6385] == bool(mem[_6385])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6769 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _6865 = mem[_6769]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _6865
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _6865
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _7153 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_7153] == bool(mem[_7153])
                                else:
                                    if ext_call.return_data[18 len 14] * arg3 and 1000 > -1 / ext_call.return_data[18 len 14] * arg3:
                                        revert with 0, 17
                                    if not ext_call.return_data[18 len 14] * arg3:
                                        revert with 0, 18
                                    if 1000 * ext_call.return_data[18 len 14] * arg3 / ext_call.return_data[18 len 14] * arg3 != 1000:
                                        revert with 0, 'SafeMath: multiplication overflow', mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                                    if arg3 > ext_call.return_data[50 len 14]:
                                        revert with 0, 'SafeMath: subtraction overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                    if ext_call.return_data[50 len 14] < arg3:
                                        revert with 0, 17
                                    if not ext_call.return_data[50 len 14] - arg3:
                                        revert with 0, 18
                                    if ext_call.return_data[50 len 14] - arg3 and 997 > -1 / ext_call.return_data[50 len 14] - arg3:
                                        revert with 0, 17
                                    if not ext_call.return_data[50 len 14] - arg3:
                                        revert with 0, 18
                                    if (997 * ext_call.return_data[50 len 14]) - (997 * arg3) / ext_call.return_data[50 len 14] - arg3 != 997:
                                        revert with 0, 'SafeMath: multiplication overflow', mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                                    if not (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                        revert with 0, 18
                                    if 1000 * ext_call.return_data[18 len 14] * arg3 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3) > -2:
                                        revert with 0, 17
                                    if (1000 * ext_call.return_data[18 len 14] * arg3 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3)) + 1 < 1000 * ext_call.return_data[18 len 14] * arg3 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                        revert with 0, 'SafeMath: addition overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                    if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                        mem[(10 * ceil32(return_data.size)) + 510] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address, mem[(12 * ceil32(return_data.size)) + 510 len 20 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(14 * ceil32(return_data.size)) + 542 len 24 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    else:
                                        mem[(10 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                        mem[(10 * ceil32(return_data.size)) + 510] = 0
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).approve(address rg1, uint256 rg2) with:
                                             gas gas_remaining wei
                                            args 0x60ae616a2155ee3d9a68541ba4544862310933d4, 0, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                        mem[(10 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        mem[(12 * ceil32(return_data.size)) + 474] = 2
                                        mem[(12 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(12 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                        mem[(12 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(12 * ceil32(return_data.size)) + 574] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        mem[(12 * ceil32(return_data.size)) + 606] = 0
                                        mem[(12 * ceil32(return_data.size)) + 638] = 160
                                        mem[(12 * ceil32(return_data.size)) + 734] = 2
                                        idx = 0
                                        s = (12 * ceil32(return_data.size)) + 766
                                        t = (12 * ceil32(return_data.size)) + 506
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(12 * ceil32(return_data.size)) + 670] = this.address
                                        mem[(12 * ceil32(return_data.size)) + 702] = block.timestamp
                                        require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                        call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                             gas gas_remaining wei
                                            args (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1, 0, 160, address(this.address), block.timestamp, 2, mem[(12 * ceil32(return_data.size)) + 766 len 64]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(12 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (13 * ceil32(return_data.size)) + 570
                                        require return_data.size >= 32
                                        _4560 = mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32
                                        require mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                        require (12 * ceil32(return_data.size)) + return_data.size + 570 > (12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 601
                                        _4656 = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                        if mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                            revert with 0, 65
                                        if ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0 or (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307():
                                            revert with 0, 65
                                        mem[64] = (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                        mem[(13 * ceil32(return_data.size)) + 570] = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                        require _4560 + (32 * _4656) + 32 <= return_data.size
                                        mem[(13 * ceil32(return_data.size)) + 602 len 32 * _4656] = mem[(12 * ceil32(return_data.size)) + _4560 + 602 len 32 * _4656]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6384 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_6384] == bool(mem[_6384])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6768 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _6864 = mem[_6768]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _6864
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _6864
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _7152 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_7152] == bool(mem[_7152])
                else:
                    if address(ext_call.return_data[0]) < address(ext_call.return_data[0]):
                        if address(ext_call.return_data[0]) == address(ext_call.return_data[0]):
                            if ext_call.return_data[50 len 14] <= 0:
                                revert with 0, 
                                            'SpiritswapLibrary: INSUFFICIENT_LIQUIDITY',
                                            mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                            if ext_call.return_data[18 len 14] <= 0:
                                revert with 0, 
                                            'SpiritswapLibrary: INSUFFICIENT_LIQUIDITY',
                                            mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                            if not ext_call.return_data[50 len 14]:
                                if arg3 > ext_call.return_data[18 len 14]:
                                    revert with 0, 'SafeMath: subtraction overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                if ext_call.return_data[18 len 14] < arg3:
                                    revert with 0, 17
                                if not ext_call.return_data[18 len 14] - arg3:
                                    revert with 0, 18
                                if ext_call.return_data[18 len 14] - arg3 and 997 > -1 / ext_call.return_data[18 len 14] - arg3:
                                    revert with 0, 17
                                if not ext_call.return_data[18 len 14] - arg3:
                                    revert with 0, 18
                                if (997 * ext_call.return_data[18 len 14]) - (997 * arg3) / ext_call.return_data[18 len 14] - arg3 != 997:
                                    revert with 0, 'SafeMath: multiplication overflow', mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                                if not (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                    revert with 0, 18
                                if 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3) > -2:
                                    revert with 0, 17
                                if (0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3)) + 1 < 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                    revert with 0, 'SafeMath: addition overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                    mem[(10 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(12 * ceil32(return_data.size)) + 510 len 20 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(14 * ceil32(return_data.size)) + 542 len 24 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(10 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                    mem[(10 * ceil32(return_data.size)) + 510] = 0
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).approve(address rg1, uint256 rg2) with:
                                         gas gas_remaining wei
                                        args 0x60ae616a2155ee3d9a68541ba4544862310933d4, 0, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                    mem[(10 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(12 * ceil32(return_data.size)) + 474] = 2
                                    mem[(12 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                    mem[(12 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(12 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(12 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    mem[(12 * ceil32(return_data.size)) + 606] = 0
                                    mem[(12 * ceil32(return_data.size)) + 638] = 160
                                    mem[(12 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (12 * ceil32(return_data.size)) + 766
                                    t = (12 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(12 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(12 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                    call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                         gas gas_remaining wei
                                        args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1, 0, 160, address(this.address), block.timestamp, 2, mem[(12 * ceil32(return_data.size)) + 766 len 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(12 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (13 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _4565 = mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32
                                    require mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                    require (12 * ceil32(return_data.size)) + return_data.size + 570 > (12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 601
                                    _4661 = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                    if mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                        revert with 0, 65
                                    if ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0 or (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307():
                                        revert with 0, 65
                                    mem[64] = (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                    mem[(13 * ceil32(return_data.size)) + 570] = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                    require _4565 + (32 * _4661) + 32 <= return_data.size
                                    mem[(13 * ceil32(return_data.size)) + 602 len 32 * _4661] = mem[(12 * ceil32(return_data.size)) + _4565 + 602 len 32 * _4661]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _6389 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_6389] == bool(mem[_6389])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _6773 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _6869 = mem[_6773]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _6869
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _6869
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7157 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7157] == bool(mem[_7157])
                            else:
                                if ext_call.return_data[50 len 14] and arg3 > -1 / ext_call.return_data[50 len 14]:
                                    revert with 0, 17
                                if not ext_call.return_data[50 len 14]:
                                    revert with 0, 18
                                if ext_call.return_data[50 len 14] * arg3 / ext_call.return_data[50 len 14] != arg3:
                                    revert with 0, 'SafeMath: multiplication overflow', mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                                if not ext_call.return_data[50 len 14] * arg3:
                                    if arg3 > ext_call.return_data[18 len 14]:
                                        revert with 0, 'SafeMath: subtraction overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                    if ext_call.return_data[18 len 14] < arg3:
                                        revert with 0, 17
                                    if not ext_call.return_data[18 len 14] - arg3:
                                        revert with 0, 18
                                    if ext_call.return_data[18 len 14] - arg3 and 997 > -1 / ext_call.return_data[18 len 14] - arg3:
                                        revert with 0, 17
                                    if not ext_call.return_data[18 len 14] - arg3:
                                        revert with 0, 18
                                    if (997 * ext_call.return_data[18 len 14]) - (997 * arg3) / ext_call.return_data[18 len 14] - arg3 != 997:
                                        revert with 0, 'SafeMath: multiplication overflow', mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                                    if not (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                        revert with 0, 18
                                    if 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3) > -2:
                                        revert with 0, 17
                                    if (0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3)) + 1 < 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                        revert with 0, 'SafeMath: addition overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                    if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                        mem[(10 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address, mem[(12 * ceil32(return_data.size)) + 510 len 20 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(14 * ceil32(return_data.size)) + 542 len 24 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    else:
                                        mem[(10 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                        mem[(10 * ceil32(return_data.size)) + 510] = 0
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).approve(address rg1, uint256 rg2) with:
                                             gas gas_remaining wei
                                            args 0x60ae616a2155ee3d9a68541ba4544862310933d4, 0, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                        mem[(10 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        mem[(12 * ceil32(return_data.size)) + 474] = 2
                                        mem[(12 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(12 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                        mem[(12 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(12 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        mem[(12 * ceil32(return_data.size)) + 606] = 0
                                        mem[(12 * ceil32(return_data.size)) + 638] = 160
                                        mem[(12 * ceil32(return_data.size)) + 734] = 2
                                        idx = 0
                                        s = (12 * ceil32(return_data.size)) + 766
                                        t = (12 * ceil32(return_data.size)) + 506
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(12 * ceil32(return_data.size)) + 670] = this.address
                                        mem[(12 * ceil32(return_data.size)) + 702] = block.timestamp
                                        require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                        call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                             gas gas_remaining wei
                                            args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1, 0, 160, address(this.address), block.timestamp, 2, mem[(12 * ceil32(return_data.size)) + 766 len 64]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(12 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (13 * ceil32(return_data.size)) + 570
                                        require return_data.size >= 32
                                        _4564 = mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32
                                        require mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                        require (12 * ceil32(return_data.size)) + return_data.size + 570 > (12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 601
                                        _4660 = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                        if mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                            revert with 0, 65
                                        if ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0 or (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307():
                                            revert with 0, 65
                                        mem[64] = (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                        mem[(13 * ceil32(return_data.size)) + 570] = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                        require _4564 + (32 * _4660) + 32 <= return_data.size
                                        mem[(13 * ceil32(return_data.size)) + 602 len 32 * _4660] = mem[(12 * ceil32(return_data.size)) + _4564 + 602 len 32 * _4660]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6388 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_6388] == bool(mem[_6388])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6772 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _6868 = mem[_6772]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _6868
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _6868
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _7156 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_7156] == bool(mem[_7156])
                                else:
                                    if ext_call.return_data[50 len 14] * arg3 and 1000 > -1 / ext_call.return_data[50 len 14] * arg3:
                                        revert with 0, 17
                                    if not ext_call.return_data[50 len 14] * arg3:
                                        revert with 0, 18
                                    if 1000 * ext_call.return_data[50 len 14] * arg3 / ext_call.return_data[50 len 14] * arg3 != 1000:
                                        revert with 0, 'SafeMath: multiplication overflow', mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                                    if arg3 > ext_call.return_data[18 len 14]:
                                        revert with 0, 'SafeMath: subtraction overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                    if ext_call.return_data[18 len 14] < arg3:
                                        revert with 0, 17
                                    if not ext_call.return_data[18 len 14] - arg3:
                                        revert with 0, 18
                                    if ext_call.return_data[18 len 14] - arg3 and 997 > -1 / ext_call.return_data[18 len 14] - arg3:
                                        revert with 0, 17
                                    if not ext_call.return_data[18 len 14] - arg3:
                                        revert with 0, 18
                                    if (997 * ext_call.return_data[18 len 14]) - (997 * arg3) / ext_call.return_data[18 len 14] - arg3 != 997:
                                        revert with 0, 'SafeMath: multiplication overflow', mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                                    if not (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                        revert with 0, 18
                                    if 1000 * ext_call.return_data[50 len 14] * arg3 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3) > -2:
                                        revert with 0, 17
                                    if (1000 * ext_call.return_data[50 len 14] * arg3 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3)) + 1 < 1000 * ext_call.return_data[50 len 14] * arg3 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                        revert with 0, 'SafeMath: addition overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                    if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                        mem[(10 * ceil32(return_data.size)) + 510] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address, mem[(12 * ceil32(return_data.size)) + 510 len 20 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(14 * ceil32(return_data.size)) + 542 len 24 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    else:
                                        mem[(10 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                        mem[(10 * ceil32(return_data.size)) + 510] = 0
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).approve(address rg1, uint256 rg2) with:
                                             gas gas_remaining wei
                                            args 0x60ae616a2155ee3d9a68541ba4544862310933d4, 0, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                        mem[(10 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        mem[(12 * ceil32(return_data.size)) + 474] = 2
                                        mem[(12 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(12 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                        mem[(12 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(12 * ceil32(return_data.size)) + 574] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        mem[(12 * ceil32(return_data.size)) + 606] = 0
                                        mem[(12 * ceil32(return_data.size)) + 638] = 160
                                        mem[(12 * ceil32(return_data.size)) + 734] = 2
                                        idx = 0
                                        s = (12 * ceil32(return_data.size)) + 766
                                        t = (12 * ceil32(return_data.size)) + 506
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(12 * ceil32(return_data.size)) + 670] = this.address
                                        mem[(12 * ceil32(return_data.size)) + 702] = block.timestamp
                                        require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                        call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                             gas gas_remaining wei
                                            args (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1, 0, 160, address(this.address), block.timestamp, 2, mem[(12 * ceil32(return_data.size)) + 766 len 64]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(12 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (13 * ceil32(return_data.size)) + 570
                                        require return_data.size >= 32
                                        _4563 = mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32
                                        require mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                        require (12 * ceil32(return_data.size)) + return_data.size + 570 > (12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 601
                                        _4659 = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                        if mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                            revert with 0, 65
                                        if ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0 or (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307():
                                            revert with 0, 65
                                        mem[64] = (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                        mem[(13 * ceil32(return_data.size)) + 570] = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                        require _4563 + (32 * _4659) + 32 <= return_data.size
                                        mem[(13 * ceil32(return_data.size)) + 602 len 32 * _4659] = mem[(12 * ceil32(return_data.size)) + _4563 + 602 len 32 * _4659]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6387 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_6387] == bool(mem[_6387])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6771 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _6867 = mem[_6771]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _6867
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _6867
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _7155 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_7155] == bool(mem[_7155])
                        else:
                            if ext_call.return_data[18 len 14] <= 0:
                                revert with 0, 
                                            'SpiritswapLibrary: INSUFFICIENT_LIQUIDITY',
                                            mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                            if ext_call.return_data[50 len 14] <= 0:
                                revert with 0, 
                                            'SpiritswapLibrary: INSUFFICIENT_LIQUIDITY',
                                            mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                            if not ext_call.return_data[18 len 14]:
                                if arg3 > ext_call.return_data[50 len 14]:
                                    revert with 0, 'SafeMath: subtraction overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                if ext_call.return_data[50 len 14] < arg3:
                                    revert with 0, 17
                                if not ext_call.return_data[50 len 14] - arg3:
                                    revert with 0, 18
                                if ext_call.return_data[50 len 14] - arg3 and 997 > -1 / ext_call.return_data[50 len 14] - arg3:
                                    revert with 0, 17
                                if not ext_call.return_data[50 len 14] - arg3:
                                    revert with 0, 18
                                if (997 * ext_call.return_data[50 len 14]) - (997 * arg3) / ext_call.return_data[50 len 14] - arg3 != 997:
                                    revert with 0, 'SafeMath: multiplication overflow', mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                                if not (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                    revert with 0, 18
                                if 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3) > -2:
                                    revert with 0, 17
                                if (0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3)) + 1 < 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                    revert with 0, 'SafeMath: addition overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                    mem[(10 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(12 * ceil32(return_data.size)) + 510 len 20 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(14 * ceil32(return_data.size)) + 542 len 24 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(10 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                    mem[(10 * ceil32(return_data.size)) + 510] = 0
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).approve(address rg1, uint256 rg2) with:
                                         gas gas_remaining wei
                                        args 0x60ae616a2155ee3d9a68541ba4544862310933d4, 0, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                    mem[(10 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(12 * ceil32(return_data.size)) + 474] = 2
                                    mem[(12 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                    mem[(12 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(12 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(12 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    mem[(12 * ceil32(return_data.size)) + 606] = 0
                                    mem[(12 * ceil32(return_data.size)) + 638] = 160
                                    mem[(12 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (12 * ceil32(return_data.size)) + 766
                                    t = (12 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(12 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(12 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                    call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                         gas gas_remaining wei
                                        args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1, 0, 160, address(this.address), block.timestamp, 2, mem[(12 * ceil32(return_data.size)) + 766 len 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(12 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (13 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _4568 = mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32
                                    require mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                    require (12 * ceil32(return_data.size)) + return_data.size + 570 > (12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 601
                                    _4664 = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                    if mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                        revert with 0, 65
                                    if ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0 or (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307():
                                        revert with 0, 65
                                    mem[64] = (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                    mem[(13 * ceil32(return_data.size)) + 570] = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                    require _4568 + (32 * _4664) + 32 <= return_data.size
                                    mem[(13 * ceil32(return_data.size)) + 602 len 32 * _4664] = mem[(12 * ceil32(return_data.size)) + _4568 + 602 len 32 * _4664]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _6392 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_6392] == bool(mem[_6392])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _6776 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _6872 = mem[_6776]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _6872
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _6872
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7160 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7160] == bool(mem[_7160])
                            else:
                                if ext_call.return_data[18 len 14] and arg3 > -1 / ext_call.return_data[18 len 14]:
                                    revert with 0, 17
                                if not ext_call.return_data[18 len 14]:
                                    revert with 0, 18
                                if ext_call.return_data[18 len 14] * arg3 / ext_call.return_data[18 len 14] != arg3:
                                    revert with 0, 'SafeMath: multiplication overflow', mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                                if not ext_call.return_data[18 len 14] * arg3:
                                    if arg3 > ext_call.return_data[50 len 14]:
                                        revert with 0, 'SafeMath: subtraction overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                    if ext_call.return_data[50 len 14] < arg3:
                                        revert with 0, 17
                                    if not ext_call.return_data[50 len 14] - arg3:
                                        revert with 0, 18
                                    if ext_call.return_data[50 len 14] - arg3 and 997 > -1 / ext_call.return_data[50 len 14] - arg3:
                                        revert with 0, 17
                                    if not ext_call.return_data[50 len 14] - arg3:
                                        revert with 0, 18
                                    if (997 * ext_call.return_data[50 len 14]) - (997 * arg3) / ext_call.return_data[50 len 14] - arg3 != 997:
                                        revert with 0, 'SafeMath: multiplication overflow', mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                                    if not (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                        revert with 0, 18
                                    if 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3) > -2:
                                        revert with 0, 17
                                    if (0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3)) + 1 < 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                        revert with 0, 'SafeMath: addition overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                    if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                        mem[(10 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address, mem[(12 * ceil32(return_data.size)) + 510 len 20 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(14 * ceil32(return_data.size)) + 542 len 24 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    else:
                                        mem[(10 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                        mem[(10 * ceil32(return_data.size)) + 510] = 0
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).approve(address rg1, uint256 rg2) with:
                                             gas gas_remaining wei
                                            args 0x60ae616a2155ee3d9a68541ba4544862310933d4, 0, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                        mem[(10 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        mem[(12 * ceil32(return_data.size)) + 474] = 2
                                        mem[(12 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(12 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                        mem[(12 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(12 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        mem[(12 * ceil32(return_data.size)) + 606] = 0
                                        mem[(12 * ceil32(return_data.size)) + 638] = 160
                                        mem[(12 * ceil32(return_data.size)) + 734] = 2
                                        idx = 0
                                        s = (12 * ceil32(return_data.size)) + 766
                                        t = (12 * ceil32(return_data.size)) + 506
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(12 * ceil32(return_data.size)) + 670] = this.address
                                        mem[(12 * ceil32(return_data.size)) + 702] = block.timestamp
                                        require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                        call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                             gas gas_remaining wei
                                            args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1, 0, 160, address(this.address), block.timestamp, 2, mem[(12 * ceil32(return_data.size)) + 766 len 64]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(12 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (13 * ceil32(return_data.size)) + 570
                                        require return_data.size >= 32
                                        _4567 = mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32
                                        require mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                        require (12 * ceil32(return_data.size)) + return_data.size + 570 > (12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 601
                                        _4663 = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                        if mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                            revert with 0, 65
                                        if ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0 or (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307():
                                            revert with 0, 65
                                        mem[64] = (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                        mem[(13 * ceil32(return_data.size)) + 570] = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                        require _4567 + (32 * _4663) + 32 <= return_data.size
                                        mem[(13 * ceil32(return_data.size)) + 602 len 32 * _4663] = mem[(12 * ceil32(return_data.size)) + _4567 + 602 len 32 * _4663]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6391 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_6391] == bool(mem[_6391])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6775 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _6871 = mem[_6775]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _6871
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _6871
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _7159 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_7159] == bool(mem[_7159])
                                else:
                                    if ext_call.return_data[18 len 14] * arg3 and 1000 > -1 / ext_call.return_data[18 len 14] * arg3:
                                        revert with 0, 17
                                    if not ext_call.return_data[18 len 14] * arg3:
                                        revert with 0, 18
                                    if 1000 * ext_call.return_data[18 len 14] * arg3 / ext_call.return_data[18 len 14] * arg3 != 1000:
                                        revert with 0, 'SafeMath: multiplication overflow', mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                                    if arg3 > ext_call.return_data[50 len 14]:
                                        revert with 0, 'SafeMath: subtraction overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                    if ext_call.return_data[50 len 14] < arg3:
                                        revert with 0, 17
                                    if not ext_call.return_data[50 len 14] - arg3:
                                        revert with 0, 18
                                    if ext_call.return_data[50 len 14] - arg3 and 997 > -1 / ext_call.return_data[50 len 14] - arg3:
                                        revert with 0, 17
                                    if not ext_call.return_data[50 len 14] - arg3:
                                        revert with 0, 18
                                    if (997 * ext_call.return_data[50 len 14]) - (997 * arg3) / ext_call.return_data[50 len 14] - arg3 != 997:
                                        revert with 0, 'SafeMath: multiplication overflow', mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                                    if not (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                        revert with 0, 18
                                    if 1000 * ext_call.return_data[18 len 14] * arg3 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3) > -2:
                                        revert with 0, 17
                                    if (1000 * ext_call.return_data[18 len 14] * arg3 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3)) + 1 < 1000 * ext_call.return_data[18 len 14] * arg3 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                        revert with 0, 'SafeMath: addition overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                    if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                        mem[(10 * ceil32(return_data.size)) + 510] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address, mem[(12 * ceil32(return_data.size)) + 510 len 20 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(14 * ceil32(return_data.size)) + 542 len 24 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    else:
                                        mem[(10 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                        mem[(10 * ceil32(return_data.size)) + 510] = 0
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).approve(address rg1, uint256 rg2) with:
                                             gas gas_remaining wei
                                            args 0x60ae616a2155ee3d9a68541ba4544862310933d4, 0, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                        mem[(10 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        mem[(12 * ceil32(return_data.size)) + 474] = 2
                                        mem[(12 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(12 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                        mem[(12 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(12 * ceil32(return_data.size)) + 574] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        mem[(12 * ceil32(return_data.size)) + 606] = 0
                                        mem[(12 * ceil32(return_data.size)) + 638] = 160
                                        mem[(12 * ceil32(return_data.size)) + 734] = 2
                                        idx = 0
                                        s = (12 * ceil32(return_data.size)) + 766
                                        t = (12 * ceil32(return_data.size)) + 506
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(12 * ceil32(return_data.size)) + 670] = this.address
                                        mem[(12 * ceil32(return_data.size)) + 702] = block.timestamp
                                        require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                        call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                             gas gas_remaining wei
                                            args (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1, 0, 160, address(this.address), block.timestamp, 2, mem[(12 * ceil32(return_data.size)) + 766 len 64]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(12 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (13 * ceil32(return_data.size)) + 570
                                        require return_data.size >= 32
                                        _4566 = mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32
                                        require mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                        require (12 * ceil32(return_data.size)) + return_data.size + 570 > (12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 601
                                        _4662 = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                        if mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                            revert with 0, 65
                                        if ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0 or (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307():
                                            revert with 0, 65
                                        mem[64] = (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                        mem[(13 * ceil32(return_data.size)) + 570] = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                        require _4566 + (32 * _4662) + 32 <= return_data.size
                                        mem[(13 * ceil32(return_data.size)) + 602 len 32 * _4662] = mem[(12 * ceil32(return_data.size)) + _4566 + 602 len 32 * _4662]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6390 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_6390] == bool(mem[_6390])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6774 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _6870 = mem[_6774]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _6870
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _6870
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _7158 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_7158] == bool(mem[_7158])
                    else:
                        if address(ext_call.return_data[0]) == address(ext_call.return_data[0]):
                            if ext_call.return_data[50 len 14] <= 0:
                                revert with 0, 
                                            'SpiritswapLibrary: INSUFFICIENT_LIQUIDITY',
                                            mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                            if ext_call.return_data[18 len 14] <= 0:
                                revert with 0, 
                                            'SpiritswapLibrary: INSUFFICIENT_LIQUIDITY',
                                            mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                            if not ext_call.return_data[50 len 14]:
                                if arg3 > ext_call.return_data[18 len 14]:
                                    revert with 0, 'SafeMath: subtraction overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                if ext_call.return_data[18 len 14] < arg3:
                                    revert with 0, 17
                                if not ext_call.return_data[18 len 14] - arg3:
                                    revert with 0, 18
                                if ext_call.return_data[18 len 14] - arg3 and 997 > -1 / ext_call.return_data[18 len 14] - arg3:
                                    revert with 0, 17
                                if not ext_call.return_data[18 len 14] - arg3:
                                    revert with 0, 18
                                if (997 * ext_call.return_data[18 len 14]) - (997 * arg3) / ext_call.return_data[18 len 14] - arg3 != 997:
                                    revert with 0, 'SafeMath: multiplication overflow', mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                                if not (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                    revert with 0, 18
                                if 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3) > -2:
                                    revert with 0, 17
                                if (0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3)) + 1 < 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                    revert with 0, 'SafeMath: addition overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                    mem[(10 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(12 * ceil32(return_data.size)) + 510 len 20 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(14 * ceil32(return_data.size)) + 542 len 24 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(10 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                    mem[(10 * ceil32(return_data.size)) + 510] = 0
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).approve(address rg1, uint256 rg2) with:
                                         gas gas_remaining wei
                                        args 0x60ae616a2155ee3d9a68541ba4544862310933d4, 0, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                    mem[(10 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(12 * ceil32(return_data.size)) + 474] = 2
                                    mem[(12 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                    mem[(12 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(12 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(12 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    mem[(12 * ceil32(return_data.size)) + 606] = 0
                                    mem[(12 * ceil32(return_data.size)) + 638] = 160
                                    mem[(12 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (12 * ceil32(return_data.size)) + 766
                                    t = (12 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(12 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(12 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                    call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                         gas gas_remaining wei
                                        args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1, 0, 160, address(this.address), block.timestamp, 2, mem[(12 * ceil32(return_data.size)) + 766 len 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(12 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (13 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _4571 = mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32
                                    require mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                    require (12 * ceil32(return_data.size)) + return_data.size + 570 > (12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 601
                                    _4667 = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                    if mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                        revert with 0, 65
                                    if ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0 or (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307():
                                        revert with 0, 65
                                    mem[64] = (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                    mem[(13 * ceil32(return_data.size)) + 570] = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                    require _4571 + (32 * _4667) + 32 <= return_data.size
                                    mem[(13 * ceil32(return_data.size)) + 602 len 32 * _4667] = mem[(12 * ceil32(return_data.size)) + _4571 + 602 len 32 * _4667]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _6395 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_6395] == bool(mem[_6395])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _6779 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _6875 = mem[_6779]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _6875
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _6875
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7163 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7163] == bool(mem[_7163])
                            else:
                                if ext_call.return_data[50 len 14] and arg3 > -1 / ext_call.return_data[50 len 14]:
                                    revert with 0, 17
                                if not ext_call.return_data[50 len 14]:
                                    revert with 0, 18
                                if ext_call.return_data[50 len 14] * arg3 / ext_call.return_data[50 len 14] != arg3:
                                    revert with 0, 'SafeMath: multiplication overflow', mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                                if not ext_call.return_data[50 len 14] * arg3:
                                    if arg3 > ext_call.return_data[18 len 14]:
                                        revert with 0, 'SafeMath: subtraction overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                    if ext_call.return_data[18 len 14] < arg3:
                                        revert with 0, 17
                                    if not ext_call.return_data[18 len 14] - arg3:
                                        revert with 0, 18
                                    if ext_call.return_data[18 len 14] - arg3 and 997 > -1 / ext_call.return_data[18 len 14] - arg3:
                                        revert with 0, 17
                                    if not ext_call.return_data[18 len 14] - arg3:
                                        revert with 0, 18
                                    if (997 * ext_call.return_data[18 len 14]) - (997 * arg3) / ext_call.return_data[18 len 14] - arg3 != 997:
                                        revert with 0, 'SafeMath: multiplication overflow', mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                                    if not (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                        revert with 0, 18
                                    if 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3) > -2:
                                        revert with 0, 17
                                    if (0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3)) + 1 < 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                        revert with 0, 'SafeMath: addition overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                    if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                        mem[(10 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address, mem[(12 * ceil32(return_data.size)) + 510 len 20 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(14 * ceil32(return_data.size)) + 542 len 24 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    else:
                                        mem[(10 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                        mem[(10 * ceil32(return_data.size)) + 510] = 0
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).approve(address rg1, uint256 rg2) with:
                                             gas gas_remaining wei
                                            args 0x60ae616a2155ee3d9a68541ba4544862310933d4, 0, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                        mem[(10 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        mem[(12 * ceil32(return_data.size)) + 474] = 2
                                        mem[(12 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(12 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                        mem[(12 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(12 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        mem[(12 * ceil32(return_data.size)) + 606] = 0
                                        mem[(12 * ceil32(return_data.size)) + 638] = 160
                                        mem[(12 * ceil32(return_data.size)) + 734] = 2
                                        idx = 0
                                        s = (12 * ceil32(return_data.size)) + 766
                                        t = (12 * ceil32(return_data.size)) + 506
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(12 * ceil32(return_data.size)) + 670] = this.address
                                        mem[(12 * ceil32(return_data.size)) + 702] = block.timestamp
                                        require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                        call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                             gas gas_remaining wei
                                            args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1, 0, 160, address(this.address), block.timestamp, 2, mem[(12 * ceil32(return_data.size)) + 766 len 64]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(12 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (13 * ceil32(return_data.size)) + 570
                                        require return_data.size >= 32
                                        _4570 = mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32
                                        require mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                        require (12 * ceil32(return_data.size)) + return_data.size + 570 > (12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 601
                                        _4666 = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                        if mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                            revert with 0, 65
                                        if ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0 or (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307():
                                            revert with 0, 65
                                        mem[64] = (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                        mem[(13 * ceil32(return_data.size)) + 570] = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                        require _4570 + (32 * _4666) + 32 <= return_data.size
                                        mem[(13 * ceil32(return_data.size)) + 602 len 32 * _4666] = mem[(12 * ceil32(return_data.size)) + _4570 + 602 len 32 * _4666]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6394 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_6394] == bool(mem[_6394])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6778 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _6874 = mem[_6778]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _6874
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _6874
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _7162 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_7162] == bool(mem[_7162])
                                else:
                                    if ext_call.return_data[50 len 14] * arg3 and 1000 > -1 / ext_call.return_data[50 len 14] * arg3:
                                        revert with 0, 17
                                    if not ext_call.return_data[50 len 14] * arg3:
                                        revert with 0, 18
                                    if 1000 * ext_call.return_data[50 len 14] * arg3 / ext_call.return_data[50 len 14] * arg3 != 1000:
                                        revert with 0, 'SafeMath: multiplication overflow', mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                                    if arg3 > ext_call.return_data[18 len 14]:
                                        revert with 0, 'SafeMath: subtraction overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                    if ext_call.return_data[18 len 14] < arg3:
                                        revert with 0, 17
                                    if not ext_call.return_data[18 len 14] - arg3:
                                        revert with 0, 18
                                    if ext_call.return_data[18 len 14] - arg3 and 997 > -1 / ext_call.return_data[18 len 14] - arg3:
                                        revert with 0, 17
                                    if not ext_call.return_data[18 len 14] - arg3:
                                        revert with 0, 18
                                    if (997 * ext_call.return_data[18 len 14]) - (997 * arg3) / ext_call.return_data[18 len 14] - arg3 != 997:
                                        revert with 0, 'SafeMath: multiplication overflow', mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                                    if not (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                        revert with 0, 18
                                    if 1000 * ext_call.return_data[50 len 14] * arg3 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3) > -2:
                                        revert with 0, 17
                                    if (1000 * ext_call.return_data[50 len 14] * arg3 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3)) + 1 < 1000 * ext_call.return_data[50 len 14] * arg3 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                        revert with 0, 'SafeMath: addition overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                    if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                        mem[(10 * ceil32(return_data.size)) + 510] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address, mem[(12 * ceil32(return_data.size)) + 510 len 20 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(14 * ceil32(return_data.size)) + 542 len 24 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    else:
                                        mem[(10 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                        mem[(10 * ceil32(return_data.size)) + 510] = 0
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).approve(address rg1, uint256 rg2) with:
                                             gas gas_remaining wei
                                            args 0x60ae616a2155ee3d9a68541ba4544862310933d4, 0, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                        mem[(10 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        mem[(12 * ceil32(return_data.size)) + 474] = 2
                                        mem[(12 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(12 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                        mem[(12 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(12 * ceil32(return_data.size)) + 574] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        mem[(12 * ceil32(return_data.size)) + 606] = 0
                                        mem[(12 * ceil32(return_data.size)) + 638] = 160
                                        mem[(12 * ceil32(return_data.size)) + 734] = 2
                                        idx = 0
                                        s = (12 * ceil32(return_data.size)) + 766
                                        t = (12 * ceil32(return_data.size)) + 506
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(12 * ceil32(return_data.size)) + 670] = this.address
                                        mem[(12 * ceil32(return_data.size)) + 702] = block.timestamp
                                        require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                        call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                             gas gas_remaining wei
                                            args (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1, 0, 160, address(this.address), block.timestamp, 2, mem[(12 * ceil32(return_data.size)) + 766 len 64]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(12 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (13 * ceil32(return_data.size)) + 570
                                        require return_data.size >= 32
                                        _4569 = mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32
                                        require mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                        require (12 * ceil32(return_data.size)) + return_data.size + 570 > (12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 601
                                        _4665 = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                        if mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                            revert with 0, 65
                                        if ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0 or (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307():
                                            revert with 0, 65
                                        mem[64] = (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                        mem[(13 * ceil32(return_data.size)) + 570] = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                        require _4569 + (32 * _4665) + 32 <= return_data.size
                                        mem[(13 * ceil32(return_data.size)) + 602 len 32 * _4665] = mem[(12 * ceil32(return_data.size)) + _4569 + 602 len 32 * _4665]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6393 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_6393] == bool(mem[_6393])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6777 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _6873 = mem[_6777]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _6873
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _6873
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _7161 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_7161] == bool(mem[_7161])
                        else:
                            if ext_call.return_data[18 len 14] <= 0:
                                revert with 0, 
                                            'SpiritswapLibrary: INSUFFICIENT_LIQUIDITY',
                                            mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                            if ext_call.return_data[50 len 14] <= 0:
                                revert with 0, 
                                            'SpiritswapLibrary: INSUFFICIENT_LIQUIDITY',
                                            mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                            if not ext_call.return_data[18 len 14]:
                                if arg3 > ext_call.return_data[50 len 14]:
                                    revert with 0, 'SafeMath: subtraction overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                if ext_call.return_data[50 len 14] < arg3:
                                    revert with 0, 17
                                if not ext_call.return_data[50 len 14] - arg3:
                                    revert with 0, 18
                                if ext_call.return_data[50 len 14] - arg3 and 997 > -1 / ext_call.return_data[50 len 14] - arg3:
                                    revert with 0, 17
                                if not ext_call.return_data[50 len 14] - arg3:
                                    revert with 0, 18
                                if (997 * ext_call.return_data[50 len 14]) - (997 * arg3) / ext_call.return_data[50 len 14] - arg3 != 997:
                                    revert with 0, 'SafeMath: multiplication overflow', mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                                if not (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                    revert with 0, 18
                                if 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3) > -2:
                                    revert with 0, 17
                                if (0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3)) + 1 < 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                    revert with 0, 'SafeMath: addition overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                    mem[(10 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(12 * ceil32(return_data.size)) + 510 len 20 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(14 * ceil32(return_data.size)) + 542 len 24 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(10 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                    mem[(10 * ceil32(return_data.size)) + 510] = 0
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).approve(address rg1, uint256 rg2) with:
                                         gas gas_remaining wei
                                        args 0x60ae616a2155ee3d9a68541ba4544862310933d4, 0, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                    mem[(10 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(12 * ceil32(return_data.size)) + 474] = 2
                                    mem[(12 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                    mem[(12 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(12 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(12 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    mem[(12 * ceil32(return_data.size)) + 606] = 0
                                    mem[(12 * ceil32(return_data.size)) + 638] = 160
                                    mem[(12 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (12 * ceil32(return_data.size)) + 766
                                    t = (12 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(12 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(12 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                    call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                         gas gas_remaining wei
                                        args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1, 0, 160, address(this.address), block.timestamp, 2, mem[(12 * ceil32(return_data.size)) + 766 len 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(12 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (13 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _4574 = mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32
                                    require mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                    require (12 * ceil32(return_data.size)) + return_data.size + 570 > (12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 601
                                    _4670 = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                    if mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                        revert with 0, 65
                                    if ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0 or (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307():
                                        revert with 0, 65
                                    mem[64] = (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                    mem[(13 * ceil32(return_data.size)) + 570] = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                    require _4574 + (32 * _4670) + 32 <= return_data.size
                                    mem[(13 * ceil32(return_data.size)) + 602 len 32 * _4670] = mem[(12 * ceil32(return_data.size)) + _4574 + 602 len 32 * _4670]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _6398 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_6398] == bool(mem[_6398])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _6782 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _6878 = mem[_6782]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _6878
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _6878
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7166 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7166] == bool(mem[_7166])
                            else:
                                if ext_call.return_data[18 len 14] and arg3 > -1 / ext_call.return_data[18 len 14]:
                                    revert with 0, 17
                                if not ext_call.return_data[18 len 14]:
                                    revert with 0, 18
                                if ext_call.return_data[18 len 14] * arg3 / ext_call.return_data[18 len 14] != arg3:
                                    revert with 0, 'SafeMath: multiplication overflow', mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                                if not ext_call.return_data[18 len 14] * arg3:
                                    if arg3 > ext_call.return_data[50 len 14]:
                                        revert with 0, 'SafeMath: subtraction overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                    if ext_call.return_data[50 len 14] < arg3:
                                        revert with 0, 17
                                    if not ext_call.return_data[50 len 14] - arg3:
                                        revert with 0, 18
                                    if ext_call.return_data[50 len 14] - arg3 and 997 > -1 / ext_call.return_data[50 len 14] - arg3:
                                        revert with 0, 17
                                    if not ext_call.return_data[50 len 14] - arg3:
                                        revert with 0, 18
                                    if (997 * ext_call.return_data[50 len 14]) - (997 * arg3) / ext_call.return_data[50 len 14] - arg3 != 997:
                                        revert with 0, 'SafeMath: multiplication overflow', mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                                    if not (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                        revert with 0, 18
                                    if 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3) > -2:
                                        revert with 0, 17
                                    if (0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3)) + 1 < 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                        revert with 0, 'SafeMath: addition overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                    if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                        mem[(10 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address, mem[(12 * ceil32(return_data.size)) + 510 len 20 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(14 * ceil32(return_data.size)) + 542 len 24 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    else:
                                        mem[(10 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                        mem[(10 * ceil32(return_data.size)) + 510] = 0
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).approve(address rg1, uint256 rg2) with:
                                             gas gas_remaining wei
                                            args 0x60ae616a2155ee3d9a68541ba4544862310933d4, 0, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                        mem[(10 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        mem[(12 * ceil32(return_data.size)) + 474] = 2
                                        mem[(12 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(12 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                        mem[(12 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(12 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        mem[(12 * ceil32(return_data.size)) + 606] = 0
                                        mem[(12 * ceil32(return_data.size)) + 638] = 160
                                        mem[(12 * ceil32(return_data.size)) + 734] = 2
                                        idx = 0
                                        s = (12 * ceil32(return_data.size)) + 766
                                        t = (12 * ceil32(return_data.size)) + 506
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(12 * ceil32(return_data.size)) + 670] = this.address
                                        mem[(12 * ceil32(return_data.size)) + 702] = block.timestamp
                                        require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                        call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                             gas gas_remaining wei
                                            args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1, 0, 160, address(this.address), block.timestamp, 2, mem[(12 * ceil32(return_data.size)) + 766 len 64]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(12 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (13 * ceil32(return_data.size)) + 570
                                        require return_data.size >= 32
                                        _4573 = mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32
                                        require mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                        require (12 * ceil32(return_data.size)) + return_data.size + 570 > (12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 601
                                        _4669 = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                        if mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                            revert with 0, 65
                                        if ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0 or (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307():
                                            revert with 0, 65
                                        mem[64] = (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                        mem[(13 * ceil32(return_data.size)) + 570] = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                        require _4573 + (32 * _4669) + 32 <= return_data.size
                                        mem[(13 * ceil32(return_data.size)) + 602 len 32 * _4669] = mem[(12 * ceil32(return_data.size)) + _4573 + 602 len 32 * _4669]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6397 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_6397] == bool(mem[_6397])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6781 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _6877 = mem[_6781]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _6877
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _6877
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _7165 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_7165] == bool(mem[_7165])
                                else:
                                    if ext_call.return_data[18 len 14] * arg3 and 1000 > -1 / ext_call.return_data[18 len 14] * arg3:
                                        revert with 0, 17
                                    if not ext_call.return_data[18 len 14] * arg3:
                                        revert with 0, 18
                                    if 1000 * ext_call.return_data[18 len 14] * arg3 / ext_call.return_data[18 len 14] * arg3 != 1000:
                                        revert with 0, 'SafeMath: multiplication overflow', mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                                    if arg3 > ext_call.return_data[50 len 14]:
                                        revert with 0, 'SafeMath: subtraction overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                    if ext_call.return_data[50 len 14] < arg3:
                                        revert with 0, 17
                                    if not ext_call.return_data[50 len 14] - arg3:
                                        revert with 0, 18
                                    if ext_call.return_data[50 len 14] - arg3 and 997 > -1 / ext_call.return_data[50 len 14] - arg3:
                                        revert with 0, 17
                                    if not ext_call.return_data[50 len 14] - arg3:
                                        revert with 0, 18
                                    if (997 * ext_call.return_data[50 len 14]) - (997 * arg3) / ext_call.return_data[50 len 14] - arg3 != 997:
                                        revert with 0, 'SafeMath: multiplication overflow', mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                                    if not (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                        revert with 0, 18
                                    if 1000 * ext_call.return_data[18 len 14] * arg3 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3) > -2:
                                        revert with 0, 17
                                    if (1000 * ext_call.return_data[18 len 14] * arg3 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3)) + 1 < 1000 * ext_call.return_data[18 len 14] * arg3 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                        revert with 0, 'SafeMath: addition overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                    if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                        mem[(10 * ceil32(return_data.size)) + 510] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address, mem[(12 * ceil32(return_data.size)) + 510 len 20 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(14 * ceil32(return_data.size)) + 542 len 24 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    else:
                                        mem[(10 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                        mem[(10 * ceil32(return_data.size)) + 510] = 0
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).approve(address rg1, uint256 rg2) with:
                                             gas gas_remaining wei
                                            args 0x60ae616a2155ee3d9a68541ba4544862310933d4, 0, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                        mem[(10 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        mem[(12 * ceil32(return_data.size)) + 474] = 2
                                        mem[(12 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(12 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                        mem[(12 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(12 * ceil32(return_data.size)) + 574] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        mem[(12 * ceil32(return_data.size)) + 606] = 0
                                        mem[(12 * ceil32(return_data.size)) + 638] = 160
                                        mem[(12 * ceil32(return_data.size)) + 734] = 2
                                        idx = 0
                                        s = (12 * ceil32(return_data.size)) + 766
                                        t = (12 * ceil32(return_data.size)) + 506
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(12 * ceil32(return_data.size)) + 670] = this.address
                                        mem[(12 * ceil32(return_data.size)) + 702] = block.timestamp
                                        require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                        call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                             gas gas_remaining wei
                                            args (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1, 0, 160, address(this.address), block.timestamp, 2, mem[(12 * ceil32(return_data.size)) + 766 len 64]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(12 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (13 * ceil32(return_data.size)) + 570
                                        require return_data.size >= 32
                                        _4572 = mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32
                                        require mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                        require (12 * ceil32(return_data.size)) + return_data.size + 570 > (12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 601
                                        _4668 = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                        if mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                            revert with 0, 65
                                        if ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0 or (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307():
                                            revert with 0, 65
                                        mem[64] = (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                        mem[(13 * ceil32(return_data.size)) + 570] = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                        require _4572 + (32 * _4668) + 32 <= return_data.size
                                        mem[(13 * ceil32(return_data.size)) + 602 len 32 * _4668] = mem[(12 * ceil32(return_data.size)) + _4572 + 602 len 32 * _4668]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6396 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_6396] == bool(mem[_6396])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6780 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _6876 = mem[_6780]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _6876
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _6876
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _7164 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_7164] == bool(mem[_7164])
            else:
                if address(ext_call.return_data[0]) < address(ext_call.return_data[0]):
                    if address(ext_call.return_data[0]) < address(ext_call.return_data[0]):
                        if address(ext_call.return_data[0]) == address(ext_call.return_data[0]):
                            if ext_call.return_data[50 len 14] <= 0:
                                revert with 0, 
                                            'SpiritswapLibrary: INSUFFICIENT_LIQUIDITY',
                                            mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                            if ext_call.return_data[18 len 14] <= 0:
                                revert with 0, 
                                            'SpiritswapLibrary: INSUFFICIENT_LIQUIDITY',
                                            mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                            if not ext_call.return_data[50 len 14]:
                                if arg3 > ext_call.return_data[18 len 14]:
                                    revert with 0, 'SafeMath: subtraction overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                if ext_call.return_data[18 len 14] < arg3:
                                    revert with 0, 17
                                if not ext_call.return_data[18 len 14] - arg3:
                                    revert with 0, 18
                                if ext_call.return_data[18 len 14] - arg3 and 997 > -1 / ext_call.return_data[18 len 14] - arg3:
                                    revert with 0, 17
                                if not ext_call.return_data[18 len 14] - arg3:
                                    revert with 0, 18
                                if (997 * ext_call.return_data[18 len 14]) - (997 * arg3) / ext_call.return_data[18 len 14] - arg3 != 997:
                                    revert with 0, 'SafeMath: multiplication overflow', mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                                if not (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                    revert with 0, 18
                                if 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3) > -2:
                                    revert with 0, 17
                                if (0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3)) + 1 < 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                    revert with 0, 'SafeMath: addition overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                    mem[(10 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(12 * ceil32(return_data.size)) + 510 len 20 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(14 * ceil32(return_data.size)) + 542 len 24 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(10 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                    mem[(10 * ceil32(return_data.size)) + 510] = 0
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).approve(address rg1, uint256 rg2) with:
                                         gas gas_remaining wei
                                        args 0x60ae616a2155ee3d9a68541ba4544862310933d4, 0, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                    mem[(10 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(12 * ceil32(return_data.size)) + 474] = 2
                                    mem[(12 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                    mem[(12 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(12 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(12 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    mem[(12 * ceil32(return_data.size)) + 606] = 0
                                    mem[(12 * ceil32(return_data.size)) + 638] = 160
                                    mem[(12 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (12 * ceil32(return_data.size)) + 766
                                    t = (12 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(12 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(12 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                    call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                         gas gas_remaining wei
                                        args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1, 0, 160, address(this.address), block.timestamp, 2, mem[(12 * ceil32(return_data.size)) + 766 len 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(12 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (13 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _4577 = mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32
                                    require mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                    require (12 * ceil32(return_data.size)) + return_data.size + 570 > (12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 601
                                    _4673 = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                    if mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                        revert with 0, 65
                                    if ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0 or (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307():
                                        revert with 0, 65
                                    mem[64] = (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                    mem[(13 * ceil32(return_data.size)) + 570] = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                    require _4577 + (32 * _4673) + 32 <= return_data.size
                                    mem[(13 * ceil32(return_data.size)) + 602 len 32 * _4673] = mem[(12 * ceil32(return_data.size)) + _4577 + 602 len 32 * _4673]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _6401 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_6401] == bool(mem[_6401])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _6785 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _6881 = mem[_6785]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _6881
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _6881
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7169 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7169] == bool(mem[_7169])
                            else:
                                if ext_call.return_data[50 len 14] and arg3 > -1 / ext_call.return_data[50 len 14]:
                                    revert with 0, 17
                                if not ext_call.return_data[50 len 14]:
                                    revert with 0, 18
                                if ext_call.return_data[50 len 14] * arg3 / ext_call.return_data[50 len 14] != arg3:
                                    revert with 0, 'SafeMath: multiplication overflow', mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                                if not ext_call.return_data[50 len 14] * arg3:
                                    if arg3 > ext_call.return_data[18 len 14]:
                                        revert with 0, 'SafeMath: subtraction overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                    if ext_call.return_data[18 len 14] < arg3:
                                        revert with 0, 17
                                    if not ext_call.return_data[18 len 14] - arg3:
                                        revert with 0, 18
                                    if ext_call.return_data[18 len 14] - arg3 and 997 > -1 / ext_call.return_data[18 len 14] - arg3:
                                        revert with 0, 17
                                    if not ext_call.return_data[18 len 14] - arg3:
                                        revert with 0, 18
                                    if (997 * ext_call.return_data[18 len 14]) - (997 * arg3) / ext_call.return_data[18 len 14] - arg3 != 997:
                                        revert with 0, 'SafeMath: multiplication overflow', mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                                    if not (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                        revert with 0, 18
                                    if 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3) > -2:
                                        revert with 0, 17
                                    if (0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3)) + 1 < 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                        revert with 0, 'SafeMath: addition overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                    if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                        mem[(10 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address, mem[(12 * ceil32(return_data.size)) + 510 len 20 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(14 * ceil32(return_data.size)) + 542 len 24 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    else:
                                        mem[(10 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                        mem[(10 * ceil32(return_data.size)) + 510] = 0
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).approve(address rg1, uint256 rg2) with:
                                             gas gas_remaining wei
                                            args 0x60ae616a2155ee3d9a68541ba4544862310933d4, 0, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                        mem[(10 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        mem[(12 * ceil32(return_data.size)) + 474] = 2
                                        mem[(12 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(12 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                        mem[(12 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(12 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        mem[(12 * ceil32(return_data.size)) + 606] = 0
                                        mem[(12 * ceil32(return_data.size)) + 638] = 160
                                        mem[(12 * ceil32(return_data.size)) + 734] = 2
                                        idx = 0
                                        s = (12 * ceil32(return_data.size)) + 766
                                        t = (12 * ceil32(return_data.size)) + 506
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(12 * ceil32(return_data.size)) + 670] = this.address
                                        mem[(12 * ceil32(return_data.size)) + 702] = block.timestamp
                                        require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                        call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                             gas gas_remaining wei
                                            args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1, 0, 160, address(this.address), block.timestamp, 2, mem[(12 * ceil32(return_data.size)) + 766 len 64]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(12 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (13 * ceil32(return_data.size)) + 570
                                        require return_data.size >= 32
                                        _4576 = mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32
                                        require mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                        require (12 * ceil32(return_data.size)) + return_data.size + 570 > (12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 601
                                        _4672 = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                        if mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                            revert with 0, 65
                                        if ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0 or (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307():
                                            revert with 0, 65
                                        mem[64] = (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                        mem[(13 * ceil32(return_data.size)) + 570] = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                        require _4576 + (32 * _4672) + 32 <= return_data.size
                                        mem[(13 * ceil32(return_data.size)) + 602 len 32 * _4672] = mem[(12 * ceil32(return_data.size)) + _4576 + 602 len 32 * _4672]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6400 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_6400] == bool(mem[_6400])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6784 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _6880 = mem[_6784]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _6880
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _6880
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _7168 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_7168] == bool(mem[_7168])
                                else:
                                    if ext_call.return_data[50 len 14] * arg3 and 1000 > -1 / ext_call.return_data[50 len 14] * arg3:
                                        revert with 0, 17
                                    if not ext_call.return_data[50 len 14] * arg3:
                                        revert with 0, 18
                                    if 1000 * ext_call.return_data[50 len 14] * arg3 / ext_call.return_data[50 len 14] * arg3 != 1000:
                                        revert with 0, 'SafeMath: multiplication overflow', mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                                    if arg3 > ext_call.return_data[18 len 14]:
                                        revert with 0, 'SafeMath: subtraction overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                    if ext_call.return_data[18 len 14] < arg3:
                                        revert with 0, 17
                                    if not ext_call.return_data[18 len 14] - arg3:
                                        revert with 0, 18
                                    if ext_call.return_data[18 len 14] - arg3 and 997 > -1 / ext_call.return_data[18 len 14] - arg3:
                                        revert with 0, 17
                                    if not ext_call.return_data[18 len 14] - arg3:
                                        revert with 0, 18
                                    if (997 * ext_call.return_data[18 len 14]) - (997 * arg3) / ext_call.return_data[18 len 14] - arg3 != 997:
                                        revert with 0, 'SafeMath: multiplication overflow', mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                                    if not (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                        revert with 0, 18
                                    if 1000 * ext_call.return_data[50 len 14] * arg3 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3) > -2:
                                        revert with 0, 17
                                    if (1000 * ext_call.return_data[50 len 14] * arg3 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3)) + 1 < 1000 * ext_call.return_data[50 len 14] * arg3 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                        revert with 0, 'SafeMath: addition overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                    if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                        mem[(10 * ceil32(return_data.size)) + 510] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address, mem[(12 * ceil32(return_data.size)) + 510 len 20 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(14 * ceil32(return_data.size)) + 542 len 24 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    else:
                                        mem[(10 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                        mem[(10 * ceil32(return_data.size)) + 510] = 0
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).approve(address rg1, uint256 rg2) with:
                                             gas gas_remaining wei
                                            args 0x60ae616a2155ee3d9a68541ba4544862310933d4, 0, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                        mem[(10 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        mem[(12 * ceil32(return_data.size)) + 474] = 2
                                        mem[(12 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(12 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                        mem[(12 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(12 * ceil32(return_data.size)) + 574] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        mem[(12 * ceil32(return_data.size)) + 606] = 0
                                        mem[(12 * ceil32(return_data.size)) + 638] = 160
                                        mem[(12 * ceil32(return_data.size)) + 734] = 2
                                        idx = 0
                                        s = (12 * ceil32(return_data.size)) + 766
                                        t = (12 * ceil32(return_data.size)) + 506
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(12 * ceil32(return_data.size)) + 670] = this.address
                                        mem[(12 * ceil32(return_data.size)) + 702] = block.timestamp
                                        require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                        call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                             gas gas_remaining wei
                                            args (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1, 0, 160, address(this.address), block.timestamp, 2, mem[(12 * ceil32(return_data.size)) + 766 len 64]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(12 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (13 * ceil32(return_data.size)) + 570
                                        require return_data.size >= 32
                                        _4575 = mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32
                                        require mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                        require (12 * ceil32(return_data.size)) + return_data.size + 570 > (12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 601
                                        _4671 = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                        if mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                            revert with 0, 65
                                        if ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0 or (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307():
                                            revert with 0, 65
                                        mem[64] = (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                        mem[(13 * ceil32(return_data.size)) + 570] = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                        require _4575 + (32 * _4671) + 32 <= return_data.size
                                        mem[(13 * ceil32(return_data.size)) + 602 len 32 * _4671] = mem[(12 * ceil32(return_data.size)) + _4575 + 602 len 32 * _4671]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6399 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_6399] == bool(mem[_6399])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6783 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _6879 = mem[_6783]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _6879
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _6879
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _7167 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_7167] == bool(mem[_7167])
                        else:
                            if ext_call.return_data[18 len 14] <= 0:
                                revert with 0, 
                                            'SpiritswapLibrary: INSUFFICIENT_LIQUIDITY',
                                            mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                            if ext_call.return_data[50 len 14] <= 0:
                                revert with 0, 
                                            'SpiritswapLibrary: INSUFFICIENT_LIQUIDITY',
                                            mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                            if not ext_call.return_data[18 len 14]:
                                if arg3 > ext_call.return_data[50 len 14]:
                                    revert with 0, 'SafeMath: subtraction overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                if ext_call.return_data[50 len 14] < arg3:
                                    revert with 0, 17
                                if not ext_call.return_data[50 len 14] - arg3:
                                    revert with 0, 18
                                if ext_call.return_data[50 len 14] - arg3 and 997 > -1 / ext_call.return_data[50 len 14] - arg3:
                                    revert with 0, 17
                                if not ext_call.return_data[50 len 14] - arg3:
                                    revert with 0, 18
                                if (997 * ext_call.return_data[50 len 14]) - (997 * arg3) / ext_call.return_data[50 len 14] - arg3 != 997:
                                    revert with 0, 'SafeMath: multiplication overflow', mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                                if not (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                    revert with 0, 18
                                if 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3) > -2:
                                    revert with 0, 17
                                if (0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3)) + 1 < 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                    revert with 0, 'SafeMath: addition overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                    mem[(10 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(12 * ceil32(return_data.size)) + 510 len 20 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(14 * ceil32(return_data.size)) + 542 len 24 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(10 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                    mem[(10 * ceil32(return_data.size)) + 510] = 0
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).approve(address rg1, uint256 rg2) with:
                                         gas gas_remaining wei
                                        args 0x60ae616a2155ee3d9a68541ba4544862310933d4, 0, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                    mem[(10 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(12 * ceil32(return_data.size)) + 474] = 2
                                    mem[(12 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                    mem[(12 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(12 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(12 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    mem[(12 * ceil32(return_data.size)) + 606] = 0
                                    mem[(12 * ceil32(return_data.size)) + 638] = 160
                                    mem[(12 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (12 * ceil32(return_data.size)) + 766
                                    t = (12 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(12 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(12 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                    call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                         gas gas_remaining wei
                                        args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1, 0, 160, address(this.address), block.timestamp, 2, mem[(12 * ceil32(return_data.size)) + 766 len 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(12 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (13 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _4580 = mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32
                                    require mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                    require (12 * ceil32(return_data.size)) + return_data.size + 570 > (12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 601
                                    _4676 = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                    if mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                        revert with 0, 65
                                    if ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0 or (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307():
                                        revert with 0, 65
                                    mem[64] = (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                    mem[(13 * ceil32(return_data.size)) + 570] = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                    require _4580 + (32 * _4676) + 32 <= return_data.size
                                    mem[(13 * ceil32(return_data.size)) + 602 len 32 * _4676] = mem[(12 * ceil32(return_data.size)) + _4580 + 602 len 32 * _4676]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _6404 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_6404] == bool(mem[_6404])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _6788 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _6884 = mem[_6788]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _6884
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _6884
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7172 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7172] == bool(mem[_7172])
                            else:
                                if ext_call.return_data[18 len 14] and arg3 > -1 / ext_call.return_data[18 len 14]:
                                    revert with 0, 17
                                if not ext_call.return_data[18 len 14]:
                                    revert with 0, 18
                                if ext_call.return_data[18 len 14] * arg3 / ext_call.return_data[18 len 14] != arg3:
                                    revert with 0, 'SafeMath: multiplication overflow', mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                                if not ext_call.return_data[18 len 14] * arg3:
                                    if arg3 > ext_call.return_data[50 len 14]:
                                        revert with 0, 'SafeMath: subtraction overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                    if ext_call.return_data[50 len 14] < arg3:
                                        revert with 0, 17
                                    if not ext_call.return_data[50 len 14] - arg3:
                                        revert with 0, 18
                                    if ext_call.return_data[50 len 14] - arg3 and 997 > -1 / ext_call.return_data[50 len 14] - arg3:
                                        revert with 0, 17
                                    if not ext_call.return_data[50 len 14] - arg3:
                                        revert with 0, 18
                                    if (997 * ext_call.return_data[50 len 14]) - (997 * arg3) / ext_call.return_data[50 len 14] - arg3 != 997:
                                        revert with 0, 'SafeMath: multiplication overflow', mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                                    if not (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                        revert with 0, 18
                                    if 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3) > -2:
                                        revert with 0, 17
                                    if (0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3)) + 1 < 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                        revert with 0, 'SafeMath: addition overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                    if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                        mem[(10 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address, mem[(12 * ceil32(return_data.size)) + 510 len 20 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(14 * ceil32(return_data.size)) + 542 len 24 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    else:
                                        mem[(10 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                        mem[(10 * ceil32(return_data.size)) + 510] = 0
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).approve(address rg1, uint256 rg2) with:
                                             gas gas_remaining wei
                                            args 0x60ae616a2155ee3d9a68541ba4544862310933d4, 0, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                        mem[(10 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        mem[(12 * ceil32(return_data.size)) + 474] = 2
                                        mem[(12 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(12 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                        mem[(12 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(12 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        mem[(12 * ceil32(return_data.size)) + 606] = 0
                                        mem[(12 * ceil32(return_data.size)) + 638] = 160
                                        mem[(12 * ceil32(return_data.size)) + 734] = 2
                                        idx = 0
                                        s = (12 * ceil32(return_data.size)) + 766
                                        t = (12 * ceil32(return_data.size)) + 506
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(12 * ceil32(return_data.size)) + 670] = this.address
                                        mem[(12 * ceil32(return_data.size)) + 702] = block.timestamp
                                        require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                        call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                             gas gas_remaining wei
                                            args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1, 0, 160, address(this.address), block.timestamp, 2, mem[(12 * ceil32(return_data.size)) + 766 len 64]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(12 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (13 * ceil32(return_data.size)) + 570
                                        require return_data.size >= 32
                                        _4579 = mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32
                                        require mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                        require (12 * ceil32(return_data.size)) + return_data.size + 570 > (12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 601
                                        _4675 = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                        if mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                            revert with 0, 65
                                        if ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0 or (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307():
                                            revert with 0, 65
                                        mem[64] = (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                        mem[(13 * ceil32(return_data.size)) + 570] = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                        require _4579 + (32 * _4675) + 32 <= return_data.size
                                        mem[(13 * ceil32(return_data.size)) + 602 len 32 * _4675] = mem[(12 * ceil32(return_data.size)) + _4579 + 602 len 32 * _4675]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6403 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_6403] == bool(mem[_6403])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6787 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _6883 = mem[_6787]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _6883
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _6883
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _7171 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_7171] == bool(mem[_7171])
                                else:
                                    if ext_call.return_data[18 len 14] * arg3 and 1000 > -1 / ext_call.return_data[18 len 14] * arg3:
                                        revert with 0, 17
                                    if not ext_call.return_data[18 len 14] * arg3:
                                        revert with 0, 18
                                    if 1000 * ext_call.return_data[18 len 14] * arg3 / ext_call.return_data[18 len 14] * arg3 != 1000:
                                        revert with 0, 'SafeMath: multiplication overflow', mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                                    if arg3 > ext_call.return_data[50 len 14]:
                                        revert with 0, 'SafeMath: subtraction overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                    if ext_call.return_data[50 len 14] < arg3:
                                        revert with 0, 17
                                    if not ext_call.return_data[50 len 14] - arg3:
                                        revert with 0, 18
                                    if ext_call.return_data[50 len 14] - arg3 and 997 > -1 / ext_call.return_data[50 len 14] - arg3:
                                        revert with 0, 17
                                    if not ext_call.return_data[50 len 14] - arg3:
                                        revert with 0, 18
                                    if (997 * ext_call.return_data[50 len 14]) - (997 * arg3) / ext_call.return_data[50 len 14] - arg3 != 997:
                                        revert with 0, 'SafeMath: multiplication overflow', mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                                    if not (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                        revert with 0, 18
                                    if 1000 * ext_call.return_data[18 len 14] * arg3 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3) > -2:
                                        revert with 0, 17
                                    if (1000 * ext_call.return_data[18 len 14] * arg3 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3)) + 1 < 1000 * ext_call.return_data[18 len 14] * arg3 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                        revert with 0, 'SafeMath: addition overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                    if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                        mem[(10 * ceil32(return_data.size)) + 510] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address, mem[(12 * ceil32(return_data.size)) + 510 len 20 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(14 * ceil32(return_data.size)) + 542 len 24 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    else:
                                        mem[(10 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                        mem[(10 * ceil32(return_data.size)) + 510] = 0
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).approve(address rg1, uint256 rg2) with:
                                             gas gas_remaining wei
                                            args 0x60ae616a2155ee3d9a68541ba4544862310933d4, 0, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                        mem[(10 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        mem[(12 * ceil32(return_data.size)) + 474] = 2
                                        mem[(12 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(12 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                        mem[(12 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(12 * ceil32(return_data.size)) + 574] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        mem[(12 * ceil32(return_data.size)) + 606] = 0
                                        mem[(12 * ceil32(return_data.size)) + 638] = 160
                                        mem[(12 * ceil32(return_data.size)) + 734] = 2
                                        idx = 0
                                        s = (12 * ceil32(return_data.size)) + 766
                                        t = (12 * ceil32(return_data.size)) + 506
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(12 * ceil32(return_data.size)) + 670] = this.address
                                        mem[(12 * ceil32(return_data.size)) + 702] = block.timestamp
                                        require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                        call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                             gas gas_remaining wei
                                            args (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1, 0, 160, address(this.address), block.timestamp, 2, mem[(12 * ceil32(return_data.size)) + 766 len 64]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(12 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (13 * ceil32(return_data.size)) + 570
                                        require return_data.size >= 32
                                        _4578 = mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32
                                        require mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                        require (12 * ceil32(return_data.size)) + return_data.size + 570 > (12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 601
                                        _4674 = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                        if mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                            revert with 0, 65
                                        if ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0 or (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307():
                                            revert with 0, 65
                                        mem[64] = (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                        mem[(13 * ceil32(return_data.size)) + 570] = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                        require _4578 + (32 * _4674) + 32 <= return_data.size
                                        mem[(13 * ceil32(return_data.size)) + 602 len 32 * _4674] = mem[(12 * ceil32(return_data.size)) + _4578 + 602 len 32 * _4674]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6402 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_6402] == bool(mem[_6402])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6786 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _6882 = mem[_6786]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _6882
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _6882
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _7170 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_7170] == bool(mem[_7170])
                    else:
                        if address(ext_call.return_data[0]) == address(ext_call.return_data[0]):
                            if ext_call.return_data[50 len 14] <= 0:
                                revert with 0, 
                                            'SpiritswapLibrary: INSUFFICIENT_LIQUIDITY',
                                            mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                            if ext_call.return_data[18 len 14] <= 0:
                                revert with 0, 
                                            'SpiritswapLibrary: INSUFFICIENT_LIQUIDITY',
                                            mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                            if not ext_call.return_data[50 len 14]:
                                if arg3 > ext_call.return_data[18 len 14]:
                                    revert with 0, 'SafeMath: subtraction overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                if ext_call.return_data[18 len 14] < arg3:
                                    revert with 0, 17
                                if not ext_call.return_data[18 len 14] - arg3:
                                    revert with 0, 18
                                if ext_call.return_data[18 len 14] - arg3 and 997 > -1 / ext_call.return_data[18 len 14] - arg3:
                                    revert with 0, 17
                                if not ext_call.return_data[18 len 14] - arg3:
                                    revert with 0, 18
                                if (997 * ext_call.return_data[18 len 14]) - (997 * arg3) / ext_call.return_data[18 len 14] - arg3 != 997:
                                    revert with 0, 'SafeMath: multiplication overflow', mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                                if not (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                    revert with 0, 18
                                if 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3) > -2:
                                    revert with 0, 17
                                if (0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3)) + 1 < 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                    revert with 0, 'SafeMath: addition overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                    mem[(10 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(12 * ceil32(return_data.size)) + 510 len 20 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(14 * ceil32(return_data.size)) + 542 len 24 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(10 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                    mem[(10 * ceil32(return_data.size)) + 510] = 0
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).approve(address rg1, uint256 rg2) with:
                                         gas gas_remaining wei
                                        args 0x60ae616a2155ee3d9a68541ba4544862310933d4, 0, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                    mem[(10 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(12 * ceil32(return_data.size)) + 474] = 2
                                    mem[(12 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                    mem[(12 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(12 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(12 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    mem[(12 * ceil32(return_data.size)) + 606] = 0
                                    mem[(12 * ceil32(return_data.size)) + 638] = 160
                                    mem[(12 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (12 * ceil32(return_data.size)) + 766
                                    t = (12 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(12 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(12 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                    call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                         gas gas_remaining wei
                                        args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1, 0, 160, address(this.address), block.timestamp, 2, mem[(12 * ceil32(return_data.size)) + 766 len 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(12 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (13 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _4583 = mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32
                                    require mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                    require (12 * ceil32(return_data.size)) + return_data.size + 570 > (12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 601
                                    _4679 = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                    if mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                        revert with 0, 65
                                    if ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0 or (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307():
                                        revert with 0, 65
                                    mem[64] = (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                    mem[(13 * ceil32(return_data.size)) + 570] = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                    require _4583 + (32 * _4679) + 32 <= return_data.size
                                    mem[(13 * ceil32(return_data.size)) + 602 len 32 * _4679] = mem[(12 * ceil32(return_data.size)) + _4583 + 602 len 32 * _4679]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _6407 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_6407] == bool(mem[_6407])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _6791 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _6887 = mem[_6791]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _6887
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _6887
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7175 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7175] == bool(mem[_7175])
                            else:
                                if ext_call.return_data[50 len 14] and arg3 > -1 / ext_call.return_data[50 len 14]:
                                    revert with 0, 17
                                if not ext_call.return_data[50 len 14]:
                                    revert with 0, 18
                                if ext_call.return_data[50 len 14] * arg3 / ext_call.return_data[50 len 14] != arg3:
                                    revert with 0, 'SafeMath: multiplication overflow', mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                                if not ext_call.return_data[50 len 14] * arg3:
                                    if arg3 > ext_call.return_data[18 len 14]:
                                        revert with 0, 'SafeMath: subtraction overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                    if ext_call.return_data[18 len 14] < arg3:
                                        revert with 0, 17
                                    if not ext_call.return_data[18 len 14] - arg3:
                                        revert with 0, 18
                                    if ext_call.return_data[18 len 14] - arg3 and 997 > -1 / ext_call.return_data[18 len 14] - arg3:
                                        revert with 0, 17
                                    if not ext_call.return_data[18 len 14] - arg3:
                                        revert with 0, 18
                                    if (997 * ext_call.return_data[18 len 14]) - (997 * arg3) / ext_call.return_data[18 len 14] - arg3 != 997:
                                        revert with 0, 'SafeMath: multiplication overflow', mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                                    if not (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                        revert with 0, 18
                                    if 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3) > -2:
                                        revert with 0, 17
                                    if (0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3)) + 1 < 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                        revert with 0, 'SafeMath: addition overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                    if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                        mem[(10 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address, mem[(12 * ceil32(return_data.size)) + 510 len 20 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(14 * ceil32(return_data.size)) + 542 len 24 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    else:
                                        mem[(10 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                        mem[(10 * ceil32(return_data.size)) + 510] = 0
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).approve(address rg1, uint256 rg2) with:
                                             gas gas_remaining wei
                                            args 0x60ae616a2155ee3d9a68541ba4544862310933d4, 0, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                        mem[(10 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        mem[(12 * ceil32(return_data.size)) + 474] = 2
                                        mem[(12 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(12 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                        mem[(12 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(12 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        mem[(12 * ceil32(return_data.size)) + 606] = 0
                                        mem[(12 * ceil32(return_data.size)) + 638] = 160
                                        mem[(12 * ceil32(return_data.size)) + 734] = 2
                                        idx = 0
                                        s = (12 * ceil32(return_data.size)) + 766
                                        t = (12 * ceil32(return_data.size)) + 506
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(12 * ceil32(return_data.size)) + 670] = this.address
                                        mem[(12 * ceil32(return_data.size)) + 702] = block.timestamp
                                        require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                        call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                             gas gas_remaining wei
                                            args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1, 0, 160, address(this.address), block.timestamp, 2, mem[(12 * ceil32(return_data.size)) + 766 len 64]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(12 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (13 * ceil32(return_data.size)) + 570
                                        require return_data.size >= 32
                                        _4582 = mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32
                                        require mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                        require (12 * ceil32(return_data.size)) + return_data.size + 570 > (12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 601
                                        _4678 = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                        if mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                            revert with 0, 65
                                        if ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0 or (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307():
                                            revert with 0, 65
                                        mem[64] = (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                        mem[(13 * ceil32(return_data.size)) + 570] = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                        require _4582 + (32 * _4678) + 32 <= return_data.size
                                        mem[(13 * ceil32(return_data.size)) + 602 len 32 * _4678] = mem[(12 * ceil32(return_data.size)) + _4582 + 602 len 32 * _4678]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6406 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_6406] == bool(mem[_6406])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6790 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _6886 = mem[_6790]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _6886
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _6886
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _7174 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_7174] == bool(mem[_7174])
                                else:
                                    if ext_call.return_data[50 len 14] * arg3 and 1000 > -1 / ext_call.return_data[50 len 14] * arg3:
                                        revert with 0, 17
                                    if not ext_call.return_data[50 len 14] * arg3:
                                        revert with 0, 18
                                    if 1000 * ext_call.return_data[50 len 14] * arg3 / ext_call.return_data[50 len 14] * arg3 != 1000:
                                        revert with 0, 'SafeMath: multiplication overflow', mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                                    if arg3 > ext_call.return_data[18 len 14]:
                                        revert with 0, 'SafeMath: subtraction overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                    if ext_call.return_data[18 len 14] < arg3:
                                        revert with 0, 17
                                    if not ext_call.return_data[18 len 14] - arg3:
                                        revert with 0, 18
                                    if ext_call.return_data[18 len 14] - arg3 and 997 > -1 / ext_call.return_data[18 len 14] - arg3:
                                        revert with 0, 17
                                    if not ext_call.return_data[18 len 14] - arg3:
                                        revert with 0, 18
                                    if (997 * ext_call.return_data[18 len 14]) - (997 * arg3) / ext_call.return_data[18 len 14] - arg3 != 997:
                                        revert with 0, 'SafeMath: multiplication overflow', mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                                    if not (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                        revert with 0, 18
                                    if 1000 * ext_call.return_data[50 len 14] * arg3 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3) > -2:
                                        revert with 0, 17
                                    if (1000 * ext_call.return_data[50 len 14] * arg3 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3)) + 1 < 1000 * ext_call.return_data[50 len 14] * arg3 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                        revert with 0, 'SafeMath: addition overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                    if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                        mem[(10 * ceil32(return_data.size)) + 510] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address, mem[(12 * ceil32(return_data.size)) + 510 len 20 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(14 * ceil32(return_data.size)) + 542 len 24 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    else:
                                        mem[(10 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                        mem[(10 * ceil32(return_data.size)) + 510] = 0
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).approve(address rg1, uint256 rg2) with:
                                             gas gas_remaining wei
                                            args 0x60ae616a2155ee3d9a68541ba4544862310933d4, 0, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                        mem[(10 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        mem[(12 * ceil32(return_data.size)) + 474] = 2
                                        mem[(12 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(12 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                        mem[(12 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(12 * ceil32(return_data.size)) + 574] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        mem[(12 * ceil32(return_data.size)) + 606] = 0
                                        mem[(12 * ceil32(return_data.size)) + 638] = 160
                                        mem[(12 * ceil32(return_data.size)) + 734] = 2
                                        idx = 0
                                        s = (12 * ceil32(return_data.size)) + 766
                                        t = (12 * ceil32(return_data.size)) + 506
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(12 * ceil32(return_data.size)) + 670] = this.address
                                        mem[(12 * ceil32(return_data.size)) + 702] = block.timestamp
                                        require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                        call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                             gas gas_remaining wei
                                            args (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1, 0, 160, address(this.address), block.timestamp, 2, mem[(12 * ceil32(return_data.size)) + 766 len 64]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(12 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (13 * ceil32(return_data.size)) + 570
                                        require return_data.size >= 32
                                        _4581 = mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32
                                        require mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                        require (12 * ceil32(return_data.size)) + return_data.size + 570 > (12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 601
                                        _4677 = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                        if mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                            revert with 0, 65
                                        if ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0 or (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307():
                                            revert with 0, 65
                                        mem[64] = (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                        mem[(13 * ceil32(return_data.size)) + 570] = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                        require _4581 + (32 * _4677) + 32 <= return_data.size
                                        mem[(13 * ceil32(return_data.size)) + 602 len 32 * _4677] = mem[(12 * ceil32(return_data.size)) + _4581 + 602 len 32 * _4677]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6405 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_6405] == bool(mem[_6405])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6789 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _6885 = mem[_6789]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _6885
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _6885
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _7173 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_7173] == bool(mem[_7173])
                        else:
                            if ext_call.return_data[18 len 14] <= 0:
                                revert with 0, 
                                            'SpiritswapLibrary: INSUFFICIENT_LIQUIDITY',
                                            mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                            if ext_call.return_data[50 len 14] <= 0:
                                revert with 0, 
                                            'SpiritswapLibrary: INSUFFICIENT_LIQUIDITY',
                                            mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                            if not ext_call.return_data[18 len 14]:
                                if arg3 > ext_call.return_data[50 len 14]:
                                    revert with 0, 'SafeMath: subtraction overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                if ext_call.return_data[50 len 14] < arg3:
                                    revert with 0, 17
                                if not ext_call.return_data[50 len 14] - arg3:
                                    revert with 0, 18
                                if ext_call.return_data[50 len 14] - arg3 and 997 > -1 / ext_call.return_data[50 len 14] - arg3:
                                    revert with 0, 17
                                if not ext_call.return_data[50 len 14] - arg3:
                                    revert with 0, 18
                                if (997 * ext_call.return_data[50 len 14]) - (997 * arg3) / ext_call.return_data[50 len 14] - arg3 != 997:
                                    revert with 0, 'SafeMath: multiplication overflow', mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                                if not (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                    revert with 0, 18
                                if 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3) > -2:
                                    revert with 0, 17
                                if (0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3)) + 1 < 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                    revert with 0, 'SafeMath: addition overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                    mem[(10 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(12 * ceil32(return_data.size)) + 510 len 20 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(14 * ceil32(return_data.size)) + 542 len 24 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(10 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                    mem[(10 * ceil32(return_data.size)) + 510] = 0
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).approve(address rg1, uint256 rg2) with:
                                         gas gas_remaining wei
                                        args 0x60ae616a2155ee3d9a68541ba4544862310933d4, 0, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                    mem[(10 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(12 * ceil32(return_data.size)) + 474] = 2
                                    mem[(12 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                    mem[(12 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(12 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(12 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    mem[(12 * ceil32(return_data.size)) + 606] = 0
                                    mem[(12 * ceil32(return_data.size)) + 638] = 160
                                    mem[(12 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (12 * ceil32(return_data.size)) + 766
                                    t = (12 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(12 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(12 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                    call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                         gas gas_remaining wei
                                        args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1, 0, 160, address(this.address), block.timestamp, 2, mem[(12 * ceil32(return_data.size)) + 766 len 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(12 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (13 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _4586 = mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32
                                    require mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                    require (12 * ceil32(return_data.size)) + return_data.size + 570 > (12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 601
                                    _4682 = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                    if mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                        revert with 0, 65
                                    if ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0 or (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307():
                                        revert with 0, 65
                                    mem[64] = (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                    mem[(13 * ceil32(return_data.size)) + 570] = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                    require _4586 + (32 * _4682) + 32 <= return_data.size
                                    mem[(13 * ceil32(return_data.size)) + 602 len 32 * _4682] = mem[(12 * ceil32(return_data.size)) + _4586 + 602 len 32 * _4682]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _6410 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_6410] == bool(mem[_6410])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _6794 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _6890 = mem[_6794]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _6890
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _6890
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7178 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7178] == bool(mem[_7178])
                            else:
                                if ext_call.return_data[18 len 14] and arg3 > -1 / ext_call.return_data[18 len 14]:
                                    revert with 0, 17
                                if not ext_call.return_data[18 len 14]:
                                    revert with 0, 18
                                if ext_call.return_data[18 len 14] * arg3 / ext_call.return_data[18 len 14] != arg3:
                                    revert with 0, 'SafeMath: multiplication overflow', mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                                if not ext_call.return_data[18 len 14] * arg3:
                                    if arg3 > ext_call.return_data[50 len 14]:
                                        revert with 0, 'SafeMath: subtraction overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                    if ext_call.return_data[50 len 14] < arg3:
                                        revert with 0, 17
                                    if not ext_call.return_data[50 len 14] - arg3:
                                        revert with 0, 18
                                    if ext_call.return_data[50 len 14] - arg3 and 997 > -1 / ext_call.return_data[50 len 14] - arg3:
                                        revert with 0, 17
                                    if not ext_call.return_data[50 len 14] - arg3:
                                        revert with 0, 18
                                    if (997 * ext_call.return_data[50 len 14]) - (997 * arg3) / ext_call.return_data[50 len 14] - arg3 != 997:
                                        revert with 0, 'SafeMath: multiplication overflow', mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                                    if not (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                        revert with 0, 18
                                    if 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3) > -2:
                                        revert with 0, 17
                                    if (0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3)) + 1 < 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                        revert with 0, 'SafeMath: addition overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                    if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                        mem[(10 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address, mem[(12 * ceil32(return_data.size)) + 510 len 20 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(14 * ceil32(return_data.size)) + 542 len 24 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    else:
                                        mem[(10 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                        mem[(10 * ceil32(return_data.size)) + 510] = 0
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).approve(address rg1, uint256 rg2) with:
                                             gas gas_remaining wei
                                            args 0x60ae616a2155ee3d9a68541ba4544862310933d4, 0, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                        mem[(10 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        mem[(12 * ceil32(return_data.size)) + 474] = 2
                                        mem[(12 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(12 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                        mem[(12 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(12 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        mem[(12 * ceil32(return_data.size)) + 606] = 0
                                        mem[(12 * ceil32(return_data.size)) + 638] = 160
                                        mem[(12 * ceil32(return_data.size)) + 734] = 2
                                        idx = 0
                                        s = (12 * ceil32(return_data.size)) + 766
                                        t = (12 * ceil32(return_data.size)) + 506
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(12 * ceil32(return_data.size)) + 670] = this.address
                                        mem[(12 * ceil32(return_data.size)) + 702] = block.timestamp
                                        require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                        call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                             gas gas_remaining wei
                                            args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1, 0, 160, address(this.address), block.timestamp, 2, mem[(12 * ceil32(return_data.size)) + 766 len 64]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(12 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (13 * ceil32(return_data.size)) + 570
                                        require return_data.size >= 32
                                        _4585 = mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32
                                        require mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                        require (12 * ceil32(return_data.size)) + return_data.size + 570 > (12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 601
                                        _4681 = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                        if mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                            revert with 0, 65
                                        if ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0 or (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307():
                                            revert with 0, 65
                                        mem[64] = (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                        mem[(13 * ceil32(return_data.size)) + 570] = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                        require _4585 + (32 * _4681) + 32 <= return_data.size
                                        mem[(13 * ceil32(return_data.size)) + 602 len 32 * _4681] = mem[(12 * ceil32(return_data.size)) + _4585 + 602 len 32 * _4681]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6409 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_6409] == bool(mem[_6409])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6793 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _6889 = mem[_6793]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _6889
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _6889
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _7177 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_7177] == bool(mem[_7177])
                                else:
                                    if ext_call.return_data[18 len 14] * arg3 and 1000 > -1 / ext_call.return_data[18 len 14] * arg3:
                                        revert with 0, 17
                                    if not ext_call.return_data[18 len 14] * arg3:
                                        revert with 0, 18
                                    if 1000 * ext_call.return_data[18 len 14] * arg3 / ext_call.return_data[18 len 14] * arg3 != 1000:
                                        revert with 0, 'SafeMath: multiplication overflow', mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                                    if arg3 > ext_call.return_data[50 len 14]:
                                        revert with 0, 'SafeMath: subtraction overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                    if ext_call.return_data[50 len 14] < arg3:
                                        revert with 0, 17
                                    if not ext_call.return_data[50 len 14] - arg3:
                                        revert with 0, 18
                                    if ext_call.return_data[50 len 14] - arg3 and 997 > -1 / ext_call.return_data[50 len 14] - arg3:
                                        revert with 0, 17
                                    if not ext_call.return_data[50 len 14] - arg3:
                                        revert with 0, 18
                                    if (997 * ext_call.return_data[50 len 14]) - (997 * arg3) / ext_call.return_data[50 len 14] - arg3 != 997:
                                        revert with 0, 'SafeMath: multiplication overflow', mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                                    if not (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                        revert with 0, 18
                                    if 1000 * ext_call.return_data[18 len 14] * arg3 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3) > -2:
                                        revert with 0, 17
                                    if (1000 * ext_call.return_data[18 len 14] * arg3 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3)) + 1 < 1000 * ext_call.return_data[18 len 14] * arg3 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                        revert with 0, 'SafeMath: addition overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                    if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                        mem[(10 * ceil32(return_data.size)) + 510] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address, mem[(12 * ceil32(return_data.size)) + 510 len 20 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(14 * ceil32(return_data.size)) + 542 len 24 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    else:
                                        mem[(10 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                        mem[(10 * ceil32(return_data.size)) + 510] = 0
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).approve(address rg1, uint256 rg2) with:
                                             gas gas_remaining wei
                                            args 0x60ae616a2155ee3d9a68541ba4544862310933d4, 0, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                        mem[(10 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        mem[(12 * ceil32(return_data.size)) + 474] = 2
                                        mem[(12 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(12 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                        mem[(12 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(12 * ceil32(return_data.size)) + 574] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        mem[(12 * ceil32(return_data.size)) + 606] = 0
                                        mem[(12 * ceil32(return_data.size)) + 638] = 160
                                        mem[(12 * ceil32(return_data.size)) + 734] = 2
                                        idx = 0
                                        s = (12 * ceil32(return_data.size)) + 766
                                        t = (12 * ceil32(return_data.size)) + 506
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(12 * ceil32(return_data.size)) + 670] = this.address
                                        mem[(12 * ceil32(return_data.size)) + 702] = block.timestamp
                                        require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                        call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                             gas gas_remaining wei
                                            args (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1, 0, 160, address(this.address), block.timestamp, 2, mem[(12 * ceil32(return_data.size)) + 766 len 64]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(12 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (13 * ceil32(return_data.size)) + 570
                                        require return_data.size >= 32
                                        _4584 = mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32
                                        require mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                        require (12 * ceil32(return_data.size)) + return_data.size + 570 > (12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 601
                                        _4680 = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                        if mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                            revert with 0, 65
                                        if ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0 or (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307():
                                            revert with 0, 65
                                        mem[64] = (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                        mem[(13 * ceil32(return_data.size)) + 570] = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                        require _4584 + (32 * _4680) + 32 <= return_data.size
                                        mem[(13 * ceil32(return_data.size)) + 602 len 32 * _4680] = mem[(12 * ceil32(return_data.size)) + _4584 + 602 len 32 * _4680]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6408 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_6408] == bool(mem[_6408])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6792 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _6888 = mem[_6792]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _6888
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _6888
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _7176 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_7176] == bool(mem[_7176])
                else:
                    if address(ext_call.return_data[0]) < address(ext_call.return_data[0]):
                        if address(ext_call.return_data[0]) == address(ext_call.return_data[0]):
                            if ext_call.return_data[50 len 14] <= 0:
                                revert with 0, 
                                            'SpiritswapLibrary: INSUFFICIENT_LIQUIDITY',
                                            mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                            if ext_call.return_data[18 len 14] <= 0:
                                revert with 0, 
                                            'SpiritswapLibrary: INSUFFICIENT_LIQUIDITY',
                                            mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                            if not ext_call.return_data[50 len 14]:
                                if arg3 > ext_call.return_data[18 len 14]:
                                    revert with 0, 'SafeMath: subtraction overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                if ext_call.return_data[18 len 14] < arg3:
                                    revert with 0, 17
                                if not ext_call.return_data[18 len 14] - arg3:
                                    revert with 0, 18
                                if ext_call.return_data[18 len 14] - arg3 and 997 > -1 / ext_call.return_data[18 len 14] - arg3:
                                    revert with 0, 17
                                if not ext_call.return_data[18 len 14] - arg3:
                                    revert with 0, 18
                                if (997 * ext_call.return_data[18 len 14]) - (997 * arg3) / ext_call.return_data[18 len 14] - arg3 != 997:
                                    revert with 0, 'SafeMath: multiplication overflow', mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                                if not (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                    revert with 0, 18
                                if 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3) > -2:
                                    revert with 0, 17
                                if (0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3)) + 1 < 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                    revert with 0, 'SafeMath: addition overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                    mem[(10 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(12 * ceil32(return_data.size)) + 510 len 20 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(14 * ceil32(return_data.size)) + 542 len 24 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(10 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                    mem[(10 * ceil32(return_data.size)) + 510] = 0
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).approve(address rg1, uint256 rg2) with:
                                         gas gas_remaining wei
                                        args 0x60ae616a2155ee3d9a68541ba4544862310933d4, 0, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                    mem[(10 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(12 * ceil32(return_data.size)) + 474] = 2
                                    mem[(12 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                    mem[(12 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(12 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(12 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    mem[(12 * ceil32(return_data.size)) + 606] = 0
                                    mem[(12 * ceil32(return_data.size)) + 638] = 160
                                    mem[(12 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (12 * ceil32(return_data.size)) + 766
                                    t = (12 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(12 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(12 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                    call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                         gas gas_remaining wei
                                        args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1, 0, 160, address(this.address), block.timestamp, 2, mem[(12 * ceil32(return_data.size)) + 766 len 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(12 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (13 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _4589 = mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32
                                    require mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                    require (12 * ceil32(return_data.size)) + return_data.size + 570 > (12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 601
                                    _4685 = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                    if mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                        revert with 0, 65
                                    if ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0 or (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307():
                                        revert with 0, 65
                                    mem[64] = (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                    mem[(13 * ceil32(return_data.size)) + 570] = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                    require _4589 + (32 * _4685) + 32 <= return_data.size
                                    mem[(13 * ceil32(return_data.size)) + 602 len 32 * _4685] = mem[(12 * ceil32(return_data.size)) + _4589 + 602 len 32 * _4685]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _6413 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_6413] == bool(mem[_6413])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _6797 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _6893 = mem[_6797]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _6893
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _6893
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7181 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7181] == bool(mem[_7181])
                            else:
                                if ext_call.return_data[50 len 14] and arg3 > -1 / ext_call.return_data[50 len 14]:
                                    revert with 0, 17
                                if not ext_call.return_data[50 len 14]:
                                    revert with 0, 18
                                if ext_call.return_data[50 len 14] * arg3 / ext_call.return_data[50 len 14] != arg3:
                                    revert with 0, 'SafeMath: multiplication overflow', mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                                if not ext_call.return_data[50 len 14] * arg3:
                                    if arg3 > ext_call.return_data[18 len 14]:
                                        revert with 0, 'SafeMath: subtraction overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                    if ext_call.return_data[18 len 14] < arg3:
                                        revert with 0, 17
                                    if not ext_call.return_data[18 len 14] - arg3:
                                        revert with 0, 18
                                    if ext_call.return_data[18 len 14] - arg3 and 997 > -1 / ext_call.return_data[18 len 14] - arg3:
                                        revert with 0, 17
                                    if not ext_call.return_data[18 len 14] - arg3:
                                        revert with 0, 18
                                    if (997 * ext_call.return_data[18 len 14]) - (997 * arg3) / ext_call.return_data[18 len 14] - arg3 != 997:
                                        revert with 0, 'SafeMath: multiplication overflow', mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                                    if not (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                        revert with 0, 18
                                    if 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3) > -2:
                                        revert with 0, 17
                                    if (0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3)) + 1 < 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                        revert with 0, 'SafeMath: addition overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                    if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                        mem[(10 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address, mem[(12 * ceil32(return_data.size)) + 510 len 20 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(14 * ceil32(return_data.size)) + 542 len 24 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    else:
                                        mem[(10 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                        mem[(10 * ceil32(return_data.size)) + 510] = 0
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).approve(address rg1, uint256 rg2) with:
                                             gas gas_remaining wei
                                            args 0x60ae616a2155ee3d9a68541ba4544862310933d4, 0, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                        mem[(10 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        mem[(12 * ceil32(return_data.size)) + 474] = 2
                                        mem[(12 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(12 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                        mem[(12 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(12 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        mem[(12 * ceil32(return_data.size)) + 606] = 0
                                        mem[(12 * ceil32(return_data.size)) + 638] = 160
                                        mem[(12 * ceil32(return_data.size)) + 734] = 2
                                        idx = 0
                                        s = (12 * ceil32(return_data.size)) + 766
                                        t = (12 * ceil32(return_data.size)) + 506
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(12 * ceil32(return_data.size)) + 670] = this.address
                                        mem[(12 * ceil32(return_data.size)) + 702] = block.timestamp
                                        require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                        call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                             gas gas_remaining wei
                                            args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1, 0, 160, address(this.address), block.timestamp, 2, mem[(12 * ceil32(return_data.size)) + 766 len 64]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(12 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (13 * ceil32(return_data.size)) + 570
                                        require return_data.size >= 32
                                        _4588 = mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32
                                        require mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                        require (12 * ceil32(return_data.size)) + return_data.size + 570 > (12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 601
                                        _4684 = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                        if mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                            revert with 0, 65
                                        if ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0 or (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307():
                                            revert with 0, 65
                                        mem[64] = (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                        mem[(13 * ceil32(return_data.size)) + 570] = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                        require _4588 + (32 * _4684) + 32 <= return_data.size
                                        mem[(13 * ceil32(return_data.size)) + 602 len 32 * _4684] = mem[(12 * ceil32(return_data.size)) + _4588 + 602 len 32 * _4684]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6412 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_6412] == bool(mem[_6412])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6796 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _6892 = mem[_6796]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _6892
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _6892
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _7180 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_7180] == bool(mem[_7180])
                                else:
                                    if ext_call.return_data[50 len 14] * arg3 and 1000 > -1 / ext_call.return_data[50 len 14] * arg3:
                                        revert with 0, 17
                                    if not ext_call.return_data[50 len 14] * arg3:
                                        revert with 0, 18
                                    if 1000 * ext_call.return_data[50 len 14] * arg3 / ext_call.return_data[50 len 14] * arg3 != 1000:
                                        revert with 0, 'SafeMath: multiplication overflow', mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                                    if arg3 > ext_call.return_data[18 len 14]:
                                        revert with 0, 'SafeMath: subtraction overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                    if ext_call.return_data[18 len 14] < arg3:
                                        revert with 0, 17
                                    if not ext_call.return_data[18 len 14] - arg3:
                                        revert with 0, 18
                                    if ext_call.return_data[18 len 14] - arg3 and 997 > -1 / ext_call.return_data[18 len 14] - arg3:
                                        revert with 0, 17
                                    if not ext_call.return_data[18 len 14] - arg3:
                                        revert with 0, 18
                                    if (997 * ext_call.return_data[18 len 14]) - (997 * arg3) / ext_call.return_data[18 len 14] - arg3 != 997:
                                        revert with 0, 'SafeMath: multiplication overflow', mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                                    if not (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                        revert with 0, 18
                                    if 1000 * ext_call.return_data[50 len 14] * arg3 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3) > -2:
                                        revert with 0, 17
                                    if (1000 * ext_call.return_data[50 len 14] * arg3 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3)) + 1 < 1000 * ext_call.return_data[50 len 14] * arg3 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                        revert with 0, 'SafeMath: addition overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                    if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                        mem[(10 * ceil32(return_data.size)) + 510] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address, mem[(12 * ceil32(return_data.size)) + 510 len 20 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(14 * ceil32(return_data.size)) + 542 len 24 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    else:
                                        mem[(10 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                        mem[(10 * ceil32(return_data.size)) + 510] = 0
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).approve(address rg1, uint256 rg2) with:
                                             gas gas_remaining wei
                                            args 0x60ae616a2155ee3d9a68541ba4544862310933d4, 0, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                        mem[(10 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        mem[(12 * ceil32(return_data.size)) + 474] = 2
                                        mem[(12 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(12 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                        mem[(12 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(12 * ceil32(return_data.size)) + 574] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        mem[(12 * ceil32(return_data.size)) + 606] = 0
                                        mem[(12 * ceil32(return_data.size)) + 638] = 160
                                        mem[(12 * ceil32(return_data.size)) + 734] = 2
                                        idx = 0
                                        s = (12 * ceil32(return_data.size)) + 766
                                        t = (12 * ceil32(return_data.size)) + 506
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(12 * ceil32(return_data.size)) + 670] = this.address
                                        mem[(12 * ceil32(return_data.size)) + 702] = block.timestamp
                                        require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                        call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                             gas gas_remaining wei
                                            args (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1, 0, 160, address(this.address), block.timestamp, 2, mem[(12 * ceil32(return_data.size)) + 766 len 64]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(12 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (13 * ceil32(return_data.size)) + 570
                                        require return_data.size >= 32
                                        _4587 = mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32
                                        require mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                        require (12 * ceil32(return_data.size)) + return_data.size + 570 > (12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 601
                                        _4683 = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                        if mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                            revert with 0, 65
                                        if ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0 or (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307():
                                            revert with 0, 65
                                        mem[64] = (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                        mem[(13 * ceil32(return_data.size)) + 570] = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                        require _4587 + (32 * _4683) + 32 <= return_data.size
                                        mem[(13 * ceil32(return_data.size)) + 602 len 32 * _4683] = mem[(12 * ceil32(return_data.size)) + _4587 + 602 len 32 * _4683]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6411 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_6411] == bool(mem[_6411])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6795 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _6891 = mem[_6795]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _6891
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _6891
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _7179 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_7179] == bool(mem[_7179])
                        else:
                            if ext_call.return_data[18 len 14] <= 0:
                                revert with 0, 
                                            'SpiritswapLibrary: INSUFFICIENT_LIQUIDITY',
                                            mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                            if ext_call.return_data[50 len 14] <= 0:
                                revert with 0, 
                                            'SpiritswapLibrary: INSUFFICIENT_LIQUIDITY',
                                            mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                            if not ext_call.return_data[18 len 14]:
                                if arg3 > ext_call.return_data[50 len 14]:
                                    revert with 0, 'SafeMath: subtraction overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                if ext_call.return_data[50 len 14] < arg3:
                                    revert with 0, 17
                                if not ext_call.return_data[50 len 14] - arg3:
                                    revert with 0, 18
                                if ext_call.return_data[50 len 14] - arg3 and 997 > -1 / ext_call.return_data[50 len 14] - arg3:
                                    revert with 0, 17
                                if not ext_call.return_data[50 len 14] - arg3:
                                    revert with 0, 18
                                if (997 * ext_call.return_data[50 len 14]) - (997 * arg3) / ext_call.return_data[50 len 14] - arg3 != 997:
                                    revert with 0, 'SafeMath: multiplication overflow', mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                                if not (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                    revert with 0, 18
                                if 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3) > -2:
                                    revert with 0, 17
                                if (0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3)) + 1 < 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                    revert with 0, 'SafeMath: addition overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                    mem[(10 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(12 * ceil32(return_data.size)) + 510 len 20 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(14 * ceil32(return_data.size)) + 542 len 24 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(10 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                    mem[(10 * ceil32(return_data.size)) + 510] = 0
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).approve(address rg1, uint256 rg2) with:
                                         gas gas_remaining wei
                                        args 0x60ae616a2155ee3d9a68541ba4544862310933d4, 0, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                    mem[(10 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(12 * ceil32(return_data.size)) + 474] = 2
                                    mem[(12 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                    mem[(12 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(12 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(12 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    mem[(12 * ceil32(return_data.size)) + 606] = 0
                                    mem[(12 * ceil32(return_data.size)) + 638] = 160
                                    mem[(12 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (12 * ceil32(return_data.size)) + 766
                                    t = (12 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(12 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(12 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                    call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                         gas gas_remaining wei
                                        args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1, 0, 160, address(this.address), block.timestamp, 2, mem[(12 * ceil32(return_data.size)) + 766 len 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(12 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (13 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _4592 = mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32
                                    require mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                    require (12 * ceil32(return_data.size)) + return_data.size + 570 > (12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 601
                                    _4688 = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                    if mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                        revert with 0, 65
                                    if ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0 or (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307():
                                        revert with 0, 65
                                    mem[64] = (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                    mem[(13 * ceil32(return_data.size)) + 570] = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                    require _4592 + (32 * _4688) + 32 <= return_data.size
                                    mem[(13 * ceil32(return_data.size)) + 602 len 32 * _4688] = mem[(12 * ceil32(return_data.size)) + _4592 + 602 len 32 * _4688]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _6416 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_6416] == bool(mem[_6416])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _6800 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _6896 = mem[_6800]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _6896
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _6896
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7184 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7184] == bool(mem[_7184])
                            else:
                                if ext_call.return_data[18 len 14] and arg3 > -1 / ext_call.return_data[18 len 14]:
                                    revert with 0, 17
                                if not ext_call.return_data[18 len 14]:
                                    revert with 0, 18
                                if ext_call.return_data[18 len 14] * arg3 / ext_call.return_data[18 len 14] != arg3:
                                    revert with 0, 'SafeMath: multiplication overflow', mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                                if not ext_call.return_data[18 len 14] * arg3:
                                    if arg3 > ext_call.return_data[50 len 14]:
                                        revert with 0, 'SafeMath: subtraction overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                    if ext_call.return_data[50 len 14] < arg3:
                                        revert with 0, 17
                                    if not ext_call.return_data[50 len 14] - arg3:
                                        revert with 0, 18
                                    if ext_call.return_data[50 len 14] - arg3 and 997 > -1 / ext_call.return_data[50 len 14] - arg3:
                                        revert with 0, 17
                                    if not ext_call.return_data[50 len 14] - arg3:
                                        revert with 0, 18
                                    if (997 * ext_call.return_data[50 len 14]) - (997 * arg3) / ext_call.return_data[50 len 14] - arg3 != 997:
                                        revert with 0, 'SafeMath: multiplication overflow', mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                                    if not (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                        revert with 0, 18
                                    if 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3) > -2:
                                        revert with 0, 17
                                    if (0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3)) + 1 < 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                        revert with 0, 'SafeMath: addition overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                    if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                        mem[(10 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address, mem[(12 * ceil32(return_data.size)) + 510 len 20 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(14 * ceil32(return_data.size)) + 542 len 24 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    else:
                                        mem[(10 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                        mem[(10 * ceil32(return_data.size)) + 510] = 0
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).approve(address rg1, uint256 rg2) with:
                                             gas gas_remaining wei
                                            args 0x60ae616a2155ee3d9a68541ba4544862310933d4, 0, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                        mem[(10 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        mem[(12 * ceil32(return_data.size)) + 474] = 2
                                        mem[(12 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(12 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                        mem[(12 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(12 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        mem[(12 * ceil32(return_data.size)) + 606] = 0
                                        mem[(12 * ceil32(return_data.size)) + 638] = 160
                                        mem[(12 * ceil32(return_data.size)) + 734] = 2
                                        idx = 0
                                        s = (12 * ceil32(return_data.size)) + 766
                                        t = (12 * ceil32(return_data.size)) + 506
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(12 * ceil32(return_data.size)) + 670] = this.address
                                        mem[(12 * ceil32(return_data.size)) + 702] = block.timestamp
                                        require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                        call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                             gas gas_remaining wei
                                            args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1, 0, 160, address(this.address), block.timestamp, 2, mem[(12 * ceil32(return_data.size)) + 766 len 64]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(12 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (13 * ceil32(return_data.size)) + 570
                                        require return_data.size >= 32
                                        _4591 = mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32
                                        require mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                        require (12 * ceil32(return_data.size)) + return_data.size + 570 > (12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 601
                                        _4687 = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                        if mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                            revert with 0, 65
                                        if ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0 or (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307():
                                            revert with 0, 65
                                        mem[64] = (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                        mem[(13 * ceil32(return_data.size)) + 570] = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                        require _4591 + (32 * _4687) + 32 <= return_data.size
                                        mem[(13 * ceil32(return_data.size)) + 602 len 32 * _4687] = mem[(12 * ceil32(return_data.size)) + _4591 + 602 len 32 * _4687]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6415 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_6415] == bool(mem[_6415])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6799 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _6895 = mem[_6799]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _6895
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _6895
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _7183 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_7183] == bool(mem[_7183])
                                else:
                                    if ext_call.return_data[18 len 14] * arg3 and 1000 > -1 / ext_call.return_data[18 len 14] * arg3:
                                        revert with 0, 17
                                    if not ext_call.return_data[18 len 14] * arg3:
                                        revert with 0, 18
                                    if 1000 * ext_call.return_data[18 len 14] * arg3 / ext_call.return_data[18 len 14] * arg3 != 1000:
                                        revert with 0, 'SafeMath: multiplication overflow', mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                                    if arg3 > ext_call.return_data[50 len 14]:
                                        revert with 0, 'SafeMath: subtraction overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                    if ext_call.return_data[50 len 14] < arg3:
                                        revert with 0, 17
                                    if not ext_call.return_data[50 len 14] - arg3:
                                        revert with 0, 18
                                    if ext_call.return_data[50 len 14] - arg3 and 997 > -1 / ext_call.return_data[50 len 14] - arg3:
                                        revert with 0, 17
                                    if not ext_call.return_data[50 len 14] - arg3:
                                        revert with 0, 18
                                    if (997 * ext_call.return_data[50 len 14]) - (997 * arg3) / ext_call.return_data[50 len 14] - arg3 != 997:
                                        revert with 0, 'SafeMath: multiplication overflow', mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                                    if not (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                        revert with 0, 18
                                    if 1000 * ext_call.return_data[18 len 14] * arg3 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3) > -2:
                                        revert with 0, 17
                                    if (1000 * ext_call.return_data[18 len 14] * arg3 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3)) + 1 < 1000 * ext_call.return_data[18 len 14] * arg3 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                        revert with 0, 'SafeMath: addition overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                    if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                        mem[(10 * ceil32(return_data.size)) + 510] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address, mem[(12 * ceil32(return_data.size)) + 510 len 20 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(14 * ceil32(return_data.size)) + 542 len 24 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    else:
                                        mem[(10 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                        mem[(10 * ceil32(return_data.size)) + 510] = 0
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).approve(address rg1, uint256 rg2) with:
                                             gas gas_remaining wei
                                            args 0x60ae616a2155ee3d9a68541ba4544862310933d4, 0, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                        mem[(10 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        mem[(12 * ceil32(return_data.size)) + 474] = 2
                                        mem[(12 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(12 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                        mem[(12 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(12 * ceil32(return_data.size)) + 574] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        mem[(12 * ceil32(return_data.size)) + 606] = 0
                                        mem[(12 * ceil32(return_data.size)) + 638] = 160
                                        mem[(12 * ceil32(return_data.size)) + 734] = 2
                                        idx = 0
                                        s = (12 * ceil32(return_data.size)) + 766
                                        t = (12 * ceil32(return_data.size)) + 506
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(12 * ceil32(return_data.size)) + 670] = this.address
                                        mem[(12 * ceil32(return_data.size)) + 702] = block.timestamp
                                        require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                        call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                             gas gas_remaining wei
                                            args (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1, 0, 160, address(this.address), block.timestamp, 2, mem[(12 * ceil32(return_data.size)) + 766 len 64]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(12 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (13 * ceil32(return_data.size)) + 570
                                        require return_data.size >= 32
                                        _4590 = mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32
                                        require mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                        require (12 * ceil32(return_data.size)) + return_data.size + 570 > (12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 601
                                        _4686 = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                        if mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                            revert with 0, 65
                                        if ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0 or (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307():
                                            revert with 0, 65
                                        mem[64] = (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                        mem[(13 * ceil32(return_data.size)) + 570] = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                        require _4590 + (32 * _4686) + 32 <= return_data.size
                                        mem[(13 * ceil32(return_data.size)) + 602 len 32 * _4686] = mem[(12 * ceil32(return_data.size)) + _4590 + 602 len 32 * _4686]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6414 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_6414] == bool(mem[_6414])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6798 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _6894 = mem[_6798]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _6894
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _6894
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _7182 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_7182] == bool(mem[_7182])
                    else:
                        if address(ext_call.return_data[0]) == address(ext_call.return_data[0]):
                            if ext_call.return_data[50 len 14] <= 0:
                                revert with 0, 
                                            'SpiritswapLibrary: INSUFFICIENT_LIQUIDITY',
                                            mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                            if ext_call.return_data[18 len 14] <= 0:
                                revert with 0, 
                                            'SpiritswapLibrary: INSUFFICIENT_LIQUIDITY',
                                            mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                            if not ext_call.return_data[50 len 14]:
                                if arg3 > ext_call.return_data[18 len 14]:
                                    revert with 0, 'SafeMath: subtraction overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                if ext_call.return_data[18 len 14] < arg3:
                                    revert with 0, 17
                                if not ext_call.return_data[18 len 14] - arg3:
                                    revert with 0, 18
                                if ext_call.return_data[18 len 14] - arg3 and 997 > -1 / ext_call.return_data[18 len 14] - arg3:
                                    revert with 0, 17
                                if not ext_call.return_data[18 len 14] - arg3:
                                    revert with 0, 18
                                if (997 * ext_call.return_data[18 len 14]) - (997 * arg3) / ext_call.return_data[18 len 14] - arg3 != 997:
                                    revert with 0, 'SafeMath: multiplication overflow', mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                                if not (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                    revert with 0, 18
                                if 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3) > -2:
                                    revert with 0, 17
                                if (0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3)) + 1 < 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                    revert with 0, 'SafeMath: addition overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                    mem[(10 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(12 * ceil32(return_data.size)) + 510 len 20 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(14 * ceil32(return_data.size)) + 542 len 24 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(10 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                    mem[(10 * ceil32(return_data.size)) + 510] = 0
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).approve(address rg1, uint256 rg2) with:
                                         gas gas_remaining wei
                                        args 0x60ae616a2155ee3d9a68541ba4544862310933d4, 0, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                    mem[(10 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(12 * ceil32(return_data.size)) + 474] = 2
                                    mem[(12 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                    mem[(12 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(12 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(12 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    mem[(12 * ceil32(return_data.size)) + 606] = 0
                                    mem[(12 * ceil32(return_data.size)) + 638] = 160
                                    mem[(12 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (12 * ceil32(return_data.size)) + 766
                                    t = (12 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(12 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(12 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                    call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                         gas gas_remaining wei
                                        args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1, 0, 160, address(this.address), block.timestamp, 2, mem[(12 * ceil32(return_data.size)) + 766 len 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(12 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (13 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _4595 = mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32
                                    require mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                    require (12 * ceil32(return_data.size)) + return_data.size + 570 > (12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 601
                                    _4691 = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                    if mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                        revert with 0, 65
                                    if ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0 or (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307():
                                        revert with 0, 65
                                    mem[64] = (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                    mem[(13 * ceil32(return_data.size)) + 570] = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                    require _4595 + (32 * _4691) + 32 <= return_data.size
                                    mem[(13 * ceil32(return_data.size)) + 602 len 32 * _4691] = mem[(12 * ceil32(return_data.size)) + _4595 + 602 len 32 * _4691]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _6419 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_6419] == bool(mem[_6419])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _6803 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _6899 = mem[_6803]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _6899
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _6899
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7187 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7187] == bool(mem[_7187])
                            else:
                                if ext_call.return_data[50 len 14] and arg3 > -1 / ext_call.return_data[50 len 14]:
                                    revert with 0, 17
                                if not ext_call.return_data[50 len 14]:
                                    revert with 0, 18
                                if ext_call.return_data[50 len 14] * arg3 / ext_call.return_data[50 len 14] != arg3:
                                    revert with 0, 'SafeMath: multiplication overflow', mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                                if not ext_call.return_data[50 len 14] * arg3:
                                    if arg3 > ext_call.return_data[18 len 14]:
                                        revert with 0, 'SafeMath: subtraction overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                    if ext_call.return_data[18 len 14] < arg3:
                                        revert with 0, 17
                                    if not ext_call.return_data[18 len 14] - arg3:
                                        revert with 0, 18
                                    if ext_call.return_data[18 len 14] - arg3 and 997 > -1 / ext_call.return_data[18 len 14] - arg3:
                                        revert with 0, 17
                                    if not ext_call.return_data[18 len 14] - arg3:
                                        revert with 0, 18
                                    if (997 * ext_call.return_data[18 len 14]) - (997 * arg3) / ext_call.return_data[18 len 14] - arg3 != 997:
                                        revert with 0, 'SafeMath: multiplication overflow', mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                                    if not (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                        revert with 0, 18
                                    if 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3) > -2:
                                        revert with 0, 17
                                    if (0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3)) + 1 < 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                        revert with 0, 'SafeMath: addition overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                    if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                        mem[(10 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address, mem[(12 * ceil32(return_data.size)) + 510 len 20 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(14 * ceil32(return_data.size)) + 542 len 24 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    else:
                                        mem[(10 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                        mem[(10 * ceil32(return_data.size)) + 510] = 0
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).approve(address rg1, uint256 rg2) with:
                                             gas gas_remaining wei
                                            args 0x60ae616a2155ee3d9a68541ba4544862310933d4, 0, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                        mem[(10 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        mem[(12 * ceil32(return_data.size)) + 474] = 2
                                        mem[(12 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(12 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                        mem[(12 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(12 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        mem[(12 * ceil32(return_data.size)) + 606] = 0
                                        mem[(12 * ceil32(return_data.size)) + 638] = 160
                                        mem[(12 * ceil32(return_data.size)) + 734] = 2
                                        idx = 0
                                        s = (12 * ceil32(return_data.size)) + 766
                                        t = (12 * ceil32(return_data.size)) + 506
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(12 * ceil32(return_data.size)) + 670] = this.address
                                        mem[(12 * ceil32(return_data.size)) + 702] = block.timestamp
                                        require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                        call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                             gas gas_remaining wei
                                            args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1, 0, 160, address(this.address), block.timestamp, 2, mem[(12 * ceil32(return_data.size)) + 766 len 64]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(12 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (13 * ceil32(return_data.size)) + 570
                                        require return_data.size >= 32
                                        _4594 = mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32
                                        require mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                        require (12 * ceil32(return_data.size)) + return_data.size + 570 > (12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 601
                                        _4690 = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                        if mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                            revert with 0, 65
                                        if ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0 or (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307():
                                            revert with 0, 65
                                        mem[64] = (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                        mem[(13 * ceil32(return_data.size)) + 570] = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                        require _4594 + (32 * _4690) + 32 <= return_data.size
                                        mem[(13 * ceil32(return_data.size)) + 602 len 32 * _4690] = mem[(12 * ceil32(return_data.size)) + _4594 + 602 len 32 * _4690]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6418 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_6418] == bool(mem[_6418])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6802 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _6898 = mem[_6802]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _6898
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _6898
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _7186 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_7186] == bool(mem[_7186])
                                else:
                                    if ext_call.return_data[50 len 14] * arg3 and 1000 > -1 / ext_call.return_data[50 len 14] * arg3:
                                        revert with 0, 17
                                    if not ext_call.return_data[50 len 14] * arg3:
                                        revert with 0, 18
                                    if 1000 * ext_call.return_data[50 len 14] * arg3 / ext_call.return_data[50 len 14] * arg3 != 1000:
                                        revert with 0, 'SafeMath: multiplication overflow', mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                                    if arg3 > ext_call.return_data[18 len 14]:
                                        revert with 0, 'SafeMath: subtraction overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                    if ext_call.return_data[18 len 14] < arg3:
                                        revert with 0, 17
                                    if not ext_call.return_data[18 len 14] - arg3:
                                        revert with 0, 18
                                    if ext_call.return_data[18 len 14] - arg3 and 997 > -1 / ext_call.return_data[18 len 14] - arg3:
                                        revert with 0, 17
                                    if not ext_call.return_data[18 len 14] - arg3:
                                        revert with 0, 18
                                    if (997 * ext_call.return_data[18 len 14]) - (997 * arg3) / ext_call.return_data[18 len 14] - arg3 != 997:
                                        revert with 0, 'SafeMath: multiplication overflow', mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                                    if not (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                        revert with 0, 18
                                    if 1000 * ext_call.return_data[50 len 14] * arg3 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3) > -2:
                                        revert with 0, 17
                                    if (1000 * ext_call.return_data[50 len 14] * arg3 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3)) + 1 < 1000 * ext_call.return_data[50 len 14] * arg3 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                        revert with 0, 'SafeMath: addition overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                    if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                        mem[(10 * ceil32(return_data.size)) + 510] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address, mem[(12 * ceil32(return_data.size)) + 510 len 20 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(14 * ceil32(return_data.size)) + 542 len 24 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    else:
                                        mem[(10 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                        mem[(10 * ceil32(return_data.size)) + 510] = 0
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).approve(address rg1, uint256 rg2) with:
                                             gas gas_remaining wei
                                            args 0x60ae616a2155ee3d9a68541ba4544862310933d4, 0, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                        mem[(10 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        mem[(12 * ceil32(return_data.size)) + 474] = 2
                                        mem[(12 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(12 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                        mem[(12 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(12 * ceil32(return_data.size)) + 574] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        mem[(12 * ceil32(return_data.size)) + 606] = 0
                                        mem[(12 * ceil32(return_data.size)) + 638] = 160
                                        mem[(12 * ceil32(return_data.size)) + 734] = 2
                                        idx = 0
                                        s = (12 * ceil32(return_data.size)) + 766
                                        t = (12 * ceil32(return_data.size)) + 506
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(12 * ceil32(return_data.size)) + 670] = this.address
                                        mem[(12 * ceil32(return_data.size)) + 702] = block.timestamp
                                        require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                        call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                             gas gas_remaining wei
                                            args (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1, 0, 160, address(this.address), block.timestamp, 2, mem[(12 * ceil32(return_data.size)) + 766 len 64]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(12 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (13 * ceil32(return_data.size)) + 570
                                        require return_data.size >= 32
                                        _4593 = mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32
                                        require mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                        require (12 * ceil32(return_data.size)) + return_data.size + 570 > (12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 601
                                        _4689 = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                        if mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                            revert with 0, 65
                                        if ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0 or (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307():
                                            revert with 0, 65
                                        mem[64] = (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                        mem[(13 * ceil32(return_data.size)) + 570] = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                        require _4593 + (32 * _4689) + 32 <= return_data.size
                                        mem[(13 * ceil32(return_data.size)) + 602 len 32 * _4689] = mem[(12 * ceil32(return_data.size)) + _4593 + 602 len 32 * _4689]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6417 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_6417] == bool(mem[_6417])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6801 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _6897 = mem[_6801]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _6897
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _6897
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _7185 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_7185] == bool(mem[_7185])
                        else:
                            if ext_call.return_data[18 len 14] <= 0:
                                revert with 0, 
                                            'SpiritswapLibrary: INSUFFICIENT_LIQUIDITY',
                                            mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                            if ext_call.return_data[50 len 14] <= 0:
                                revert with 0, 
                                            'SpiritswapLibrary: INSUFFICIENT_LIQUIDITY',
                                            mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                            if not ext_call.return_data[18 len 14]:
                                if arg3 > ext_call.return_data[50 len 14]:
                                    revert with 0, 'SafeMath: subtraction overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                if ext_call.return_data[50 len 14] < arg3:
                                    revert with 0, 17
                                if not ext_call.return_data[50 len 14] - arg3:
                                    revert with 0, 18
                                if ext_call.return_data[50 len 14] - arg3 and 997 > -1 / ext_call.return_data[50 len 14] - arg3:
                                    revert with 0, 17
                                if not ext_call.return_data[50 len 14] - arg3:
                                    revert with 0, 18
                                if (997 * ext_call.return_data[50 len 14]) - (997 * arg3) / ext_call.return_data[50 len 14] - arg3 != 997:
                                    revert with 0, 'SafeMath: multiplication overflow', mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                                if not (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                    revert with 0, 18
                                if 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3) > -2:
                                    revert with 0, 17
                                if (0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3)) + 1 < 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                    revert with 0, 'SafeMath: addition overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                    mem[(10 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(12 * ceil32(return_data.size)) + 510 len 20 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(14 * ceil32(return_data.size)) + 542 len 24 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(10 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                    mem[(10 * ceil32(return_data.size)) + 510] = 0
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).approve(address rg1, uint256 rg2) with:
                                         gas gas_remaining wei
                                        args 0x60ae616a2155ee3d9a68541ba4544862310933d4, 0, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                    mem[(10 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(12 * ceil32(return_data.size)) + 474] = 2
                                    mem[(12 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                    mem[(12 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(12 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(12 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    mem[(12 * ceil32(return_data.size)) + 606] = 0
                                    mem[(12 * ceil32(return_data.size)) + 638] = 160
                                    mem[(12 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (12 * ceil32(return_data.size)) + 766
                                    t = (12 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(12 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(12 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                    call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                         gas gas_remaining wei
                                        args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1, 0, 160, address(this.address), block.timestamp, 2, mem[(12 * ceil32(return_data.size)) + 766 len 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(12 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (13 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _4598 = mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32
                                    require mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                    require (12 * ceil32(return_data.size)) + return_data.size + 570 > (12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 601
                                    _4694 = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                    if mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                        revert with 0, 65
                                    if ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0 or (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307():
                                        revert with 0, 65
                                    mem[64] = (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                    mem[(13 * ceil32(return_data.size)) + 570] = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                    require _4598 + (32 * _4694) + 32 <= return_data.size
                                    mem[(13 * ceil32(return_data.size)) + 602 len 32 * _4694] = mem[(12 * ceil32(return_data.size)) + _4598 + 602 len 32 * _4694]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _6422 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_6422] == bool(mem[_6422])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _6806 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _6902 = mem[_6806]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _6902
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _6902
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7190 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7190] == bool(mem[_7190])
                            else:
                                if ext_call.return_data[18 len 14] and arg3 > -1 / ext_call.return_data[18 len 14]:
                                    revert with 0, 17
                                if not ext_call.return_data[18 len 14]:
                                    revert with 0, 18
                                if ext_call.return_data[18 len 14] * arg3 / ext_call.return_data[18 len 14] != arg3:
                                    revert with 0, 'SafeMath: multiplication overflow', mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                                if not ext_call.return_data[18 len 14] * arg3:
                                    if arg3 > ext_call.return_data[50 len 14]:
                                        revert with 0, 'SafeMath: subtraction overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                    if ext_call.return_data[50 len 14] < arg3:
                                        revert with 0, 17
                                    if not ext_call.return_data[50 len 14] - arg3:
                                        revert with 0, 18
                                    if ext_call.return_data[50 len 14] - arg3 and 997 > -1 / ext_call.return_data[50 len 14] - arg3:
                                        revert with 0, 17
                                    if not ext_call.return_data[50 len 14] - arg3:
                                        revert with 0, 18
                                    if (997 * ext_call.return_data[50 len 14]) - (997 * arg3) / ext_call.return_data[50 len 14] - arg3 != 997:
                                        revert with 0, 'SafeMath: multiplication overflow', mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                                    if not (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                        revert with 0, 18
                                    if 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3) > -2:
                                        revert with 0, 17
                                    if (0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3)) + 1 < 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                        revert with 0, 'SafeMath: addition overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                    if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                        mem[(10 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address, mem[(12 * ceil32(return_data.size)) + 510 len 20 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(14 * ceil32(return_data.size)) + 542 len 24 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    else:
                                        mem[(10 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                        mem[(10 * ceil32(return_data.size)) + 510] = 0
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).approve(address rg1, uint256 rg2) with:
                                             gas gas_remaining wei
                                            args 0x60ae616a2155ee3d9a68541ba4544862310933d4, 0, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                        mem[(10 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        mem[(12 * ceil32(return_data.size)) + 474] = 2
                                        mem[(12 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(12 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                        mem[(12 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(12 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        mem[(12 * ceil32(return_data.size)) + 606] = 0
                                        mem[(12 * ceil32(return_data.size)) + 638] = 160
                                        mem[(12 * ceil32(return_data.size)) + 734] = 2
                                        idx = 0
                                        s = (12 * ceil32(return_data.size)) + 766
                                        t = (12 * ceil32(return_data.size)) + 506
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(12 * ceil32(return_data.size)) + 670] = this.address
                                        mem[(12 * ceil32(return_data.size)) + 702] = block.timestamp
                                        require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                        call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                             gas gas_remaining wei
                                            args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1, 0, 160, address(this.address), block.timestamp, 2, mem[(12 * ceil32(return_data.size)) + 766 len 64]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(12 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (13 * ceil32(return_data.size)) + 570
                                        require return_data.size >= 32
                                        _4597 = mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32
                                        require mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                        require (12 * ceil32(return_data.size)) + return_data.size + 570 > (12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 601
                                        _4693 = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                        if mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                            revert with 0, 65
                                        if ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0 or (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307():
                                            revert with 0, 65
                                        mem[64] = (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                        mem[(13 * ceil32(return_data.size)) + 570] = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                        require _4597 + (32 * _4693) + 32 <= return_data.size
                                        mem[(13 * ceil32(return_data.size)) + 602 len 32 * _4693] = mem[(12 * ceil32(return_data.size)) + _4597 + 602 len 32 * _4693]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6421 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_6421] == bool(mem[_6421])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6805 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _6901 = mem[_6805]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _6901
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _6901
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _7189 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_7189] == bool(mem[_7189])
                                else:
                                    if ext_call.return_data[18 len 14] * arg3 and 1000 > -1 / ext_call.return_data[18 len 14] * arg3:
                                        revert with 0, 17
                                    if not ext_call.return_data[18 len 14] * arg3:
                                        revert with 0, 18
                                    if 1000 * ext_call.return_data[18 len 14] * arg3 / ext_call.return_data[18 len 14] * arg3 != 1000:
                                        revert with 0, 'SafeMath: multiplication overflow', mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                                    if arg3 > ext_call.return_data[50 len 14]:
                                        revert with 0, 'SafeMath: subtraction overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                    if ext_call.return_data[50 len 14] < arg3:
                                        revert with 0, 17
                                    if not ext_call.return_data[50 len 14] - arg3:
                                        revert with 0, 18
                                    if ext_call.return_data[50 len 14] - arg3 and 997 > -1 / ext_call.return_data[50 len 14] - arg3:
                                        revert with 0, 17
                                    if not ext_call.return_data[50 len 14] - arg3:
                                        revert with 0, 18
                                    if (997 * ext_call.return_data[50 len 14]) - (997 * arg3) / ext_call.return_data[50 len 14] - arg3 != 997:
                                        revert with 0, 'SafeMath: multiplication overflow', mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                                    if not (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                        revert with 0, 18
                                    if 1000 * ext_call.return_data[18 len 14] * arg3 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3) > -2:
                                        revert with 0, 17
                                    if (1000 * ext_call.return_data[18 len 14] * arg3 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3)) + 1 < 1000 * ext_call.return_data[18 len 14] * arg3 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                        revert with 0, 'SafeMath: addition overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                    if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                        mem[(10 * ceil32(return_data.size)) + 510] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address, mem[(12 * ceil32(return_data.size)) + 510 len 20 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(14 * ceil32(return_data.size)) + 542 len 24 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    else:
                                        mem[(10 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                        mem[(10 * ceil32(return_data.size)) + 510] = 0
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).approve(address rg1, uint256 rg2) with:
                                             gas gas_remaining wei
                                            args 0x60ae616a2155ee3d9a68541ba4544862310933d4, 0, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                        mem[(10 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        mem[(12 * ceil32(return_data.size)) + 474] = 2
                                        mem[(12 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(12 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                        mem[(12 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(12 * ceil32(return_data.size)) + 574] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        mem[(12 * ceil32(return_data.size)) + 606] = 0
                                        mem[(12 * ceil32(return_data.size)) + 638] = 160
                                        mem[(12 * ceil32(return_data.size)) + 734] = 2
                                        idx = 0
                                        s = (12 * ceil32(return_data.size)) + 766
                                        t = (12 * ceil32(return_data.size)) + 506
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(12 * ceil32(return_data.size)) + 670] = this.address
                                        mem[(12 * ceil32(return_data.size)) + 702] = block.timestamp
                                        require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                        call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                             gas gas_remaining wei
                                            args (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1, 0, 160, address(this.address), block.timestamp, 2, mem[(12 * ceil32(return_data.size)) + 766 len 64]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(12 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (13 * ceil32(return_data.size)) + 570
                                        require return_data.size >= 32
                                        _4596 = mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32
                                        require mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                        require (12 * ceil32(return_data.size)) + return_data.size + 570 > (12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 601
                                        _4692 = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                        if mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                            revert with 0, 65
                                        if ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0 or (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307():
                                            revert with 0, 65
                                        mem[64] = (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                        mem[(13 * ceil32(return_data.size)) + 570] = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                        require _4596 + (32 * _4692) + 32 <= return_data.size
                                        mem[(13 * ceil32(return_data.size)) + 602 len 32 * _4692] = mem[(12 * ceil32(return_data.size)) + _4596 + 602 len 32 * _4692]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6420 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_6420] == bool(mem[_6420])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6804 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _6900 = mem[_6804]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _6900
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _6900
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _7188 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_7188] == bool(mem[_7188])
        else:
            mem[(6 * ceil32(return_data.size)) + 132] = arg2
            require ext_code.size(address(cd[(arg4 + 68)]))
            call address(cd[(arg4 + 68)]).approve(address rg1, uint256 rg2) with:
                 gas gas_remaining wei
                args address(cd[(arg4 + 132)]), arg2
            mem[(6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == bool(ext_call.return_data[0])
            mem[(7 * ceil32(return_data.size)) + 132] = address(cd[(arg4 + 68)])
            mem[(7 * ceil32(return_data.size)) + 164] = address(cd[(arg4 + 36)])
            mem[(7 * ceil32(return_data.size)) + 196] = arg2
            mem[(7 * ceil32(return_data.size)) + 228] = 0
            require ext_code.size(address(cd[(arg4 + 132)]))
            call address(cd[(arg4 + 132)]).liquidationCall(address rg1, address rg2, address rg3, uint256 rg4, bool rg5) with:
                 gas gas_remaining wei
                args address(cd[(arg4 + 100)]), address(cd[(arg4 + 68)]), address(cd[(arg4 + 36)]), arg2, 0
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            mem[(7 * ceil32(return_data.size)) + 100] = this.address
            require ext_code.size(address(cd[(arg4 + 100)]))
            staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if ext_call.return_data[0] < ext_call.return_data[0]:
                revert with 0, 17
            if not address(ext_call.return_data[0]):
                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
            if not address(ext_call.return_data[0]):
                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
            mem[(8 * ceil32(return_data.size)) + 128] = address(ext_call.return_data[0])
            mem[(8 * ceil32(return_data.size)) + 148] = address(ext_call.return_data[0])
            mem[(8 * ceil32(return_data.size)) + 96] = 40
            mem[(8 * ceil32(return_data.size)) + 200] = 0xff00000000000000000000000000000000000000000000000000000000000000
            mem[(8 * ceil32(return_data.size)) + 201] = 0x9ad6c38be94206ca50bb0d90783181662f0cfa10000000000000000000000000
            mem[(8 * ceil32(return_data.size)) + 221] = sha3(address(ext_call.return_data[0]), address(ext_call.return_data[0]))
            mem[(8 * ceil32(return_data.size)) + 253] = 0xbbca9af0511ad1a1da383135cf3a8d2ac620e549ef9f6ae3a4c33c2fed0af91
            mem[(8 * ceil32(return_data.size)) + 168] = 85
            if not address(ext_call.return_data[0]):
                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
            mem[(8 * ceil32(return_data.size)) + 317] = address(ext_call.return_data[0])
            mem[(8 * ceil32(return_data.size)) + 337] = address(ext_call.return_data[0])
            mem[(8 * ceil32(return_data.size)) + 285] = 40
            mem[(8 * ceil32(return_data.size)) + 389] = 0xff00000000000000000000000000000000000000000000000000000000000000
            mem[(8 * ceil32(return_data.size)) + 390] = 0x9ad6c38be94206ca50bb0d90783181662f0cfa10000000000000000000000000
            mem[(8 * ceil32(return_data.size)) + 410] = sha3(address(ext_call.return_data[0]), address(ext_call.return_data[0]))
            mem[(8 * ceil32(return_data.size)) + 442] = 0xbbca9af0511ad1a1da383135cf3a8d2ac620e549ef9f6ae3a4c33c2fed0af91
            mem[(8 * ceil32(return_data.size)) + 357] = 85
            require ext_code.size(address(sha3(0, 11157320132538271434, sha3(address(ext_call.return_data[0]), address(ext_call.return_data[0])), 0xbbca9af0511ad1a1da383135cf3a8d2ac620e549ef9f6ae3a4c33c2fed0af91)))
            staticcall address(sha3(0, 11157320132538271434, sha3(address(ext_call.return_data[0]), address(ext_call.return_data[0])), 0xbbca9af0511ad1a1da383135cf3a8d2ac620e549ef9f6ae3a4c33c2fed0af91)).getReserves() with:
                    gas gas_remaining wei
            mem[(8 * ceil32(return_data.size)) + 474 len 96] = ext_call.return_data[0 len 96]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 96
            require ext_call.return_data[0] == ext_call.return_data[18 len 14]
            require ext_call.return_data[32] == ext_call.return_data[50 len 14]
            require ext_call.return_data[64] == ext_call.return_data[92 len 4]
            if arg2 <= 0:
                revert with 0, 
                            'SpiritswapLibrary: INSUFFICIENT_OUTPUT_AMOUNT',
                            mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
            if address(ext_call.return_data[0]) < address(ext_call.return_data[0]):
                if address(ext_call.return_data[0]) < address(ext_call.return_data[0]):
                    if address(ext_call.return_data[0]) < address(ext_call.return_data[0]):
                        if address(ext_call.return_data[0]) == address(ext_call.return_data[0]):
                            if ext_call.return_data[50 len 14] <= 0:
                                revert with 0, 
                                            'SpiritswapLibrary: INSUFFICIENT_LIQUIDITY',
                                            mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                            if ext_call.return_data[18 len 14] <= 0:
                                revert with 0, 
                                            'SpiritswapLibrary: INSUFFICIENT_LIQUIDITY',
                                            mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                            if not ext_call.return_data[50 len 14]:
                                if arg2 > ext_call.return_data[18 len 14]:
                                    revert with 0, 'SafeMath: subtraction overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                if ext_call.return_data[18 len 14] < arg2:
                                    revert with 0, 17
                                if not ext_call.return_data[18 len 14] - arg2:
                                    revert with 0, 18
                                if ext_call.return_data[18 len 14] - arg2 and 997 > -1 / ext_call.return_data[18 len 14] - arg2:
                                    revert with 0, 17
                                if not ext_call.return_data[18 len 14] - arg2:
                                    revert with 0, 18
                                if (997 * ext_call.return_data[18 len 14]) - (997 * arg2) / ext_call.return_data[18 len 14] - arg2 != 997:
                                    revert with 0, 'SafeMath: multiplication overflow', mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                                if not (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                    revert with 0, 18
                                if 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2) > -2:
                                    revert with 0, 17
                                if (0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2)) + 1 < 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                    revert with 0, 'SafeMath: addition overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                    mem[(10 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(12 * ceil32(return_data.size)) + 510 len 20 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(14 * ceil32(return_data.size)) + 542 len 24 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(10 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                    mem[(10 * ceil32(return_data.size)) + 510] = 0
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).approve(address rg1, uint256 rg2) with:
                                         gas gas_remaining wei
                                        args 0x60ae616a2155ee3d9a68541ba4544862310933d4, 0, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                    mem[(10 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(12 * ceil32(return_data.size)) + 474] = 2
                                    mem[(12 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                    mem[(12 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(12 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(12 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    mem[(12 * ceil32(return_data.size)) + 606] = 0
                                    mem[(12 * ceil32(return_data.size)) + 638] = 160
                                    mem[(12 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (12 * ceil32(return_data.size)) + 766
                                    t = (12 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(12 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(12 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                    call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                         gas gas_remaining wei
                                        args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1, 0, 160, address(this.address), block.timestamp, 2, mem[(12 * ceil32(return_data.size)) + 766 len 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(12 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (13 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _4601 = mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32
                                    require mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                    require (12 * ceil32(return_data.size)) + return_data.size + 570 > (12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 601
                                    _4697 = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                    if mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                        revert with 0, 65
                                    if ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0 or (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307():
                                        revert with 0, 65
                                    mem[64] = (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                    mem[(13 * ceil32(return_data.size)) + 570] = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                    require _4601 + (32 * _4697) + 32 <= return_data.size
                                    mem[(13 * ceil32(return_data.size)) + 602 len 32 * _4697] = mem[(12 * ceil32(return_data.size)) + _4601 + 602 len 32 * _4697]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _6425 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_6425] == bool(mem[_6425])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _6809 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _6905 = mem[_6809]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _6905
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _6905
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7193 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7193] == bool(mem[_7193])
                            else:
                                if ext_call.return_data[50 len 14] and arg2 > -1 / ext_call.return_data[50 len 14]:
                                    revert with 0, 17
                                if not ext_call.return_data[50 len 14]:
                                    revert with 0, 18
                                if ext_call.return_data[50 len 14] * arg2 / ext_call.return_data[50 len 14] != arg2:
                                    revert with 0, 'SafeMath: multiplication overflow', mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                                if not ext_call.return_data[50 len 14] * arg2:
                                    if arg2 > ext_call.return_data[18 len 14]:
                                        revert with 0, 'SafeMath: subtraction overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                    if ext_call.return_data[18 len 14] < arg2:
                                        revert with 0, 17
                                    if not ext_call.return_data[18 len 14] - arg2:
                                        revert with 0, 18
                                    if ext_call.return_data[18 len 14] - arg2 and 997 > -1 / ext_call.return_data[18 len 14] - arg2:
                                        revert with 0, 17
                                    if not ext_call.return_data[18 len 14] - arg2:
                                        revert with 0, 18
                                    if (997 * ext_call.return_data[18 len 14]) - (997 * arg2) / ext_call.return_data[18 len 14] - arg2 != 997:
                                        revert with 0, 'SafeMath: multiplication overflow', mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                                    if not (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                        revert with 0, 18
                                    if 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2) > -2:
                                        revert with 0, 17
                                    if (0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2)) + 1 < 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                        revert with 0, 'SafeMath: addition overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                    if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                        mem[(10 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address, mem[(12 * ceil32(return_data.size)) + 510 len 20 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(14 * ceil32(return_data.size)) + 542 len 24 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    else:
                                        mem[(10 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                        mem[(10 * ceil32(return_data.size)) + 510] = 0
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).approve(address rg1, uint256 rg2) with:
                                             gas gas_remaining wei
                                            args 0x60ae616a2155ee3d9a68541ba4544862310933d4, 0, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                        mem[(10 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        mem[(12 * ceil32(return_data.size)) + 474] = 2
                                        mem[(12 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(12 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                        mem[(12 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(12 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        mem[(12 * ceil32(return_data.size)) + 606] = 0
                                        mem[(12 * ceil32(return_data.size)) + 638] = 160
                                        mem[(12 * ceil32(return_data.size)) + 734] = 2
                                        idx = 0
                                        s = (12 * ceil32(return_data.size)) + 766
                                        t = (12 * ceil32(return_data.size)) + 506
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(12 * ceil32(return_data.size)) + 670] = this.address
                                        mem[(12 * ceil32(return_data.size)) + 702] = block.timestamp
                                        require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                        call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                             gas gas_remaining wei
                                            args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1, 0, 160, address(this.address), block.timestamp, 2, mem[(12 * ceil32(return_data.size)) + 766 len 64]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(12 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (13 * ceil32(return_data.size)) + 570
                                        require return_data.size >= 32
                                        _4600 = mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32
                                        require mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                        require (12 * ceil32(return_data.size)) + return_data.size + 570 > (12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 601
                                        _4696 = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                        if mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                            revert with 0, 65
                                        if ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0 or (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307():
                                            revert with 0, 65
                                        mem[64] = (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                        mem[(13 * ceil32(return_data.size)) + 570] = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                        require _4600 + (32 * _4696) + 32 <= return_data.size
                                        mem[(13 * ceil32(return_data.size)) + 602 len 32 * _4696] = mem[(12 * ceil32(return_data.size)) + _4600 + 602 len 32 * _4696]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6424 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_6424] == bool(mem[_6424])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6808 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _6904 = mem[_6808]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _6904
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _6904
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _7192 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_7192] == bool(mem[_7192])
                                else:
                                    if ext_call.return_data[50 len 14] * arg2 and 1000 > -1 / ext_call.return_data[50 len 14] * arg2:
                                        revert with 0, 17
                                    if not ext_call.return_data[50 len 14] * arg2:
                                        revert with 0, 18
                                    if 1000 * ext_call.return_data[50 len 14] * arg2 / ext_call.return_data[50 len 14] * arg2 != 1000:
                                        revert with 0, 'SafeMath: multiplication overflow', mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                                    if arg2 > ext_call.return_data[18 len 14]:
                                        revert with 0, 'SafeMath: subtraction overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                    if ext_call.return_data[18 len 14] < arg2:
                                        revert with 0, 17
                                    if not ext_call.return_data[18 len 14] - arg2:
                                        revert with 0, 18
                                    if ext_call.return_data[18 len 14] - arg2 and 997 > -1 / ext_call.return_data[18 len 14] - arg2:
                                        revert with 0, 17
                                    if not ext_call.return_data[18 len 14] - arg2:
                                        revert with 0, 18
                                    if (997 * ext_call.return_data[18 len 14]) - (997 * arg2) / ext_call.return_data[18 len 14] - arg2 != 997:
                                        revert with 0, 'SafeMath: multiplication overflow', mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                                    if not (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                        revert with 0, 18
                                    if 1000 * ext_call.return_data[50 len 14] * arg2 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2) > -2:
                                        revert with 0, 17
                                    if (1000 * ext_call.return_data[50 len 14] * arg2 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2)) + 1 < 1000 * ext_call.return_data[50 len 14] * arg2 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                        revert with 0, 'SafeMath: addition overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                    if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                        mem[(10 * ceil32(return_data.size)) + 510] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address, mem[(12 * ceil32(return_data.size)) + 510 len 20 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(14 * ceil32(return_data.size)) + 542 len 24 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    else:
                                        mem[(10 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                        mem[(10 * ceil32(return_data.size)) + 510] = 0
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).approve(address rg1, uint256 rg2) with:
                                             gas gas_remaining wei
                                            args 0x60ae616a2155ee3d9a68541ba4544862310933d4, 0, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                        mem[(10 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        mem[(12 * ceil32(return_data.size)) + 474] = 2
                                        mem[(12 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(12 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                        mem[(12 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(12 * ceil32(return_data.size)) + 574] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        mem[(12 * ceil32(return_data.size)) + 606] = 0
                                        mem[(12 * ceil32(return_data.size)) + 638] = 160
                                        mem[(12 * ceil32(return_data.size)) + 734] = 2
                                        idx = 0
                                        s = (12 * ceil32(return_data.size)) + 766
                                        t = (12 * ceil32(return_data.size)) + 506
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(12 * ceil32(return_data.size)) + 670] = this.address
                                        mem[(12 * ceil32(return_data.size)) + 702] = block.timestamp
                                        require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                        call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                             gas gas_remaining wei
                                            args (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1, 0, 160, address(this.address), block.timestamp, 2, mem[(12 * ceil32(return_data.size)) + 766 len 64]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(12 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (13 * ceil32(return_data.size)) + 570
                                        require return_data.size >= 32
                                        _4599 = mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32
                                        require mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                        require (12 * ceil32(return_data.size)) + return_data.size + 570 > (12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 601
                                        _4695 = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                        if mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                            revert with 0, 65
                                        if ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0 or (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307():
                                            revert with 0, 65
                                        mem[64] = (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                        mem[(13 * ceil32(return_data.size)) + 570] = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                        require _4599 + (32 * _4695) + 32 <= return_data.size
                                        mem[(13 * ceil32(return_data.size)) + 602 len 32 * _4695] = mem[(12 * ceil32(return_data.size)) + _4599 + 602 len 32 * _4695]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6423 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_6423] == bool(mem[_6423])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6807 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _6903 = mem[_6807]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _6903
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _6903
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _7191 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_7191] == bool(mem[_7191])
                        else:
                            if ext_call.return_data[18 len 14] <= 0:
                                revert with 0, 
                                            'SpiritswapLibrary: INSUFFICIENT_LIQUIDITY',
                                            mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                            if ext_call.return_data[50 len 14] <= 0:
                                revert with 0, 
                                            'SpiritswapLibrary: INSUFFICIENT_LIQUIDITY',
                                            mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                            if not ext_call.return_data[18 len 14]:
                                if arg2 > ext_call.return_data[50 len 14]:
                                    revert with 0, 'SafeMath: subtraction overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                if ext_call.return_data[50 len 14] < arg2:
                                    revert with 0, 17
                                if not ext_call.return_data[50 len 14] - arg2:
                                    revert with 0, 18
                                if ext_call.return_data[50 len 14] - arg2 and 997 > -1 / ext_call.return_data[50 len 14] - arg2:
                                    revert with 0, 17
                                if not ext_call.return_data[50 len 14] - arg2:
                                    revert with 0, 18
                                if (997 * ext_call.return_data[50 len 14]) - (997 * arg2) / ext_call.return_data[50 len 14] - arg2 != 997:
                                    revert with 0, 'SafeMath: multiplication overflow', mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                                if not (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                    revert with 0, 18
                                if 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2) > -2:
                                    revert with 0, 17
                                if (0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2)) + 1 < 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                    revert with 0, 'SafeMath: addition overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                    mem[(10 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(12 * ceil32(return_data.size)) + 510 len 20 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(14 * ceil32(return_data.size)) + 542 len 24 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(10 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                    mem[(10 * ceil32(return_data.size)) + 510] = 0
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).approve(address rg1, uint256 rg2) with:
                                         gas gas_remaining wei
                                        args 0x60ae616a2155ee3d9a68541ba4544862310933d4, 0, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                    mem[(10 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(12 * ceil32(return_data.size)) + 474] = 2
                                    mem[(12 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                    mem[(12 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(12 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(12 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    mem[(12 * ceil32(return_data.size)) + 606] = 0
                                    mem[(12 * ceil32(return_data.size)) + 638] = 160
                                    mem[(12 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (12 * ceil32(return_data.size)) + 766
                                    t = (12 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(12 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(12 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                    call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                         gas gas_remaining wei
                                        args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1, 0, 160, address(this.address), block.timestamp, 2, mem[(12 * ceil32(return_data.size)) + 766 len 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(12 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (13 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _4604 = mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32
                                    require mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                    require (12 * ceil32(return_data.size)) + return_data.size + 570 > (12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 601
                                    _4700 = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                    if mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                        revert with 0, 65
                                    if ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0 or (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307():
                                        revert with 0, 65
                                    mem[64] = (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                    mem[(13 * ceil32(return_data.size)) + 570] = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                    require _4604 + (32 * _4700) + 32 <= return_data.size
                                    mem[(13 * ceil32(return_data.size)) + 602 len 32 * _4700] = mem[(12 * ceil32(return_data.size)) + _4604 + 602 len 32 * _4700]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _6428 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_6428] == bool(mem[_6428])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _6812 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _6908 = mem[_6812]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _6908
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _6908
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7196 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7196] == bool(mem[_7196])
                            else:
                                if ext_call.return_data[18 len 14] and arg2 > -1 / ext_call.return_data[18 len 14]:
                                    revert with 0, 17
                                if not ext_call.return_data[18 len 14]:
                                    revert with 0, 18
                                if ext_call.return_data[18 len 14] * arg2 / ext_call.return_data[18 len 14] != arg2:
                                    revert with 0, 'SafeMath: multiplication overflow', mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                                if not ext_call.return_data[18 len 14] * arg2:
                                    if arg2 > ext_call.return_data[50 len 14]:
                                        revert with 0, 'SafeMath: subtraction overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                    if ext_call.return_data[50 len 14] < arg2:
                                        revert with 0, 17
                                    if not ext_call.return_data[50 len 14] - arg2:
                                        revert with 0, 18
                                    if ext_call.return_data[50 len 14] - arg2 and 997 > -1 / ext_call.return_data[50 len 14] - arg2:
                                        revert with 0, 17
                                    if not ext_call.return_data[50 len 14] - arg2:
                                        revert with 0, 18
                                    if (997 * ext_call.return_data[50 len 14]) - (997 * arg2) / ext_call.return_data[50 len 14] - arg2 != 997:
                                        revert with 0, 'SafeMath: multiplication overflow', mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                                    if not (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                        revert with 0, 18
                                    if 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2) > -2:
                                        revert with 0, 17
                                    if (0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2)) + 1 < 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                        revert with 0, 'SafeMath: addition overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                    if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                        mem[(10 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address, mem[(12 * ceil32(return_data.size)) + 510 len 20 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(14 * ceil32(return_data.size)) + 542 len 24 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    else:
                                        mem[(10 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                        mem[(10 * ceil32(return_data.size)) + 510] = 0
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).approve(address rg1, uint256 rg2) with:
                                             gas gas_remaining wei
                                            args 0x60ae616a2155ee3d9a68541ba4544862310933d4, 0, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                        mem[(10 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        mem[(12 * ceil32(return_data.size)) + 474] = 2
                                        mem[(12 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(12 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                        mem[(12 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(12 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        mem[(12 * ceil32(return_data.size)) + 606] = 0
                                        mem[(12 * ceil32(return_data.size)) + 638] = 160
                                        mem[(12 * ceil32(return_data.size)) + 734] = 2
                                        idx = 0
                                        s = (12 * ceil32(return_data.size)) + 766
                                        t = (12 * ceil32(return_data.size)) + 506
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(12 * ceil32(return_data.size)) + 670] = this.address
                                        mem[(12 * ceil32(return_data.size)) + 702] = block.timestamp
                                        require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                        call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                             gas gas_remaining wei
                                            args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1, 0, 160, address(this.address), block.timestamp, 2, mem[(12 * ceil32(return_data.size)) + 766 len 64]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(12 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (13 * ceil32(return_data.size)) + 570
                                        require return_data.size >= 32
                                        _4603 = mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32
                                        require mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                        require (12 * ceil32(return_data.size)) + return_data.size + 570 > (12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 601
                                        _4699 = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                        if mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                            revert with 0, 65
                                        if ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0 or (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307():
                                            revert with 0, 65
                                        mem[64] = (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                        mem[(13 * ceil32(return_data.size)) + 570] = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                        require _4603 + (32 * _4699) + 32 <= return_data.size
                                        mem[(13 * ceil32(return_data.size)) + 602 len 32 * _4699] = mem[(12 * ceil32(return_data.size)) + _4603 + 602 len 32 * _4699]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6427 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_6427] == bool(mem[_6427])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6811 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _6907 = mem[_6811]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _6907
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _6907
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _7195 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_7195] == bool(mem[_7195])
                                else:
                                    if ext_call.return_data[18 len 14] * arg2 and 1000 > -1 / ext_call.return_data[18 len 14] * arg2:
                                        revert with 0, 17
                                    if not ext_call.return_data[18 len 14] * arg2:
                                        revert with 0, 18
                                    if 1000 * ext_call.return_data[18 len 14] * arg2 / ext_call.return_data[18 len 14] * arg2 != 1000:
                                        revert with 0, 'SafeMath: multiplication overflow', mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                                    if arg2 > ext_call.return_data[50 len 14]:
                                        revert with 0, 'SafeMath: subtraction overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                    if ext_call.return_data[50 len 14] < arg2:
                                        revert with 0, 17
                                    if not ext_call.return_data[50 len 14] - arg2:
                                        revert with 0, 18
                                    if ext_call.return_data[50 len 14] - arg2 and 997 > -1 / ext_call.return_data[50 len 14] - arg2:
                                        revert with 0, 17
                                    if not ext_call.return_data[50 len 14] - arg2:
                                        revert with 0, 18
                                    if (997 * ext_call.return_data[50 len 14]) - (997 * arg2) / ext_call.return_data[50 len 14] - arg2 != 997:
                                        revert with 0, 'SafeMath: multiplication overflow', mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                                    if not (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                        revert with 0, 18
                                    if 1000 * ext_call.return_data[18 len 14] * arg2 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2) > -2:
                                        revert with 0, 17
                                    if (1000 * ext_call.return_data[18 len 14] * arg2 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2)) + 1 < 1000 * ext_call.return_data[18 len 14] * arg2 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                        revert with 0, 'SafeMath: addition overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                    if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                        mem[(10 * ceil32(return_data.size)) + 510] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address, mem[(12 * ceil32(return_data.size)) + 510 len 20 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(14 * ceil32(return_data.size)) + 542 len 24 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    else:
                                        mem[(10 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                        mem[(10 * ceil32(return_data.size)) + 510] = 0
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).approve(address rg1, uint256 rg2) with:
                                             gas gas_remaining wei
                                            args 0x60ae616a2155ee3d9a68541ba4544862310933d4, 0, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                        mem[(10 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        mem[(12 * ceil32(return_data.size)) + 474] = 2
                                        mem[(12 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(12 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                        mem[(12 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(12 * ceil32(return_data.size)) + 574] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        mem[(12 * ceil32(return_data.size)) + 606] = 0
                                        mem[(12 * ceil32(return_data.size)) + 638] = 160
                                        mem[(12 * ceil32(return_data.size)) + 734] = 2
                                        idx = 0
                                        s = (12 * ceil32(return_data.size)) + 766
                                        t = (12 * ceil32(return_data.size)) + 506
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(12 * ceil32(return_data.size)) + 670] = this.address
                                        mem[(12 * ceil32(return_data.size)) + 702] = block.timestamp
                                        require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                        call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                             gas gas_remaining wei
                                            args (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1, 0, 160, address(this.address), block.timestamp, 2, mem[(12 * ceil32(return_data.size)) + 766 len 64]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(12 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (13 * ceil32(return_data.size)) + 570
                                        require return_data.size >= 32
                                        _4602 = mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32
                                        require mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                        require (12 * ceil32(return_data.size)) + return_data.size + 570 > (12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 601
                                        _4698 = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                        if mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                            revert with 0, 65
                                        if ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0 or (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307():
                                            revert with 0, 65
                                        mem[64] = (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                        mem[(13 * ceil32(return_data.size)) + 570] = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                        require _4602 + (32 * _4698) + 32 <= return_data.size
                                        mem[(13 * ceil32(return_data.size)) + 602 len 32 * _4698] = mem[(12 * ceil32(return_data.size)) + _4602 + 602 len 32 * _4698]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6426 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_6426] == bool(mem[_6426])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6810 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _6906 = mem[_6810]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _6906
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _6906
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _7194 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_7194] == bool(mem[_7194])
                    else:
                        if address(ext_call.return_data[0]) == address(ext_call.return_data[0]):
                            if ext_call.return_data[50 len 14] <= 0:
                                revert with 0, 
                                            'SpiritswapLibrary: INSUFFICIENT_LIQUIDITY',
                                            mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                            if ext_call.return_data[18 len 14] <= 0:
                                revert with 0, 
                                            'SpiritswapLibrary: INSUFFICIENT_LIQUIDITY',
                                            mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                            if not ext_call.return_data[50 len 14]:
                                if arg2 > ext_call.return_data[18 len 14]:
                                    revert with 0, 'SafeMath: subtraction overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                if ext_call.return_data[18 len 14] < arg2:
                                    revert with 0, 17
                                if not ext_call.return_data[18 len 14] - arg2:
                                    revert with 0, 18
                                if ext_call.return_data[18 len 14] - arg2 and 997 > -1 / ext_call.return_data[18 len 14] - arg2:
                                    revert with 0, 17
                                if not ext_call.return_data[18 len 14] - arg2:
                                    revert with 0, 18
                                if (997 * ext_call.return_data[18 len 14]) - (997 * arg2) / ext_call.return_data[18 len 14] - arg2 != 997:
                                    revert with 0, 'SafeMath: multiplication overflow', mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                                if not (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                    revert with 0, 18
                                if 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2) > -2:
                                    revert with 0, 17
                                if (0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2)) + 1 < 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                    revert with 0, 'SafeMath: addition overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                    mem[(10 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(12 * ceil32(return_data.size)) + 510 len 20 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(14 * ceil32(return_data.size)) + 542 len 24 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(10 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                    mem[(10 * ceil32(return_data.size)) + 510] = 0
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).approve(address rg1, uint256 rg2) with:
                                         gas gas_remaining wei
                                        args 0x60ae616a2155ee3d9a68541ba4544862310933d4, 0, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                    mem[(10 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(12 * ceil32(return_data.size)) + 474] = 2
                                    mem[(12 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                    mem[(12 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(12 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(12 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    mem[(12 * ceil32(return_data.size)) + 606] = 0
                                    mem[(12 * ceil32(return_data.size)) + 638] = 160
                                    mem[(12 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (12 * ceil32(return_data.size)) + 766
                                    t = (12 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(12 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(12 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                    call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                         gas gas_remaining wei
                                        args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1, 0, 160, address(this.address), block.timestamp, 2, mem[(12 * ceil32(return_data.size)) + 766 len 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(12 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (13 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _4607 = mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32
                                    require mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                    require (12 * ceil32(return_data.size)) + return_data.size + 570 > (12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 601
                                    _4703 = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                    if mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                        revert with 0, 65
                                    if ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0 or (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307():
                                        revert with 0, 65
                                    mem[64] = (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                    mem[(13 * ceil32(return_data.size)) + 570] = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                    require _4607 + (32 * _4703) + 32 <= return_data.size
                                    mem[(13 * ceil32(return_data.size)) + 602 len 32 * _4703] = mem[(12 * ceil32(return_data.size)) + _4607 + 602 len 32 * _4703]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _6431 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_6431] == bool(mem[_6431])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _6815 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _6911 = mem[_6815]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _6911
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _6911
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7199 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7199] == bool(mem[_7199])
                            else:
                                if ext_call.return_data[50 len 14] and arg2 > -1 / ext_call.return_data[50 len 14]:
                                    revert with 0, 17
                                if not ext_call.return_data[50 len 14]:
                                    revert with 0, 18
                                if ext_call.return_data[50 len 14] * arg2 / ext_call.return_data[50 len 14] != arg2:
                                    revert with 0, 'SafeMath: multiplication overflow', mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                                if not ext_call.return_data[50 len 14] * arg2:
                                    if arg2 > ext_call.return_data[18 len 14]:
                                        revert with 0, 'SafeMath: subtraction overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                    if ext_call.return_data[18 len 14] < arg2:
                                        revert with 0, 17
                                    if not ext_call.return_data[18 len 14] - arg2:
                                        revert with 0, 18
                                    if ext_call.return_data[18 len 14] - arg2 and 997 > -1 / ext_call.return_data[18 len 14] - arg2:
                                        revert with 0, 17
                                    if not ext_call.return_data[18 len 14] - arg2:
                                        revert with 0, 18
                                    if (997 * ext_call.return_data[18 len 14]) - (997 * arg2) / ext_call.return_data[18 len 14] - arg2 != 997:
                                        revert with 0, 'SafeMath: multiplication overflow', mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                                    if not (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                        revert with 0, 18
                                    if 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2) > -2:
                                        revert with 0, 17
                                    if (0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2)) + 1 < 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                        revert with 0, 'SafeMath: addition overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                    if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                        mem[(10 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address, mem[(12 * ceil32(return_data.size)) + 510 len 20 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(14 * ceil32(return_data.size)) + 542 len 24 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    else:
                                        mem[(10 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                        mem[(10 * ceil32(return_data.size)) + 510] = 0
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).approve(address rg1, uint256 rg2) with:
                                             gas gas_remaining wei
                                            args 0x60ae616a2155ee3d9a68541ba4544862310933d4, 0, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                        mem[(10 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        mem[(12 * ceil32(return_data.size)) + 474] = 2
                                        mem[(12 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(12 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                        mem[(12 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(12 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        mem[(12 * ceil32(return_data.size)) + 606] = 0
                                        mem[(12 * ceil32(return_data.size)) + 638] = 160
                                        mem[(12 * ceil32(return_data.size)) + 734] = 2
                                        idx = 0
                                        s = (12 * ceil32(return_data.size)) + 766
                                        t = (12 * ceil32(return_data.size)) + 506
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(12 * ceil32(return_data.size)) + 670] = this.address
                                        mem[(12 * ceil32(return_data.size)) + 702] = block.timestamp
                                        require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                        call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                             gas gas_remaining wei
                                            args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1, 0, 160, address(this.address), block.timestamp, 2, mem[(12 * ceil32(return_data.size)) + 766 len 64]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(12 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (13 * ceil32(return_data.size)) + 570
                                        require return_data.size >= 32
                                        _4606 = mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32
                                        require mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                        require (12 * ceil32(return_data.size)) + return_data.size + 570 > (12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 601
                                        _4702 = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                        if mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                            revert with 0, 65
                                        if ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0 or (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307():
                                            revert with 0, 65
                                        mem[64] = (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                        mem[(13 * ceil32(return_data.size)) + 570] = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                        require _4606 + (32 * _4702) + 32 <= return_data.size
                                        mem[(13 * ceil32(return_data.size)) + 602 len 32 * _4702] = mem[(12 * ceil32(return_data.size)) + _4606 + 602 len 32 * _4702]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6430 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_6430] == bool(mem[_6430])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6814 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _6910 = mem[_6814]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _6910
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _6910
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _7198 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_7198] == bool(mem[_7198])
                                else:
                                    if ext_call.return_data[50 len 14] * arg2 and 1000 > -1 / ext_call.return_data[50 len 14] * arg2:
                                        revert with 0, 17
                                    if not ext_call.return_data[50 len 14] * arg2:
                                        revert with 0, 18
                                    if 1000 * ext_call.return_data[50 len 14] * arg2 / ext_call.return_data[50 len 14] * arg2 != 1000:
                                        revert with 0, 'SafeMath: multiplication overflow', mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                                    if arg2 > ext_call.return_data[18 len 14]:
                                        revert with 0, 'SafeMath: subtraction overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                    if ext_call.return_data[18 len 14] < arg2:
                                        revert with 0, 17
                                    if not ext_call.return_data[18 len 14] - arg2:
                                        revert with 0, 18
                                    if ext_call.return_data[18 len 14] - arg2 and 997 > -1 / ext_call.return_data[18 len 14] - arg2:
                                        revert with 0, 17
                                    if not ext_call.return_data[18 len 14] - arg2:
                                        revert with 0, 18
                                    if (997 * ext_call.return_data[18 len 14]) - (997 * arg2) / ext_call.return_data[18 len 14] - arg2 != 997:
                                        revert with 0, 'SafeMath: multiplication overflow', mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                                    if not (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                        revert with 0, 18
                                    if 1000 * ext_call.return_data[50 len 14] * arg2 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2) > -2:
                                        revert with 0, 17
                                    if (1000 * ext_call.return_data[50 len 14] * arg2 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2)) + 1 < 1000 * ext_call.return_data[50 len 14] * arg2 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                        revert with 0, 'SafeMath: addition overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                    if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                        mem[(10 * ceil32(return_data.size)) + 510] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address, mem[(12 * ceil32(return_data.size)) + 510 len 20 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(14 * ceil32(return_data.size)) + 542 len 24 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    else:
                                        mem[(10 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                        mem[(10 * ceil32(return_data.size)) + 510] = 0
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).approve(address rg1, uint256 rg2) with:
                                             gas gas_remaining wei
                                            args 0x60ae616a2155ee3d9a68541ba4544862310933d4, 0, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                        mem[(10 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        mem[(12 * ceil32(return_data.size)) + 474] = 2
                                        mem[(12 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(12 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                        mem[(12 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(12 * ceil32(return_data.size)) + 574] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        mem[(12 * ceil32(return_data.size)) + 606] = 0
                                        mem[(12 * ceil32(return_data.size)) + 638] = 160
                                        mem[(12 * ceil32(return_data.size)) + 734] = 2
                                        idx = 0
                                        s = (12 * ceil32(return_data.size)) + 766
                                        t = (12 * ceil32(return_data.size)) + 506
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(12 * ceil32(return_data.size)) + 670] = this.address
                                        mem[(12 * ceil32(return_data.size)) + 702] = block.timestamp
                                        require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                        call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                             gas gas_remaining wei
                                            args (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1, 0, 160, address(this.address), block.timestamp, 2, mem[(12 * ceil32(return_data.size)) + 766 len 64]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(12 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (13 * ceil32(return_data.size)) + 570
                                        require return_data.size >= 32
                                        _4605 = mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32
                                        require mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                        require (12 * ceil32(return_data.size)) + return_data.size + 570 > (12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 601
                                        _4701 = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                        if mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                            revert with 0, 65
                                        if ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0 or (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307():
                                            revert with 0, 65
                                        mem[64] = (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                        mem[(13 * ceil32(return_data.size)) + 570] = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                        require _4605 + (32 * _4701) + 32 <= return_data.size
                                        mem[(13 * ceil32(return_data.size)) + 602 len 32 * _4701] = mem[(12 * ceil32(return_data.size)) + _4605 + 602 len 32 * _4701]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6429 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_6429] == bool(mem[_6429])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6813 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _6909 = mem[_6813]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _6909
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _6909
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _7197 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_7197] == bool(mem[_7197])
                        else:
                            if ext_call.return_data[18 len 14] <= 0:
                                revert with 0, 
                                            'SpiritswapLibrary: INSUFFICIENT_LIQUIDITY',
                                            mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                            if ext_call.return_data[50 len 14] <= 0:
                                revert with 0, 
                                            'SpiritswapLibrary: INSUFFICIENT_LIQUIDITY',
                                            mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                            if not ext_call.return_data[18 len 14]:
                                if arg2 > ext_call.return_data[50 len 14]:
                                    revert with 0, 'SafeMath: subtraction overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                if ext_call.return_data[50 len 14] < arg2:
                                    revert with 0, 17
                                if not ext_call.return_data[50 len 14] - arg2:
                                    revert with 0, 18
                                if ext_call.return_data[50 len 14] - arg2 and 997 > -1 / ext_call.return_data[50 len 14] - arg2:
                                    revert with 0, 17
                                if not ext_call.return_data[50 len 14] - arg2:
                                    revert with 0, 18
                                if (997 * ext_call.return_data[50 len 14]) - (997 * arg2) / ext_call.return_data[50 len 14] - arg2 != 997:
                                    revert with 0, 'SafeMath: multiplication overflow', mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                                if not (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                    revert with 0, 18
                                if 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2) > -2:
                                    revert with 0, 17
                                if (0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2)) + 1 < 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                    revert with 0, 'SafeMath: addition overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                    mem[(10 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(12 * ceil32(return_data.size)) + 510 len 20 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(14 * ceil32(return_data.size)) + 542 len 24 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(10 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                    mem[(10 * ceil32(return_data.size)) + 510] = 0
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).approve(address rg1, uint256 rg2) with:
                                         gas gas_remaining wei
                                        args 0x60ae616a2155ee3d9a68541ba4544862310933d4, 0, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                    mem[(10 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(12 * ceil32(return_data.size)) + 474] = 2
                                    mem[(12 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                    mem[(12 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(12 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(12 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    mem[(12 * ceil32(return_data.size)) + 606] = 0
                                    mem[(12 * ceil32(return_data.size)) + 638] = 160
                                    mem[(12 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (12 * ceil32(return_data.size)) + 766
                                    t = (12 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(12 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(12 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                    call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                         gas gas_remaining wei
                                        args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1, 0, 160, address(this.address), block.timestamp, 2, mem[(12 * ceil32(return_data.size)) + 766 len 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(12 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (13 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _4610 = mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32
                                    require mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                    require (12 * ceil32(return_data.size)) + return_data.size + 570 > (12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 601
                                    _4706 = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                    if mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                        revert with 0, 65
                                    if ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0 or (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307():
                                        revert with 0, 65
                                    mem[64] = (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                    mem[(13 * ceil32(return_data.size)) + 570] = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                    require _4610 + (32 * _4706) + 32 <= return_data.size
                                    mem[(13 * ceil32(return_data.size)) + 602 len 32 * _4706] = mem[(12 * ceil32(return_data.size)) + _4610 + 602 len 32 * _4706]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _6434 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_6434] == bool(mem[_6434])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _6818 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _6914 = mem[_6818]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _6914
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _6914
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7202 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7202] == bool(mem[_7202])
                            else:
                                if ext_call.return_data[18 len 14] and arg2 > -1 / ext_call.return_data[18 len 14]:
                                    revert with 0, 17
                                if not ext_call.return_data[18 len 14]:
                                    revert with 0, 18
                                if ext_call.return_data[18 len 14] * arg2 / ext_call.return_data[18 len 14] != arg2:
                                    revert with 0, 'SafeMath: multiplication overflow', mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                                if not ext_call.return_data[18 len 14] * arg2:
                                    if arg2 > ext_call.return_data[50 len 14]:
                                        revert with 0, 'SafeMath: subtraction overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                    if ext_call.return_data[50 len 14] < arg2:
                                        revert with 0, 17
                                    if not ext_call.return_data[50 len 14] - arg2:
                                        revert with 0, 18
                                    if ext_call.return_data[50 len 14] - arg2 and 997 > -1 / ext_call.return_data[50 len 14] - arg2:
                                        revert with 0, 17
                                    if not ext_call.return_data[50 len 14] - arg2:
                                        revert with 0, 18
                                    if (997 * ext_call.return_data[50 len 14]) - (997 * arg2) / ext_call.return_data[50 len 14] - arg2 != 997:
                                        revert with 0, 'SafeMath: multiplication overflow', mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                                    if not (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                        revert with 0, 18
                                    if 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2) > -2:
                                        revert with 0, 17
                                    if (0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2)) + 1 < 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                        revert with 0, 'SafeMath: addition overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                    if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                        mem[(10 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address, mem[(12 * ceil32(return_data.size)) + 510 len 20 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(14 * ceil32(return_data.size)) + 542 len 24 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    else:
                                        mem[(10 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                        mem[(10 * ceil32(return_data.size)) + 510] = 0
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).approve(address rg1, uint256 rg2) with:
                                             gas gas_remaining wei
                                            args 0x60ae616a2155ee3d9a68541ba4544862310933d4, 0, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                        mem[(10 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        mem[(12 * ceil32(return_data.size)) + 474] = 2
                                        mem[(12 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(12 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                        mem[(12 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(12 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        mem[(12 * ceil32(return_data.size)) + 606] = 0
                                        mem[(12 * ceil32(return_data.size)) + 638] = 160
                                        mem[(12 * ceil32(return_data.size)) + 734] = 2
                                        idx = 0
                                        s = (12 * ceil32(return_data.size)) + 766
                                        t = (12 * ceil32(return_data.size)) + 506
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(12 * ceil32(return_data.size)) + 670] = this.address
                                        mem[(12 * ceil32(return_data.size)) + 702] = block.timestamp
                                        require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                        call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                             gas gas_remaining wei
                                            args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1, 0, 160, address(this.address), block.timestamp, 2, mem[(12 * ceil32(return_data.size)) + 766 len 64]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(12 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (13 * ceil32(return_data.size)) + 570
                                        require return_data.size >= 32
                                        _4609 = mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32
                                        require mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                        require (12 * ceil32(return_data.size)) + return_data.size + 570 > (12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 601
                                        _4705 = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                        if mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                            revert with 0, 65
                                        if ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0 or (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307():
                                            revert with 0, 65
                                        mem[64] = (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                        mem[(13 * ceil32(return_data.size)) + 570] = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                        require _4609 + (32 * _4705) + 32 <= return_data.size
                                        mem[(13 * ceil32(return_data.size)) + 602 len 32 * _4705] = mem[(12 * ceil32(return_data.size)) + _4609 + 602 len 32 * _4705]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6433 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_6433] == bool(mem[_6433])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6817 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _6913 = mem[_6817]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _6913
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _6913
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _7201 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_7201] == bool(mem[_7201])
                                else:
                                    if ext_call.return_data[18 len 14] * arg2 and 1000 > -1 / ext_call.return_data[18 len 14] * arg2:
                                        revert with 0, 17
                                    if not ext_call.return_data[18 len 14] * arg2:
                                        revert with 0, 18
                                    if 1000 * ext_call.return_data[18 len 14] * arg2 / ext_call.return_data[18 len 14] * arg2 != 1000:
                                        revert with 0, 'SafeMath: multiplication overflow', mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                                    if arg2 > ext_call.return_data[50 len 14]:
                                        revert with 0, 'SafeMath: subtraction overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                    if ext_call.return_data[50 len 14] < arg2:
                                        revert with 0, 17
                                    if not ext_call.return_data[50 len 14] - arg2:
                                        revert with 0, 18
                                    if ext_call.return_data[50 len 14] - arg2 and 997 > -1 / ext_call.return_data[50 len 14] - arg2:
                                        revert with 0, 17
                                    if not ext_call.return_data[50 len 14] - arg2:
                                        revert with 0, 18
                                    if (997 * ext_call.return_data[50 len 14]) - (997 * arg2) / ext_call.return_data[50 len 14] - arg2 != 997:
                                        revert with 0, 'SafeMath: multiplication overflow', mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                                    if not (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                        revert with 0, 18
                                    if 1000 * ext_call.return_data[18 len 14] * arg2 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2) > -2:
                                        revert with 0, 17
                                    if (1000 * ext_call.return_data[18 len 14] * arg2 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2)) + 1 < 1000 * ext_call.return_data[18 len 14] * arg2 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                        revert with 0, 'SafeMath: addition overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                    if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                        mem[(10 * ceil32(return_data.size)) + 510] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address, mem[(12 * ceil32(return_data.size)) + 510 len 20 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(14 * ceil32(return_data.size)) + 542 len 24 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    else:
                                        mem[(10 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                        mem[(10 * ceil32(return_data.size)) + 510] = 0
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).approve(address rg1, uint256 rg2) with:
                                             gas gas_remaining wei
                                            args 0x60ae616a2155ee3d9a68541ba4544862310933d4, 0, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                        mem[(10 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        mem[(12 * ceil32(return_data.size)) + 474] = 2
                                        mem[(12 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(12 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                        mem[(12 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(12 * ceil32(return_data.size)) + 574] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        mem[(12 * ceil32(return_data.size)) + 606] = 0
                                        mem[(12 * ceil32(return_data.size)) + 638] = 160
                                        mem[(12 * ceil32(return_data.size)) + 734] = 2
                                        idx = 0
                                        s = (12 * ceil32(return_data.size)) + 766
                                        t = (12 * ceil32(return_data.size)) + 506
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(12 * ceil32(return_data.size)) + 670] = this.address
                                        mem[(12 * ceil32(return_data.size)) + 702] = block.timestamp
                                        require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                        call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                             gas gas_remaining wei
                                            args (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1, 0, 160, address(this.address), block.timestamp, 2, mem[(12 * ceil32(return_data.size)) + 766 len 64]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(12 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (13 * ceil32(return_data.size)) + 570
                                        require return_data.size >= 32
                                        _4608 = mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32
                                        require mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                        require (12 * ceil32(return_data.size)) + return_data.size + 570 > (12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 601
                                        _4704 = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                        if mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                            revert with 0, 65
                                        if ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0 or (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307():
                                            revert with 0, 65
                                        mem[64] = (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                        mem[(13 * ceil32(return_data.size)) + 570] = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                        require _4608 + (32 * _4704) + 32 <= return_data.size
                                        mem[(13 * ceil32(return_data.size)) + 602 len 32 * _4704] = mem[(12 * ceil32(return_data.size)) + _4608 + 602 len 32 * _4704]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6432 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_6432] == bool(mem[_6432])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6816 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _6912 = mem[_6816]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _6912
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _6912
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _7200 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_7200] == bool(mem[_7200])
                else:
                    if address(ext_call.return_data[0]) < address(ext_call.return_data[0]):
                        if address(ext_call.return_data[0]) == address(ext_call.return_data[0]):
                            if ext_call.return_data[50 len 14] <= 0:
                                revert with 0, 
                                            'SpiritswapLibrary: INSUFFICIENT_LIQUIDITY',
                                            mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                            if ext_call.return_data[18 len 14] <= 0:
                                revert with 0, 
                                            'SpiritswapLibrary: INSUFFICIENT_LIQUIDITY',
                                            mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                            if not ext_call.return_data[50 len 14]:
                                if arg2 > ext_call.return_data[18 len 14]:
                                    revert with 0, 'SafeMath: subtraction overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                if ext_call.return_data[18 len 14] < arg2:
                                    revert with 0, 17
                                if not ext_call.return_data[18 len 14] - arg2:
                                    revert with 0, 18
                                if ext_call.return_data[18 len 14] - arg2 and 997 > -1 / ext_call.return_data[18 len 14] - arg2:
                                    revert with 0, 17
                                if not ext_call.return_data[18 len 14] - arg2:
                                    revert with 0, 18
                                if (997 * ext_call.return_data[18 len 14]) - (997 * arg2) / ext_call.return_data[18 len 14] - arg2 != 997:
                                    revert with 0, 'SafeMath: multiplication overflow', mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                                if not (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                    revert with 0, 18
                                if 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2) > -2:
                                    revert with 0, 17
                                if (0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2)) + 1 < 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                    revert with 0, 'SafeMath: addition overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                    mem[(10 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(12 * ceil32(return_data.size)) + 510 len 20 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(14 * ceil32(return_data.size)) + 542 len 24 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(10 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                    mem[(10 * ceil32(return_data.size)) + 510] = 0
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).approve(address rg1, uint256 rg2) with:
                                         gas gas_remaining wei
                                        args 0x60ae616a2155ee3d9a68541ba4544862310933d4, 0, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                    mem[(10 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(12 * ceil32(return_data.size)) + 474] = 2
                                    mem[(12 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                    mem[(12 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(12 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(12 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    mem[(12 * ceil32(return_data.size)) + 606] = 0
                                    mem[(12 * ceil32(return_data.size)) + 638] = 160
                                    mem[(12 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (12 * ceil32(return_data.size)) + 766
                                    t = (12 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(12 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(12 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                    call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                         gas gas_remaining wei
                                        args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1, 0, 160, address(this.address), block.timestamp, 2, mem[(12 * ceil32(return_data.size)) + 766 len 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(12 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (13 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _4613 = mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32
                                    require mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                    require (12 * ceil32(return_data.size)) + return_data.size + 570 > (12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 601
                                    _4709 = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                    if mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                        revert with 0, 65
                                    if ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0 or (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307():
                                        revert with 0, 65
                                    mem[64] = (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                    mem[(13 * ceil32(return_data.size)) + 570] = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                    require _4613 + (32 * _4709) + 32 <= return_data.size
                                    mem[(13 * ceil32(return_data.size)) + 602 len 32 * _4709] = mem[(12 * ceil32(return_data.size)) + _4613 + 602 len 32 * _4709]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _6437 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_6437] == bool(mem[_6437])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _6821 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _6917 = mem[_6821]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _6917
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _6917
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7205 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7205] == bool(mem[_7205])
                            else:
                                if ext_call.return_data[50 len 14] and arg2 > -1 / ext_call.return_data[50 len 14]:
                                    revert with 0, 17
                                if not ext_call.return_data[50 len 14]:
                                    revert with 0, 18
                                if ext_call.return_data[50 len 14] * arg2 / ext_call.return_data[50 len 14] != arg2:
                                    revert with 0, 'SafeMath: multiplication overflow', mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                                if not ext_call.return_data[50 len 14] * arg2:
                                    if arg2 > ext_call.return_data[18 len 14]:
                                        revert with 0, 'SafeMath: subtraction overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                    if ext_call.return_data[18 len 14] < arg2:
                                        revert with 0, 17
                                    if not ext_call.return_data[18 len 14] - arg2:
                                        revert with 0, 18
                                    if ext_call.return_data[18 len 14] - arg2 and 997 > -1 / ext_call.return_data[18 len 14] - arg2:
                                        revert with 0, 17
                                    if not ext_call.return_data[18 len 14] - arg2:
                                        revert with 0, 18
                                    if (997 * ext_call.return_data[18 len 14]) - (997 * arg2) / ext_call.return_data[18 len 14] - arg2 != 997:
                                        revert with 0, 'SafeMath: multiplication overflow', mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                                    if not (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                        revert with 0, 18
                                    if 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2) > -2:
                                        revert with 0, 17
                                    if (0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2)) + 1 < 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                        revert with 0, 'SafeMath: addition overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                    if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                        mem[(10 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address, mem[(12 * ceil32(return_data.size)) + 510 len 20 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(14 * ceil32(return_data.size)) + 542 len 24 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    else:
                                        mem[(10 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                        mem[(10 * ceil32(return_data.size)) + 510] = 0
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).approve(address rg1, uint256 rg2) with:
                                             gas gas_remaining wei
                                            args 0x60ae616a2155ee3d9a68541ba4544862310933d4, 0, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                        mem[(10 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        mem[(12 * ceil32(return_data.size)) + 474] = 2
                                        mem[(12 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(12 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                        mem[(12 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(12 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        mem[(12 * ceil32(return_data.size)) + 606] = 0
                                        mem[(12 * ceil32(return_data.size)) + 638] = 160
                                        mem[(12 * ceil32(return_data.size)) + 734] = 2
                                        idx = 0
                                        s = (12 * ceil32(return_data.size)) + 766
                                        t = (12 * ceil32(return_data.size)) + 506
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(12 * ceil32(return_data.size)) + 670] = this.address
                                        mem[(12 * ceil32(return_data.size)) + 702] = block.timestamp
                                        require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                        call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                             gas gas_remaining wei
                                            args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1, 0, 160, address(this.address), block.timestamp, 2, mem[(12 * ceil32(return_data.size)) + 766 len 64]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(12 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (13 * ceil32(return_data.size)) + 570
                                        require return_data.size >= 32
                                        _4612 = mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32
                                        require mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                        require (12 * ceil32(return_data.size)) + return_data.size + 570 > (12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 601
                                        _4708 = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                        if mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                            revert with 0, 65
                                        if ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0 or (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307():
                                            revert with 0, 65
                                        mem[64] = (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                        mem[(13 * ceil32(return_data.size)) + 570] = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                        require _4612 + (32 * _4708) + 32 <= return_data.size
                                        mem[(13 * ceil32(return_data.size)) + 602 len 32 * _4708] = mem[(12 * ceil32(return_data.size)) + _4612 + 602 len 32 * _4708]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6436 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_6436] == bool(mem[_6436])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6820 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _6916 = mem[_6820]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _6916
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _6916
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _7204 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_7204] == bool(mem[_7204])
                                else:
                                    if ext_call.return_data[50 len 14] * arg2 and 1000 > -1 / ext_call.return_data[50 len 14] * arg2:
                                        revert with 0, 17
                                    if not ext_call.return_data[50 len 14] * arg2:
                                        revert with 0, 18
                                    if 1000 * ext_call.return_data[50 len 14] * arg2 / ext_call.return_data[50 len 14] * arg2 != 1000:
                                        revert with 0, 'SafeMath: multiplication overflow', mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                                    if arg2 > ext_call.return_data[18 len 14]:
                                        revert with 0, 'SafeMath: subtraction overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                    if ext_call.return_data[18 len 14] < arg2:
                                        revert with 0, 17
                                    if not ext_call.return_data[18 len 14] - arg2:
                                        revert with 0, 18
                                    if ext_call.return_data[18 len 14] - arg2 and 997 > -1 / ext_call.return_data[18 len 14] - arg2:
                                        revert with 0, 17
                                    if not ext_call.return_data[18 len 14] - arg2:
                                        revert with 0, 18
                                    if (997 * ext_call.return_data[18 len 14]) - (997 * arg2) / ext_call.return_data[18 len 14] - arg2 != 997:
                                        revert with 0, 'SafeMath: multiplication overflow', mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                                    if not (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                        revert with 0, 18
                                    if 1000 * ext_call.return_data[50 len 14] * arg2 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2) > -2:
                                        revert with 0, 17
                                    if (1000 * ext_call.return_data[50 len 14] * arg2 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2)) + 1 < 1000 * ext_call.return_data[50 len 14] * arg2 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                        revert with 0, 'SafeMath: addition overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                    if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                        mem[(10 * ceil32(return_data.size)) + 510] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address, mem[(12 * ceil32(return_data.size)) + 510 len 20 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(14 * ceil32(return_data.size)) + 542 len 24 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    else:
                                        mem[(10 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                        mem[(10 * ceil32(return_data.size)) + 510] = 0
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).approve(address rg1, uint256 rg2) with:
                                             gas gas_remaining wei
                                            args 0x60ae616a2155ee3d9a68541ba4544862310933d4, 0, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                        mem[(10 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        mem[(12 * ceil32(return_data.size)) + 474] = 2
                                        mem[(12 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(12 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                        mem[(12 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(12 * ceil32(return_data.size)) + 574] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        mem[(12 * ceil32(return_data.size)) + 606] = 0
                                        mem[(12 * ceil32(return_data.size)) + 638] = 160
                                        mem[(12 * ceil32(return_data.size)) + 734] = 2
                                        idx = 0
                                        s = (12 * ceil32(return_data.size)) + 766
                                        t = (12 * ceil32(return_data.size)) + 506
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(12 * ceil32(return_data.size)) + 670] = this.address
                                        mem[(12 * ceil32(return_data.size)) + 702] = block.timestamp
                                        require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                        call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                             gas gas_remaining wei
                                            args (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1, 0, 160, address(this.address), block.timestamp, 2, mem[(12 * ceil32(return_data.size)) + 766 len 64]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(12 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (13 * ceil32(return_data.size)) + 570
                                        require return_data.size >= 32
                                        _4611 = mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32
                                        require mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                        require (12 * ceil32(return_data.size)) + return_data.size + 570 > (12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 601
                                        _4707 = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                        if mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                            revert with 0, 65
                                        if ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0 or (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307():
                                            revert with 0, 65
                                        mem[64] = (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                        mem[(13 * ceil32(return_data.size)) + 570] = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                        require _4611 + (32 * _4707) + 32 <= return_data.size
                                        mem[(13 * ceil32(return_data.size)) + 602 len 32 * _4707] = mem[(12 * ceil32(return_data.size)) + _4611 + 602 len 32 * _4707]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6435 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_6435] == bool(mem[_6435])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6819 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _6915 = mem[_6819]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _6915
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _6915
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _7203 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_7203] == bool(mem[_7203])
                        else:
                            if ext_call.return_data[18 len 14] <= 0:
                                revert with 0, 
                                            'SpiritswapLibrary: INSUFFICIENT_LIQUIDITY',
                                            mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                            if ext_call.return_data[50 len 14] <= 0:
                                revert with 0, 
                                            'SpiritswapLibrary: INSUFFICIENT_LIQUIDITY',
                                            mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                            if not ext_call.return_data[18 len 14]:
                                if arg2 > ext_call.return_data[50 len 14]:
                                    revert with 0, 'SafeMath: subtraction overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                if ext_call.return_data[50 len 14] < arg2:
                                    revert with 0, 17
                                if not ext_call.return_data[50 len 14] - arg2:
                                    revert with 0, 18
                                if ext_call.return_data[50 len 14] - arg2 and 997 > -1 / ext_call.return_data[50 len 14] - arg2:
                                    revert with 0, 17
                                if not ext_call.return_data[50 len 14] - arg2:
                                    revert with 0, 18
                                if (997 * ext_call.return_data[50 len 14]) - (997 * arg2) / ext_call.return_data[50 len 14] - arg2 != 997:
                                    revert with 0, 'SafeMath: multiplication overflow', mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                                if not (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                    revert with 0, 18
                                if 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2) > -2:
                                    revert with 0, 17
                                if (0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2)) + 1 < 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                    revert with 0, 'SafeMath: addition overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                    mem[(10 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(12 * ceil32(return_data.size)) + 510 len 20 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(14 * ceil32(return_data.size)) + 542 len 24 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(10 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                    mem[(10 * ceil32(return_data.size)) + 510] = 0
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).approve(address rg1, uint256 rg2) with:
                                         gas gas_remaining wei
                                        args 0x60ae616a2155ee3d9a68541ba4544862310933d4, 0, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                    mem[(10 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(12 * ceil32(return_data.size)) + 474] = 2
                                    mem[(12 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                    mem[(12 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(12 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(12 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    mem[(12 * ceil32(return_data.size)) + 606] = 0
                                    mem[(12 * ceil32(return_data.size)) + 638] = 160
                                    mem[(12 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (12 * ceil32(return_data.size)) + 766
                                    t = (12 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(12 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(12 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                    call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                         gas gas_remaining wei
                                        args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1, 0, 160, address(this.address), block.timestamp, 2, mem[(12 * ceil32(return_data.size)) + 766 len 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(12 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (13 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _4616 = mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32
                                    require mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                    require (12 * ceil32(return_data.size)) + return_data.size + 570 > (12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 601
                                    _4712 = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                    if mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                        revert with 0, 65
                                    if ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0 or (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307():
                                        revert with 0, 65
                                    mem[64] = (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                    mem[(13 * ceil32(return_data.size)) + 570] = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                    require _4616 + (32 * _4712) + 32 <= return_data.size
                                    mem[(13 * ceil32(return_data.size)) + 602 len 32 * _4712] = mem[(12 * ceil32(return_data.size)) + _4616 + 602 len 32 * _4712]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _6440 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_6440] == bool(mem[_6440])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _6824 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _6920 = mem[_6824]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _6920
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _6920
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7208 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7208] == bool(mem[_7208])
                            else:
                                if ext_call.return_data[18 len 14] and arg2 > -1 / ext_call.return_data[18 len 14]:
                                    revert with 0, 17
                                if not ext_call.return_data[18 len 14]:
                                    revert with 0, 18
                                if ext_call.return_data[18 len 14] * arg2 / ext_call.return_data[18 len 14] != arg2:
                                    revert with 0, 'SafeMath: multiplication overflow', mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                                if not ext_call.return_data[18 len 14] * arg2:
                                    if arg2 > ext_call.return_data[50 len 14]:
                                        revert with 0, 'SafeMath: subtraction overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                    if ext_call.return_data[50 len 14] < arg2:
                                        revert with 0, 17
                                    if not ext_call.return_data[50 len 14] - arg2:
                                        revert with 0, 18
                                    if ext_call.return_data[50 len 14] - arg2 and 997 > -1 / ext_call.return_data[50 len 14] - arg2:
                                        revert with 0, 17
                                    if not ext_call.return_data[50 len 14] - arg2:
                                        revert with 0, 18
                                    if (997 * ext_call.return_data[50 len 14]) - (997 * arg2) / ext_call.return_data[50 len 14] - arg2 != 997:
                                        revert with 0, 'SafeMath: multiplication overflow', mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                                    if not (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                        revert with 0, 18
                                    if 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2) > -2:
                                        revert with 0, 17
                                    if (0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2)) + 1 < 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                        revert with 0, 'SafeMath: addition overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                    if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                        mem[(10 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address, mem[(12 * ceil32(return_data.size)) + 510 len 20 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(14 * ceil32(return_data.size)) + 542 len 24 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    else:
                                        mem[(10 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                        mem[(10 * ceil32(return_data.size)) + 510] = 0
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).approve(address rg1, uint256 rg2) with:
                                             gas gas_remaining wei
                                            args 0x60ae616a2155ee3d9a68541ba4544862310933d4, 0, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                        mem[(10 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        mem[(12 * ceil32(return_data.size)) + 474] = 2
                                        mem[(12 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(12 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                        mem[(12 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(12 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        mem[(12 * ceil32(return_data.size)) + 606] = 0
                                        mem[(12 * ceil32(return_data.size)) + 638] = 160
                                        mem[(12 * ceil32(return_data.size)) + 734] = 2
                                        idx = 0
                                        s = (12 * ceil32(return_data.size)) + 766
                                        t = (12 * ceil32(return_data.size)) + 506
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(12 * ceil32(return_data.size)) + 670] = this.address
                                        mem[(12 * ceil32(return_data.size)) + 702] = block.timestamp
                                        require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                        call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                             gas gas_remaining wei
                                            args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1, 0, 160, address(this.address), block.timestamp, 2, mem[(12 * ceil32(return_data.size)) + 766 len 64]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(12 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (13 * ceil32(return_data.size)) + 570
                                        require return_data.size >= 32
                                        _4615 = mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32
                                        require mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                        require (12 * ceil32(return_data.size)) + return_data.size + 570 > (12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 601
                                        _4711 = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                        if mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                            revert with 0, 65
                                        if ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0 or (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307():
                                            revert with 0, 65
                                        mem[64] = (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                        mem[(13 * ceil32(return_data.size)) + 570] = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                        require _4615 + (32 * _4711) + 32 <= return_data.size
                                        mem[(13 * ceil32(return_data.size)) + 602 len 32 * _4711] = mem[(12 * ceil32(return_data.size)) + _4615 + 602 len 32 * _4711]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6439 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_6439] == bool(mem[_6439])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6823 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _6919 = mem[_6823]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _6919
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _6919
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _7207 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_7207] == bool(mem[_7207])
                                else:
                                    if ext_call.return_data[18 len 14] * arg2 and 1000 > -1 / ext_call.return_data[18 len 14] * arg2:
                                        revert with 0, 17
                                    if not ext_call.return_data[18 len 14] * arg2:
                                        revert with 0, 18
                                    if 1000 * ext_call.return_data[18 len 14] * arg2 / ext_call.return_data[18 len 14] * arg2 != 1000:
                                        revert with 0, 'SafeMath: multiplication overflow', mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                                    if arg2 > ext_call.return_data[50 len 14]:
                                        revert with 0, 'SafeMath: subtraction overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                    if ext_call.return_data[50 len 14] < arg2:
                                        revert with 0, 17
                                    if not ext_call.return_data[50 len 14] - arg2:
                                        revert with 0, 18
                                    if ext_call.return_data[50 len 14] - arg2 and 997 > -1 / ext_call.return_data[50 len 14] - arg2:
                                        revert with 0, 17
                                    if not ext_call.return_data[50 len 14] - arg2:
                                        revert with 0, 18
                                    if (997 * ext_call.return_data[50 len 14]) - (997 * arg2) / ext_call.return_data[50 len 14] - arg2 != 997:
                                        revert with 0, 'SafeMath: multiplication overflow', mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                                    if not (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                        revert with 0, 18
                                    if 1000 * ext_call.return_data[18 len 14] * arg2 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2) > -2:
                                        revert with 0, 17
                                    if (1000 * ext_call.return_data[18 len 14] * arg2 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2)) + 1 < 1000 * ext_call.return_data[18 len 14] * arg2 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                        revert with 0, 'SafeMath: addition overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                    if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                        mem[(10 * ceil32(return_data.size)) + 510] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address, mem[(12 * ceil32(return_data.size)) + 510 len 20 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(14 * ceil32(return_data.size)) + 542 len 24 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    else:
                                        mem[(10 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                        mem[(10 * ceil32(return_data.size)) + 510] = 0
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).approve(address rg1, uint256 rg2) with:
                                             gas gas_remaining wei
                                            args 0x60ae616a2155ee3d9a68541ba4544862310933d4, 0, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                        mem[(10 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        mem[(12 * ceil32(return_data.size)) + 474] = 2
                                        mem[(12 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(12 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                        mem[(12 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(12 * ceil32(return_data.size)) + 574] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        mem[(12 * ceil32(return_data.size)) + 606] = 0
                                        mem[(12 * ceil32(return_data.size)) + 638] = 160
                                        mem[(12 * ceil32(return_data.size)) + 734] = 2
                                        idx = 0
                                        s = (12 * ceil32(return_data.size)) + 766
                                        t = (12 * ceil32(return_data.size)) + 506
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(12 * ceil32(return_data.size)) + 670] = this.address
                                        mem[(12 * ceil32(return_data.size)) + 702] = block.timestamp
                                        require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                        call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                             gas gas_remaining wei
                                            args (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1, 0, 160, address(this.address), block.timestamp, 2, mem[(12 * ceil32(return_data.size)) + 766 len 64]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(12 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (13 * ceil32(return_data.size)) + 570
                                        require return_data.size >= 32
                                        _4614 = mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32
                                        require mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                        require (12 * ceil32(return_data.size)) + return_data.size + 570 > (12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 601
                                        _4710 = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                        if mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                            revert with 0, 65
                                        if ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0 or (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307():
                                            revert with 0, 65
                                        mem[64] = (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                        mem[(13 * ceil32(return_data.size)) + 570] = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                        require _4614 + (32 * _4710) + 32 <= return_data.size
                                        mem[(13 * ceil32(return_data.size)) + 602 len 32 * _4710] = mem[(12 * ceil32(return_data.size)) + _4614 + 602 len 32 * _4710]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6438 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_6438] == bool(mem[_6438])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6822 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _6918 = mem[_6822]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _6918
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _6918
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _7206 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_7206] == bool(mem[_7206])
                    else:
                        if address(ext_call.return_data[0]) == address(ext_call.return_data[0]):
                            if ext_call.return_data[50 len 14] <= 0:
                                revert with 0, 
                                            'SpiritswapLibrary: INSUFFICIENT_LIQUIDITY',
                                            mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                            if ext_call.return_data[18 len 14] <= 0:
                                revert with 0, 
                                            'SpiritswapLibrary: INSUFFICIENT_LIQUIDITY',
                                            mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                            if not ext_call.return_data[50 len 14]:
                                if arg2 > ext_call.return_data[18 len 14]:
                                    revert with 0, 'SafeMath: subtraction overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                if ext_call.return_data[18 len 14] < arg2:
                                    revert with 0, 17
                                if not ext_call.return_data[18 len 14] - arg2:
                                    revert with 0, 18
                                if ext_call.return_data[18 len 14] - arg2 and 997 > -1 / ext_call.return_data[18 len 14] - arg2:
                                    revert with 0, 17
                                if not ext_call.return_data[18 len 14] - arg2:
                                    revert with 0, 18
                                if (997 * ext_call.return_data[18 len 14]) - (997 * arg2) / ext_call.return_data[18 len 14] - arg2 != 997:
                                    revert with 0, 'SafeMath: multiplication overflow', mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                                if not (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                    revert with 0, 18
                                if 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2) > -2:
                                    revert with 0, 17
                                if (0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2)) + 1 < 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                    revert with 0, 'SafeMath: addition overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                    mem[(10 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(12 * ceil32(return_data.size)) + 510 len 20 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(14 * ceil32(return_data.size)) + 542 len 24 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(10 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                    mem[(10 * ceil32(return_data.size)) + 510] = 0
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).approve(address rg1, uint256 rg2) with:
                                         gas gas_remaining wei
                                        args 0x60ae616a2155ee3d9a68541ba4544862310933d4, 0, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                    mem[(10 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(12 * ceil32(return_data.size)) + 474] = 2
                                    mem[(12 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                    mem[(12 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(12 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(12 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    mem[(12 * ceil32(return_data.size)) + 606] = 0
                                    mem[(12 * ceil32(return_data.size)) + 638] = 160
                                    mem[(12 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (12 * ceil32(return_data.size)) + 766
                                    t = (12 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(12 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(12 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                    call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                         gas gas_remaining wei
                                        args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1, 0, 160, address(this.address), block.timestamp, 2, mem[(12 * ceil32(return_data.size)) + 766 len 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(12 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (13 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _4619 = mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32
                                    require mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                    require (12 * ceil32(return_data.size)) + return_data.size + 570 > (12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 601
                                    _4715 = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                    if mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                        revert with 0, 65
                                    if ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0 or (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307():
                                        revert with 0, 65
                                    mem[64] = (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                    mem[(13 * ceil32(return_data.size)) + 570] = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                    require _4619 + (32 * _4715) + 32 <= return_data.size
                                    mem[(13 * ceil32(return_data.size)) + 602 len 32 * _4715] = mem[(12 * ceil32(return_data.size)) + _4619 + 602 len 32 * _4715]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _6443 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_6443] == bool(mem[_6443])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _6827 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _6923 = mem[_6827]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _6923
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _6923
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7211 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7211] == bool(mem[_7211])
                            else:
                                if ext_call.return_data[50 len 14] and arg2 > -1 / ext_call.return_data[50 len 14]:
                                    revert with 0, 17
                                if not ext_call.return_data[50 len 14]:
                                    revert with 0, 18
                                if ext_call.return_data[50 len 14] * arg2 / ext_call.return_data[50 len 14] != arg2:
                                    revert with 0, 'SafeMath: multiplication overflow', mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                                if not ext_call.return_data[50 len 14] * arg2:
                                    if arg2 > ext_call.return_data[18 len 14]:
                                        revert with 0, 'SafeMath: subtraction overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                    if ext_call.return_data[18 len 14] < arg2:
                                        revert with 0, 17
                                    if not ext_call.return_data[18 len 14] - arg2:
                                        revert with 0, 18
                                    if ext_call.return_data[18 len 14] - arg2 and 997 > -1 / ext_call.return_data[18 len 14] - arg2:
                                        revert with 0, 17
                                    if not ext_call.return_data[18 len 14] - arg2:
                                        revert with 0, 18
                                    if (997 * ext_call.return_data[18 len 14]) - (997 * arg2) / ext_call.return_data[18 len 14] - arg2 != 997:
                                        revert with 0, 'SafeMath: multiplication overflow', mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                                    if not (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                        revert with 0, 18
                                    if 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2) > -2:
                                        revert with 0, 17
                                    if (0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2)) + 1 < 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                        revert with 0, 'SafeMath: addition overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                    if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                        mem[(10 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address, mem[(12 * ceil32(return_data.size)) + 510 len 20 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(14 * ceil32(return_data.size)) + 542 len 24 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    else:
                                        mem[(10 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                        mem[(10 * ceil32(return_data.size)) + 510] = 0
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).approve(address rg1, uint256 rg2) with:
                                             gas gas_remaining wei
                                            args 0x60ae616a2155ee3d9a68541ba4544862310933d4, 0, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                        mem[(10 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        mem[(12 * ceil32(return_data.size)) + 474] = 2
                                        mem[(12 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(12 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                        mem[(12 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(12 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        mem[(12 * ceil32(return_data.size)) + 606] = 0
                                        mem[(12 * ceil32(return_data.size)) + 638] = 160
                                        mem[(12 * ceil32(return_data.size)) + 734] = 2
                                        idx = 0
                                        s = (12 * ceil32(return_data.size)) + 766
                                        t = (12 * ceil32(return_data.size)) + 506
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(12 * ceil32(return_data.size)) + 670] = this.address
                                        mem[(12 * ceil32(return_data.size)) + 702] = block.timestamp
                                        require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                        call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                             gas gas_remaining wei
                                            args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1, 0, 160, address(this.address), block.timestamp, 2, mem[(12 * ceil32(return_data.size)) + 766 len 64]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(12 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (13 * ceil32(return_data.size)) + 570
                                        require return_data.size >= 32
                                        _4618 = mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32
                                        require mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                        require (12 * ceil32(return_data.size)) + return_data.size + 570 > (12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 601
                                        _4714 = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                        if mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                            revert with 0, 65
                                        if ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0 or (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307():
                                            revert with 0, 65
                                        mem[64] = (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                        mem[(13 * ceil32(return_data.size)) + 570] = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                        require _4618 + (32 * _4714) + 32 <= return_data.size
                                        mem[(13 * ceil32(return_data.size)) + 602 len 32 * _4714] = mem[(12 * ceil32(return_data.size)) + _4618 + 602 len 32 * _4714]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6442 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_6442] == bool(mem[_6442])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6826 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _6922 = mem[_6826]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _6922
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _6922
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _7210 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_7210] == bool(mem[_7210])
                                else:
                                    if ext_call.return_data[50 len 14] * arg2 and 1000 > -1 / ext_call.return_data[50 len 14] * arg2:
                                        revert with 0, 17
                                    if not ext_call.return_data[50 len 14] * arg2:
                                        revert with 0, 18
                                    if 1000 * ext_call.return_data[50 len 14] * arg2 / ext_call.return_data[50 len 14] * arg2 != 1000:
                                        revert with 0, 'SafeMath: multiplication overflow', mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                                    if arg2 > ext_call.return_data[18 len 14]:
                                        revert with 0, 'SafeMath: subtraction overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                    if ext_call.return_data[18 len 14] < arg2:
                                        revert with 0, 17
                                    if not ext_call.return_data[18 len 14] - arg2:
                                        revert with 0, 18
                                    if ext_call.return_data[18 len 14] - arg2 and 997 > -1 / ext_call.return_data[18 len 14] - arg2:
                                        revert with 0, 17
                                    if not ext_call.return_data[18 len 14] - arg2:
                                        revert with 0, 18
                                    if (997 * ext_call.return_data[18 len 14]) - (997 * arg2) / ext_call.return_data[18 len 14] - arg2 != 997:
                                        revert with 0, 'SafeMath: multiplication overflow', mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                                    if not (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                        revert with 0, 18
                                    if 1000 * ext_call.return_data[50 len 14] * arg2 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2) > -2:
                                        revert with 0, 17
                                    if (1000 * ext_call.return_data[50 len 14] * arg2 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2)) + 1 < 1000 * ext_call.return_data[50 len 14] * arg2 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                        revert with 0, 'SafeMath: addition overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                    if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                        mem[(10 * ceil32(return_data.size)) + 510] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address, mem[(12 * ceil32(return_data.size)) + 510 len 20 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(14 * ceil32(return_data.size)) + 542 len 24 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    else:
                                        mem[(10 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                        mem[(10 * ceil32(return_data.size)) + 510] = 0
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).approve(address rg1, uint256 rg2) with:
                                             gas gas_remaining wei
                                            args 0x60ae616a2155ee3d9a68541ba4544862310933d4, 0, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                        mem[(10 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        mem[(12 * ceil32(return_data.size)) + 474] = 2
                                        mem[(12 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(12 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                        mem[(12 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(12 * ceil32(return_data.size)) + 574] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        mem[(12 * ceil32(return_data.size)) + 606] = 0
                                        mem[(12 * ceil32(return_data.size)) + 638] = 160
                                        mem[(12 * ceil32(return_data.size)) + 734] = 2
                                        idx = 0
                                        s = (12 * ceil32(return_data.size)) + 766
                                        t = (12 * ceil32(return_data.size)) + 506
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(12 * ceil32(return_data.size)) + 670] = this.address
                                        mem[(12 * ceil32(return_data.size)) + 702] = block.timestamp
                                        require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                        call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                             gas gas_remaining wei
                                            args (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1, 0, 160, address(this.address), block.timestamp, 2, mem[(12 * ceil32(return_data.size)) + 766 len 64]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(12 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (13 * ceil32(return_data.size)) + 570
                                        require return_data.size >= 32
                                        _4617 = mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32
                                        require mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                        require (12 * ceil32(return_data.size)) + return_data.size + 570 > (12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 601
                                        _4713 = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                        if mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                            revert with 0, 65
                                        if ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0 or (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307():
                                            revert with 0, 65
                                        mem[64] = (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                        mem[(13 * ceil32(return_data.size)) + 570] = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                        require _4617 + (32 * _4713) + 32 <= return_data.size
                                        mem[(13 * ceil32(return_data.size)) + 602 len 32 * _4713] = mem[(12 * ceil32(return_data.size)) + _4617 + 602 len 32 * _4713]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6441 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_6441] == bool(mem[_6441])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6825 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _6921 = mem[_6825]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _6921
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _6921
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _7209 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_7209] == bool(mem[_7209])
                        else:
                            if ext_call.return_data[18 len 14] <= 0:
                                revert with 0, 
                                            'SpiritswapLibrary: INSUFFICIENT_LIQUIDITY',
                                            mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                            if ext_call.return_data[50 len 14] <= 0:
                                revert with 0, 
                                            'SpiritswapLibrary: INSUFFICIENT_LIQUIDITY',
                                            mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                            if not ext_call.return_data[18 len 14]:
                                if arg2 > ext_call.return_data[50 len 14]:
                                    revert with 0, 'SafeMath: subtraction overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                if ext_call.return_data[50 len 14] < arg2:
                                    revert with 0, 17
                                if not ext_call.return_data[50 len 14] - arg2:
                                    revert with 0, 18
                                if ext_call.return_data[50 len 14] - arg2 and 997 > -1 / ext_call.return_data[50 len 14] - arg2:
                                    revert with 0, 17
                                if not ext_call.return_data[50 len 14] - arg2:
                                    revert with 0, 18
                                if (997 * ext_call.return_data[50 len 14]) - (997 * arg2) / ext_call.return_data[50 len 14] - arg2 != 997:
                                    revert with 0, 'SafeMath: multiplication overflow', mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                                if not (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                    revert with 0, 18
                                if 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2) > -2:
                                    revert with 0, 17
                                if (0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2)) + 1 < 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                    revert with 0, 'SafeMath: addition overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                    mem[(10 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(12 * ceil32(return_data.size)) + 510 len 20 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(14 * ceil32(return_data.size)) + 542 len 24 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(10 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                    mem[(10 * ceil32(return_data.size)) + 510] = 0
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).approve(address rg1, uint256 rg2) with:
                                         gas gas_remaining wei
                                        args 0x60ae616a2155ee3d9a68541ba4544862310933d4, 0, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                    mem[(10 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(12 * ceil32(return_data.size)) + 474] = 2
                                    mem[(12 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                    mem[(12 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(12 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(12 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    mem[(12 * ceil32(return_data.size)) + 606] = 0
                                    mem[(12 * ceil32(return_data.size)) + 638] = 160
                                    mem[(12 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (12 * ceil32(return_data.size)) + 766
                                    t = (12 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(12 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(12 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                    call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                         gas gas_remaining wei
                                        args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1, 0, 160, address(this.address), block.timestamp, 2, mem[(12 * ceil32(return_data.size)) + 766 len 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(12 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (13 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _4622 = mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32
                                    require mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                    require (12 * ceil32(return_data.size)) + return_data.size + 570 > (12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 601
                                    _4718 = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                    if mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                        revert with 0, 65
                                    if ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0 or (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307():
                                        revert with 0, 65
                                    mem[64] = (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                    mem[(13 * ceil32(return_data.size)) + 570] = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                    require _4622 + (32 * _4718) + 32 <= return_data.size
                                    mem[(13 * ceil32(return_data.size)) + 602 len 32 * _4718] = mem[(12 * ceil32(return_data.size)) + _4622 + 602 len 32 * _4718]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _6446 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_6446] == bool(mem[_6446])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _6830 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _6926 = mem[_6830]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _6926
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _6926
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7214 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7214] == bool(mem[_7214])
                            else:
                                if ext_call.return_data[18 len 14] and arg2 > -1 / ext_call.return_data[18 len 14]:
                                    revert with 0, 17
                                if not ext_call.return_data[18 len 14]:
                                    revert with 0, 18
                                if ext_call.return_data[18 len 14] * arg2 / ext_call.return_data[18 len 14] != arg2:
                                    revert with 0, 'SafeMath: multiplication overflow', mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                                if not ext_call.return_data[18 len 14] * arg2:
                                    if arg2 > ext_call.return_data[50 len 14]:
                                        revert with 0, 'SafeMath: subtraction overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                    if ext_call.return_data[50 len 14] < arg2:
                                        revert with 0, 17
                                    if not ext_call.return_data[50 len 14] - arg2:
                                        revert with 0, 18
                                    if ext_call.return_data[50 len 14] - arg2 and 997 > -1 / ext_call.return_data[50 len 14] - arg2:
                                        revert with 0, 17
                                    if not ext_call.return_data[50 len 14] - arg2:
                                        revert with 0, 18
                                    if (997 * ext_call.return_data[50 len 14]) - (997 * arg2) / ext_call.return_data[50 len 14] - arg2 != 997:
                                        revert with 0, 'SafeMath: multiplication overflow', mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                                    if not (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                        revert with 0, 18
                                    if 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2) > -2:
                                        revert with 0, 17
                                    if (0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2)) + 1 < 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                        revert with 0, 'SafeMath: addition overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                    if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                        mem[(10 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address, mem[(12 * ceil32(return_data.size)) + 510 len 20 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(14 * ceil32(return_data.size)) + 542 len 24 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    else:
                                        mem[(10 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                        mem[(10 * ceil32(return_data.size)) + 510] = 0
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).approve(address rg1, uint256 rg2) with:
                                             gas gas_remaining wei
                                            args 0x60ae616a2155ee3d9a68541ba4544862310933d4, 0, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                        mem[(10 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        mem[(12 * ceil32(return_data.size)) + 474] = 2
                                        mem[(12 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(12 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                        mem[(12 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(12 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        mem[(12 * ceil32(return_data.size)) + 606] = 0
                                        mem[(12 * ceil32(return_data.size)) + 638] = 160
                                        mem[(12 * ceil32(return_data.size)) + 734] = 2
                                        idx = 0
                                        s = (12 * ceil32(return_data.size)) + 766
                                        t = (12 * ceil32(return_data.size)) + 506
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(12 * ceil32(return_data.size)) + 670] = this.address
                                        mem[(12 * ceil32(return_data.size)) + 702] = block.timestamp
                                        require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                        call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                             gas gas_remaining wei
                                            args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1, 0, 160, address(this.address), block.timestamp, 2, mem[(12 * ceil32(return_data.size)) + 766 len 64]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(12 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (13 * ceil32(return_data.size)) + 570
                                        require return_data.size >= 32
                                        _4621 = mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32
                                        require mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                        require (12 * ceil32(return_data.size)) + return_data.size + 570 > (12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 601
                                        _4717 = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                        if mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                            revert with 0, 65
                                        if ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0 or (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307():
                                            revert with 0, 65
                                        mem[64] = (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                        mem[(13 * ceil32(return_data.size)) + 570] = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                        require _4621 + (32 * _4717) + 32 <= return_data.size
                                        mem[(13 * ceil32(return_data.size)) + 602 len 32 * _4717] = mem[(12 * ceil32(return_data.size)) + _4621 + 602 len 32 * _4717]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6445 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_6445] == bool(mem[_6445])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6829 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _6925 = mem[_6829]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _6925
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _6925
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _7213 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_7213] == bool(mem[_7213])
                                else:
                                    if ext_call.return_data[18 len 14] * arg2 and 1000 > -1 / ext_call.return_data[18 len 14] * arg2:
                                        revert with 0, 17
                                    if not ext_call.return_data[18 len 14] * arg2:
                                        revert with 0, 18
                                    if 1000 * ext_call.return_data[18 len 14] * arg2 / ext_call.return_data[18 len 14] * arg2 != 1000:
                                        revert with 0, 'SafeMath: multiplication overflow', mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                                    if arg2 > ext_call.return_data[50 len 14]:
                                        revert with 0, 'SafeMath: subtraction overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                    if ext_call.return_data[50 len 14] < arg2:
                                        revert with 0, 17
                                    if not ext_call.return_data[50 len 14] - arg2:
                                        revert with 0, 18
                                    if ext_call.return_data[50 len 14] - arg2 and 997 > -1 / ext_call.return_data[50 len 14] - arg2:
                                        revert with 0, 17
                                    if not ext_call.return_data[50 len 14] - arg2:
                                        revert with 0, 18
                                    if (997 * ext_call.return_data[50 len 14]) - (997 * arg2) / ext_call.return_data[50 len 14] - arg2 != 997:
                                        revert with 0, 'SafeMath: multiplication overflow', mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                                    if not (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                        revert with 0, 18
                                    if 1000 * ext_call.return_data[18 len 14] * arg2 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2) > -2:
                                        revert with 0, 17
                                    if (1000 * ext_call.return_data[18 len 14] * arg2 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2)) + 1 < 1000 * ext_call.return_data[18 len 14] * arg2 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                        revert with 0, 'SafeMath: addition overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                    if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                        mem[(10 * ceil32(return_data.size)) + 510] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address, mem[(12 * ceil32(return_data.size)) + 510 len 20 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(14 * ceil32(return_data.size)) + 542 len 24 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    else:
                                        mem[(10 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                        mem[(10 * ceil32(return_data.size)) + 510] = 0
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).approve(address rg1, uint256 rg2) with:
                                             gas gas_remaining wei
                                            args 0x60ae616a2155ee3d9a68541ba4544862310933d4, 0, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                        mem[(10 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        mem[(12 * ceil32(return_data.size)) + 474] = 2
                                        mem[(12 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(12 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                        mem[(12 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(12 * ceil32(return_data.size)) + 574] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        mem[(12 * ceil32(return_data.size)) + 606] = 0
                                        mem[(12 * ceil32(return_data.size)) + 638] = 160
                                        mem[(12 * ceil32(return_data.size)) + 734] = 2
                                        idx = 0
                                        s = (12 * ceil32(return_data.size)) + 766
                                        t = (12 * ceil32(return_data.size)) + 506
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(12 * ceil32(return_data.size)) + 670] = this.address
                                        mem[(12 * ceil32(return_data.size)) + 702] = block.timestamp
                                        require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                        call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                             gas gas_remaining wei
                                            args (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1, 0, 160, address(this.address), block.timestamp, 2, mem[(12 * ceil32(return_data.size)) + 766 len 64]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(12 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (13 * ceil32(return_data.size)) + 570
                                        require return_data.size >= 32
                                        _4620 = mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32
                                        require mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                        require (12 * ceil32(return_data.size)) + return_data.size + 570 > (12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 601
                                        _4716 = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                        if mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                            revert with 0, 65
                                        if ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0 or (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307():
                                            revert with 0, 65
                                        mem[64] = (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                        mem[(13 * ceil32(return_data.size)) + 570] = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                        require _4620 + (32 * _4716) + 32 <= return_data.size
                                        mem[(13 * ceil32(return_data.size)) + 602 len 32 * _4716] = mem[(12 * ceil32(return_data.size)) + _4620 + 602 len 32 * _4716]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6444 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_6444] == bool(mem[_6444])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6828 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _6924 = mem[_6828]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _6924
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _6924
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _7212 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_7212] == bool(mem[_7212])
            else:
                if address(ext_call.return_data[0]) < address(ext_call.return_data[0]):
                    if address(ext_call.return_data[0]) < address(ext_call.return_data[0]):
                        if address(ext_call.return_data[0]) == address(ext_call.return_data[0]):
                            if ext_call.return_data[50 len 14] <= 0:
                                revert with 0, 
                                            'SpiritswapLibrary: INSUFFICIENT_LIQUIDITY',
                                            mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                            if ext_call.return_data[18 len 14] <= 0:
                                revert with 0, 
                                            'SpiritswapLibrary: INSUFFICIENT_LIQUIDITY',
                                            mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                            if not ext_call.return_data[50 len 14]:
                                if arg2 > ext_call.return_data[18 len 14]:
                                    revert with 0, 'SafeMath: subtraction overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                if ext_call.return_data[18 len 14] < arg2:
                                    revert with 0, 17
                                if not ext_call.return_data[18 len 14] - arg2:
                                    revert with 0, 18
                                if ext_call.return_data[18 len 14] - arg2 and 997 > -1 / ext_call.return_data[18 len 14] - arg2:
                                    revert with 0, 17
                                if not ext_call.return_data[18 len 14] - arg2:
                                    revert with 0, 18
                                if (997 * ext_call.return_data[18 len 14]) - (997 * arg2) / ext_call.return_data[18 len 14] - arg2 != 997:
                                    revert with 0, 'SafeMath: multiplication overflow', mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                                if not (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                    revert with 0, 18
                                if 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2) > -2:
                                    revert with 0, 17
                                if (0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2)) + 1 < 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                    revert with 0, 'SafeMath: addition overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                    mem[(10 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(12 * ceil32(return_data.size)) + 510 len 20 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(14 * ceil32(return_data.size)) + 542 len 24 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(10 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                    mem[(10 * ceil32(return_data.size)) + 510] = 0
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).approve(address rg1, uint256 rg2) with:
                                         gas gas_remaining wei
                                        args 0x60ae616a2155ee3d9a68541ba4544862310933d4, 0, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                    mem[(10 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(12 * ceil32(return_data.size)) + 474] = 2
                                    mem[(12 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                    mem[(12 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(12 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(12 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    mem[(12 * ceil32(return_data.size)) + 606] = 0
                                    mem[(12 * ceil32(return_data.size)) + 638] = 160
                                    mem[(12 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (12 * ceil32(return_data.size)) + 766
                                    t = (12 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(12 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(12 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                    call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                         gas gas_remaining wei
                                        args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1, 0, 160, address(this.address), block.timestamp, 2, mem[(12 * ceil32(return_data.size)) + 766 len 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(12 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (13 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _4625 = mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32
                                    require mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                    require (12 * ceil32(return_data.size)) + return_data.size + 570 > (12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 601
                                    _4721 = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                    if mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                        revert with 0, 65
                                    if ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0 or (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307():
                                        revert with 0, 65
                                    mem[64] = (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                    mem[(13 * ceil32(return_data.size)) + 570] = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                    require _4625 + (32 * _4721) + 32 <= return_data.size
                                    mem[(13 * ceil32(return_data.size)) + 602 len 32 * _4721] = mem[(12 * ceil32(return_data.size)) + _4625 + 602 len 32 * _4721]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _6449 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_6449] == bool(mem[_6449])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _6833 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _6929 = mem[_6833]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _6929
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _6929
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7217 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7217] == bool(mem[_7217])
                            else:
                                if ext_call.return_data[50 len 14] and arg2 > -1 / ext_call.return_data[50 len 14]:
                                    revert with 0, 17
                                if not ext_call.return_data[50 len 14]:
                                    revert with 0, 18
                                if ext_call.return_data[50 len 14] * arg2 / ext_call.return_data[50 len 14] != arg2:
                                    revert with 0, 'SafeMath: multiplication overflow', mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                                if not ext_call.return_data[50 len 14] * arg2:
                                    if arg2 > ext_call.return_data[18 len 14]:
                                        revert with 0, 'SafeMath: subtraction overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                    if ext_call.return_data[18 len 14] < arg2:
                                        revert with 0, 17
                                    if not ext_call.return_data[18 len 14] - arg2:
                                        revert with 0, 18
                                    if ext_call.return_data[18 len 14] - arg2 and 997 > -1 / ext_call.return_data[18 len 14] - arg2:
                                        revert with 0, 17
                                    if not ext_call.return_data[18 len 14] - arg2:
                                        revert with 0, 18
                                    if (997 * ext_call.return_data[18 len 14]) - (997 * arg2) / ext_call.return_data[18 len 14] - arg2 != 997:
                                        revert with 0, 'SafeMath: multiplication overflow', mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                                    if not (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                        revert with 0, 18
                                    if 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2) > -2:
                                        revert with 0, 17
                                    if (0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2)) + 1 < 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                        revert with 0, 'SafeMath: addition overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                    if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                        mem[(10 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address, mem[(12 * ceil32(return_data.size)) + 510 len 20 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(14 * ceil32(return_data.size)) + 542 len 24 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    else:
                                        mem[(10 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                        mem[(10 * ceil32(return_data.size)) + 510] = 0
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).approve(address rg1, uint256 rg2) with:
                                             gas gas_remaining wei
                                            args 0x60ae616a2155ee3d9a68541ba4544862310933d4, 0, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                        mem[(10 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        mem[(12 * ceil32(return_data.size)) + 474] = 2
                                        mem[(12 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(12 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                        mem[(12 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(12 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        mem[(12 * ceil32(return_data.size)) + 606] = 0
                                        mem[(12 * ceil32(return_data.size)) + 638] = 160
                                        mem[(12 * ceil32(return_data.size)) + 734] = 2
                                        idx = 0
                                        s = (12 * ceil32(return_data.size)) + 766
                                        t = (12 * ceil32(return_data.size)) + 506
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(12 * ceil32(return_data.size)) + 670] = this.address
                                        mem[(12 * ceil32(return_data.size)) + 702] = block.timestamp
                                        require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                        call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                             gas gas_remaining wei
                                            args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1, 0, 160, address(this.address), block.timestamp, 2, mem[(12 * ceil32(return_data.size)) + 766 len 64]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(12 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (13 * ceil32(return_data.size)) + 570
                                        require return_data.size >= 32
                                        _4624 = mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32
                                        require mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                        require (12 * ceil32(return_data.size)) + return_data.size + 570 > (12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 601
                                        _4720 = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                        if mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                            revert with 0, 65
                                        if ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0 or (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307():
                                            revert with 0, 65
                                        mem[64] = (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                        mem[(13 * ceil32(return_data.size)) + 570] = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                        require _4624 + (32 * _4720) + 32 <= return_data.size
                                        mem[(13 * ceil32(return_data.size)) + 602 len 32 * _4720] = mem[(12 * ceil32(return_data.size)) + _4624 + 602 len 32 * _4720]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6448 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_6448] == bool(mem[_6448])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6832 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _6928 = mem[_6832]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _6928
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _6928
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _7216 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_7216] == bool(mem[_7216])
                                else:
                                    if ext_call.return_data[50 len 14] * arg2 and 1000 > -1 / ext_call.return_data[50 len 14] * arg2:
                                        revert with 0, 17
                                    if not ext_call.return_data[50 len 14] * arg2:
                                        revert with 0, 18
                                    if 1000 * ext_call.return_data[50 len 14] * arg2 / ext_call.return_data[50 len 14] * arg2 != 1000:
                                        revert with 0, 'SafeMath: multiplication overflow', mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                                    if arg2 > ext_call.return_data[18 len 14]:
                                        revert with 0, 'SafeMath: subtraction overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                    if ext_call.return_data[18 len 14] < arg2:
                                        revert with 0, 17
                                    if not ext_call.return_data[18 len 14] - arg2:
                                        revert with 0, 18
                                    if ext_call.return_data[18 len 14] - arg2 and 997 > -1 / ext_call.return_data[18 len 14] - arg2:
                                        revert with 0, 17
                                    if not ext_call.return_data[18 len 14] - arg2:
                                        revert with 0, 18
                                    if (997 * ext_call.return_data[18 len 14]) - (997 * arg2) / ext_call.return_data[18 len 14] - arg2 != 997:
                                        revert with 0, 'SafeMath: multiplication overflow', mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                                    if not (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                        revert with 0, 18
                                    if 1000 * ext_call.return_data[50 len 14] * arg2 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2) > -2:
                                        revert with 0, 17
                                    if (1000 * ext_call.return_data[50 len 14] * arg2 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2)) + 1 < 1000 * ext_call.return_data[50 len 14] * arg2 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                        revert with 0, 'SafeMath: addition overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                    if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                        mem[(10 * ceil32(return_data.size)) + 510] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address, mem[(12 * ceil32(return_data.size)) + 510 len 20 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(14 * ceil32(return_data.size)) + 542 len 24 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    else:
                                        mem[(10 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                        mem[(10 * ceil32(return_data.size)) + 510] = 0
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).approve(address rg1, uint256 rg2) with:
                                             gas gas_remaining wei
                                            args 0x60ae616a2155ee3d9a68541ba4544862310933d4, 0, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                        mem[(10 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        mem[(12 * ceil32(return_data.size)) + 474] = 2
                                        mem[(12 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(12 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                        mem[(12 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(12 * ceil32(return_data.size)) + 574] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        mem[(12 * ceil32(return_data.size)) + 606] = 0
                                        mem[(12 * ceil32(return_data.size)) + 638] = 160
                                        mem[(12 * ceil32(return_data.size)) + 734] = 2
                                        idx = 0
                                        s = (12 * ceil32(return_data.size)) + 766
                                        t = (12 * ceil32(return_data.size)) + 506
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(12 * ceil32(return_data.size)) + 670] = this.address
                                        mem[(12 * ceil32(return_data.size)) + 702] = block.timestamp
                                        require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                        call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                             gas gas_remaining wei
                                            args (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1, 0, 160, address(this.address), block.timestamp, 2, mem[(12 * ceil32(return_data.size)) + 766 len 64]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(12 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (13 * ceil32(return_data.size)) + 570
                                        require return_data.size >= 32
                                        _4623 = mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32
                                        require mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                        require (12 * ceil32(return_data.size)) + return_data.size + 570 > (12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 601
                                        _4719 = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                        if mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                            revert with 0, 65
                                        if ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0 or (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307():
                                            revert with 0, 65
                                        mem[64] = (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                        mem[(13 * ceil32(return_data.size)) + 570] = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                        require _4623 + (32 * _4719) + 32 <= return_data.size
                                        mem[(13 * ceil32(return_data.size)) + 602 len 32 * _4719] = mem[(12 * ceil32(return_data.size)) + _4623 + 602 len 32 * _4719]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6447 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_6447] == bool(mem[_6447])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6831 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _6927 = mem[_6831]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _6927
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _6927
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _7215 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_7215] == bool(mem[_7215])
                        else:
                            if ext_call.return_data[18 len 14] <= 0:
                                revert with 0, 
                                            'SpiritswapLibrary: INSUFFICIENT_LIQUIDITY',
                                            mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                            if ext_call.return_data[50 len 14] <= 0:
                                revert with 0, 
                                            'SpiritswapLibrary: INSUFFICIENT_LIQUIDITY',
                                            mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                            if not ext_call.return_data[18 len 14]:
                                if arg2 > ext_call.return_data[50 len 14]:
                                    revert with 0, 'SafeMath: subtraction overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                if ext_call.return_data[50 len 14] < arg2:
                                    revert with 0, 17
                                if not ext_call.return_data[50 len 14] - arg2:
                                    revert with 0, 18
                                if ext_call.return_data[50 len 14] - arg2 and 997 > -1 / ext_call.return_data[50 len 14] - arg2:
                                    revert with 0, 17
                                if not ext_call.return_data[50 len 14] - arg2:
                                    revert with 0, 18
                                if (997 * ext_call.return_data[50 len 14]) - (997 * arg2) / ext_call.return_data[50 len 14] - arg2 != 997:
                                    revert with 0, 'SafeMath: multiplication overflow', mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                                if not (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                    revert with 0, 18
                                if 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2) > -2:
                                    revert with 0, 17
                                if (0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2)) + 1 < 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                    revert with 0, 'SafeMath: addition overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                    mem[(10 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(12 * ceil32(return_data.size)) + 510 len 20 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(14 * ceil32(return_data.size)) + 542 len 24 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(10 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                    mem[(10 * ceil32(return_data.size)) + 510] = 0
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).approve(address rg1, uint256 rg2) with:
                                         gas gas_remaining wei
                                        args 0x60ae616a2155ee3d9a68541ba4544862310933d4, 0, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                    mem[(10 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(12 * ceil32(return_data.size)) + 474] = 2
                                    mem[(12 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                    mem[(12 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(12 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(12 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    mem[(12 * ceil32(return_data.size)) + 606] = 0
                                    mem[(12 * ceil32(return_data.size)) + 638] = 160
                                    mem[(12 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (12 * ceil32(return_data.size)) + 766
                                    t = (12 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(12 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(12 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                    call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                         gas gas_remaining wei
                                        args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1, 0, 160, address(this.address), block.timestamp, 2, mem[(12 * ceil32(return_data.size)) + 766 len 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(12 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (13 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _4628 = mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32
                                    require mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                    require (12 * ceil32(return_data.size)) + return_data.size + 570 > (12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 601
                                    _4724 = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                    if mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                        revert with 0, 65
                                    if ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0 or (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307():
                                        revert with 0, 65
                                    mem[64] = (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                    mem[(13 * ceil32(return_data.size)) + 570] = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                    require _4628 + (32 * _4724) + 32 <= return_data.size
                                    mem[(13 * ceil32(return_data.size)) + 602 len 32 * _4724] = mem[(12 * ceil32(return_data.size)) + _4628 + 602 len 32 * _4724]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _6452 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_6452] == bool(mem[_6452])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _6836 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _6932 = mem[_6836]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _6932
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _6932
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7220 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7220] == bool(mem[_7220])
                            else:
                                if ext_call.return_data[18 len 14] and arg2 > -1 / ext_call.return_data[18 len 14]:
                                    revert with 0, 17
                                if not ext_call.return_data[18 len 14]:
                                    revert with 0, 18
                                if ext_call.return_data[18 len 14] * arg2 / ext_call.return_data[18 len 14] != arg2:
                                    revert with 0, 'SafeMath: multiplication overflow', mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                                if not ext_call.return_data[18 len 14] * arg2:
                                    if arg2 > ext_call.return_data[50 len 14]:
                                        revert with 0, 'SafeMath: subtraction overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                    if ext_call.return_data[50 len 14] < arg2:
                                        revert with 0, 17
                                    if not ext_call.return_data[50 len 14] - arg2:
                                        revert with 0, 18
                                    if ext_call.return_data[50 len 14] - arg2 and 997 > -1 / ext_call.return_data[50 len 14] - arg2:
                                        revert with 0, 17
                                    if not ext_call.return_data[50 len 14] - arg2:
                                        revert with 0, 18
                                    if (997 * ext_call.return_data[50 len 14]) - (997 * arg2) / ext_call.return_data[50 len 14] - arg2 != 997:
                                        revert with 0, 'SafeMath: multiplication overflow', mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                                    if not (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                        revert with 0, 18
                                    if 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2) > -2:
                                        revert with 0, 17
                                    if (0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2)) + 1 < 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                        revert with 0, 'SafeMath: addition overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                    if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                        mem[(10 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address, mem[(12 * ceil32(return_data.size)) + 510 len 20 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(14 * ceil32(return_data.size)) + 542 len 24 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    else:
                                        mem[(10 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                        mem[(10 * ceil32(return_data.size)) + 510] = 0
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).approve(address rg1, uint256 rg2) with:
                                             gas gas_remaining wei
                                            args 0x60ae616a2155ee3d9a68541ba4544862310933d4, 0, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                        mem[(10 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        mem[(12 * ceil32(return_data.size)) + 474] = 2
                                        mem[(12 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(12 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                        mem[(12 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(12 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        mem[(12 * ceil32(return_data.size)) + 606] = 0
                                        mem[(12 * ceil32(return_data.size)) + 638] = 160
                                        mem[(12 * ceil32(return_data.size)) + 734] = 2
                                        idx = 0
                                        s = (12 * ceil32(return_data.size)) + 766
                                        t = (12 * ceil32(return_data.size)) + 506
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(12 * ceil32(return_data.size)) + 670] = this.address
                                        mem[(12 * ceil32(return_data.size)) + 702] = block.timestamp
                                        require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                        call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                             gas gas_remaining wei
                                            args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1, 0, 160, address(this.address), block.timestamp, 2, mem[(12 * ceil32(return_data.size)) + 766 len 64]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(12 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (13 * ceil32(return_data.size)) + 570
                                        require return_data.size >= 32
                                        _4627 = mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32
                                        require mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                        require (12 * ceil32(return_data.size)) + return_data.size + 570 > (12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 601
                                        _4723 = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                        if mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                            revert with 0, 65
                                        if ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0 or (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307():
                                            revert with 0, 65
                                        mem[64] = (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                        mem[(13 * ceil32(return_data.size)) + 570] = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                        require _4627 + (32 * _4723) + 32 <= return_data.size
                                        mem[(13 * ceil32(return_data.size)) + 602 len 32 * _4723] = mem[(12 * ceil32(return_data.size)) + _4627 + 602 len 32 * _4723]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6451 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_6451] == bool(mem[_6451])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6835 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _6931 = mem[_6835]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _6931
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _6931
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _7219 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_7219] == bool(mem[_7219])
                                else:
                                    if ext_call.return_data[18 len 14] * arg2 and 1000 > -1 / ext_call.return_data[18 len 14] * arg2:
                                        revert with 0, 17
                                    if not ext_call.return_data[18 len 14] * arg2:
                                        revert with 0, 18
                                    if 1000 * ext_call.return_data[18 len 14] * arg2 / ext_call.return_data[18 len 14] * arg2 != 1000:
                                        revert with 0, 'SafeMath: multiplication overflow', mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                                    if arg2 > ext_call.return_data[50 len 14]:
                                        revert with 0, 'SafeMath: subtraction overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                    if ext_call.return_data[50 len 14] < arg2:
                                        revert with 0, 17
                                    if not ext_call.return_data[50 len 14] - arg2:
                                        revert with 0, 18
                                    if ext_call.return_data[50 len 14] - arg2 and 997 > -1 / ext_call.return_data[50 len 14] - arg2:
                                        revert with 0, 17
                                    if not ext_call.return_data[50 len 14] - arg2:
                                        revert with 0, 18
                                    if (997 * ext_call.return_data[50 len 14]) - (997 * arg2) / ext_call.return_data[50 len 14] - arg2 != 997:
                                        revert with 0, 'SafeMath: multiplication overflow', mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                                    if not (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                        revert with 0, 18
                                    if 1000 * ext_call.return_data[18 len 14] * arg2 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2) > -2:
                                        revert with 0, 17
                                    if (1000 * ext_call.return_data[18 len 14] * arg2 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2)) + 1 < 1000 * ext_call.return_data[18 len 14] * arg2 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                        revert with 0, 'SafeMath: addition overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                    if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                        mem[(10 * ceil32(return_data.size)) + 510] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address, mem[(12 * ceil32(return_data.size)) + 510 len 20 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(14 * ceil32(return_data.size)) + 542 len 24 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    else:
                                        mem[(10 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                        mem[(10 * ceil32(return_data.size)) + 510] = 0
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).approve(address rg1, uint256 rg2) with:
                                             gas gas_remaining wei
                                            args 0x60ae616a2155ee3d9a68541ba4544862310933d4, 0, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                        mem[(10 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        mem[(12 * ceil32(return_data.size)) + 474] = 2
                                        mem[(12 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(12 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                        mem[(12 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(12 * ceil32(return_data.size)) + 574] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        mem[(12 * ceil32(return_data.size)) + 606] = 0
                                        mem[(12 * ceil32(return_data.size)) + 638] = 160
                                        mem[(12 * ceil32(return_data.size)) + 734] = 2
                                        idx = 0
                                        s = (12 * ceil32(return_data.size)) + 766
                                        t = (12 * ceil32(return_data.size)) + 506
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(12 * ceil32(return_data.size)) + 670] = this.address
                                        mem[(12 * ceil32(return_data.size)) + 702] = block.timestamp
                                        require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                        call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                             gas gas_remaining wei
                                            args (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1, 0, 160, address(this.address), block.timestamp, 2, mem[(12 * ceil32(return_data.size)) + 766 len 64]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(12 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (13 * ceil32(return_data.size)) + 570
                                        require return_data.size >= 32
                                        _4626 = mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32
                                        require mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                        require (12 * ceil32(return_data.size)) + return_data.size + 570 > (12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 601
                                        _4722 = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                        if mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                            revert with 0, 65
                                        if ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0 or (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307():
                                            revert with 0, 65
                                        mem[64] = (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                        mem[(13 * ceil32(return_data.size)) + 570] = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                        require _4626 + (32 * _4722) + 32 <= return_data.size
                                        mem[(13 * ceil32(return_data.size)) + 602 len 32 * _4722] = mem[(12 * ceil32(return_data.size)) + _4626 + 602 len 32 * _4722]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6450 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_6450] == bool(mem[_6450])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6834 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _6930 = mem[_6834]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _6930
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _6930
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _7218 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_7218] == bool(mem[_7218])
                    else:
                        if address(ext_call.return_data[0]) == address(ext_call.return_data[0]):
                            if ext_call.return_data[50 len 14] <= 0:
                                revert with 0, 
                                            'SpiritswapLibrary: INSUFFICIENT_LIQUIDITY',
                                            mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                            if ext_call.return_data[18 len 14] <= 0:
                                revert with 0, 
                                            'SpiritswapLibrary: INSUFFICIENT_LIQUIDITY',
                                            mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                            if not ext_call.return_data[50 len 14]:
                                if arg2 > ext_call.return_data[18 len 14]:
                                    revert with 0, 'SafeMath: subtraction overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                if ext_call.return_data[18 len 14] < arg2:
                                    revert with 0, 17
                                if not ext_call.return_data[18 len 14] - arg2:
                                    revert with 0, 18
                                if ext_call.return_data[18 len 14] - arg2 and 997 > -1 / ext_call.return_data[18 len 14] - arg2:
                                    revert with 0, 17
                                if not ext_call.return_data[18 len 14] - arg2:
                                    revert with 0, 18
                                if (997 * ext_call.return_data[18 len 14]) - (997 * arg2) / ext_call.return_data[18 len 14] - arg2 != 997:
                                    revert with 0, 'SafeMath: multiplication overflow', mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                                if not (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                    revert with 0, 18
                                if 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2) > -2:
                                    revert with 0, 17
                                if (0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2)) + 1 < 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                    revert with 0, 'SafeMath: addition overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                    mem[(10 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(12 * ceil32(return_data.size)) + 510 len 20 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(14 * ceil32(return_data.size)) + 542 len 24 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(10 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                    mem[(10 * ceil32(return_data.size)) + 510] = 0
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).approve(address rg1, uint256 rg2) with:
                                         gas gas_remaining wei
                                        args 0x60ae616a2155ee3d9a68541ba4544862310933d4, 0, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                    mem[(10 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(12 * ceil32(return_data.size)) + 474] = 2
                                    mem[(12 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                    mem[(12 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(12 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(12 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    mem[(12 * ceil32(return_data.size)) + 606] = 0
                                    mem[(12 * ceil32(return_data.size)) + 638] = 160
                                    mem[(12 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (12 * ceil32(return_data.size)) + 766
                                    t = (12 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(12 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(12 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                    call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                         gas gas_remaining wei
                                        args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1, 0, 160, address(this.address), block.timestamp, 2, mem[(12 * ceil32(return_data.size)) + 766 len 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(12 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (13 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _4631 = mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32
                                    require mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                    require (12 * ceil32(return_data.size)) + return_data.size + 570 > (12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 601
                                    _4727 = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                    if mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                        revert with 0, 65
                                    if ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0 or (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307():
                                        revert with 0, 65
                                    mem[64] = (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                    mem[(13 * ceil32(return_data.size)) + 570] = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                    require _4631 + (32 * _4727) + 32 <= return_data.size
                                    mem[(13 * ceil32(return_data.size)) + 602 len 32 * _4727] = mem[(12 * ceil32(return_data.size)) + _4631 + 602 len 32 * _4727]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _6455 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_6455] == bool(mem[_6455])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _6839 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _6935 = mem[_6839]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _6935
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _6935
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7223 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7223] == bool(mem[_7223])
                            else:
                                if ext_call.return_data[50 len 14] and arg2 > -1 / ext_call.return_data[50 len 14]:
                                    revert with 0, 17
                                if not ext_call.return_data[50 len 14]:
                                    revert with 0, 18
                                if ext_call.return_data[50 len 14] * arg2 / ext_call.return_data[50 len 14] != arg2:
                                    revert with 0, 'SafeMath: multiplication overflow', mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                                if not ext_call.return_data[50 len 14] * arg2:
                                    if arg2 > ext_call.return_data[18 len 14]:
                                        revert with 0, 'SafeMath: subtraction overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                    if ext_call.return_data[18 len 14] < arg2:
                                        revert with 0, 17
                                    if not ext_call.return_data[18 len 14] - arg2:
                                        revert with 0, 18
                                    if ext_call.return_data[18 len 14] - arg2 and 997 > -1 / ext_call.return_data[18 len 14] - arg2:
                                        revert with 0, 17
                                    if not ext_call.return_data[18 len 14] - arg2:
                                        revert with 0, 18
                                    if (997 * ext_call.return_data[18 len 14]) - (997 * arg2) / ext_call.return_data[18 len 14] - arg2 != 997:
                                        revert with 0, 'SafeMath: multiplication overflow', mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                                    if not (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                        revert with 0, 18
                                    if 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2) > -2:
                                        revert with 0, 17
                                    if (0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2)) + 1 < 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                        revert with 0, 'SafeMath: addition overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                    if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                        mem[(10 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address, mem[(12 * ceil32(return_data.size)) + 510 len 20 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(14 * ceil32(return_data.size)) + 542 len 24 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    else:
                                        mem[(10 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                        mem[(10 * ceil32(return_data.size)) + 510] = 0
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).approve(address rg1, uint256 rg2) with:
                                             gas gas_remaining wei
                                            args 0x60ae616a2155ee3d9a68541ba4544862310933d4, 0, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                        mem[(10 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        mem[(12 * ceil32(return_data.size)) + 474] = 2
                                        mem[(12 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(12 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                        mem[(12 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(12 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        mem[(12 * ceil32(return_data.size)) + 606] = 0
                                        mem[(12 * ceil32(return_data.size)) + 638] = 160
                                        mem[(12 * ceil32(return_data.size)) + 734] = 2
                                        idx = 0
                                        s = (12 * ceil32(return_data.size)) + 766
                                        t = (12 * ceil32(return_data.size)) + 506
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(12 * ceil32(return_data.size)) + 670] = this.address
                                        mem[(12 * ceil32(return_data.size)) + 702] = block.timestamp
                                        require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                        call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                             gas gas_remaining wei
                                            args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1, 0, 160, address(this.address), block.timestamp, 2, mem[(12 * ceil32(return_data.size)) + 766 len 64]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(12 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (13 * ceil32(return_data.size)) + 570
                                        require return_data.size >= 32
                                        _4630 = mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32
                                        require mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                        require (12 * ceil32(return_data.size)) + return_data.size + 570 > (12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 601
                                        _4726 = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                        if mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                            revert with 0, 65
                                        if ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0 or (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307():
                                            revert with 0, 65
                                        mem[64] = (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                        mem[(13 * ceil32(return_data.size)) + 570] = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                        require _4630 + (32 * _4726) + 32 <= return_data.size
                                        mem[(13 * ceil32(return_data.size)) + 602 len 32 * _4726] = mem[(12 * ceil32(return_data.size)) + _4630 + 602 len 32 * _4726]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6454 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_6454] == bool(mem[_6454])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6838 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _6934 = mem[_6838]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _6934
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _6934
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _7222 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_7222] == bool(mem[_7222])
                                else:
                                    if ext_call.return_data[50 len 14] * arg2 and 1000 > -1 / ext_call.return_data[50 len 14] * arg2:
                                        revert with 0, 17
                                    if not ext_call.return_data[50 len 14] * arg2:
                                        revert with 0, 18
                                    if 1000 * ext_call.return_data[50 len 14] * arg2 / ext_call.return_data[50 len 14] * arg2 != 1000:
                                        revert with 0, 'SafeMath: multiplication overflow', mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                                    if arg2 > ext_call.return_data[18 len 14]:
                                        revert with 0, 'SafeMath: subtraction overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                    if ext_call.return_data[18 len 14] < arg2:
                                        revert with 0, 17
                                    if not ext_call.return_data[18 len 14] - arg2:
                                        revert with 0, 18
                                    if ext_call.return_data[18 len 14] - arg2 and 997 > -1 / ext_call.return_data[18 len 14] - arg2:
                                        revert with 0, 17
                                    if not ext_call.return_data[18 len 14] - arg2:
                                        revert with 0, 18
                                    if (997 * ext_call.return_data[18 len 14]) - (997 * arg2) / ext_call.return_data[18 len 14] - arg2 != 997:
                                        revert with 0, 'SafeMath: multiplication overflow', mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                                    if not (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                        revert with 0, 18
                                    if 1000 * ext_call.return_data[50 len 14] * arg2 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2) > -2:
                                        revert with 0, 17
                                    if (1000 * ext_call.return_data[50 len 14] * arg2 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2)) + 1 < 1000 * ext_call.return_data[50 len 14] * arg2 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                        revert with 0, 'SafeMath: addition overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                    if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                        mem[(10 * ceil32(return_data.size)) + 510] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address, mem[(12 * ceil32(return_data.size)) + 510 len 20 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(14 * ceil32(return_data.size)) + 542 len 24 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    else:
                                        mem[(10 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                        mem[(10 * ceil32(return_data.size)) + 510] = 0
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).approve(address rg1, uint256 rg2) with:
                                             gas gas_remaining wei
                                            args 0x60ae616a2155ee3d9a68541ba4544862310933d4, 0, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                        mem[(10 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        mem[(12 * ceil32(return_data.size)) + 474] = 2
                                        mem[(12 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(12 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                        mem[(12 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(12 * ceil32(return_data.size)) + 574] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        mem[(12 * ceil32(return_data.size)) + 606] = 0
                                        mem[(12 * ceil32(return_data.size)) + 638] = 160
                                        mem[(12 * ceil32(return_data.size)) + 734] = 2
                                        idx = 0
                                        s = (12 * ceil32(return_data.size)) + 766
                                        t = (12 * ceil32(return_data.size)) + 506
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(12 * ceil32(return_data.size)) + 670] = this.address
                                        mem[(12 * ceil32(return_data.size)) + 702] = block.timestamp
                                        require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                        call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                             gas gas_remaining wei
                                            args (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1, 0, 160, address(this.address), block.timestamp, 2, mem[(12 * ceil32(return_data.size)) + 766 len 64]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(12 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (13 * ceil32(return_data.size)) + 570
                                        require return_data.size >= 32
                                        _4629 = mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32
                                        require mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                        require (12 * ceil32(return_data.size)) + return_data.size + 570 > (12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 601
                                        _4725 = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                        if mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                            revert with 0, 65
                                        if ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0 or (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307():
                                            revert with 0, 65
                                        mem[64] = (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                        mem[(13 * ceil32(return_data.size)) + 570] = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                        require _4629 + (32 * _4725) + 32 <= return_data.size
                                        mem[(13 * ceil32(return_data.size)) + 602 len 32 * _4725] = mem[(12 * ceil32(return_data.size)) + _4629 + 602 len 32 * _4725]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6453 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_6453] == bool(mem[_6453])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6837 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _6933 = mem[_6837]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _6933
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _6933
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _7221 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_7221] == bool(mem[_7221])
                        else:
                            if ext_call.return_data[18 len 14] <= 0:
                                revert with 0, 
                                            'SpiritswapLibrary: INSUFFICIENT_LIQUIDITY',
                                            mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                            if ext_call.return_data[50 len 14] <= 0:
                                revert with 0, 
                                            'SpiritswapLibrary: INSUFFICIENT_LIQUIDITY',
                                            mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                            if not ext_call.return_data[18 len 14]:
                                if arg2 > ext_call.return_data[50 len 14]:
                                    revert with 0, 'SafeMath: subtraction overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                if ext_call.return_data[50 len 14] < arg2:
                                    revert with 0, 17
                                if not ext_call.return_data[50 len 14] - arg2:
                                    revert with 0, 18
                                if ext_call.return_data[50 len 14] - arg2 and 997 > -1 / ext_call.return_data[50 len 14] - arg2:
                                    revert with 0, 17
                                if not ext_call.return_data[50 len 14] - arg2:
                                    revert with 0, 18
                                if (997 * ext_call.return_data[50 len 14]) - (997 * arg2) / ext_call.return_data[50 len 14] - arg2 != 997:
                                    revert with 0, 'SafeMath: multiplication overflow', mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                                if not (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                    revert with 0, 18
                                if 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2) > -2:
                                    revert with 0, 17
                                if (0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2)) + 1 < 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                    revert with 0, 'SafeMath: addition overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                    mem[(10 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(12 * ceil32(return_data.size)) + 510 len 20 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(14 * ceil32(return_data.size)) + 542 len 24 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(10 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                    mem[(10 * ceil32(return_data.size)) + 510] = 0
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).approve(address rg1, uint256 rg2) with:
                                         gas gas_remaining wei
                                        args 0x60ae616a2155ee3d9a68541ba4544862310933d4, 0, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                    mem[(10 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(12 * ceil32(return_data.size)) + 474] = 2
                                    mem[(12 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                    mem[(12 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(12 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(12 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    mem[(12 * ceil32(return_data.size)) + 606] = 0
                                    mem[(12 * ceil32(return_data.size)) + 638] = 160
                                    mem[(12 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (12 * ceil32(return_data.size)) + 766
                                    t = (12 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(12 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(12 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                    call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                         gas gas_remaining wei
                                        args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1, 0, 160, address(this.address), block.timestamp, 2, mem[(12 * ceil32(return_data.size)) + 766 len 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(12 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (13 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _4634 = mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32
                                    require mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                    require (12 * ceil32(return_data.size)) + return_data.size + 570 > (12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 601
                                    _4730 = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                    if mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                        revert with 0, 65
                                    if ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0 or (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307():
                                        revert with 0, 65
                                    mem[64] = (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                    mem[(13 * ceil32(return_data.size)) + 570] = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                    require _4634 + (32 * _4730) + 32 <= return_data.size
                                    mem[(13 * ceil32(return_data.size)) + 602 len 32 * _4730] = mem[(12 * ceil32(return_data.size)) + _4634 + 602 len 32 * _4730]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _6458 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_6458] == bool(mem[_6458])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _6842 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _6938 = mem[_6842]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _6938
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _6938
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7226 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7226] == bool(mem[_7226])
                            else:
                                if ext_call.return_data[18 len 14] and arg2 > -1 / ext_call.return_data[18 len 14]:
                                    revert with 0, 17
                                if not ext_call.return_data[18 len 14]:
                                    revert with 0, 18
                                if ext_call.return_data[18 len 14] * arg2 / ext_call.return_data[18 len 14] != arg2:
                                    revert with 0, 'SafeMath: multiplication overflow', mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                                if not ext_call.return_data[18 len 14] * arg2:
                                    if arg2 > ext_call.return_data[50 len 14]:
                                        revert with 0, 'SafeMath: subtraction overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                    if ext_call.return_data[50 len 14] < arg2:
                                        revert with 0, 17
                                    if not ext_call.return_data[50 len 14] - arg2:
                                        revert with 0, 18
                                    if ext_call.return_data[50 len 14] - arg2 and 997 > -1 / ext_call.return_data[50 len 14] - arg2:
                                        revert with 0, 17
                                    if not ext_call.return_data[50 len 14] - arg2:
                                        revert with 0, 18
                                    if (997 * ext_call.return_data[50 len 14]) - (997 * arg2) / ext_call.return_data[50 len 14] - arg2 != 997:
                                        revert with 0, 'SafeMath: multiplication overflow', mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                                    if not (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                        revert with 0, 18
                                    if 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2) > -2:
                                        revert with 0, 17
                                    if (0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2)) + 1 < 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                        revert with 0, 'SafeMath: addition overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                    if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                        mem[(10 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address, mem[(12 * ceil32(return_data.size)) + 510 len 20 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(14 * ceil32(return_data.size)) + 542 len 24 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    else:
                                        mem[(10 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                        mem[(10 * ceil32(return_data.size)) + 510] = 0
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).approve(address rg1, uint256 rg2) with:
                                             gas gas_remaining wei
                                            args 0x60ae616a2155ee3d9a68541ba4544862310933d4, 0, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                        mem[(10 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        mem[(12 * ceil32(return_data.size)) + 474] = 2
                                        mem[(12 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(12 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                        mem[(12 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(12 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        mem[(12 * ceil32(return_data.size)) + 606] = 0
                                        mem[(12 * ceil32(return_data.size)) + 638] = 160
                                        mem[(12 * ceil32(return_data.size)) + 734] = 2
                                        idx = 0
                                        s = (12 * ceil32(return_data.size)) + 766
                                        t = (12 * ceil32(return_data.size)) + 506
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(12 * ceil32(return_data.size)) + 670] = this.address
                                        mem[(12 * ceil32(return_data.size)) + 702] = block.timestamp
                                        require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                        call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                             gas gas_remaining wei
                                            args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1, 0, 160, address(this.address), block.timestamp, 2, mem[(12 * ceil32(return_data.size)) + 766 len 64]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(12 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (13 * ceil32(return_data.size)) + 570
                                        require return_data.size >= 32
                                        _4633 = mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32
                                        require mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                        require (12 * ceil32(return_data.size)) + return_data.size + 570 > (12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 601
                                        _4729 = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                        if mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                            revert with 0, 65
                                        if ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0 or (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307():
                                            revert with 0, 65
                                        mem[64] = (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                        mem[(13 * ceil32(return_data.size)) + 570] = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                        require _4633 + (32 * _4729) + 32 <= return_data.size
                                        mem[(13 * ceil32(return_data.size)) + 602 len 32 * _4729] = mem[(12 * ceil32(return_data.size)) + _4633 + 602 len 32 * _4729]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6457 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_6457] == bool(mem[_6457])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6841 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _6937 = mem[_6841]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _6937
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _6937
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _7225 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_7225] == bool(mem[_7225])
                                else:
                                    if ext_call.return_data[18 len 14] * arg2 and 1000 > -1 / ext_call.return_data[18 len 14] * arg2:
                                        revert with 0, 17
                                    if not ext_call.return_data[18 len 14] * arg2:
                                        revert with 0, 18
                                    if 1000 * ext_call.return_data[18 len 14] * arg2 / ext_call.return_data[18 len 14] * arg2 != 1000:
                                        revert with 0, 'SafeMath: multiplication overflow', mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                                    if arg2 > ext_call.return_data[50 len 14]:
                                        revert with 0, 'SafeMath: subtraction overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                    if ext_call.return_data[50 len 14] < arg2:
                                        revert with 0, 17
                                    if not ext_call.return_data[50 len 14] - arg2:
                                        revert with 0, 18
                                    if ext_call.return_data[50 len 14] - arg2 and 997 > -1 / ext_call.return_data[50 len 14] - arg2:
                                        revert with 0, 17
                                    if not ext_call.return_data[50 len 14] - arg2:
                                        revert with 0, 18
                                    if (997 * ext_call.return_data[50 len 14]) - (997 * arg2) / ext_call.return_data[50 len 14] - arg2 != 997:
                                        revert with 0, 'SafeMath: multiplication overflow', mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                                    if not (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                        revert with 0, 18
                                    if 1000 * ext_call.return_data[18 len 14] * arg2 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2) > -2:
                                        revert with 0, 17
                                    if (1000 * ext_call.return_data[18 len 14] * arg2 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2)) + 1 < 1000 * ext_call.return_data[18 len 14] * arg2 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                        revert with 0, 'SafeMath: addition overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                    if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                        mem[(10 * ceil32(return_data.size)) + 510] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address, mem[(12 * ceil32(return_data.size)) + 510 len 20 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(14 * ceil32(return_data.size)) + 542 len 24 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    else:
                                        mem[(10 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                        mem[(10 * ceil32(return_data.size)) + 510] = 0
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).approve(address rg1, uint256 rg2) with:
                                             gas gas_remaining wei
                                            args 0x60ae616a2155ee3d9a68541ba4544862310933d4, 0, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                        mem[(10 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        mem[(12 * ceil32(return_data.size)) + 474] = 2
                                        mem[(12 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(12 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                        mem[(12 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(12 * ceil32(return_data.size)) + 574] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        mem[(12 * ceil32(return_data.size)) + 606] = 0
                                        mem[(12 * ceil32(return_data.size)) + 638] = 160
                                        mem[(12 * ceil32(return_data.size)) + 734] = 2
                                        idx = 0
                                        s = (12 * ceil32(return_data.size)) + 766
                                        t = (12 * ceil32(return_data.size)) + 506
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(12 * ceil32(return_data.size)) + 670] = this.address
                                        mem[(12 * ceil32(return_data.size)) + 702] = block.timestamp
                                        require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                        call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                             gas gas_remaining wei
                                            args (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1, 0, 160, address(this.address), block.timestamp, 2, mem[(12 * ceil32(return_data.size)) + 766 len 64]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(12 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (13 * ceil32(return_data.size)) + 570
                                        require return_data.size >= 32
                                        _4632 = mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32
                                        require mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                        require (12 * ceil32(return_data.size)) + return_data.size + 570 > (12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 601
                                        _4728 = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                        if mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                            revert with 0, 65
                                        if ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0 or (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307():
                                            revert with 0, 65
                                        mem[64] = (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                        mem[(13 * ceil32(return_data.size)) + 570] = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                        require _4632 + (32 * _4728) + 32 <= return_data.size
                                        mem[(13 * ceil32(return_data.size)) + 602 len 32 * _4728] = mem[(12 * ceil32(return_data.size)) + _4632 + 602 len 32 * _4728]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6456 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_6456] == bool(mem[_6456])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6840 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _6936 = mem[_6840]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _6936
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _6936
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _7224 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_7224] == bool(mem[_7224])
                else:
                    if address(ext_call.return_data[0]) < address(ext_call.return_data[0]):
                        if address(ext_call.return_data[0]) == address(ext_call.return_data[0]):
                            if ext_call.return_data[50 len 14] <= 0:
                                revert with 0, 
                                            'SpiritswapLibrary: INSUFFICIENT_LIQUIDITY',
                                            mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                            if ext_call.return_data[18 len 14] <= 0:
                                revert with 0, 
                                            'SpiritswapLibrary: INSUFFICIENT_LIQUIDITY',
                                            mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                            if not ext_call.return_data[50 len 14]:
                                if arg2 > ext_call.return_data[18 len 14]:
                                    revert with 0, 'SafeMath: subtraction overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                if ext_call.return_data[18 len 14] < arg2:
                                    revert with 0, 17
                                if not ext_call.return_data[18 len 14] - arg2:
                                    revert with 0, 18
                                if ext_call.return_data[18 len 14] - arg2 and 997 > -1 / ext_call.return_data[18 len 14] - arg2:
                                    revert with 0, 17
                                if not ext_call.return_data[18 len 14] - arg2:
                                    revert with 0, 18
                                if (997 * ext_call.return_data[18 len 14]) - (997 * arg2) / ext_call.return_data[18 len 14] - arg2 != 997:
                                    revert with 0, 'SafeMath: multiplication overflow', mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                                if not (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                    revert with 0, 18
                                if 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2) > -2:
                                    revert with 0, 17
                                if (0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2)) + 1 < 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                    revert with 0, 'SafeMath: addition overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                    mem[(10 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(12 * ceil32(return_data.size)) + 510 len 20 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(14 * ceil32(return_data.size)) + 542 len 24 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(10 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                    mem[(10 * ceil32(return_data.size)) + 510] = 0
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).approve(address rg1, uint256 rg2) with:
                                         gas gas_remaining wei
                                        args 0x60ae616a2155ee3d9a68541ba4544862310933d4, 0, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                    mem[(10 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(12 * ceil32(return_data.size)) + 474] = 2
                                    mem[(12 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                    mem[(12 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(12 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(12 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    mem[(12 * ceil32(return_data.size)) + 606] = 0
                                    mem[(12 * ceil32(return_data.size)) + 638] = 160
                                    mem[(12 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (12 * ceil32(return_data.size)) + 766
                                    t = (12 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(12 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(12 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                    call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                         gas gas_remaining wei
                                        args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1, 0, 160, address(this.address), block.timestamp, 2, mem[(12 * ceil32(return_data.size)) + 766 len 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(12 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (13 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _4637 = mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32
                                    require mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                    require (12 * ceil32(return_data.size)) + return_data.size + 570 > (12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 601
                                    _4733 = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                    if mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                        revert with 0, 65
                                    if ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0 or (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307():
                                        revert with 0, 65
                                    mem[64] = (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                    mem[(13 * ceil32(return_data.size)) + 570] = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                    require _4637 + (32 * _4733) + 32 <= return_data.size
                                    mem[(13 * ceil32(return_data.size)) + 602 len 32 * _4733] = mem[(12 * ceil32(return_data.size)) + _4637 + 602 len 32 * _4733]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _6461 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_6461] == bool(mem[_6461])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _6845 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _6941 = mem[_6845]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _6941
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _6941
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7229 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7229] == bool(mem[_7229])
                            else:
                                if ext_call.return_data[50 len 14] and arg2 > -1 / ext_call.return_data[50 len 14]:
                                    revert with 0, 17
                                if not ext_call.return_data[50 len 14]:
                                    revert with 0, 18
                                if ext_call.return_data[50 len 14] * arg2 / ext_call.return_data[50 len 14] != arg2:
                                    revert with 0, 'SafeMath: multiplication overflow', mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                                if not ext_call.return_data[50 len 14] * arg2:
                                    if arg2 > ext_call.return_data[18 len 14]:
                                        revert with 0, 'SafeMath: subtraction overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                    if ext_call.return_data[18 len 14] < arg2:
                                        revert with 0, 17
                                    if not ext_call.return_data[18 len 14] - arg2:
                                        revert with 0, 18
                                    if ext_call.return_data[18 len 14] - arg2 and 997 > -1 / ext_call.return_data[18 len 14] - arg2:
                                        revert with 0, 17
                                    if not ext_call.return_data[18 len 14] - arg2:
                                        revert with 0, 18
                                    if (997 * ext_call.return_data[18 len 14]) - (997 * arg2) / ext_call.return_data[18 len 14] - arg2 != 997:
                                        revert with 0, 'SafeMath: multiplication overflow', mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                                    if not (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                        revert with 0, 18
                                    if 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2) > -2:
                                        revert with 0, 17
                                    if (0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2)) + 1 < 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                        revert with 0, 'SafeMath: addition overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                    if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                        mem[(10 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address, mem[(12 * ceil32(return_data.size)) + 510 len 20 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(14 * ceil32(return_data.size)) + 542 len 24 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    else:
                                        mem[(10 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                        mem[(10 * ceil32(return_data.size)) + 510] = 0
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).approve(address rg1, uint256 rg2) with:
                                             gas gas_remaining wei
                                            args 0x60ae616a2155ee3d9a68541ba4544862310933d4, 0, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                        mem[(10 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        mem[(12 * ceil32(return_data.size)) + 474] = 2
                                        mem[(12 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(12 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                        mem[(12 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(12 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        mem[(12 * ceil32(return_data.size)) + 606] = 0
                                        mem[(12 * ceil32(return_data.size)) + 638] = 160
                                        mem[(12 * ceil32(return_data.size)) + 734] = 2
                                        idx = 0
                                        s = (12 * ceil32(return_data.size)) + 766
                                        t = (12 * ceil32(return_data.size)) + 506
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(12 * ceil32(return_data.size)) + 670] = this.address
                                        mem[(12 * ceil32(return_data.size)) + 702] = block.timestamp
                                        require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                        call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                             gas gas_remaining wei
                                            args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1, 0, 160, address(this.address), block.timestamp, 2, mem[(12 * ceil32(return_data.size)) + 766 len 64]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(12 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (13 * ceil32(return_data.size)) + 570
                                        require return_data.size >= 32
                                        _4636 = mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32
                                        require mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                        require (12 * ceil32(return_data.size)) + return_data.size + 570 > (12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 601
                                        _4732 = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                        if mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                            revert with 0, 65
                                        if ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0 or (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307():
                                            revert with 0, 65
                                        mem[64] = (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                        mem[(13 * ceil32(return_data.size)) + 570] = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                        require _4636 + (32 * _4732) + 32 <= return_data.size
                                        mem[(13 * ceil32(return_data.size)) + 602 len 32 * _4732] = mem[(12 * ceil32(return_data.size)) + _4636 + 602 len 32 * _4732]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6460 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_6460] == bool(mem[_6460])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6844 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _6940 = mem[_6844]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _6940
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _6940
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _7228 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_7228] == bool(mem[_7228])
                                else:
                                    if ext_call.return_data[50 len 14] * arg2 and 1000 > -1 / ext_call.return_data[50 len 14] * arg2:
                                        revert with 0, 17
                                    if not ext_call.return_data[50 len 14] * arg2:
                                        revert with 0, 18
                                    if 1000 * ext_call.return_data[50 len 14] * arg2 / ext_call.return_data[50 len 14] * arg2 != 1000:
                                        revert with 0, 'SafeMath: multiplication overflow', mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                                    if arg2 > ext_call.return_data[18 len 14]:
                                        revert with 0, 'SafeMath: subtraction overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                    if ext_call.return_data[18 len 14] < arg2:
                                        revert with 0, 17
                                    if not ext_call.return_data[18 len 14] - arg2:
                                        revert with 0, 18
                                    if ext_call.return_data[18 len 14] - arg2 and 997 > -1 / ext_call.return_data[18 len 14] - arg2:
                                        revert with 0, 17
                                    if not ext_call.return_data[18 len 14] - arg2:
                                        revert with 0, 18
                                    if (997 * ext_call.return_data[18 len 14]) - (997 * arg2) / ext_call.return_data[18 len 14] - arg2 != 997:
                                        revert with 0, 'SafeMath: multiplication overflow', mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                                    if not (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                        revert with 0, 18
                                    if 1000 * ext_call.return_data[50 len 14] * arg2 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2) > -2:
                                        revert with 0, 17
                                    if (1000 * ext_call.return_data[50 len 14] * arg2 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2)) + 1 < 1000 * ext_call.return_data[50 len 14] * arg2 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                        revert with 0, 'SafeMath: addition overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                    if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                        mem[(10 * ceil32(return_data.size)) + 510] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address, mem[(12 * ceil32(return_data.size)) + 510 len 20 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(14 * ceil32(return_data.size)) + 542 len 24 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    else:
                                        mem[(10 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                        mem[(10 * ceil32(return_data.size)) + 510] = 0
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).approve(address rg1, uint256 rg2) with:
                                             gas gas_remaining wei
                                            args 0x60ae616a2155ee3d9a68541ba4544862310933d4, 0, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                        mem[(10 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        mem[(12 * ceil32(return_data.size)) + 474] = 2
                                        mem[(12 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(12 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                        mem[(12 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(12 * ceil32(return_data.size)) + 574] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        mem[(12 * ceil32(return_data.size)) + 606] = 0
                                        mem[(12 * ceil32(return_data.size)) + 638] = 160
                                        mem[(12 * ceil32(return_data.size)) + 734] = 2
                                        idx = 0
                                        s = (12 * ceil32(return_data.size)) + 766
                                        t = (12 * ceil32(return_data.size)) + 506
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(12 * ceil32(return_data.size)) + 670] = this.address
                                        mem[(12 * ceil32(return_data.size)) + 702] = block.timestamp
                                        require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                        call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                             gas gas_remaining wei
                                            args (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1, 0, 160, address(this.address), block.timestamp, 2, mem[(12 * ceil32(return_data.size)) + 766 len 64]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(12 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (13 * ceil32(return_data.size)) + 570
                                        require return_data.size >= 32
                                        _4635 = mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32
                                        require mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                        require (12 * ceil32(return_data.size)) + return_data.size + 570 > (12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 601
                                        _4731 = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                        if mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                            revert with 0, 65
                                        if ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0 or (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307():
                                            revert with 0, 65
                                        mem[64] = (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                        mem[(13 * ceil32(return_data.size)) + 570] = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                        require _4635 + (32 * _4731) + 32 <= return_data.size
                                        mem[(13 * ceil32(return_data.size)) + 602 len 32 * _4731] = mem[(12 * ceil32(return_data.size)) + _4635 + 602 len 32 * _4731]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6459 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_6459] == bool(mem[_6459])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6843 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _6939 = mem[_6843]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _6939
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _6939
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _7227 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_7227] == bool(mem[_7227])
                        else:
                            if ext_call.return_data[18 len 14] <= 0:
                                revert with 0, 
                                            'SpiritswapLibrary: INSUFFICIENT_LIQUIDITY',
                                            mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                            if ext_call.return_data[50 len 14] <= 0:
                                revert with 0, 
                                            'SpiritswapLibrary: INSUFFICIENT_LIQUIDITY',
                                            mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                            if not ext_call.return_data[18 len 14]:
                                if arg2 > ext_call.return_data[50 len 14]:
                                    revert with 0, 'SafeMath: subtraction overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                if ext_call.return_data[50 len 14] < arg2:
                                    revert with 0, 17
                                if not ext_call.return_data[50 len 14] - arg2:
                                    revert with 0, 18
                                if ext_call.return_data[50 len 14] - arg2 and 997 > -1 / ext_call.return_data[50 len 14] - arg2:
                                    revert with 0, 17
                                if not ext_call.return_data[50 len 14] - arg2:
                                    revert with 0, 18
                                if (997 * ext_call.return_data[50 len 14]) - (997 * arg2) / ext_call.return_data[50 len 14] - arg2 != 997:
                                    revert with 0, 'SafeMath: multiplication overflow', mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                                if not (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                    revert with 0, 18
                                if 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2) > -2:
                                    revert with 0, 17
                                if (0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2)) + 1 < 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                    revert with 0, 'SafeMath: addition overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                    mem[(10 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(12 * ceil32(return_data.size)) + 510 len 20 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(14 * ceil32(return_data.size)) + 542 len 24 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(10 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                    mem[(10 * ceil32(return_data.size)) + 510] = 0
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).approve(address rg1, uint256 rg2) with:
                                         gas gas_remaining wei
                                        args 0x60ae616a2155ee3d9a68541ba4544862310933d4, 0, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                    mem[(10 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(12 * ceil32(return_data.size)) + 474] = 2
                                    mem[(12 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                    mem[(12 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(12 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(12 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    mem[(12 * ceil32(return_data.size)) + 606] = 0
                                    mem[(12 * ceil32(return_data.size)) + 638] = 160
                                    mem[(12 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (12 * ceil32(return_data.size)) + 766
                                    t = (12 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(12 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(12 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                    call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                         gas gas_remaining wei
                                        args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1, 0, 160, address(this.address), block.timestamp, 2, mem[(12 * ceil32(return_data.size)) + 766 len 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(12 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (13 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _4640 = mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32
                                    require mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                    require (12 * ceil32(return_data.size)) + return_data.size + 570 > (12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 601
                                    _4736 = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                    if mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                        revert with 0, 65
                                    if ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0 or (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307():
                                        revert with 0, 65
                                    mem[64] = (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                    mem[(13 * ceil32(return_data.size)) + 570] = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                    require _4640 + (32 * _4736) + 32 <= return_data.size
                                    mem[(13 * ceil32(return_data.size)) + 602 len 32 * _4736] = mem[(12 * ceil32(return_data.size)) + _4640 + 602 len 32 * _4736]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _6464 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_6464] == bool(mem[_6464])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _6848 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _6944 = mem[_6848]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _6944
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _6944
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7232 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7232] == bool(mem[_7232])
                            else:
                                if ext_call.return_data[18 len 14] and arg2 > -1 / ext_call.return_data[18 len 14]:
                                    revert with 0, 17
                                if not ext_call.return_data[18 len 14]:
                                    revert with 0, 18
                                if ext_call.return_data[18 len 14] * arg2 / ext_call.return_data[18 len 14] != arg2:
                                    revert with 0, 'SafeMath: multiplication overflow', mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                                if not ext_call.return_data[18 len 14] * arg2:
                                    if arg2 > ext_call.return_data[50 len 14]:
                                        revert with 0, 'SafeMath: subtraction overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                    if ext_call.return_data[50 len 14] < arg2:
                                        revert with 0, 17
                                    if not ext_call.return_data[50 len 14] - arg2:
                                        revert with 0, 18
                                    if ext_call.return_data[50 len 14] - arg2 and 997 > -1 / ext_call.return_data[50 len 14] - arg2:
                                        revert with 0, 17
                                    if not ext_call.return_data[50 len 14] - arg2:
                                        revert with 0, 18
                                    if (997 * ext_call.return_data[50 len 14]) - (997 * arg2) / ext_call.return_data[50 len 14] - arg2 != 997:
                                        revert with 0, 'SafeMath: multiplication overflow', mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                                    if not (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                        revert with 0, 18
                                    if 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2) > -2:
                                        revert with 0, 17
                                    if (0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2)) + 1 < 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                        revert with 0, 'SafeMath: addition overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                    if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                        mem[(10 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address, mem[(12 * ceil32(return_data.size)) + 510 len 20 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(14 * ceil32(return_data.size)) + 542 len 24 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    else:
                                        mem[(10 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                        mem[(10 * ceil32(return_data.size)) + 510] = 0
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).approve(address rg1, uint256 rg2) with:
                                             gas gas_remaining wei
                                            args 0x60ae616a2155ee3d9a68541ba4544862310933d4, 0, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                        mem[(10 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        mem[(12 * ceil32(return_data.size)) + 474] = 2
                                        mem[(12 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(12 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                        mem[(12 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(12 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        mem[(12 * ceil32(return_data.size)) + 606] = 0
                                        mem[(12 * ceil32(return_data.size)) + 638] = 160
                                        mem[(12 * ceil32(return_data.size)) + 734] = 2
                                        idx = 0
                                        s = (12 * ceil32(return_data.size)) + 766
                                        t = (12 * ceil32(return_data.size)) + 506
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(12 * ceil32(return_data.size)) + 670] = this.address
                                        mem[(12 * ceil32(return_data.size)) + 702] = block.timestamp
                                        require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                        call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                             gas gas_remaining wei
                                            args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1, 0, 160, address(this.address), block.timestamp, 2, mem[(12 * ceil32(return_data.size)) + 766 len 64]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(12 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (13 * ceil32(return_data.size)) + 570
                                        require return_data.size >= 32
                                        _4639 = mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32
                                        require mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                        require (12 * ceil32(return_data.size)) + return_data.size + 570 > (12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 601
                                        _4735 = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                        if mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                            revert with 0, 65
                                        if ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0 or (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307():
                                            revert with 0, 65
                                        mem[64] = (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                        mem[(13 * ceil32(return_data.size)) + 570] = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                        require _4639 + (32 * _4735) + 32 <= return_data.size
                                        mem[(13 * ceil32(return_data.size)) + 602 len 32 * _4735] = mem[(12 * ceil32(return_data.size)) + _4639 + 602 len 32 * _4735]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6463 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_6463] == bool(mem[_6463])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6847 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _6943 = mem[_6847]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _6943
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _6943
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _7231 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_7231] == bool(mem[_7231])
                                else:
                                    if ext_call.return_data[18 len 14] * arg2 and 1000 > -1 / ext_call.return_data[18 len 14] * arg2:
                                        revert with 0, 17
                                    if not ext_call.return_data[18 len 14] * arg2:
                                        revert with 0, 18
                                    if 1000 * ext_call.return_data[18 len 14] * arg2 / ext_call.return_data[18 len 14] * arg2 != 1000:
                                        revert with 0, 'SafeMath: multiplication overflow', mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                                    if arg2 > ext_call.return_data[50 len 14]:
                                        revert with 0, 'SafeMath: subtraction overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                    if ext_call.return_data[50 len 14] < arg2:
                                        revert with 0, 17
                                    if not ext_call.return_data[50 len 14] - arg2:
                                        revert with 0, 18
                                    if ext_call.return_data[50 len 14] - arg2 and 997 > -1 / ext_call.return_data[50 len 14] - arg2:
                                        revert with 0, 17
                                    if not ext_call.return_data[50 len 14] - arg2:
                                        revert with 0, 18
                                    if (997 * ext_call.return_data[50 len 14]) - (997 * arg2) / ext_call.return_data[50 len 14] - arg2 != 997:
                                        revert with 0, 'SafeMath: multiplication overflow', mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                                    if not (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                        revert with 0, 18
                                    if 1000 * ext_call.return_data[18 len 14] * arg2 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2) > -2:
                                        revert with 0, 17
                                    if (1000 * ext_call.return_data[18 len 14] * arg2 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2)) + 1 < 1000 * ext_call.return_data[18 len 14] * arg2 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                        revert with 0, 'SafeMath: addition overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                    if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                        mem[(10 * ceil32(return_data.size)) + 510] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address, mem[(12 * ceil32(return_data.size)) + 510 len 20 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(14 * ceil32(return_data.size)) + 542 len 24 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    else:
                                        mem[(10 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                        mem[(10 * ceil32(return_data.size)) + 510] = 0
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).approve(address rg1, uint256 rg2) with:
                                             gas gas_remaining wei
                                            args 0x60ae616a2155ee3d9a68541ba4544862310933d4, 0, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                        mem[(10 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        mem[(12 * ceil32(return_data.size)) + 474] = 2
                                        mem[(12 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(12 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                        mem[(12 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(12 * ceil32(return_data.size)) + 574] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        mem[(12 * ceil32(return_data.size)) + 606] = 0
                                        mem[(12 * ceil32(return_data.size)) + 638] = 160
                                        mem[(12 * ceil32(return_data.size)) + 734] = 2
                                        idx = 0
                                        s = (12 * ceil32(return_data.size)) + 766
                                        t = (12 * ceil32(return_data.size)) + 506
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(12 * ceil32(return_data.size)) + 670] = this.address
                                        mem[(12 * ceil32(return_data.size)) + 702] = block.timestamp
                                        require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                        call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                             gas gas_remaining wei
                                            args (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1, 0, 160, address(this.address), block.timestamp, 2, mem[(12 * ceil32(return_data.size)) + 766 len 64]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(12 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (13 * ceil32(return_data.size)) + 570
                                        require return_data.size >= 32
                                        _4638 = mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32
                                        require mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                        require (12 * ceil32(return_data.size)) + return_data.size + 570 > (12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 601
                                        _4734 = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                        if mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                            revert with 0, 65
                                        if ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0 or (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307():
                                            revert with 0, 65
                                        mem[64] = (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                        mem[(13 * ceil32(return_data.size)) + 570] = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                        require _4638 + (32 * _4734) + 32 <= return_data.size
                                        mem[(13 * ceil32(return_data.size)) + 602 len 32 * _4734] = mem[(12 * ceil32(return_data.size)) + _4638 + 602 len 32 * _4734]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6462 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_6462] == bool(mem[_6462])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6846 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _6942 = mem[_6846]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _6942
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _6942
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _7230 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_7230] == bool(mem[_7230])
                    else:
                        if address(ext_call.return_data[0]) == address(ext_call.return_data[0]):
                            if ext_call.return_data[50 len 14] <= 0:
                                revert with 0, 
                                            'SpiritswapLibrary: INSUFFICIENT_LIQUIDITY',
                                            mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                            if ext_call.return_data[18 len 14] <= 0:
                                revert with 0, 
                                            'SpiritswapLibrary: INSUFFICIENT_LIQUIDITY',
                                            mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                            if not ext_call.return_data[50 len 14]:
                                if arg2 > ext_call.return_data[18 len 14]:
                                    revert with 0, 'SafeMath: subtraction overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                if ext_call.return_data[18 len 14] < arg2:
                                    revert with 0, 17
                                if not ext_call.return_data[18 len 14] - arg2:
                                    revert with 0, 18
                                if ext_call.return_data[18 len 14] - arg2 and 997 > -1 / ext_call.return_data[18 len 14] - arg2:
                                    revert with 0, 17
                                if not ext_call.return_data[18 len 14] - arg2:
                                    revert with 0, 18
                                if (997 * ext_call.return_data[18 len 14]) - (997 * arg2) / ext_call.return_data[18 len 14] - arg2 != 997:
                                    revert with 0, 'SafeMath: multiplication overflow', mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                                if not (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                    revert with 0, 18
                                if 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2) > -2:
                                    revert with 0, 17
                                if (0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2)) + 1 < 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                    revert with 0, 'SafeMath: addition overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                    mem[(10 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(12 * ceil32(return_data.size)) + 510 len 20 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(14 * ceil32(return_data.size)) + 542 len 24 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(10 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                    mem[(10 * ceil32(return_data.size)) + 510] = 0
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).approve(address rg1, uint256 rg2) with:
                                         gas gas_remaining wei
                                        args 0x60ae616a2155ee3d9a68541ba4544862310933d4, 0, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                    mem[(10 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(12 * ceil32(return_data.size)) + 474] = 2
                                    mem[(12 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                    mem[(12 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(12 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(12 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    mem[(12 * ceil32(return_data.size)) + 606] = 0
                                    mem[(12 * ceil32(return_data.size)) + 638] = 160
                                    mem[(12 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (12 * ceil32(return_data.size)) + 766
                                    t = (12 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(12 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(12 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                    call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                         gas gas_remaining wei
                                        args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1, 0, 160, address(this.address), block.timestamp, 2, mem[(12 * ceil32(return_data.size)) + 766 len 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(12 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (13 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _4643 = mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32
                                    require mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                    require (12 * ceil32(return_data.size)) + return_data.size + 570 > (12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 601
                                    _4739 = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                    if mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                        revert with 0, 65
                                    if ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0 or (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307():
                                        revert with 0, 65
                                    mem[64] = (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                    mem[(13 * ceil32(return_data.size)) + 570] = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                    require _4643 + (32 * _4739) + 32 <= return_data.size
                                    mem[(13 * ceil32(return_data.size)) + 602 len 32 * _4739] = mem[(12 * ceil32(return_data.size)) + _4643 + 602 len 32 * _4739]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _6467 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_6467] == bool(mem[_6467])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _6851 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _6947 = mem[_6851]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _6947
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _6947
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7235 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7235] == bool(mem[_7235])
                            else:
                                if ext_call.return_data[50 len 14] and arg2 > -1 / ext_call.return_data[50 len 14]:
                                    revert with 0, 17
                                if not ext_call.return_data[50 len 14]:
                                    revert with 0, 18
                                if ext_call.return_data[50 len 14] * arg2 / ext_call.return_data[50 len 14] != arg2:
                                    revert with 0, 'SafeMath: multiplication overflow', mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                                if not ext_call.return_data[50 len 14] * arg2:
                                    if arg2 > ext_call.return_data[18 len 14]:
                                        revert with 0, 'SafeMath: subtraction overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                    if ext_call.return_data[18 len 14] < arg2:
                                        revert with 0, 17
                                    if not ext_call.return_data[18 len 14] - arg2:
                                        revert with 0, 18
                                    if ext_call.return_data[18 len 14] - arg2 and 997 > -1 / ext_call.return_data[18 len 14] - arg2:
                                        revert with 0, 17
                                    if not ext_call.return_data[18 len 14] - arg2:
                                        revert with 0, 18
                                    if (997 * ext_call.return_data[18 len 14]) - (997 * arg2) / ext_call.return_data[18 len 14] - arg2 != 997:
                                        revert with 0, 'SafeMath: multiplication overflow', mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                                    if not (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                        revert with 0, 18
                                    if 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2) > -2:
                                        revert with 0, 17
                                    if (0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2)) + 1 < 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                        revert with 0, 'SafeMath: addition overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                    if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                        mem[(10 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address, mem[(12 * ceil32(return_data.size)) + 510 len 20 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(14 * ceil32(return_data.size)) + 542 len 24 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    else:
                                        mem[(10 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                        mem[(10 * ceil32(return_data.size)) + 510] = 0
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).approve(address rg1, uint256 rg2) with:
                                             gas gas_remaining wei
                                            args 0x60ae616a2155ee3d9a68541ba4544862310933d4, 0, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                        mem[(10 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        mem[(12 * ceil32(return_data.size)) + 474] = 2
                                        mem[(12 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(12 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                        mem[(12 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(12 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        mem[(12 * ceil32(return_data.size)) + 606] = 0
                                        mem[(12 * ceil32(return_data.size)) + 638] = 160
                                        mem[(12 * ceil32(return_data.size)) + 734] = 2
                                        idx = 0
                                        s = (12 * ceil32(return_data.size)) + 766
                                        t = (12 * ceil32(return_data.size)) + 506
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(12 * ceil32(return_data.size)) + 670] = this.address
                                        mem[(12 * ceil32(return_data.size)) + 702] = block.timestamp
                                        require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                        call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                             gas gas_remaining wei
                                            args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1, 0, 160, address(this.address), block.timestamp, 2, mem[(12 * ceil32(return_data.size)) + 766 len 64]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(12 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (13 * ceil32(return_data.size)) + 570
                                        require return_data.size >= 32
                                        _4642 = mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32
                                        require mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                        require (12 * ceil32(return_data.size)) + return_data.size + 570 > (12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 601
                                        _4738 = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                        if mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                            revert with 0, 65
                                        if ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0 or (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307():
                                            revert with 0, 65
                                        mem[64] = (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                        mem[(13 * ceil32(return_data.size)) + 570] = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                        require _4642 + (32 * _4738) + 32 <= return_data.size
                                        mem[(13 * ceil32(return_data.size)) + 602 len 32 * _4738] = mem[(12 * ceil32(return_data.size)) + _4642 + 602 len 32 * _4738]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6466 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_6466] == bool(mem[_6466])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6850 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _6946 = mem[_6850]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _6946
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _6946
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _7234 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_7234] == bool(mem[_7234])
                                else:
                                    if ext_call.return_data[50 len 14] * arg2 and 1000 > -1 / ext_call.return_data[50 len 14] * arg2:
                                        revert with 0, 17
                                    if not ext_call.return_data[50 len 14] * arg2:
                                        revert with 0, 18
                                    if 1000 * ext_call.return_data[50 len 14] * arg2 / ext_call.return_data[50 len 14] * arg2 != 1000:
                                        revert with 0, 'SafeMath: multiplication overflow', mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                                    if arg2 > ext_call.return_data[18 len 14]:
                                        revert with 0, 'SafeMath: subtraction overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                    if ext_call.return_data[18 len 14] < arg2:
                                        revert with 0, 17
                                    if not ext_call.return_data[18 len 14] - arg2:
                                        revert with 0, 18
                                    if ext_call.return_data[18 len 14] - arg2 and 997 > -1 / ext_call.return_data[18 len 14] - arg2:
                                        revert with 0, 17
                                    if not ext_call.return_data[18 len 14] - arg2:
                                        revert with 0, 18
                                    if (997 * ext_call.return_data[18 len 14]) - (997 * arg2) / ext_call.return_data[18 len 14] - arg2 != 997:
                                        revert with 0, 'SafeMath: multiplication overflow', mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                                    if not (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                        revert with 0, 18
                                    if 1000 * ext_call.return_data[50 len 14] * arg2 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2) > -2:
                                        revert with 0, 17
                                    if (1000 * ext_call.return_data[50 len 14] * arg2 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2)) + 1 < 1000 * ext_call.return_data[50 len 14] * arg2 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                        revert with 0, 'SafeMath: addition overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                    if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                        mem[(10 * ceil32(return_data.size)) + 510] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address, mem[(12 * ceil32(return_data.size)) + 510 len 20 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(14 * ceil32(return_data.size)) + 542 len 24 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    else:
                                        mem[(10 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                        mem[(10 * ceil32(return_data.size)) + 510] = 0
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).approve(address rg1, uint256 rg2) with:
                                             gas gas_remaining wei
                                            args 0x60ae616a2155ee3d9a68541ba4544862310933d4, 0, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                        mem[(10 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        mem[(12 * ceil32(return_data.size)) + 474] = 2
                                        mem[(12 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(12 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                        mem[(12 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(12 * ceil32(return_data.size)) + 574] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        mem[(12 * ceil32(return_data.size)) + 606] = 0
                                        mem[(12 * ceil32(return_data.size)) + 638] = 160
                                        mem[(12 * ceil32(return_data.size)) + 734] = 2
                                        idx = 0
                                        s = (12 * ceil32(return_data.size)) + 766
                                        t = (12 * ceil32(return_data.size)) + 506
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(12 * ceil32(return_data.size)) + 670] = this.address
                                        mem[(12 * ceil32(return_data.size)) + 702] = block.timestamp
                                        require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                        call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                             gas gas_remaining wei
                                            args (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1, 0, 160, address(this.address), block.timestamp, 2, mem[(12 * ceil32(return_data.size)) + 766 len 64]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(12 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (13 * ceil32(return_data.size)) + 570
                                        require return_data.size >= 32
                                        _4641 = mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32
                                        require mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                        require (12 * ceil32(return_data.size)) + return_data.size + 570 > (12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 601
                                        _4737 = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                        if mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                            revert with 0, 65
                                        if ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0 or (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307():
                                            revert with 0, 65
                                        mem[64] = (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                        mem[(13 * ceil32(return_data.size)) + 570] = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                        require _4641 + (32 * _4737) + 32 <= return_data.size
                                        mem[(13 * ceil32(return_data.size)) + 602 len 32 * _4737] = mem[(12 * ceil32(return_data.size)) + _4641 + 602 len 32 * _4737]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6465 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_6465] == bool(mem[_6465])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6849 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _6945 = mem[_6849]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _6945
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _6945
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _7233 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_7233] == bool(mem[_7233])
                        else:
                            if ext_call.return_data[18 len 14] <= 0:
                                revert with 0, 
                                            'SpiritswapLibrary: INSUFFICIENT_LIQUIDITY',
                                            mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                            if ext_call.return_data[50 len 14] <= 0:
                                revert with 0, 
                                            'SpiritswapLibrary: INSUFFICIENT_LIQUIDITY',
                                            mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                            if not ext_call.return_data[18 len 14]:
                                if arg2 > ext_call.return_data[50 len 14]:
                                    revert with 0, 'SafeMath: subtraction overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                if ext_call.return_data[50 len 14] < arg2:
                                    revert with 0, 17
                                if not ext_call.return_data[50 len 14] - arg2:
                                    revert with 0, 18
                                if ext_call.return_data[50 len 14] - arg2 and 997 > -1 / ext_call.return_data[50 len 14] - arg2:
                                    revert with 0, 17
                                if not ext_call.return_data[50 len 14] - arg2:
                                    revert with 0, 18
                                if (997 * ext_call.return_data[50 len 14]) - (997 * arg2) / ext_call.return_data[50 len 14] - arg2 != 997:
                                    revert with 0, 'SafeMath: multiplication overflow', mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                                if not (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                    revert with 0, 18
                                if 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2) > -2:
                                    revert with 0, 17
                                if (0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2)) + 1 < 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                    revert with 0, 'SafeMath: addition overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                    mem[(10 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(12 * ceil32(return_data.size)) + 510 len 20 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(14 * ceil32(return_data.size)) + 542 len 24 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(10 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                    mem[(10 * ceil32(return_data.size)) + 510] = 0
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).approve(address rg1, uint256 rg2) with:
                                         gas gas_remaining wei
                                        args 0x60ae616a2155ee3d9a68541ba4544862310933d4, 0, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                    mem[(10 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(12 * ceil32(return_data.size)) + 474] = 2
                                    mem[(12 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                    mem[(12 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(12 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(12 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    mem[(12 * ceil32(return_data.size)) + 606] = 0
                                    mem[(12 * ceil32(return_data.size)) + 638] = 160
                                    mem[(12 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (12 * ceil32(return_data.size)) + 766
                                    t = (12 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(12 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(12 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                    call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                         gas gas_remaining wei
                                        args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1, 0, 160, address(this.address), block.timestamp, 2, mem[(12 * ceil32(return_data.size)) + 766 len 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(12 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (13 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _4646 = mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32
                                    require mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                    require (12 * ceil32(return_data.size)) + return_data.size + 570 > (12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 601
                                    _4742 = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                    if mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                        revert with 0, 65
                                    if ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0 or (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307():
                                        revert with 0, 65
                                    mem[64] = (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                    mem[(13 * ceil32(return_data.size)) + 570] = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                    require _4646 + (32 * _4742) + 32 <= return_data.size
                                    mem[(13 * ceil32(return_data.size)) + 602 len 32 * _4742] = mem[(12 * ceil32(return_data.size)) + _4646 + 602 len 32 * _4742]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _6470 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_6470] == bool(mem[_6470])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _6854 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _6950 = mem[_6854]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _6950
                                    require ext_code.size(address(cd[(arg4 + 100)]))
                                    call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _6950
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7238 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7238] == bool(mem[_7238])
                            else:
                                if ext_call.return_data[18 len 14] and arg2 > -1 / ext_call.return_data[18 len 14]:
                                    revert with 0, 17
                                if not ext_call.return_data[18 len 14]:
                                    revert with 0, 18
                                if ext_call.return_data[18 len 14] * arg2 / ext_call.return_data[18 len 14] != arg2:
                                    revert with 0, 'SafeMath: multiplication overflow', mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                                if not ext_call.return_data[18 len 14] * arg2:
                                    if arg2 > ext_call.return_data[50 len 14]:
                                        revert with 0, 'SafeMath: subtraction overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                    if ext_call.return_data[50 len 14] < arg2:
                                        revert with 0, 17
                                    if not ext_call.return_data[50 len 14] - arg2:
                                        revert with 0, 18
                                    if ext_call.return_data[50 len 14] - arg2 and 997 > -1 / ext_call.return_data[50 len 14] - arg2:
                                        revert with 0, 17
                                    if not ext_call.return_data[50 len 14] - arg2:
                                        revert with 0, 18
                                    if (997 * ext_call.return_data[50 len 14]) - (997 * arg2) / ext_call.return_data[50 len 14] - arg2 != 997:
                                        revert with 0, 'SafeMath: multiplication overflow', mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                                    if not (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                        revert with 0, 18
                                    if 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2) > -2:
                                        revert with 0, 17
                                    if (0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2)) + 1 < 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                        revert with 0, 'SafeMath: addition overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                    if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                        mem[(10 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address, mem[(12 * ceil32(return_data.size)) + 510 len 20 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(14 * ceil32(return_data.size)) + 542 len 24 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    else:
                                        mem[(10 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                        mem[(10 * ceil32(return_data.size)) + 510] = 0
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).approve(address rg1, uint256 rg2) with:
                                             gas gas_remaining wei
                                            args 0x60ae616a2155ee3d9a68541ba4544862310933d4, 0, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                        mem[(10 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        mem[(12 * ceil32(return_data.size)) + 474] = 2
                                        mem[(12 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(12 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                        mem[(12 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(12 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        mem[(12 * ceil32(return_data.size)) + 606] = 0
                                        mem[(12 * ceil32(return_data.size)) + 638] = 160
                                        mem[(12 * ceil32(return_data.size)) + 734] = 2
                                        idx = 0
                                        s = (12 * ceil32(return_data.size)) + 766
                                        t = (12 * ceil32(return_data.size)) + 506
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(12 * ceil32(return_data.size)) + 670] = this.address
                                        mem[(12 * ceil32(return_data.size)) + 702] = block.timestamp
                                        require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                        call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                             gas gas_remaining wei
                                            args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1, 0, 160, address(this.address), block.timestamp, 2, mem[(12 * ceil32(return_data.size)) + 766 len 64]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(12 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (13 * ceil32(return_data.size)) + 570
                                        require return_data.size >= 32
                                        _4645 = mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32
                                        require mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                        require (12 * ceil32(return_data.size)) + return_data.size + 570 > (12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 601
                                        _4741 = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                        if mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                            revert with 0, 65
                                        if ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0 or (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307():
                                            revert with 0, 65
                                        mem[64] = (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                        mem[(13 * ceil32(return_data.size)) + 570] = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                        require _4645 + (32 * _4741) + 32 <= return_data.size
                                        mem[(13 * ceil32(return_data.size)) + 602 len 32 * _4741] = mem[(12 * ceil32(return_data.size)) + _4645 + 602 len 32 * _4741]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6469 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_6469] == bool(mem[_6469])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6853 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _6949 = mem[_6853]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _6949
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _6949
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _7237 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_7237] == bool(mem[_7237])
                                else:
                                    if ext_call.return_data[18 len 14] * arg2 and 1000 > -1 / ext_call.return_data[18 len 14] * arg2:
                                        revert with 0, 17
                                    if not ext_call.return_data[18 len 14] * arg2:
                                        revert with 0, 18
                                    if 1000 * ext_call.return_data[18 len 14] * arg2 / ext_call.return_data[18 len 14] * arg2 != 1000:
                                        revert with 0, 'SafeMath: multiplication overflow', mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                                    if arg2 > ext_call.return_data[50 len 14]:
                                        revert with 0, 'SafeMath: subtraction overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                    if ext_call.return_data[50 len 14] < arg2:
                                        revert with 0, 17
                                    if not ext_call.return_data[50 len 14] - arg2:
                                        revert with 0, 18
                                    if ext_call.return_data[50 len 14] - arg2 and 997 > -1 / ext_call.return_data[50 len 14] - arg2:
                                        revert with 0, 17
                                    if not ext_call.return_data[50 len 14] - arg2:
                                        revert with 0, 18
                                    if (997 * ext_call.return_data[50 len 14]) - (997 * arg2) / ext_call.return_data[50 len 14] - arg2 != 997:
                                        revert with 0, 'SafeMath: multiplication overflow', mem[(10 * ceil32(return_data.size)) + 606 len 17 * ceil32(return_data.size)]
                                    if not (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                        revert with 0, 18
                                    if 1000 * ext_call.return_data[18 len 14] * arg2 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2) > -2:
                                        revert with 0, 17
                                    if (1000 * ext_call.return_data[18 len 14] * arg2 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2)) + 1 < 1000 * ext_call.return_data[18 len 14] * arg2 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                        revert with 0, 'SafeMath: addition overflow', mem[(10 * ceil32(return_data.size)) + 574 len 17 * ceil32(return_data.size)]
                                    if address(cd[(arg4 + 100)]) == address(ext_call.return_data[0]):
                                        mem[(10 * ceil32(return_data.size)) + 510] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address, mem[(12 * ceil32(return_data.size)) + 510 len 20 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(14 * ceil32(return_data.size)) + 542 len 24 * ceil32(return_data.size)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    else:
                                        mem[(10 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                        mem[(10 * ceil32(return_data.size)) + 510] = 0
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).approve(address rg1, uint256 rg2) with:
                                             gas gas_remaining wei
                                            args 0x60ae616a2155ee3d9a68541ba4544862310933d4, 0, mem[(10 * ceil32(return_data.size)) + 542 len 17 * ceil32(return_data.size)]
                                        mem[(10 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        mem[(12 * ceil32(return_data.size)) + 474] = 2
                                        mem[(12 * ceil32(return_data.size)) + 506] = address(cd[(arg4 + 100)])
                                        mem[(12 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                        mem[(12 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(12 * ceil32(return_data.size)) + 574] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        mem[(12 * ceil32(return_data.size)) + 606] = 0
                                        mem[(12 * ceil32(return_data.size)) + 638] = 160
                                        mem[(12 * ceil32(return_data.size)) + 734] = 2
                                        idx = 0
                                        s = (12 * ceil32(return_data.size)) + 766
                                        t = (12 * ceil32(return_data.size)) + 506
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(12 * ceil32(return_data.size)) + 670] = this.address
                                        mem[(12 * ceil32(return_data.size)) + 702] = block.timestamp
                                        require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                        call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                             gas gas_remaining wei
                                            args (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1, 0, 160, address(this.address), block.timestamp, 2, mem[(12 * ceil32(return_data.size)) + 766 len 64]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(12 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (13 * ceil32(return_data.size)) + 570
                                        require return_data.size >= 32
                                        _4644 = mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32
                                        require mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                        require (12 * ceil32(return_data.size)) + return_data.size + 570 > (12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 601
                                        _4740 = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                        if mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                            revert with 0, 65
                                        if ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0 or (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307():
                                            revert with 0, 65
                                        mem[64] = (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                        mem[(13 * ceil32(return_data.size)) + 570] = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                        require _4644 + (32 * _4740) + 32 <= return_data.size
                                        mem[(13 * ceil32(return_data.size)) + 602 len 32 * _4740] = mem[(12 * ceil32(return_data.size)) + _4644 + 602 len 32 * _4740]
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6468 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_6468] == bool(mem[_6468])
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6852 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _6948 = mem[_6852]
                                        mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                        mem[mem[64] + 36] = _6948
                                        require ext_code.size(address(cd[(arg4 + 100)]))
                                        call address(cd[(arg4 + 100)]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _6948
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _7236 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_7236] == bool(mem[_7236])
}



}
