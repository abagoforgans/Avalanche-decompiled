contract main {




// =====================  Runtime code  =====================


#
#  - sub_19217b58(?)
#  - transferFrom(address arg1, address arg2, uint256 arg3)
#  - cashoutAll()
#  - cashoutReward(uint256 arg1)
#  - sub_7197fc9e(?)
#  - sub_ef34ded9(?)
#
uint8 stor0;
uint8 stor0; offset 8
uint16 stor0;
array of struct stor1;
array of uint256 stor2;
array of uint256 stor3;
array of uint256 stor4;
array of uint256 stor5;
array of struct stor6;
array of struct stor101;
array of struct stor102;
mapping of address ownerOf;
mapping of uint256 balanceOf;
mapping of address approved;
mapping of uint8 stor106;
mapping of uint256 tokenOfOwnerByIndex;
mapping of uint256 stor152;
array of uint256 tokenByIndex;
mapping of uint256 stor154;
mapping of struct stor201;
uint8 paused;
address owner;
uint256 stor401;
address sub_4d1c3621Address;
address liquidityPoolManagerImplementationAddress;
mapping of struct stor552;
array of struct stor553;
uint256 stor554;
uint256 stor555;
uint256 stor556;
uint256 sub_e6ae99e6;
uint256 sub_20e51fd9;
uint256 sub_22451834;
uint256 sub_39807f8d;
uint256 sub_1fdb4c5f;
uint256 sub_8783b90d;
uint256 sub_babf971c;
uint256 creationMinPrice;
uint256 sub_8a0bbae4;
uint256 sub_8a99d6ef;
uint256 sub_3e1fddb9;
uint256 sub_2f0da35d;
uint256 sub_9a1172c9;
uint256 sub_43348e23;
uint256 totalValueLocked;
address sub_dca87ef1Address;
array of uint256 stor51848699043762354786445001410105671568266765734117956169291548475795829136640;

function getApproved(uint256 arg1) payable {
    require calldata.size - 4 >= 32
    if not ownerOf[arg1]:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721: approved query for nonexistent token'
    return approved[arg1]
}

function totalSupply() payable {
    return tokenByIndex.length
}

function sub_1fdb4c5f(?) payable {
    return sub_1fdb4c5f
}

function sub_20e51fd9(?) payable {
    return sub_20e51fd9
}

function creationMinPrice() payable {
    return creationMinPrice
}

function sub_22451834(?) payable {
    return sub_22451834
}

function sub_2f0da35d(?) payable {
    return sub_2f0da35d
}

function tokenOfOwnerByIndex(address arg1, uint256 arg2) payable {
    require calldata.size - 4 >= 64
    require arg1 == arg1
    if not arg1:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721: balance query for the zero address'
    if arg2 >= balanceOf[address(arg1)]:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721Enumerable: owner index out of bounds'
    return tokenOfOwnerByIndex[address(arg1)][arg2]
}

function sub_39807f8d(?) payable {
    return sub_39807f8d
}

function sub_3e1fddb9(?) payable {
    return sub_3e1fddb9
}

function sub_43348e23(?) payable {
    return sub_43348e23
}

function sub_4d1c3621(?) payable {
    return sub_4d1c3621Address
}

function tokenByIndex(uint256 arg1) payable {
    require calldata.size - 4 >= 32
    if arg1 >= tokenByIndex.length:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721Enumerable: global index out of bounds'
    return tokenByIndex[arg1]
}

function paused() payable {
    return bool(paused)
}

function ownerOf(uint256 arg1) payable {
    require calldata.size - 4 >= 32
    if not ownerOf[arg1]:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721: owner query for nonexistent token'
    return ownerOf[arg1]
}

function balanceOf(address arg1) payable {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    if not arg1:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721: balance query for the zero address'
    return balanceOf[address(arg1)]
}

function sub_8783b90d(?) payable {
    return sub_8783b90d
}

function sub_8a0bbae4(?) payable {
    return sub_8a0bbae4
}

function sub_8a99d6ef(?) payable {
    return sub_8a99d6ef
}

function owner() payable {
    return owner
}

function sub_9a1172c9(?) payable {
    return sub_9a1172c9
}

function sub_babf971c(?) payable {
    return sub_babf971c
}

function getLiquidityPoolManagerImplementation() payable {
    return liquidityPoolManagerImplementationAddress
}

function sub_dca87ef1(?) payable {
    return sub_dca87ef1Address
}

function sub_e6ae99e6(?) payable {
    return sub_e6ae99e6
}

function isApprovedForAll(address arg1, address arg2) payable {
    require calldata.size - 4 >= 64
    require arg1 == arg1
    require arg2 == arg2
    return bool(stor106[address(arg1)][address(arg2)])
}

function totalValueLocked() payable {
    return totalValueLocked
}

function _fallback() payable {
    revert
}

function sub_cfa4a5bf(?) payable {
    return stor554, stor555, stor556
}

function renounceOwnership() payable {
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    owner = 0
    emit OwnershipTransferred(owner, 0);
}

function pause() payable {
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    if paused:
        revert with 0, 'Pausable: paused'
    paused = 1
    emit Paused(msg.sender);
}

function unpause() payable {
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    if not paused:
        revert with 0, 'Pausable: not paused'
    paused = 0
    emit Unpaused(msg.sender);
}

function sub_df5d280a(?) payable {
    require calldata.size - 4 >= 32
    require arg1 == address(arg1)
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    require address(arg1)
    sub_dca87ef1Address = address(arg1)
}

function recoverLostAVAX() payable {
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    call owner with:
       value eth.balance(this.address) wei
         gas 2300 * is_zero(value) wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
}

function setApprovalForAll(address arg1, bool arg2) payable {
    require calldata.size - 4 >= 64
    require arg1 == arg1
    require arg2 == arg2
    if msg.sender == arg1:
        revert with 0, 'ERC721: approve to caller'
    stor106[address(msg.sender)][address(arg1)] = uint8(arg2)
    emit ApprovalForAll(arg2, msg.sender, arg1);
}

function sub_b34e6e9f(?) payable {
    require calldata.size - 4 >= 32
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    if arg1 > 5000:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                    'Troops: Maximum fee percent to create a Troop must not be larger than 50'
    sub_8a0bbae4 = arg1
}

function changeNodeMinPrice(uint256 arg1) payable {
    require calldata.size - 4 >= 32
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    if arg1 <= 0:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                    'Troops: Minimum price to create a Troop must be above 0'
    creationMinPrice = arg1
}

function transferOwnership(address arg1) payable {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    if not arg1:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'Ownable: new owner is the zero address'
    owner = arg1
    emit OwnershipTransferred(owner, arg1);
}

function sub_0933ca9f(?) payable {
    require calldata.size - 4 >= 160
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    require arg1 <= 10000
    require arg2 <= 10000
    require arg3 <= 10000
    require arg4 <= 10000
    require arg5 <= 10000
    sub_8a99d6ef = arg1
    sub_3e1fddb9 = arg2
    sub_2f0da35d = arg3
    sub_9a1172c9 = arg4
    sub_43348e23 = arg5
}

function sub_ecc208ce(?) payable {
    require calldata.size - 4 >= 96
    require arg1 == address(arg1)
    require arg2 == address(arg2)
    require arg3 == bool(arg3)
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    if address(arg1) == address(arg2):
        revert with 0, 'ERC721: approve to caller'
    stor106[address(arg1)][address(arg2)] = uint8(bool(arg3))
    emit ApprovalForAll(bool(arg3), address(arg1), address(arg2));
}

function sub_59cd8843(?) payable {
    require calldata.size - 4 >= 64
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    if arg1 <= 0:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'Troops: rewardPerDay must be greater than 0'
    if arg2 <= 0:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'Troops: rewardPerDay must be greater than 0'
    sub_e6ae99e6 = arg1
    sub_20e51fd9 = arg2
}

function sub_698bcd8e(?) payable {
    require calldata.size - 4 >= 32
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    if sub_e6ae99e6 > arg1:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'Troops: Reward grade for Gladiator is invalid'
    if arg1 > sub_20e51fd9:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'Troops: Reward grade for Gladiator is invalid'
    sub_babf971c = arg1
}

function recoverLostTokens(address arg1, address arg2, uint256 arg3) payable {
    require calldata.size - 4 >= 96
    require arg1 == arg1
    require arg2 == arg2
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    call arg1.0xa9059cbb with:
         gas gas_remaining wei
        args address(arg2), arg3
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == bool(ext_call.return_data[0])
}

function sub_9ebf906a(?) payable {
    require calldata.size - 4 >= 32
    require arg1 == address(arg1)
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    if not ext_code.size(address(arg1)):
        if address(arg1):
            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                        'Army: You can only set 0x0 or a contract address as a new implementation'
    sub_4d1c3621Address = address(arg1)
    emit 0xa3e8afe8: sub_4d1c3621Address, address(arg1)
}

function supportsInterface(bytes4 arg1) payable {
    require calldata.size - 4 >= 32
    require arg1 == Mask(32, 224, arg1)
    if 0x780e9d6300000000000000000000000000000000000000000000000000000000 == Mask(32, 224, arg1):
        return True
    if 0x80ac58cd00000000000000000000000000000000000000000000000000000000 == Mask(32, 224, arg1):
        return True
    if 0x5b5e139f00000000000000000000000000000000000000000000000000000000 == Mask(32, 224, arg1):
        return True
    return (Mask(32, 224, arg1) == 0x1ffc9a700000000000000000000000000000000000000000000000000000000)
}

function changeLiquidityPoolManagerImplementation(address arg1) payable {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    if not ext_code.size(arg1):
        if arg1:
            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                        'LiquidityPoolManagerUpgradeable: You can only set 0x0 or a contract address as a new implementation'
    liquidityPoolManagerImplementationAddress = arg1
    emit UpdateLiquidityPoolManager(liquidityPoolManagerImplementationAddress, arg1);
}

function sub_82d0dcf8(?) payable {
    require calldata.size - 4 >= 128
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    if arg1 >= arg2:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'Troops: Reward grade timestamp order is invalid'
    if arg2 >= arg3:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'Troops: Reward grade timestamp order is invalid'
    if arg3 >= arg4:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'Troops: Reward grade timestamp order is invalid'
    sub_22451834 = arg1
    sub_39807f8d = arg2
    sub_1fdb4c5f = arg3
    sub_8783b90d = arg4
}

function approve(address arg1, uint256 arg2) payable {
    require calldata.size - 4 >= 64
    require arg1 == arg1
    if not ownerOf[arg2]:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721: owner query for nonexistent token'
    if arg1 == ownerOf[arg2]:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721: approval to current owner'
    if ownerOf[arg2] != msg.sender:
        if not stor106[stor103[arg2]][address(msg.sender)]:
            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                        'ERC721: approve caller is not owner nor approved for all'
    approved[arg2] = arg1
    if not ownerOf[arg2]:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721: owner query for nonexistent token'
    emit Approval(ownerOf[arg2], arg1, arg2);
}

function sub_cba90361(?) payable {
    require calldata.size - 4 >= 64
    if stor401 == 2:
        revert with 0, 'ReentrancyGuard: reentrant call'
    stor401 = 2
    if paused:
        revert with 0, 'Pausable: paused'
    if not sub_4d1c3621Address:
        revert with 0, 'Troops: Army is not set'
    require sub_dca87ef1Address
    call sub_dca87ef1Address.0x12e36401 with:
         gas gas_remaining wei
        args msg.sender, arg2
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if not uint8(stor552[arg1].field_1536):
        revert with 0, 'non-existent troop'
    if not ownerOf[arg1]:
        revert with 0, 'ERC721: owner query for nonexistent token'
    if ownerOf[arg1] != msg.sender:
        revert with 0, 'not owner of the troop'
    if stor552[arg1].field_1024 > !ext_call.return_data[0]:
        revert with 0, 17
    stor552[arg1].field_1024 += ext_call.return_data[0]
    if bool(uint8(stor552[arg1].field_1544)) != 1:
        idx = stor554
        while idx < stor553.length:
            mem[0] = 553
            if stor553[idx].field_256 != stor552[arg1].field_768:
                stor401 = 1
                return arg1
            if stor553[idx].field_0 > !ext_call.return_data[0]:
                revert with 0, 17
            stor553[idx].field_0 += ext_call.return_data[0]
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            continue 
    else:
        if stor556 > !ext_call.return_data[0]:
            revert with 0, 17
        stor556 += ext_call.return_data[0]
    stor401 = 1
    return arg1
}

function sub_9678aa14(?) payable {
    require calldata.size - 4 >= 64
    require arg1 <= test266151307()
    require arg1 + 35 < calldata.size
    if arg1.length > test266151307():
        revert with 0, 65
    if ceil32(ceil32(arg1.length)) + 97 < 96 or ceil32(ceil32(arg1.length)) + 97 > test266151307():
        revert with 0, 65
    require arg1 + arg1.length + 36 <= calldata.size
    if stor401 == 2:
        revert with 0, 'ReentrancyGuard: reentrant call'
    stor401 = 2
    if paused:
        revert with 0, 'Pausable: paused'
    if not sub_4d1c3621Address:
        revert with 0, 'Troops: Army is not set'
    require sub_dca87ef1Address
    call sub_dca87ef1Address.0x14604da9 with:
         gas gas_remaining wei
        args msg.sender, Array(len=arg1.length, data=arg1[all]), arg2
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 96
    if ext_call.return_data[32]:
        require ext_code.size(sub_4d1c3621Address)
        call sub_4d1c3621Address.accountBurn(address arg1, uint256 arg2) with:
             gas gas_remaining wei
            args msg.sender, ext_call.return_data[32]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
    if ext_call.return_data[64]:
        require ext_code.size(sub_4d1c3621Address)
        call sub_4d1c3621Address.liquidityReward(uint256 arg1) with:
             gas gas_remaining wei
            args ext_call.return_data[64]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
    stor401 = 1
    return ext_call.return_data[0]
}

function initialize() payable {
    if uint8(stor0.field_8):
        if ext_code.size(this.address):
            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'Initializable: contract is already initialized'
    else:
        if uint8(stor0.field_0):
            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'Initializable: contract is already initialized'
    if not uint8(stor0.field_8):
        uint16(stor0.field_0) = 257
        revert with 0, 'Initializable: contract is not initializing'
    if bool(stor101.length):
        if bool(stor101.length) == uint255(stor101.length) * 0.5 < 32:
            revert with 0, 34
        bool(stor101.length) = 0
        uint255(stor101.length.field_1) = 14
        Mask(112, 0, stor101.length.field_144) = Mask(112, 0, 'Army Ecosystem')
        idx = 0
        while (uint255(stor101.length) * 0.5) + 31 / 32 > idx:
            stor101[idx].field_0 = 0
            idx = idx + 1
            continue 
    else:
        if bool(stor101.length) == stor101.length.field_1 % 128 < 32:
            revert with 0, 34
        bool(stor101.length) = 0
        uint255(stor101.length.field_1) = 14
        Mask(112, 0, stor101.length.field_144) = Mask(112, 0, 'Army Ecosystem')
        idx = 0
        while stor101.length.field_1 % 128 + 31 / 32 > idx:
            stor101[idx].field_0 = 0
            idx = idx + 1
            continue 
    if bool(stor102.length):
        if bool(stor102.length) == uint255(stor102.length) * 0.5 < 32:
            revert with 0, 34
        bool(stor102.length) = 0
        uint255(stor102.length.field_1) = 5
        stor102.length.field_216 % 1099511627776 = 362158182224
        idx = 0
        while (uint255(stor102.length) * 0.5) + 31 / 32 > idx:
            stor102[idx].field_0 = 0
            idx = idx + 1
            continue 
    else:
        if bool(stor102.length) == stor102.length.field_1 % 128 < 32:
            revert with 0, 34
        bool(stor102.length) = 0
        uint255(stor102.length.field_1) = 5
        stor102.length.field_216 % 1099511627776 = 362158182224
        idx = 0
        while stor102.length.field_1 % 128 + 31 / 32 > idx:
            stor102[idx].field_0 = 0
            idx = idx + 1
            continue 
    if not uint8(stor0.field_8):
        revert with 0, 'Initializable: contract is not initializing'
    owner = msg.sender
    emit OwnershipTransferred(owner, msg.sender);
    stor401 = 1
    paused = 0
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    sub_e6ae99e6 = 28935
    sub_20e51fd9 = 46299
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    if sub_e6ae99e6 > 40509:
        revert with 0, 'Troops: Reward grade for Gladiator is invalid'
    if 40509 > sub_20e51fd9:
        revert with 0, 'Troops: Reward grade for Gladiator is invalid'
    sub_babf971c = 40509
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    sub_22451834 = 72 * 24 * 3600
    sub_39807f8d = 168 * 24 * 3600
    sub_1fdb4c5f = 720 * 24 * 3600
    sub_8783b90d = 240 * 10^6 * 24 * 3600
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    creationMinPrice = 20000 * 10^18
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    sub_8a0bbae4 = 3000
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    sub_8a99d6ef = 5000
    sub_3e1fddb9 = 4500
    sub_2f0da35d = 4000
    sub_9a1172c9 = 3000
    sub_43348e23 = 3000
    if not uint8(stor0.field_8):
        uint8(stor0.field_8) = 0
}

function name() payable {
    if bool(stor101.length):
        if bool(stor101.length) == uint255(stor101.length) * 0.5 < 32:
            revert with 0, 34
        if bool(stor101.length):
            if bool(stor101.length) == uint255(stor101.length) * 0.5 < 32:
                revert with 0, 34
            if Mask(256, -1, stor101.length):
                if 31 < uint255(stor101.length) * 0.5:
                    mem[128] = uint256(stor101.field_0)
                    idx = 128
                    s = 0
                    while (uint255(stor101.length) * 0.5) + 96 > idx:
                        mem[idx + 32] = stor101[s].field_256
                        idx = idx + 32
                        s = s + 1
                        continue 
                    return Array(len=2 * Mask(256, -1, stor101.length), data=mem[128 len ceil32(uint255(stor101.length) * 0.5)])
                mem[128] = 256 * Mask(248, 0, stor101.length.field_8)
        else:
            if bool(stor101.length) == stor101.length.field_1 % 128 < 32:
                revert with 0, 34
            if stor101.length.field_1 % 128:
                if 31 < stor101.length.field_1 % 128:
                    mem[128] = uint256(stor101.field_0)
                    idx = 128
                    s = 0
                    while stor101.length.field_1 % 128 + 96 > idx:
                        mem[idx + 32] = stor101[s].field_256
                        idx = idx + 32
                        s = s + 1
                        continue 
                    return Array(len=2 * Mask(256, -1, stor101.length), data=mem[128 len ceil32(uint255(stor101.length) * 0.5)])
                mem[128] = 256 * Mask(248, 0, stor101.length.field_8)
        mem[ceil32(uint255(stor101.length) * 0.5) + 192 len ceil32(uint255(stor101.length) * 0.5)] = mem[128 len ceil32(uint255(stor101.length) * 0.5)]
        if ceil32(uint255(stor101.length) * 0.5) > uint255(stor101.length) * 0.5:
            mem[ceil32(uint255(stor101.length) * 0.5) + (uint255(stor101.length) * 0.5) + 192] = 0
        return Array(len=2 * Mask(256, -1, stor101.length), data=mem[128 len ceil32(uint255(stor101.length) * 0.5)], mem[(2 * ceil32(uint255(stor101.length) * 0.5)) + 192 len 2 * ceil32(uint255(stor101.length) * 0.5)]), 
    if bool(stor101.length) == stor101.length.field_1 % 128 < 32:
        revert with 0, 34
    if bool(stor101.length):
        if bool(stor101.length) == uint255(stor101.length) * 0.5 < 32:
            revert with 0, 34
        if Mask(256, -1, stor101.length):
            if 31 < uint255(stor101.length) * 0.5:
                mem[128] = uint256(stor101.field_0)
                idx = 128
                s = 0
                while (uint255(stor101.length) * 0.5) + 96 > idx:
                    mem[idx + 32] = stor101[s].field_256
                    idx = idx + 32
                    s = s + 1
                    continue 
                return Array(len=stor101.length % 128, data=mem[128 len ceil32(stor101.length.field_1 % 128)])
            mem[128] = 256 * Mask(248, 0, stor101.length.field_8)
    else:
        if bool(stor101.length) == stor101.length.field_1 % 128 < 32:
            revert with 0, 34
        if stor101.length.field_1 % 128:
            if 31 < stor101.length.field_1 % 128:
                mem[128] = uint256(stor101.field_0)
                idx = 128
                s = 0
                while stor101.length.field_1 % 128 + 96 > idx:
                    mem[idx + 32] = stor101[s].field_256
                    idx = idx + 32
                    s = s + 1
                    continue 
                return Array(len=stor101.length % 128, data=mem[128 len ceil32(stor101.length.field_1 % 128)])
            mem[128] = 256 * Mask(248, 0, stor101.length.field_8)
    mem[ceil32(stor101.length.field_1 % 128) + 192 len ceil32(stor101.length.field_1 % 128)] = mem[128 len ceil32(stor101.length.field_1 % 128)]
    if ceil32(stor101.length.field_1 % 128) > stor101.length.field_1 % 128:
        mem[ceil32(stor101.length.field_1 % 128) + stor101.length.field_1 % 128 + 192] = 0
    return Array(len=stor101.length % 128, data=mem[128 len ceil32(stor101.length.field_1 % 128)], mem[(2 * ceil32(stor101.length.field_1 % 128)) + 192 len 2 * ceil32(stor101.length.field_1 % 128)]), 
}

function symbol() payable {
    if bool(stor102.length):
        if bool(stor102.length) == uint255(stor102.length) * 0.5 < 32:
            revert with 0, 34
        if bool(stor102.length):
            if bool(stor102.length) == uint255(stor102.length) * 0.5 < 32:
                revert with 0, 34
            if Mask(256, -1, stor102.length):
                if 31 < uint255(stor102.length) * 0.5:
                    mem[128] = uint256(stor102.field_0)
                    idx = 128
                    s = 0
                    while (uint255(stor102.length) * 0.5) + 96 > idx:
                        mem[idx + 32] = stor102[s].field_256
                        idx = idx + 32
                        s = s + 1
                        continue 
                    return Array(len=2 * Mask(256, -1, stor102.length), data=mem[128 len ceil32(uint255(stor102.length) * 0.5)])
                mem[128] = 256 * Mask(248, 0, stor102.length.field_8)
        else:
            if bool(stor102.length) == stor102.length.field_1 % 128 < 32:
                revert with 0, 34
            if stor102.length.field_1 % 128:
                if 31 < stor102.length.field_1 % 128:
                    mem[128] = uint256(stor102.field_0)
                    idx = 128
                    s = 0
                    while stor102.length.field_1 % 128 + 96 > idx:
                        mem[idx + 32] = stor102[s].field_256
                        idx = idx + 32
                        s = s + 1
                        continue 
                    return Array(len=2 * Mask(256, -1, stor102.length), data=mem[128 len ceil32(uint255(stor102.length) * 0.5)])
                mem[128] = 256 * Mask(248, 0, stor102.length.field_8)
        mem[ceil32(uint255(stor102.length) * 0.5) + 192 len ceil32(uint255(stor102.length) * 0.5)] = mem[128 len ceil32(uint255(stor102.length) * 0.5)]
        if ceil32(uint255(stor102.length) * 0.5) > uint255(stor102.length) * 0.5:
            mem[ceil32(uint255(stor102.length) * 0.5) + (uint255(stor102.length) * 0.5) + 192] = 0
        return Array(len=2 * Mask(256, -1, stor102.length), data=mem[128 len ceil32(uint255(stor102.length) * 0.5)], mem[(2 * ceil32(uint255(stor102.length) * 0.5)) + 192 len 2 * ceil32(uint255(stor102.length) * 0.5)]), 
    if bool(stor102.length) == stor102.length.field_1 % 128 < 32:
        revert with 0, 34
    if bool(stor102.length):
        if bool(stor102.length) == uint255(stor102.length) * 0.5 < 32:
            revert with 0, 34
        if Mask(256, -1, stor102.length):
            if 31 < uint255(stor102.length) * 0.5:
                mem[128] = uint256(stor102.field_0)
                idx = 128
                s = 0
                while (uint255(stor102.length) * 0.5) + 96 > idx:
                    mem[idx + 32] = stor102[s].field_256
                    idx = idx + 32
                    s = s + 1
                    continue 
                return Array(len=stor102.length % 128, data=mem[128 len ceil32(stor102.length.field_1 % 128)])
            mem[128] = 256 * Mask(248, 0, stor102.length.field_8)
    else:
        if bool(stor102.length) == stor102.length.field_1 % 128 < 32:
            revert with 0, 34
        if stor102.length.field_1 % 128:
            if 31 < stor102.length.field_1 % 128:
                mem[128] = uint256(stor102.field_0)
                idx = 128
                s = 0
                while stor102.length.field_1 % 128 + 96 > idx:
                    mem[idx + 32] = stor102[s].field_256
                    idx = idx + 32
                    s = s + 1
                    continue 
                return Array(len=stor102.length % 128, data=mem[128 len ceil32(stor102.length.field_1 % 128)])
            mem[128] = 256 * Mask(248, 0, stor102.length.field_8)
    mem[ceil32(stor102.length.field_1 % 128) + 192 len ceil32(stor102.length.field_1 % 128)] = mem[128 len ceil32(stor102.length.field_1 % 128)]
    if ceil32(stor102.length.field_1 % 128) > stor102.length.field_1 % 128:
        mem[ceil32(stor102.length.field_1 % 128) + stor102.length.field_1 % 128 + 192] = 0
    return Array(len=stor102.length % 128, data=mem[128 len ceil32(stor102.length.field_1 % 128)], mem[(2 * ceil32(stor102.length.field_1 % 128)) + 192 len 2 * ceil32(stor102.length.field_1 % 128)]), 
}

function calculateTotalDailyEmission() payable {
    if sub_babf971c and 24 * 3600 > -1 / sub_babf971c:
        revert with 0, 17
    if 24 * 3600 * sub_babf971c and stor556 > -1 / 24 * 3600 * sub_babf971c:
        revert with 0, 17
    if not stor553.length:
        return (24 * 3600 * sub_babf971c * stor556 / 10^11)
    if stor553.length < 1:
        revert with 0, 17
    if stor553.length - 1 >= stor553.length:
        revert with 0, 50
    if stor553[stor553.length - 1].field_256 > block.timestamp:
        return (24 * 3600 * sub_babf971c * stor556 / 10^11)
    if sub_20e51fd9 and 24 * 3600 > -1 / sub_20e51fd9:
        revert with 0, 17
    if 24 * 3600 * sub_20e51fd9 and stor555 > -1 / 24 * 3600 * sub_20e51fd9:
        revert with 0, 17
    if 24 * 3600 * sub_babf971c * stor556 > !(24 * 3600 * sub_20e51fd9 * stor555):
        revert with 0, 17
    idx = stor554
    while idx < stor553.length:
        mem[0] = 553
        if stor553[idx].field_256 != 0:
            if stor553[idx].field_256 > -7776001:
                revert with 0, 17
            if stor553[idx].field_256 + (2160 * 24 * 3600) <= block.timestamp:
                if sub_20e51fd9 and 24 * 3600 > -1 / sub_20e51fd9:
                    revert with 0, 17
                if 24 * 3600 * sub_20e51fd9 and stor553[idx].field_0 > -1 / 24 * 3600 * sub_20e51fd9:
                    revert with 0, 17
                if (24 * 3600 * sub_babf971c * stor556) + (24 * 3600 * sub_20e51fd9 * stor555) > !(24 * 3600 * sub_20e51fd9 * stor553[idx].field_0):
                    revert with 0, 17
            else:
                if block.timestamp > -86401:
                    revert with 0, 17
                if stor553[idx].field_256 > -7776001:
                    revert with 0, 17
                if stor553[idx].field_256 > -7776001:
                    revert with 0, 17
                if stor553[idx].field_256 + (2160 * 24 * 3600) < block.timestamp:
                    revert with 0, 17
                if stor553[idx].field_256 + (2160 * 24 * 3600) <= block.timestamp + (24 * 3600):
                    if sub_20e51fd9 < sub_e6ae99e6:
                        revert with 0, 17
                    if sub_20e51fd9 - sub_e6ae99e6 and stor553[idx].field_256 + -block.timestamp + (2160 * 24 * 3600) > -1 / sub_20e51fd9 - sub_e6ae99e6:
                        revert with 0, 17
                    if sub_20e51fd9 < (2160 * 24 * 3600 * sub_20e51fd9) + (stor553[idx].field_256 * sub_20e51fd9) - (block.timestamp * sub_20e51fd9) - (2160 * 24 * 3600 * sub_e6ae99e6) - (stor553[idx].field_256 * sub_e6ae99e6) + (block.timestamp * sub_e6ae99e6) / 2160 * 24 * 3600:
                        revert with 0, 17
                    if 24 * 3600 < stor553[idx].field_256 + -block.timestamp + (2160 * 24 * 3600):
                        revert with 0, 17
                    if sub_20e51fd9 and -stor553[idx].field_256 + block.timestamp - (2136 * 24 * 3600) > -1 / sub_20e51fd9:
                        revert with 0, 17
                    if sub_20e51fd9 > !(sub_20e51fd9 - ((2160 * 24 * 3600 * sub_20e51fd9) + (stor553[idx].field_256 * sub_20e51fd9) - (block.timestamp * sub_20e51fd9) - (2160 * 24 * 3600 * sub_e6ae99e6) - (stor553[idx].field_256 * sub_e6ae99e6) + (block.timestamp * sub_e6ae99e6) / 2160 * 24 * 3600)):
                        revert with 0, 17
                    if (2 * sub_20e51fd9) - ((2160 * 24 * 3600 * sub_20e51fd9) + (stor553[idx].field_256 * sub_20e51fd9) - (block.timestamp * sub_20e51fd9) - (2160 * 24 * 3600 * sub_e6ae99e6) - (stor553[idx].field_256 * sub_e6ae99e6) + (block.timestamp * sub_e6ae99e6) / 2160 * 24 * 3600) and stor553[idx].field_256 + -block.timestamp + (2160 * 24 * 3600) > -1 / (2 * sub_20e51fd9) - ((2160 * 24 * 3600 * sub_20e51fd9) + (stor553[idx].field_256 * sub_20e51fd9) - (block.timestamp * sub_20e51fd9) - (2160 * 24 * 3600 * sub_e6ae99e6) - (stor553[idx].field_256 * sub_e6ae99e6) + (block.timestamp * sub_e6ae99e6) / 2160 * 24 * 3600):
                        revert with 0, 17
                    if (2 * 2160 * 24 * 3600 * sub_20e51fd9) + (2 * stor553[idx].field_256 * sub_20e51fd9) + (2 * -1 * block.timestamp * sub_20e51fd9) - (2160 * 24 * 3600 * (2160 * 24 * 3600 * sub_20e51fd9) + (stor553[idx].field_256 * sub_20e51fd9) - (block.timestamp * sub_20e51fd9) - (2160 * 24 * 3600 * sub_e6ae99e6) - (stor553[idx].field_256 * sub_e6ae99e6) + (block.timestamp * sub_e6ae99e6) / 2160 * 24 * 3600) - (stor553[idx].field_256 * (2160 * 24 * 3600 * sub_20e51fd9) + (stor553[idx].field_256 * sub_20e51fd9) - (block.timestamp * sub_20e51fd9) - (2160 * 24 * 3600 * sub_e6ae99e6) - (stor553[idx].field_256 * sub_e6ae99e6) + (block.timestamp * sub_e6ae99e6) / 2160 * 24 * 3600) + (block.timestamp * (2160 * 24 * 3600 * sub_20e51fd9) + (stor553[idx].field_256 * sub_20e51fd9) - (block.timestamp * sub_20e51fd9) - (2160 * 24 * 3600 * sub_e6ae99e6) - (stor553[idx].field_256 * sub_e6ae99e6) + (block.timestamp * sub_e6ae99e6) / 2160 * 24 * 3600) / 2 > !((-7689600 * sub_20e51fd9) - (stor553[idx].field_256 * sub_20e51fd9) + (block.timestamp * sub_20e51fd9)):
                        revert with 0, 17
                    if ((2 * 2160 * 24 * 3600 * sub_20e51fd9) + (2 * stor553[idx].field_256 * sub_20e51fd9) + (2 * -1 * block.timestamp * sub_20e51fd9) - (2160 * 24 * 3600 * (2160 * 24 * 3600 * sub_20e51fd9) + (stor553[idx].field_256 * sub_20e51fd9) - (block.timestamp * sub_20e51fd9) - (2160 * 24 * 3600 * sub_e6ae99e6) - (stor553[idx].field_256 * sub_e6ae99e6) + (block.timestamp * sub_e6ae99e6) / 2160 * 24 * 3600) - (stor553[idx].field_256 * (2160 * 24 * 3600 * sub_20e51fd9) + (stor553[idx].field_256 * sub_20e51fd9) - (block.timestamp * sub_20e51fd9) - (2160 * 24 * 3600 * sub_e6ae99e6) - (stor553[idx].field_256 * sub_e6ae99e6) + (block.timestamp * sub_e6ae99e6) / 2160 * 24 * 3600) + (block.timestamp * (2160 * 24 * 3600 * sub_20e51fd9) + (stor553[idx].field_256 * sub_20e51fd9) - (block.timestamp * sub_20e51fd9) - (2160 * 24 * 3600 * sub_e6ae99e6) - (stor553[idx].field_256 * sub_e6ae99e6) + (block.timestamp * sub_e6ae99e6) / 2160 * 24 * 3600) / 2) - (2136 * 24 * 3600 * sub_20e51fd9) - (stor553[idx].field_256 * sub_20e51fd9) + (block.timestamp * sub_20e51fd9) and stor553[idx].field_0 > -1 / ((2 * 2160 * 24 * 3600 * sub_20e51fd9) + (2 * stor553[idx].field_256 * sub_20e51fd9) + (2 * -1 * block.timestamp * sub_20e51fd9) - (2160 * 24 * 3600 * (2160 * 24 * 3600 * sub_20e51fd9) + (stor553[idx].field_256 * sub_20e51fd9) - (block.timestamp * sub_20e51fd9) - (2160 * 24 * 3600 * sub_e6ae99e6) - (stor553[idx].field_256 * sub_e6ae99e6) + (block.timestamp * sub_e6ae99e6) / 2160 * 24 * 3600) - (stor553[idx].field_256 * (2160 * 24 * 3600 * sub_20e51fd9) + (stor553[idx].field_256 * sub_20e51fd9) - (block.timestamp * sub_20e51fd9) - (2160 * 24 * 3600 * sub_e6ae99e6) - (stor553[idx].field_256 * sub_e6ae99e6) + (block.timestamp * sub_e6ae99e6) / 2160 * 24 * 3600) + (block.timestamp * (2160 * 24 * 3600 * sub_20e51fd9) + (stor553[idx].field_256 * sub_20e51fd9) - (block.timestamp * sub_20e51fd9) - (2160 * 24 * 3600 * sub_e6ae99e6) - (stor553[idx].field_256 * sub_e6ae99e6) + (block.timestamp * sub_e6ae99e6) / 2160 * 24 * 3600) / 2) - (2136 * 24 * 3600 * sub_20e51fd9) - (stor553[idx].field_256 * sub_20e51fd9) + (block.timestamp * sub_20e51fd9):
                        revert with 0, 17
                    if (24 * 3600 * sub_babf971c * stor556) + (24 * 3600 * sub_20e51fd9 * stor555) > !(((2 * 2160 * 24 * 3600 * sub_20e51fd9) + (2 * stor553[idx].field_256 * sub_20e51fd9) + (2 * -1 * block.timestamp * sub_20e51fd9) - (2160 * 24 * 3600 * (2160 * 24 * 3600 * sub_20e51fd9) + (stor553[idx].field_256 * sub_20e51fd9) - (block.timestamp * sub_20e51fd9) - (2160 * 24 * 3600 * sub_e6ae99e6) - (stor553[idx].field_256 * sub_e6ae99e6) + (block.timestamp * sub_e6ae99e6) / 2160 * 24 * 3600) - (stor553[idx].field_256 * (2160 * 24 * 3600 * sub_20e51fd9) + (stor553[idx].field_256 * sub_20e51fd9) - (block.timestamp * sub_20e51fd9) - (2160 * 24 * 3600 * sub_e6ae99e6) - (stor553[idx].field_256 * sub_e6ae99e6) + (block.timestamp * sub_e6ae99e6) / 2160 * 24 * 3600) + (block.timestamp * (2160 * 24 * 3600 * sub_20e51fd9) + (stor553[idx].field_256 * sub_20e51fd9) - (block.timestamp * sub_20e51fd9) - (2160 * 24 * 3600 * sub_e6ae99e6) - (stor553[idx].field_256 * sub_e6ae99e6) + (block.timestamp * sub_e6ae99e6) / 2160 * 24 * 3600) / 2 * stor553[idx].field_0) - (2136 * 24 * 3600 * sub_20e51fd9 * stor553[idx].field_0) - (stor553[idx].field_256 * sub_20e51fd9 * stor553[idx].field_0) + (block.timestamp * sub_20e51fd9 * stor553[idx].field_0)):
                        revert with 0, 17
                else:
                    if stor553[idx].field_256 + -block.timestamp + (2160 * 24 * 3600) < 24 * 3600:
                        revert with 0, 17
                    if sub_20e51fd9 < sub_e6ae99e6:
                        revert with 0, 17
                    if sub_20e51fd9 - sub_e6ae99e6 and stor553[idx].field_256 + -block.timestamp + (2136 * 24 * 3600) > -1 / sub_20e51fd9 - sub_e6ae99e6:
                        revert with 0, 17
                    if sub_20e51fd9 < (2136 * 24 * 3600 * sub_20e51fd9) + (stor553[idx].field_256 * sub_20e51fd9) - (block.timestamp * sub_20e51fd9) - (2136 * 24 * 3600 * sub_e6ae99e6) - (stor553[idx].field_256 * sub_e6ae99e6) + (block.timestamp * sub_e6ae99e6) / 2160 * 24 * 3600:
                        revert with 0, 17
                    if stor553[idx].field_256 + -block.timestamp + (2136 * 24 * 3600) > -86401:
                        revert with 0, 17
                    if sub_20e51fd9 < sub_e6ae99e6:
                        revert with 0, 17
                    if sub_20e51fd9 - sub_e6ae99e6 and stor553[idx].field_256 + -block.timestamp + (2160 * 24 * 3600) > -1 / sub_20e51fd9 - sub_e6ae99e6:
                        revert with 0, 17
                    if sub_20e51fd9 < (2160 * 24 * 3600 * sub_20e51fd9) + (stor553[idx].field_256 * sub_20e51fd9) - (block.timestamp * sub_20e51fd9) - (2160 * 24 * 3600 * sub_e6ae99e6) - (stor553[idx].field_256 * sub_e6ae99e6) + (block.timestamp * sub_e6ae99e6) / 2160 * 24 * 3600:
                        revert with 0, 17
                    if sub_20e51fd9 - ((2160 * 24 * 3600 * sub_20e51fd9) + (stor553[idx].field_256 * sub_20e51fd9) - (block.timestamp * sub_20e51fd9) - (2160 * 24 * 3600 * sub_e6ae99e6) - (stor553[idx].field_256 * sub_e6ae99e6) + (block.timestamp * sub_e6ae99e6) / 2160 * 24 * 3600) > !(sub_20e51fd9 - ((2136 * 24 * 3600 * sub_20e51fd9) + (stor553[idx].field_256 * sub_20e51fd9) - (block.timestamp * sub_20e51fd9) - (2136 * 24 * 3600 * sub_e6ae99e6) - (stor553[idx].field_256 * sub_e6ae99e6) + (block.timestamp * sub_e6ae99e6) / 2160 * 24 * 3600)):
                        revert with 0, 17
                    if (2 * sub_20e51fd9) - ((2160 * 24 * 3600 * sub_20e51fd9) + (stor553[idx].field_256 * sub_20e51fd9) - (block.timestamp * sub_20e51fd9) - (2160 * 24 * 3600 * sub_e6ae99e6) - (stor553[idx].field_256 * sub_e6ae99e6) + (block.timestamp * sub_e6ae99e6) / 2160 * 24 * 3600) - ((2136 * 24 * 3600 * sub_20e51fd9) + (stor553[idx].field_256 * sub_20e51fd9) - (block.timestamp * sub_20e51fd9) - (2136 * 24 * 3600 * sub_e6ae99e6) - (stor553[idx].field_256 * sub_e6ae99e6) + (block.timestamp * sub_e6ae99e6) / 2160 * 24 * 3600) and 24 * 3600 > -1 / (2 * sub_20e51fd9) - ((2160 * 24 * 3600 * sub_20e51fd9) + (stor553[idx].field_256 * sub_20e51fd9) - (block.timestamp * sub_20e51fd9) - (2160 * 24 * 3600 * sub_e6ae99e6) - (stor553[idx].field_256 * sub_e6ae99e6) + (block.timestamp * sub_e6ae99e6) / 2160 * 24 * 3600) - ((2136 * 24 * 3600 * sub_20e51fd9) + (stor553[idx].field_256 * sub_20e51fd9) - (block.timestamp * sub_20e51fd9) - (2136 * 24 * 3600 * sub_e6ae99e6) - (stor553[idx].field_256 * sub_e6ae99e6) + (block.timestamp * sub_e6ae99e6) / 2160 * 24 * 3600):
                        revert with 0, 17
                    if Mask(255, 1, (48 * 24 * 3600 * sub_20e51fd9) - (24 * 3600 * (2160 * 24 * 3600 * sub_20e51fd9) + (stor553[idx].field_256 * sub_20e51fd9) - (block.timestamp * sub_20e51fd9) - (2160 * 24 * 3600 * sub_e6ae99e6) - (stor553[idx].field_256 * sub_e6ae99e6) + (block.timestamp * sub_e6ae99e6) / 2160 * 24 * 3600) - (24 * 3600 * (2136 * 24 * 3600 * sub_20e51fd9) + (stor553[idx].field_256 * sub_20e51fd9) - (block.timestamp * sub_20e51fd9) - (2136 * 24 * 3600 * sub_e6ae99e6) - (stor553[idx].field_256 * sub_e6ae99e6) + (block.timestamp * sub_e6ae99e6) / 2160 * 24 * 3600)) and stor553[idx].field_0 > -1 / (48 * 24 * 3600 * sub_20e51fd9) - (24 * 3600 * (2160 * 24 * 3600 * sub_20e51fd9) + (stor553[idx].field_256 * sub_20e51fd9) - (block.timestamp * sub_20e51fd9) - (2160 * 24 * 3600 * sub_e6ae99e6) - (stor553[idx].field_256 * sub_e6ae99e6) + (block.timestamp * sub_e6ae99e6) / 2160 * 24 * 3600) - (24 * 3600 * (2136 * 24 * 3600 * sub_20e51fd9) + (stor553[idx].field_256 * sub_20e51fd9) - (block.timestamp * sub_20e51fd9) - (2136 * 24 * 3600 * sub_e6ae99e6) - (stor553[idx].field_256 * sub_e6ae99e6) + (block.timestamp * sub_e6ae99e6) / 2160 * 24 * 3600) / 2:
                        revert with 0, 17
                    if (24 * 3600 * sub_babf971c * stor556) + (24 * 3600 * sub_20e51fd9 * stor555) > !((48 * 24 * 3600 * sub_20e51fd9) - (24 * 3600 * (2160 * 24 * 3600 * sub_20e51fd9) + (stor553[idx].field_256 * sub_20e51fd9) - (block.timestamp * sub_20e51fd9) - (2160 * 24 * 3600 * sub_e6ae99e6) - (stor553[idx].field_256 * sub_e6ae99e6) + (block.timestamp * sub_e6ae99e6) / 2160 * 24 * 3600) - (24 * 3600 * (2136 * 24 * 3600 * sub_20e51fd9) + (stor553[idx].field_256 * sub_20e51fd9) - (block.timestamp * sub_20e51fd9) - (2136 * 24 * 3600 * sub_e6ae99e6) - (stor553[idx].field_256 * sub_e6ae99e6) + (block.timestamp * sub_e6ae99e6) / 2160 * 24 * 3600) / 2 * stor553[idx].field_0):
                        revert with 0, 17
        if idx == -1:
            revert with 0, 17
        idx = idx + 1
        continue 
    return ((24 * 3600 * sub_babf971c * stor556) + (24 * 3600 * sub_20e51fd9 * stor555) / 10^11)
}

function sub_f8b85ec3(?) payable {
    require calldata.size - 4 >= 32
    if stor401 == 2:
        revert with 0, 'ReentrancyGuard: reentrant call'
    stor401 = 2
    if not msg.sender:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'Troops: null or not owner or fee receiver'
    if not msg.sender:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721: balance query for the zero address'
    if balanceOf[address(msg.sender)] <= 0:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'Troops: null or not owner or fee receiver'
    staticcall liquidityPoolManagerImplementationAddress.0xb278110f with:
            gas gas_remaining wei
           args msg.sender
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == bool(ext_call.return_data[0])
    if ext_call.return_data[0]:
        revert with 0, 'Troops: null or not owner or fee receiver'
    if arg1 <= 0:
        revert with 0, 'Troops: Id must be higher than zero'
    if bool(stor552[arg1].field_256):
        if bool(stor552[arg1].field_256) == uint255(stor552[arg1].field_256) * 0.5 < 32:
            revert with 0, 34
    else:
        if bool(stor552[arg1].field_256) == stor552[arg1].field_257 % 128 < 32:
            revert with 0, 34
    if bool(stor552[arg1].field_256):
        if bool(stor552[arg1].field_256) == uint255(stor552[arg1].field_256) * 0.5 < 32:
            revert with 0, 34
        if Mask(256, -1, stor552[arg1].field_256):
            if 31 < uint255(stor552[arg1].field_256) * 0.5:
                idx = ceil32(return_data.size) + 384
                s = 0
                while ceil32(return_data.size) + (uint255(stor552[arg1].field_256) * 0.5) + 352 > idx:
                    mem[idx + 32] = stor552[arg1][s + 1].field_256
                    idx = idx + 32
                    s = s + 1
                    continue 
    else:
        if bool(stor552[arg1].field_256) == stor552[arg1].field_257 % 128 < 32:
            revert with 0, 34
        if stor552[arg1].field_257 % 128:
            if 31 < stor552[arg1].field_257 % 128:
                idx = ceil32(return_data.size) + 384
                s = 0
                while ceil32(return_data.size) + stor552[arg1].field_257 % 128 + 352 > idx:
                    mem[idx + 32] = stor552[arg1][s + 1].field_256
                    idx = idx + 32
                    s = s + 1
                    continue 
    if not uint8(stor552[arg1].field_1536):
        revert with 0, 'Troops: not exist or not owner'
    if not ownerOf[arg1]:
        revert with 0, 'ERC721: owner query for nonexistent token'
    if ownerOf[arg1] != msg.sender:
        revert with 0, 'Troops: not exist or not owner'
    if paused:
        revert with 0, 'Pausable: paused'
    if not sub_4d1c3621Address:
        revert with 0, 'Troops: Army is not set'
    if bool(uint8(stor552[arg1].field_1536)) != 1:
        revert with 0, 'non-existent troop'
    if not uint8(stor552[arg1].field_1544):
        idx = stor554
        while idx < stor553.length:
            if stor553[idx].field_256 == stor552[arg1].field_768:
                if idx >= stor553.length:
                    revert with 0, 50
                mem[0] = 553
                stor553[idx].field_0 = 0
                stor553[idx].field_256 = 0
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                continue 
            if not ownerOf[arg1]:
                revert with 0, 'ERC721: owner query for nonexistent token'
            if not ownerOf[arg1]:
                stor154[arg1] = tokenByIndex.length
                tokenByIndex.length++
                stor72A1[stor153.length] = arg1
            else:
                if ownerOf[arg1]:
                    if not ownerOf[arg1]:
                        revert with 0, 'ERC721: balance query for the zero address'
                    if balanceOf[stor103[arg1]] < 1:
                        revert with 0, 17
                    if balanceOf[stor103[arg1]] - 1 != stor152[arg1]:
                        tokenOfOwnerByIndex[stor103[arg1]][stor152[arg1]] = tokenOfOwnerByIndex[stor103[arg1]][stor104[stor103[arg1]] - 1]
                        stor152[stor151[stor103[arg1]][stor104[stor103[arg1]] - 1]] = stor152[arg1]
                    stor152[arg1] = 0
                    tokenOfOwnerByIndex[stor103[arg1]][stor104[stor103[arg1]] - 1] = 0
            if tokenByIndex.length < 1:
                revert with 0, 17
            if tokenByIndex.length - 1 >= tokenByIndex.length:
                revert with 0, 50
            if stor154[arg1] >= tokenByIndex.length:
                revert with 0, 50
            tokenByIndex[stor154[arg1]] = tokenByIndex[tokenByIndex.length]
            stor154[stor153[stor153.length]] = stor154[arg1]
            stor154[arg1] = 0
            if not tokenByIndex.length:
                revert with 0, 49
            tokenByIndex[tokenByIndex.length] = 0
            tokenByIndex.length--
            approved[arg1] = 0
            if not ownerOf[arg1]:
                revert with 0, 'ERC721: owner query for nonexistent token'
            emit Approval(ownerOf[arg1], 0, arg1);
            if balanceOf[stor103[arg1]] < 1:
                revert with 0, 17
            balanceOf[stor103[arg1]]--
            ownerOf[arg1] = 0
            emit Transfer(ownerOf[arg1], 0, arg1);
            if bool(stor201[arg1].field_0):
                if bool(stor201[arg1].field_0) == uint255(stor201[arg1].field_0) * 0.5 < 32:
                    revert with 0, 34
                if Mask(256, -1, stor201[arg1].field_0):
                    if bool(stor201[arg1].field_0):
                        if bool(stor201[arg1].field_0) == uint255(stor201[arg1].field_0) * 0.5 < 32:
                            revert with 0, 34
                        stor201[arg1].field_0 = 0
                        if 31 < uint255(stor201[arg1].field_0) * 0.5:
                            idx = sha3(sha3(arg1, 201))
                            while sha3(sha3(arg1, 201)) + ((uint255(stor201[arg1].field_0) * 0.5) + 31 / 32) > idx:
                                stor[idx] = 0
                                idx = idx + 1
                                continue 
                    else:
                        if bool(stor201[arg1].field_0) == stor201[arg1].field_1 % 128 < 32:
                            revert with 0, 34
                        stor201[arg1].field_0 = 0
                        if 31 < stor201[arg1].field_1 % 128:
                            idx = sha3(sha3(arg1, 201))
                            while sha3(sha3(arg1, 201)) + (stor201[arg1].field_1 % 128 + 31 / 32) > idx:
                                stor[idx] = 0
                                idx = idx + 1
                                continue 
            else:
                if bool(stor201[arg1].field_0) == stor201[arg1].field_1 % 128 < 32:
                    revert with 0, 34
                if stor201[arg1].field_1 % 128:
                    if bool(stor201[arg1].field_0):
                        if bool(stor201[arg1].field_0) == uint255(stor201[arg1].field_0) * 0.5 < 32:
                            revert with 0, 34
                        stor201[arg1].field_0 = 0
                        if 31 < uint255(stor201[arg1].field_0) * 0.5:
                            idx = sha3(sha3(arg1, 201))
                            while sha3(sha3(arg1, 201)) + ((uint255(stor201[arg1].field_0) * 0.5) + 31 / 32) > idx:
                                stor[idx] = 0
                                idx = idx + 1
                                continue 
                    else:
                        if bool(stor201[arg1].field_0) == stor201[arg1].field_1 % 128 < 32:
                            revert with 0, 34
                        stor201[arg1].field_0 = 0
                        if 31 < stor201[arg1].field_1 % 128:
                            idx = sha3(sha3(arg1, 201))
                            while sha3(sha3(arg1, 201)) + (stor201[arg1].field_1 % 128 + 31 / 32) > idx:
                                stor[idx] = 0
                                idx = idx + 1
                                continue 
            stor552[arg1].field_0 = 0
            if bool(stor552[arg1].field_256):
                if bool(stor552[arg1].field_256) == uint255(stor552[arg1].field_256) * 0.5 < 32:
                    revert with 0, 34
                stor552[arg1].field_256 = 0
                if 31 < uint255(stor552[arg1].field_256) * 0.5:
                    idx = sha3(sha3(arg1, 552) + 1)
                    while sha3(sha3(arg1, 552) + 1) + ((uint255(stor552[arg1].field_256) * 0.5) + 31 / 32) > idx:
                        stor[idx] = 0
                        idx = idx + 1
                        continue 
            else:
                if bool(stor552[arg1].field_256) == stor552[arg1].field_257 % 128 < 32:
                    revert with 0, 34
                stor552[arg1].field_256 = 0
                if 31 < stor552[arg1].field_257 % 128:
                    idx = sha3(sha3(arg1, 552) + 1)
                    while sha3(sha3(arg1, 552) + 1) + (stor552[arg1].field_257 % 128 + 31 / 32) > idx:
                        stor[idx] = 0
                        idx = idx + 1
                        continue 
            stor552[arg1].field_512 = 0
            stor552[arg1].field_768 = 0
            stor552[arg1].field_1024 = 0
            stor552[arg1].field_1280 = 0
            uint16(stor552[arg1].field_1536) = 0
            stor401 = 1
    else:
        if stor556 < stor552[arg1].field_1024:
            revert with 0, 17
        stor556 -= stor552[arg1].field_1024
    if not ownerOf[arg1]:
        revert with 0, 'ERC721: owner query for nonexistent token'
    if not ownerOf[arg1]:
        stor154[arg1] = tokenByIndex.length
        tokenByIndex.length++
        stor72A1[stor153.length] = arg1
    else:
        if ownerOf[arg1]:
            if not ownerOf[arg1]:
                revert with 0, 'ERC721: balance query for the zero address'
            if balanceOf[stor103[arg1]] < 1:
                revert with 0, 17
            if balanceOf[stor103[arg1]] - 1 != stor152[arg1]:
                tokenOfOwnerByIndex[stor103[arg1]][stor152[arg1]] = tokenOfOwnerByIndex[stor103[arg1]][stor104[stor103[arg1]] - 1]
                stor152[stor151[stor103[arg1]][stor104[stor103[arg1]] - 1]] = stor152[arg1]
            stor152[arg1] = 0
            tokenOfOwnerByIndex[stor103[arg1]][stor104[stor103[arg1]] - 1] = 0
    if tokenByIndex.length < 1:
        revert with 0, 17
    if tokenByIndex.length - 1 >= tokenByIndex.length:
        revert with 0, 50
    if stor154[arg1] >= tokenByIndex.length:
        revert with 0, 50
    tokenByIndex[stor154[arg1]] = tokenByIndex[tokenByIndex.length]
    stor154[stor153[stor153.length]] = stor154[arg1]
    stor154[arg1] = 0
    if not tokenByIndex.length:
        revert with 0, 49
    tokenByIndex[tokenByIndex.length] = 0
    tokenByIndex.length--
    approved[arg1] = 0
    if not ownerOf[arg1]:
        revert with 0, 'ERC721: owner query for nonexistent token'
    emit Approval(ownerOf[arg1], 0, arg1);
    if balanceOf[stor103[arg1]] < 1:
        revert with 0, 17
    balanceOf[stor103[arg1]]--
    ownerOf[arg1] = 0
    emit Transfer(ownerOf[arg1], 0, arg1);
    if bool(stor201[arg1].field_0):
        if bool(stor201[arg1].field_0) == uint255(stor201[arg1].field_0) * 0.5 < 32:
            revert with 0, 34
        if Mask(256, -1, stor201[arg1].field_0):
            if bool(stor201[arg1].field_0):
                if bool(stor201[arg1].field_0) == uint255(stor201[arg1].field_0) * 0.5 < 32:
                    revert with 0, 34
                stor201[arg1].field_0 = 0
                if 31 < uint255(stor201[arg1].field_0) * 0.5:
                    idx = 0
                    while (uint255(stor201[arg1].field_0) * 0.5) + 31 / 32 > idx:
                        stor201[arg1][idx].field_0 = 0
                        idx = idx + 1
                        continue 
            else:
                if bool(stor201[arg1].field_0) == stor201[arg1].field_1 % 128 < 32:
                    revert with 0, 34
                stor201[arg1].field_0 = 0
                if 31 < stor201[arg1].field_1 % 128:
                    idx = 0
                    while stor201[arg1].field_1 % 128 + 31 / 32 > idx:
                        stor201[arg1][idx].field_0 = 0
                        idx = idx + 1
                        continue 
    else:
        if bool(stor201[arg1].field_0) == stor201[arg1].field_1 % 128 < 32:
            revert with 0, 34
        if stor201[arg1].field_1 % 128:
            if bool(stor201[arg1].field_0):
                if bool(stor201[arg1].field_0) == uint255(stor201[arg1].field_0) * 0.5 < 32:
                    revert with 0, 34
                stor201[arg1].field_0 = 0
                if 31 < uint255(stor201[arg1].field_0) * 0.5:
                    idx = 0
                    while (uint255(stor201[arg1].field_0) * 0.5) + 31 / 32 > idx:
                        stor201[arg1][idx].field_0 = 0
                        idx = idx + 1
                        continue 
            else:
                if bool(stor201[arg1].field_0) == stor201[arg1].field_1 % 128 < 32:
                    revert with 0, 34
                stor201[arg1].field_0 = 0
                if 31 < stor201[arg1].field_1 % 128:
                    idx = 0
                    while stor201[arg1].field_1 % 128 + 31 / 32 > idx:
                        stor201[arg1][idx].field_0 = 0
                        idx = idx + 1
                        continue 
    stor552[arg1].field_0 = 0
    if bool(stor552[arg1].field_256):
        if bool(stor552[arg1].field_256) == uint255(stor552[arg1].field_256) * 0.5 < 32:
            revert with 0, 34
        stor552[arg1].field_256 = 0
        if 31 < uint255(stor552[arg1].field_256) * 0.5:
            idx = 0
            while (uint255(stor552[arg1].field_256) * 0.5) + 31 / 32 > idx:
                stor552[arg1][idx + 1].field_0 = 0
                idx = idx + 1
                continue 
    else:
        if bool(stor552[arg1].field_256) == stor552[arg1].field_257 % 128 < 32:
            revert with 0, 34
        stor552[arg1].field_256 = 0
        if 31 < stor552[arg1].field_257 % 128:
            idx = 0
            while stor552[arg1].field_257 % 128 + 31 / 32 > idx:
                stor552[arg1][idx + 1].field_0 = 0
                idx = idx + 1
                continue 
    stor552[arg1].field_512 = 0
    stor552[arg1].field_768 = 0
    stor552[arg1].field_1024 = 0
    stor552[arg1].field_1280 = 0
    uint16(stor552[arg1].field_1536) = 0
    stor401 = 1
}

function sub_0e127233(?) payable {
    require calldata.size - 4 >= 32
    require arg1 == address(arg1)
    if not address(arg1):
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721: balance query for the zero address'
    mem[0] = address(arg1)
    mem[32] = 104
    if balanceOf[address(arg1)] > test266151307():
        revert with 0, 65
    mem[96] = balanceOf[address(arg1)]
    mem[64] = (32 * balanceOf[address(arg1)]) + 128
    if not balanceOf[address(arg1)]:
        idx = 0
        while idx < balanceOf[address(arg1)]:
            if not address(arg1):
                revert with 0, 'ERC721: balance query for the zero address'
            if idx >= balanceOf[address(arg1)]:
                revert with 0, 'ERC721Enumerable: owner index out of bounds'
            if tokenOfOwnerByIndex[address(arg1)][idx] <= 0:
                revert with 0, 'Troops: Id must be higher than zero'
            mem[0] = tokenOfOwnerByIndex[address(arg1)][idx]
            mem[32] = 552
            _118 = mem[64]
            mem[64] = mem[64] + 256
            mem[_118] = stor552[stor151[address(arg1)][idx]].field_0
            if bool(stor552[stor151[address(arg1)][idx]].field_256):
                if bool(stor552[stor151[address(arg1)][idx]].field_256) == uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5 < 32:
                    revert with 0, 34
                _125 = mem[64]
                mem[64] = mem[64] + ceil32(uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5) + 32
                mem[_125] = uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5
                if bool(stor552[stor151[address(arg1)][idx]].field_256):
                    if bool(stor552[stor151[address(arg1)][idx]].field_256) == uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5 < 32:
                        revert with 0, 34
                    if Mask(256, -1, stor552[stor151[address(arg1)][idx]].field_256):
                        if 31 >= uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5:
                            mem[_125 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg1)][idx]].field_264)
                        else:
                            mem[0] = sha3(tokenOfOwnerByIndex[address(arg1)][idx], 552) + 1
                            mem[_125 + 32] = stor552[stor151[address(arg1)][idx]][1].field_0
                            s = _125 + 32
                            t = sha3(sha3(tokenOfOwnerByIndex[address(arg1)][idx], 552) + 1)
                            while _125 + (uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5) > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                else:
                    if bool(stor552[stor151[address(arg1)][idx]].field_256) == stor552[stor151[address(arg1)][idx]].field_257 % 128 < 32:
                        revert with 0, 34
                    if stor552[stor151[address(arg1)][idx]].field_257 % 128:
                        if 31 >= stor552[stor151[address(arg1)][idx]].field_257 % 128:
                            mem[_125 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg1)][idx]].field_264)
                        else:
                            mem[0] = sha3(tokenOfOwnerByIndex[address(arg1)][idx], 552) + 1
                            mem[_125 + 32] = stor552[stor151[address(arg1)][idx]][1].field_0
                            s = _125 + 32
                            t = sha3(sha3(tokenOfOwnerByIndex[address(arg1)][idx], 552) + 1)
                            while _125 + stor552[stor151[address(arg1)][idx]].field_257 % 128 > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                mem[_118 + 32] = _125
            else:
                if bool(stor552[stor151[address(arg1)][idx]].field_256) == stor552[stor151[address(arg1)][idx]].field_257 % 128 < 32:
                    revert with 0, 34
                _127 = mem[64]
                mem[64] = mem[64] + ceil32(stor552[stor151[address(arg1)][idx]].field_257 % 128) + 32
                mem[_127] = stor552[stor151[address(arg1)][idx]].field_257 % 128
                if bool(stor552[stor151[address(arg1)][idx]].field_256):
                    if bool(stor552[stor151[address(arg1)][idx]].field_256) == uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5 < 32:
                        revert with 0, 34
                    if Mask(256, -1, stor552[stor151[address(arg1)][idx]].field_256):
                        if 31 >= uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5:
                            mem[_127 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg1)][idx]].field_264)
                        else:
                            mem[0] = sha3(tokenOfOwnerByIndex[address(arg1)][idx], 552) + 1
                            mem[_127 + 32] = stor552[stor151[address(arg1)][idx]][1].field_0
                            s = _127 + 32
                            t = sha3(sha3(tokenOfOwnerByIndex[address(arg1)][idx], 552) + 1)
                            while _127 + (uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5) > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                else:
                    if bool(stor552[stor151[address(arg1)][idx]].field_256) == stor552[stor151[address(arg1)][idx]].field_257 % 128 < 32:
                        revert with 0, 34
                    if stor552[stor151[address(arg1)][idx]].field_257 % 128:
                        if 31 >= stor552[stor151[address(arg1)][idx]].field_257 % 128:
                            mem[_127 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg1)][idx]].field_264)
                        else:
                            mem[0] = sha3(tokenOfOwnerByIndex[address(arg1)][idx], 552) + 1
                            mem[_127 + 32] = stor552[stor151[address(arg1)][idx]][1].field_0
                            s = _127 + 32
                            t = sha3(sha3(tokenOfOwnerByIndex[address(arg1)][idx], 552) + 1)
                            while _127 + stor552[stor151[address(arg1)][idx]].field_257 % 128 > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                mem[_118 + 32] = _127
            mem[_118 + 64] = stor552[stor151[address(arg1)][idx]].field_512
            mem[_118 + 96] = stor552[stor151[address(arg1)][idx]].field_768
            mem[_118 + 128] = stor552[stor151[address(arg1)][idx]].field_1024
            mem[_118 + 160] = stor552[stor151[address(arg1)][idx]].field_1280
            mem[_118 + 192] = bool(uint8(stor552[stor151[address(arg1)][idx]].field_1536))
            mem[_118 + 224] = bool(uint8(stor552[stor151[address(arg1)][idx]].field_1544))
            require uint8(stor552[stor151[address(arg1)][idx]].field_1536)
            if idx >= mem[96]:
                revert with 0, 50
            mem[(32 * idx) + 128] = tokenOfOwnerByIndex[address(arg1)][idx]
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            continue 
    else:
        mem[128 len 32 * balanceOf[address(arg1)]] = call.data[calldata.size len 32 * balanceOf[address(arg1)]]
        idx = 0
        while idx < balanceOf[address(arg1)]:
            if not address(arg1):
                revert with 0, 'ERC721: balance query for the zero address'
            if idx >= balanceOf[address(arg1)]:
                revert with 0, 'ERC721Enumerable: owner index out of bounds'
            if tokenOfOwnerByIndex[address(arg1)][idx] <= 0:
                revert with 0, 'Troops: Id must be higher than zero'
            mem[0] = tokenOfOwnerByIndex[address(arg1)][idx]
            mem[32] = 552
            _121 = mem[64]
            mem[64] = mem[64] + 256
            mem[_121] = stor552[stor151[address(arg1)][idx]].field_0
            if bool(stor552[stor151[address(arg1)][idx]].field_256):
                if bool(stor552[stor151[address(arg1)][idx]].field_256) == uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5 < 32:
                    revert with 0, 34
                _126 = mem[64]
                mem[64] = mem[64] + ceil32(uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5) + 32
                mem[_126] = uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5
                if bool(stor552[stor151[address(arg1)][idx]].field_256):
                    if bool(stor552[stor151[address(arg1)][idx]].field_256) == uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5 < 32:
                        revert with 0, 34
                    if Mask(256, -1, stor552[stor151[address(arg1)][idx]].field_256):
                        if 31 >= uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5:
                            mem[_126 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg1)][idx]].field_264)
                        else:
                            mem[0] = sha3(tokenOfOwnerByIndex[address(arg1)][idx], 552) + 1
                            mem[_126 + 32] = stor552[stor151[address(arg1)][idx]][1].field_0
                            s = _126 + 32
                            t = sha3(sha3(tokenOfOwnerByIndex[address(arg1)][idx], 552) + 1)
                            while _126 + (uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5) > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                else:
                    if bool(stor552[stor151[address(arg1)][idx]].field_256) == stor552[stor151[address(arg1)][idx]].field_257 % 128 < 32:
                        revert with 0, 34
                    if stor552[stor151[address(arg1)][idx]].field_257 % 128:
                        if 31 >= stor552[stor151[address(arg1)][idx]].field_257 % 128:
                            mem[_126 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg1)][idx]].field_264)
                        else:
                            mem[0] = sha3(tokenOfOwnerByIndex[address(arg1)][idx], 552) + 1
                            mem[_126 + 32] = stor552[stor151[address(arg1)][idx]][1].field_0
                            s = _126 + 32
                            t = sha3(sha3(tokenOfOwnerByIndex[address(arg1)][idx], 552) + 1)
                            while _126 + stor552[stor151[address(arg1)][idx]].field_257 % 128 > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                mem[_121 + 32] = _126
            else:
                if bool(stor552[stor151[address(arg1)][idx]].field_256) == stor552[stor151[address(arg1)][idx]].field_257 % 128 < 32:
                    revert with 0, 34
                _128 = mem[64]
                mem[64] = mem[64] + ceil32(stor552[stor151[address(arg1)][idx]].field_257 % 128) + 32
                mem[_128] = stor552[stor151[address(arg1)][idx]].field_257 % 128
                if bool(stor552[stor151[address(arg1)][idx]].field_256):
                    if bool(stor552[stor151[address(arg1)][idx]].field_256) == uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5 < 32:
                        revert with 0, 34
                    if Mask(256, -1, stor552[stor151[address(arg1)][idx]].field_256):
                        if 31 >= uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5:
                            mem[_128 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg1)][idx]].field_264)
                        else:
                            mem[0] = sha3(tokenOfOwnerByIndex[address(arg1)][idx], 552) + 1
                            mem[_128 + 32] = stor552[stor151[address(arg1)][idx]][1].field_0
                            s = _128 + 32
                            t = sha3(sha3(tokenOfOwnerByIndex[address(arg1)][idx], 552) + 1)
                            while _128 + (uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5) > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                else:
                    if bool(stor552[stor151[address(arg1)][idx]].field_256) == stor552[stor151[address(arg1)][idx]].field_257 % 128 < 32:
                        revert with 0, 34
                    if stor552[stor151[address(arg1)][idx]].field_257 % 128:
                        if 31 >= stor552[stor151[address(arg1)][idx]].field_257 % 128:
                            mem[_128 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg1)][idx]].field_264)
                        else:
                            mem[0] = sha3(tokenOfOwnerByIndex[address(arg1)][idx], 552) + 1
                            mem[_128 + 32] = stor552[stor151[address(arg1)][idx]][1].field_0
                            s = _128 + 32
                            t = sha3(sha3(tokenOfOwnerByIndex[address(arg1)][idx], 552) + 1)
                            while _128 + stor552[stor151[address(arg1)][idx]].field_257 % 128 > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                mem[_121 + 32] = _128
            mem[_121 + 64] = stor552[stor151[address(arg1)][idx]].field_512
            mem[_121 + 96] = stor552[stor151[address(arg1)][idx]].field_768
            mem[_121 + 128] = stor552[stor151[address(arg1)][idx]].field_1024
            mem[_121 + 160] = stor552[stor151[address(arg1)][idx]].field_1280
            mem[_121 + 192] = bool(uint8(stor552[stor151[address(arg1)][idx]].field_1536))
            mem[_121 + 224] = bool(uint8(stor552[stor151[address(arg1)][idx]].field_1544))
            require uint8(stor552[stor151[address(arg1)][idx]].field_1536)
            if idx >= mem[96]:
                revert with 0, 50
            mem[(32 * idx) + 128] = tokenOfOwnerByIndex[address(arg1)][idx]
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            continue 
    mem[mem[64]] = 32
    mem[mem[64] + 32] = mem[96]
    mem[mem[64] + 64 len 32 * mem[96]] = mem[128 len 32 * mem[96]]
    return 32, mem[mem[64] + 32 len (32 * mem[96]) + 32]
}

function tokenURI(uint256 arg1) payable {
    require calldata.size - 4 >= 32
    if bool(stor552[arg1].field_256):
        if bool(stor552[arg1].field_256) == uint255(stor552[arg1].field_256) * 0.5 < 32:
            revert with 0, 34
        if bool(stor552[arg1].field_256):
            if bool(stor552[arg1].field_256) == uint255(stor552[arg1].field_256) * 0.5 < 32:
                revert with 0, 34
            if Mask(256, -1, stor552[arg1].field_256):
                if 31 < uint255(stor552[arg1].field_256) * 0.5:
                    idx = 384
                    s = 0
                    while (uint255(stor552[arg1].field_256) * 0.5) + 352 > idx:
                        mem[idx + 32] = stor552[arg1][s + 1].field_256
                        idx = idx + 32
                        s = s + 1
                        continue 
        else:
            if bool(stor552[arg1].field_256) == stor552[arg1].field_257 % 128 < 32:
                revert with 0, 34
            if stor552[arg1].field_257 % 128:
                if 31 < stor552[arg1].field_257 % 128:
                    idx = 384
                    s = 0
                    while stor552[arg1].field_257 % 128 + 352 > idx:
                        mem[idx + 32] = stor552[arg1][s + 1].field_256
                        idx = idx + 32
                        s = s + 1
                        continue 
        if 1 == bool(uint8(stor552[arg1].field_1544)):
            return 32, 74, 
                   0x4568747470733a2f2f697066732e696e667572612e696f2f697066732f516d567878784b443847634575326665557062324a653344487151344b437851487443674e5a4837557968636e, mem[ceil32(uint255(stor552[arg1].field_256) * 0.5) + 490 len 22] >> 336,
                   0
        if bool(stor552[arg1].field_256):
            if bool(stor552[arg1].field_256) == uint255(stor552[arg1].field_256) * 0.5 < 32:
                revert with 0, 34
            if bool(stor552[arg1].field_256):
                if bool(stor552[arg1].field_256) == uint255(stor552[arg1].field_256) * 0.5 < 32:
                    revert with 0, 34
                if Mask(256, -1, stor552[arg1].field_256):
                    if 31 < uint255(stor552[arg1].field_256) * 0.5:
                        idx = ceil32(uint255(stor552[arg1].field_256) * 0.5) + 672
                        s = 0
                        while ceil32(uint255(stor552[arg1].field_256) * 0.5) + (uint255(stor552[arg1].field_256) * 0.5) + 640 > idx:
                            mem[idx + 32] = stor552[arg1][s + 1].field_256
                            idx = idx + 32
                            s = s + 1
                            continue 
            else:
                if bool(stor552[arg1].field_256) == stor552[arg1].field_257 % 128 < 32:
                    revert with 0, 34
                if stor552[arg1].field_257 % 128:
                    if 31 < stor552[arg1].field_257 % 128:
                        idx = ceil32(uint255(stor552[arg1].field_256) * 0.5) + 672
                        s = 0
                        while ceil32(uint255(stor552[arg1].field_256) * 0.5) + stor552[arg1].field_257 % 128 + 640 > idx:
                            mem[idx + 32] = stor552[arg1][s + 1].field_256
                            idx = idx + 32
                            s = s + 1
                            continue 
            if stor552[arg1].field_768 > !sub_22451834:
                revert with 0, 17
            if block.timestamp <= stor552[arg1].field_768 + sub_22451834:
                return 32, 74, 
                       0x3668747470733a2f2f697066732e696e667572612e696f2f697066732f516d5a4c474c646a7575443754416375587848444b685a63374b643237766434744b4570525a65713965624d34, mem[(2 * ceil32(uint255(stor552[arg1].field_256) * 0.5)) + 778 len 22] >> 336,
                       0
            if stor552[arg1].field_768 > !sub_39807f8d:
                revert with 0, 17
            if block.timestamp <= stor552[arg1].field_768 + sub_39807f8d:
                return 32, 74, 
                       0xfe68747470733a2f2f697066732e696e667572612e696f2f697066732f516d61705a565678384758754c6d6857554144686145764e6a6e6d426138597634794c7754446f455238594854, mem[(2 * ceil32(uint255(stor552[arg1].field_256) * 0.5)) + 778 len 22] >> 336,
                       0
            if stor552[arg1].field_768 > !sub_1fdb4c5f:
                revert with 0, 17
            if block.timestamp > stor552[arg1].field_768 + sub_1fdb4c5f:
                return 32, 74, 
                       0x4468747470733a2f2f697066732e696e667572612e696f2f697066732f516d5250516b565a663550796a7663774a414337326b4a51696a79446734587a54435a706e7a647a7652727772, mem[(2 * ceil32(uint255(stor552[arg1].field_256) * 0.5)) + 778 len 22] >> 336,
                       0
            return 32, 74, 
                   0x4e68747470733a2f2f697066732e696e667572612e696f2f697066732f516d57513443754e743832687a52757a74514c5076674d697a3454683456724e506b707971597a597337766134, mem[(2 * ceil32(uint255(stor552[arg1].field_256) * 0.5)) + 778 len 22] >> 336,
                   0
        if bool(stor552[arg1].field_256) == stor552[arg1].field_257 % 128 < 32:
            revert with 0, 34
        if bool(stor552[arg1].field_256):
            if bool(stor552[arg1].field_256) == uint255(stor552[arg1].field_256) * 0.5 < 32:
                revert with 0, 34
            if Mask(256, -1, stor552[arg1].field_256):
                if 31 < uint255(stor552[arg1].field_256) * 0.5:
                    idx = ceil32(uint255(stor552[arg1].field_256) * 0.5) + 672
                    s = 0
                    while ceil32(uint255(stor552[arg1].field_256) * 0.5) + (uint255(stor552[arg1].field_256) * 0.5) + 640 > idx:
                        mem[idx + 32] = stor552[arg1][s + 1].field_256
                        idx = idx + 32
                        s = s + 1
                        continue 
        else:
            if bool(stor552[arg1].field_256) == stor552[arg1].field_257 % 128 < 32:
                revert with 0, 34
            if stor552[arg1].field_257 % 128:
                if 31 < stor552[arg1].field_257 % 128:
                    idx = ceil32(uint255(stor552[arg1].field_256) * 0.5) + 672
                    s = 0
                    while ceil32(uint255(stor552[arg1].field_256) * 0.5) + stor552[arg1].field_257 % 128 + 640 > idx:
                        mem[idx + 32] = stor552[arg1][s + 1].field_256
                        idx = idx + 32
                        s = s + 1
                        continue 
        if stor552[arg1].field_768 > !sub_22451834:
            revert with 0, 17
        if block.timestamp <= stor552[arg1].field_768 + sub_22451834:
            return 32, 74, 
                   0x3668747470733a2f2f697066732e696e667572612e696f2f697066732f516d5a4c474c646a7575443754416375587848444b685a63374b643237766434744b4570525a65713965624d34, mem[ceil32(uint255(stor552[arg1].field_256) * 0.5) + ceil32(stor552[arg1].field_257 % 128) + 778 len 22] >> 336,
                   0
        if stor552[arg1].field_768 > !sub_39807f8d:
            revert with 0, 17
        if block.timestamp <= stor552[arg1].field_768 + sub_39807f8d:
            return 32, 74, 
                   0xfe68747470733a2f2f697066732e696e667572612e696f2f697066732f516d61705a565678384758754c6d6857554144686145764e6a6e6d426138597634794c7754446f455238594854, mem[ceil32(uint255(stor552[arg1].field_256) * 0.5) + ceil32(stor552[arg1].field_257 % 128) + 778 len 22] >> 336,
                   0
        if stor552[arg1].field_768 > !sub_1fdb4c5f:
            revert with 0, 17
        if block.timestamp > stor552[arg1].field_768 + sub_1fdb4c5f:
            return 32, 74, 
                   0x4468747470733a2f2f697066732e696e667572612e696f2f697066732f516d5250516b565a663550796a7663774a414337326b4a51696a79446734587a54435a706e7a647a7652727772, mem[ceil32(uint255(stor552[arg1].field_256) * 0.5) + ceil32(stor552[arg1].field_257 % 128) + 778 len 22] >> 336,
                   0
        return 32, 74, 
               0x4e68747470733a2f2f697066732e696e667572612e696f2f697066732f516d57513443754e743832687a52757a74514c5076674d697a3454683456724e506b707971597a597337766134, mem[ceil32(uint255(stor552[arg1].field_256) * 0.5) + ceil32(stor552[arg1].field_257 % 128) + 778 len 22] >> 336,
               0
    if bool(stor552[arg1].field_256) == stor552[arg1].field_257 % 128 < 32:
        revert with 0, 34
    if bool(stor552[arg1].field_256):
        if bool(stor552[arg1].field_256) == uint255(stor552[arg1].field_256) * 0.5 < 32:
            revert with 0, 34
        if Mask(256, -1, stor552[arg1].field_256):
            if 31 < uint255(stor552[arg1].field_256) * 0.5:
                idx = 384
                s = 0
                while (uint255(stor552[arg1].field_256) * 0.5) + 352 > idx:
                    mem[idx + 32] = stor552[arg1][s + 1].field_256
                    idx = idx + 32
                    s = s + 1
                    continue 
    else:
        if bool(stor552[arg1].field_256) == stor552[arg1].field_257 % 128 < 32:
            revert with 0, 34
        if stor552[arg1].field_257 % 128:
            if 31 < stor552[arg1].field_257 % 128:
                idx = 384
                s = 0
                while stor552[arg1].field_257 % 128 + 352 > idx:
                    mem[idx + 32] = stor552[arg1][s + 1].field_256
                    idx = idx + 32
                    s = s + 1
                    continue 
    if 1 == bool(uint8(stor552[arg1].field_1544)):
        return 32, 74, 
               0x4568747470733a2f2f697066732e696e667572612e696f2f697066732f516d567878784b443847634575326665557062324a653344487151344b437851487443674e5a4837557968636e, mem[ceil32(stor552[arg1].field_257 % 128) + 490 len 22] >> 336,
               0
    if bool(stor552[arg1].field_256):
        if bool(stor552[arg1].field_256) == uint255(stor552[arg1].field_256) * 0.5 < 32:
            revert with 0, 34
        if bool(stor552[arg1].field_256):
            if bool(stor552[arg1].field_256) == uint255(stor552[arg1].field_256) * 0.5 < 32:
                revert with 0, 34
            if Mask(256, -1, stor552[arg1].field_256):
                if 31 < uint255(stor552[arg1].field_256) * 0.5:
                    idx = ceil32(stor552[arg1].field_257 % 128) + 672
                    s = 0
                    while ceil32(stor552[arg1].field_257 % 128) + (uint255(stor552[arg1].field_256) * 0.5) + 640 > idx:
                        mem[idx + 32] = stor552[arg1][s + 1].field_256
                        idx = idx + 32
                        s = s + 1
                        continue 
        else:
            if bool(stor552[arg1].field_256) == stor552[arg1].field_257 % 128 < 32:
                revert with 0, 34
            if stor552[arg1].field_257 % 128:
                if 31 < stor552[arg1].field_257 % 128:
                    idx = ceil32(stor552[arg1].field_257 % 128) + 672
                    s = 0
                    while ceil32(stor552[arg1].field_257 % 128) + stor552[arg1].field_257 % 128 + 640 > idx:
                        mem[idx + 32] = stor552[arg1][s + 1].field_256
                        idx = idx + 32
                        s = s + 1
                        continue 
        if stor552[arg1].field_768 > !sub_22451834:
            revert with 0, 17
        if block.timestamp <= stor552[arg1].field_768 + sub_22451834:
            return 32, 74, 
                   0x3668747470733a2f2f697066732e696e667572612e696f2f697066732f516d5a4c474c646a7575443754416375587848444b685a63374b643237766434744b4570525a65713965624d34, mem[ceil32(stor552[arg1].field_257 % 128) + ceil32(uint255(stor552[arg1].field_256) * 0.5) + 778 len 22] >> 336,
                   0
        if stor552[arg1].field_768 > !sub_39807f8d:
            revert with 0, 17
        if block.timestamp <= stor552[arg1].field_768 + sub_39807f8d:
            return 32, 74, 
                   0xfe68747470733a2f2f697066732e696e667572612e696f2f697066732f516d61705a565678384758754c6d6857554144686145764e6a6e6d426138597634794c7754446f455238594854, mem[ceil32(stor552[arg1].field_257 % 128) + ceil32(uint255(stor552[arg1].field_256) * 0.5) + 778 len 22] >> 336,
                   0
        if stor552[arg1].field_768 > !sub_1fdb4c5f:
            revert with 0, 17
        if block.timestamp > stor552[arg1].field_768 + sub_1fdb4c5f:
            return 32, 74, 
                   0x4468747470733a2f2f697066732e696e667572612e696f2f697066732f516d5250516b565a663550796a7663774a414337326b4a51696a79446734587a54435a706e7a647a7652727772, mem[ceil32(stor552[arg1].field_257 % 128) + ceil32(uint255(stor552[arg1].field_256) * 0.5) + 778 len 22] >> 336,
                   0
        return 32, 74, 
               0x4e68747470733a2f2f697066732e696e667572612e696f2f697066732f516d57513443754e743832687a52757a74514c5076674d697a3454683456724e506b707971597a597337766134, mem[ceil32(stor552[arg1].field_257 % 128) + ceil32(uint255(stor552[arg1].field_256) * 0.5) + 778 len 22] >> 336,
               0
    if bool(stor552[arg1].field_256) == stor552[arg1].field_257 % 128 < 32:
        revert with 0, 34
    if bool(stor552[arg1].field_256):
        if bool(stor552[arg1].field_256) == uint255(stor552[arg1].field_256) * 0.5 < 32:
            revert with 0, 34
        if Mask(256, -1, stor552[arg1].field_256):
            if 31 < uint255(stor552[arg1].field_256) * 0.5:
                idx = ceil32(stor552[arg1].field_257 % 128) + 672
                s = 0
                while ceil32(stor552[arg1].field_257 % 128) + (uint255(stor552[arg1].field_256) * 0.5) + 640 > idx:
                    mem[idx + 32] = stor552[arg1][s + 1].field_256
                    idx = idx + 32
                    s = s + 1
                    continue 
    else:
        if bool(stor552[arg1].field_256) == stor552[arg1].field_257 % 128 < 32:
            revert with 0, 34
        if stor552[arg1].field_257 % 128:
            if 31 < stor552[arg1].field_257 % 128:
                idx = ceil32(stor552[arg1].field_257 % 128) + 672
                s = 0
                while ceil32(stor552[arg1].field_257 % 128) + stor552[arg1].field_257 % 128 + 640 > idx:
                    mem[idx + 32] = stor552[arg1][s + 1].field_256
                    idx = idx + 32
                    s = s + 1
                    continue 
    if stor552[arg1].field_768 > !sub_22451834:
        revert with 0, 17
    if block.timestamp <= stor552[arg1].field_768 + sub_22451834:
        return 32, 74, 
               0x3668747470733a2f2f697066732e696e667572612e696f2f697066732f516d5a4c474c646a7575443754416375587848444b685a63374b643237766434744b4570525a65713965624d34, mem[(2 * ceil32(stor552[arg1].field_257 % 128)) + 778 len 22] >> 336,
               0
    if stor552[arg1].field_768 > !sub_39807f8d:
        revert with 0, 17
    if block.timestamp <= stor552[arg1].field_768 + sub_39807f8d:
        return 32, 74, 
               0xfe68747470733a2f2f697066732e696e667572612e696f2f697066732f516d61705a565678384758754c6d6857554144686145764e6a6e6d426138597634794c7754446f455238594854, mem[(2 * ceil32(stor552[arg1].field_257 % 128)) + 778 len 22] >> 336,
               0
    if stor552[arg1].field_768 > !sub_1fdb4c5f:
        revert with 0, 17
    if block.timestamp > stor552[arg1].field_768 + sub_1fdb4c5f:
        return 32, 74, 
               0x4468747470733a2f2f697066732e696e667572612e696f2f697066732f516d5250516b565a663550796a7663774a414337326b4a51696a79446734587a54435a706e7a647a7652727772, mem[(2 * ceil32(stor552[arg1].field_257 % 128)) + 778 len 22] >> 336,
               0
    return 32, 74, 
           0x4e68747470733a2f2f697066732e696e667572612e696f2f697066732f516d57513443754e743832687a52757a74514c5076674d697a3454683456724e506b707971597a597337766134, mem[(2 * ceil32(stor552[arg1].field_257 % 128)) + 778 len 22] >> 336,
           0
}

function isNameAvailable(address arg1, string arg2) payable {
    require calldata.size - 4 >= 64
    require arg1 == arg1
    require arg2 <= test266151307()
    require arg2 + 35 < calldata.size
    if arg2.length > test266151307():
        revert with 0, 65
    if ceil32(ceil32(arg2.length)) + 97 < 96 or ceil32(ceil32(arg2.length)) + 97 > test266151307():
        revert with 0, 65
    mem[96] = arg2.length
    require arg2 + arg2.length + 36 <= calldata.size
    mem[128 len arg2.length] = arg2[all]
    mem[arg2.length + 128] = 0
    if not arg1:
        revert with 0, 'ERC721: balance query for the zero address'
    mem[0] = arg1
    mem[32] = 104
    if balanceOf[address(arg1)] > test266151307():
        revert with 0, 65
    mem[ceil32(ceil32(arg2.length)) + 97] = balanceOf[address(arg1)]
    mem[64] = ceil32(ceil32(arg2.length)) + (32 * balanceOf[address(arg1)]) + 129
    if not balanceOf[address(arg1)]:
        idx = 0
        while idx < balanceOf[address(arg1)]:
            if not arg1:
                revert with 0, 'ERC721: balance query for the zero address'
            if idx >= balanceOf[address(arg1)]:
                revert with 0, 'ERC721Enumerable: owner index out of bounds'
            if tokenOfOwnerByIndex[address(arg1)][idx] <= 0:
                revert with 0, 'Troops: Id must be higher than zero'
            mem[0] = tokenOfOwnerByIndex[address(arg1)][idx]
            mem[32] = 552
            _312 = mem[64]
            mem[64] = mem[64] + 256
            mem[_312] = stor552[stor151[address(arg1)][idx]].field_0
            if bool(stor552[stor151[address(arg1)][idx]].field_256):
                if bool(stor552[stor151[address(arg1)][idx]].field_256) == uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5 < 32:
                    revert with 0, 34
                _322 = mem[64]
                mem[64] = mem[64] + ceil32(uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5) + 32
                mem[_322] = uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5
                if bool(stor552[stor151[address(arg1)][idx]].field_256):
                    if bool(stor552[stor151[address(arg1)][idx]].field_256) == uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5 < 32:
                        revert with 0, 34
                    if Mask(256, -1, stor552[stor151[address(arg1)][idx]].field_256):
                        if 31 >= uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5:
                            mem[_322 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg1)][idx]].field_264)
                        else:
                            mem[0] = sha3(tokenOfOwnerByIndex[address(arg1)][idx], 552) + 1
                            mem[_322 + 32] = stor552[stor151[address(arg1)][idx]][1].field_0
                            s = _322 + 32
                            t = sha3(sha3(tokenOfOwnerByIndex[address(arg1)][idx], 552) + 1)
                            while _322 + (uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5) > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                else:
                    if bool(stor552[stor151[address(arg1)][idx]].field_256) == stor552[stor151[address(arg1)][idx]].field_257 % 128 < 32:
                        revert with 0, 34
                    if stor552[stor151[address(arg1)][idx]].field_257 % 128:
                        if 31 >= stor552[stor151[address(arg1)][idx]].field_257 % 128:
                            mem[_322 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg1)][idx]].field_264)
                        else:
                            mem[0] = sha3(tokenOfOwnerByIndex[address(arg1)][idx], 552) + 1
                            mem[_322 + 32] = stor552[stor151[address(arg1)][idx]][1].field_0
                            s = _322 + 32
                            t = sha3(sha3(tokenOfOwnerByIndex[address(arg1)][idx], 552) + 1)
                            while _322 + stor552[stor151[address(arg1)][idx]].field_257 % 128 > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                mem[_312 + 32] = _322
            else:
                if bool(stor552[stor151[address(arg1)][idx]].field_256) == stor552[stor151[address(arg1)][idx]].field_257 % 128 < 32:
                    revert with 0, 34
                _329 = mem[64]
                mem[64] = mem[64] + ceil32(stor552[stor151[address(arg1)][idx]].field_257 % 128) + 32
                mem[_329] = stor552[stor151[address(arg1)][idx]].field_257 % 128
                if bool(stor552[stor151[address(arg1)][idx]].field_256):
                    if bool(stor552[stor151[address(arg1)][idx]].field_256) == uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5 < 32:
                        revert with 0, 34
                    if Mask(256, -1, stor552[stor151[address(arg1)][idx]].field_256):
                        if 31 >= uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5:
                            mem[_329 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg1)][idx]].field_264)
                        else:
                            mem[0] = sha3(tokenOfOwnerByIndex[address(arg1)][idx], 552) + 1
                            mem[_329 + 32] = stor552[stor151[address(arg1)][idx]][1].field_0
                            s = _329 + 32
                            t = sha3(sha3(tokenOfOwnerByIndex[address(arg1)][idx], 552) + 1)
                            while _329 + (uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5) > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                else:
                    if bool(stor552[stor151[address(arg1)][idx]].field_256) == stor552[stor151[address(arg1)][idx]].field_257 % 128 < 32:
                        revert with 0, 34
                    if stor552[stor151[address(arg1)][idx]].field_257 % 128:
                        if 31 >= stor552[stor151[address(arg1)][idx]].field_257 % 128:
                            mem[_329 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg1)][idx]].field_264)
                        else:
                            mem[0] = sha3(tokenOfOwnerByIndex[address(arg1)][idx], 552) + 1
                            mem[_329 + 32] = stor552[stor151[address(arg1)][idx]][1].field_0
                            s = _329 + 32
                            t = sha3(sha3(tokenOfOwnerByIndex[address(arg1)][idx], 552) + 1)
                            while _329 + stor552[stor151[address(arg1)][idx]].field_257 % 128 > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                mem[_312 + 32] = _329
            mem[_312 + 64] = stor552[stor151[address(arg1)][idx]].field_512
            mem[_312 + 96] = stor552[stor151[address(arg1)][idx]].field_768
            mem[_312 + 128] = stor552[stor151[address(arg1)][idx]].field_1024
            mem[_312 + 160] = stor552[stor151[address(arg1)][idx]].field_1280
            mem[_312 + 192] = bool(uint8(stor552[stor151[address(arg1)][idx]].field_1536))
            mem[_312 + 224] = bool(uint8(stor552[stor151[address(arg1)][idx]].field_1544))
            require uint8(stor552[stor151[address(arg1)][idx]].field_1536)
            if idx >= mem[ceil32(ceil32(arg2.length)) + 97]:
                revert with 0, 50
            mem[(32 * idx) + ceil32(ceil32(arg2.length)) + 129] = tokenOfOwnerByIndex[address(arg1)][idx]
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            continue 
        _558 = mem[ceil32(ceil32(arg2.length)) + 97]
        idx = 0
        while idx < _558:
            if idx >= mem[ceil32(ceil32(arg2.length)) + 97]:
                revert with 0, 50
            mem[0] = mem[(32 * idx) + ceil32(ceil32(arg2.length)) + 129]
            mem[32] = 552
            _564 = sha3(mem[(32 * idx) + ceil32(ceil32(arg2.length)) + 129], 552)
            _565 = mem[64]
            mem[64] = mem[64] + 256
            mem[_565] = stor552[mem[(32 * idx) + ceil32(ceil32(arg2.length)) + 129]].field_0
            if bool(stor1[_564].field_0):
                if bool(stor1[_564].field_0) == uint255(stor1[_564].field_0) * 0.5 < 32:
                    revert with 0, 34
                _588 = mem[64]
                mem[64] = mem[64] + ceil32(uint255(stor1[_564].field_0) * 0.5) + 32
                mem[_588] = uint255(stor1[_564].field_0) * 0.5
                if bool(stor1[_564].field_0):
                    if bool(stor1[_564].field_0) == uint255(stor1[_564].field_0) * 0.5 < 32:
                        revert with 0, 34
                    if Mask(256, -1, stor1[_564].field_0):
                        if 31 >= uint255(stor1[_564].field_0) * 0.5:
                            mem[_588 + 32] = 256 * Mask(248, 0, stor1[_564].field_8)
                        else:
                            mem[0] = _564 + 1
                            mem[_588 + 32] = stor[sha3(_564 + 1)]
                            s = _588 + 32
                            t = sha3(_564 + 1)
                            while _588 + (uint255(stor1[_564].field_0) * 0.5) > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                else:
                    if bool(stor1[_564].field_0) == stor1[_564].field_1 % 128 < 32:
                        revert with 0, 34
                    if stor1[_564].field_1 % 128:
                        if 31 >= stor1[_564].field_1 % 128:
                            mem[_588 + 32] = 256 * Mask(248, 0, stor1[_564].field_8)
                        else:
                            mem[0] = _564 + 1
                            mem[_588 + 32] = stor[sha3(_564 + 1)]
                            s = _588 + 32
                            t = sha3(_564 + 1)
                            while _588 + stor1[_564].field_1 % 128 > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                mem[_565 + 32] = _588
                mem[_565 + 64] = stor2[_564]
                mem[_565 + 96] = stor3[_564]
                mem[_565 + 128] = stor4[_564]
                mem[_565 + 160] = stor5[_564]
                mem[_565 + 192] = bool(uint8(stor6[_564].field_0))
                mem[_565 + 224] = bool(uint8(stor6[_564].field_8))
                if sha3(mem[128 len mem[96]]) == sha3(mem[_588 + 32 len uint255(stor1[_564].field_0) * 0.5]):
                    return 0
            else:
                if bool(stor1[_564].field_0) == stor1[_564].field_1 % 128 < 32:
                    revert with 0, 34
                _590 = mem[64]
                mem[64] = mem[64] + ceil32(stor1[_564].field_1 % 128) + 32
                mem[_590] = stor1[_564].field_1 % 128
                if bool(stor1[_564].field_0):
                    if bool(stor1[_564].field_0) == uint255(stor1[_564].field_0) * 0.5 < 32:
                        revert with 0, 34
                    if Mask(256, -1, stor1[_564].field_0):
                        if 31 >= uint255(stor1[_564].field_0) * 0.5:
                            mem[_590 + 32] = 256 * Mask(248, 0, stor1[_564].field_8)
                        else:
                            mem[0] = _564 + 1
                            mem[_590 + 32] = stor[sha3(_564 + 1)]
                            s = _590 + 32
                            t = sha3(_564 + 1)
                            while _590 + (uint255(stor1[_564].field_0) * 0.5) > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                else:
                    if bool(stor1[_564].field_0) == stor1[_564].field_1 % 128 < 32:
                        revert with 0, 34
                    if stor1[_564].field_1 % 128:
                        if 31 >= stor1[_564].field_1 % 128:
                            mem[_590 + 32] = 256 * Mask(248, 0, stor1[_564].field_8)
                        else:
                            mem[0] = _564 + 1
                            mem[_590 + 32] = stor[sha3(_564 + 1)]
                            s = _590 + 32
                            t = sha3(_564 + 1)
                            while _590 + stor1[_564].field_1 % 128 > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                mem[_565 + 32] = _590
                mem[_565 + 64] = stor2[_564]
                mem[_565 + 96] = stor3[_564]
                mem[_565 + 128] = stor4[_564]
                mem[_565 + 160] = stor5[_564]
                mem[_565 + 192] = bool(uint8(stor6[_564].field_0))
                mem[_565 + 224] = bool(uint8(stor6[_564].field_8))
                if sha3(mem[128 len mem[96]]) == sha3(mem[_590 + 32 len stor1[_564].field_1 % 128]):
                    return 0
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            continue 
    else:
        mem[ceil32(ceil32(arg2.length)) + 129 len 32 * balanceOf[address(arg1)]] = call.data[calldata.size len 32 * balanceOf[address(arg1)]]
        idx = 0
        while idx < balanceOf[address(arg1)]:
            if not arg1:
                revert with 0, 'ERC721: balance query for the zero address'
            if idx >= balanceOf[address(arg1)]:
                revert with 0, 'ERC721Enumerable: owner index out of bounds'
            if tokenOfOwnerByIndex[address(arg1)][idx] <= 0:
                revert with 0, 'Troops: Id must be higher than zero'
            mem[0] = tokenOfOwnerByIndex[address(arg1)][idx]
            mem[32] = 552
            _316 = mem[64]
            mem[64] = mem[64] + 256
            mem[_316] = stor552[stor151[address(arg1)][idx]].field_0
            if bool(stor552[stor151[address(arg1)][idx]].field_256):
                if bool(stor552[stor151[address(arg1)][idx]].field_256) == uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5 < 32:
                    revert with 0, 34
                _323 = mem[64]
                mem[64] = mem[64] + ceil32(uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5) + 32
                mem[_323] = uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5
                if bool(stor552[stor151[address(arg1)][idx]].field_256):
                    if bool(stor552[stor151[address(arg1)][idx]].field_256) == uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5 < 32:
                        revert with 0, 34
                    if Mask(256, -1, stor552[stor151[address(arg1)][idx]].field_256):
                        if 31 >= uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5:
                            mem[_323 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg1)][idx]].field_264)
                        else:
                            mem[0] = sha3(tokenOfOwnerByIndex[address(arg1)][idx], 552) + 1
                            mem[_323 + 32] = stor552[stor151[address(arg1)][idx]][1].field_0
                            s = _323 + 32
                            t = sha3(sha3(tokenOfOwnerByIndex[address(arg1)][idx], 552) + 1)
                            while _323 + (uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5) > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                else:
                    if bool(stor552[stor151[address(arg1)][idx]].field_256) == stor552[stor151[address(arg1)][idx]].field_257 % 128 < 32:
                        revert with 0, 34
                    if stor552[stor151[address(arg1)][idx]].field_257 % 128:
                        if 31 >= stor552[stor151[address(arg1)][idx]].field_257 % 128:
                            mem[_323 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg1)][idx]].field_264)
                        else:
                            mem[0] = sha3(tokenOfOwnerByIndex[address(arg1)][idx], 552) + 1
                            mem[_323 + 32] = stor552[stor151[address(arg1)][idx]][1].field_0
                            s = _323 + 32
                            t = sha3(sha3(tokenOfOwnerByIndex[address(arg1)][idx], 552) + 1)
                            while _323 + stor552[stor151[address(arg1)][idx]].field_257 % 128 > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                mem[_316 + 32] = _323
            else:
                if bool(stor552[stor151[address(arg1)][idx]].field_256) == stor552[stor151[address(arg1)][idx]].field_257 % 128 < 32:
                    revert with 0, 34
                _335 = mem[64]
                mem[64] = mem[64] + ceil32(stor552[stor151[address(arg1)][idx]].field_257 % 128) + 32
                mem[_335] = stor552[stor151[address(arg1)][idx]].field_257 % 128
                if bool(stor552[stor151[address(arg1)][idx]].field_256):
                    if bool(stor552[stor151[address(arg1)][idx]].field_256) == uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5 < 32:
                        revert with 0, 34
                    if Mask(256, -1, stor552[stor151[address(arg1)][idx]].field_256):
                        if 31 >= uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5:
                            mem[_335 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg1)][idx]].field_264)
                        else:
                            mem[0] = sha3(tokenOfOwnerByIndex[address(arg1)][idx], 552) + 1
                            mem[_335 + 32] = stor552[stor151[address(arg1)][idx]][1].field_0
                            s = _335 + 32
                            t = sha3(sha3(tokenOfOwnerByIndex[address(arg1)][idx], 552) + 1)
                            while _335 + (uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5) > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                else:
                    if bool(stor552[stor151[address(arg1)][idx]].field_256) == stor552[stor151[address(arg1)][idx]].field_257 % 128 < 32:
                        revert with 0, 34
                    if stor552[stor151[address(arg1)][idx]].field_257 % 128:
                        if 31 >= stor552[stor151[address(arg1)][idx]].field_257 % 128:
                            mem[_335 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg1)][idx]].field_264)
                        else:
                            mem[0] = sha3(tokenOfOwnerByIndex[address(arg1)][idx], 552) + 1
                            mem[_335 + 32] = stor552[stor151[address(arg1)][idx]][1].field_0
                            s = _335 + 32
                            t = sha3(sha3(tokenOfOwnerByIndex[address(arg1)][idx], 552) + 1)
                            while _335 + stor552[stor151[address(arg1)][idx]].field_257 % 128 > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                mem[_316 + 32] = _335
            mem[_316 + 64] = stor552[stor151[address(arg1)][idx]].field_512
            mem[_316 + 96] = stor552[stor151[address(arg1)][idx]].field_768
            mem[_316 + 128] = stor552[stor151[address(arg1)][idx]].field_1024
            mem[_316 + 160] = stor552[stor151[address(arg1)][idx]].field_1280
            mem[_316 + 192] = bool(uint8(stor552[stor151[address(arg1)][idx]].field_1536))
            mem[_316 + 224] = bool(uint8(stor552[stor151[address(arg1)][idx]].field_1544))
            require uint8(stor552[stor151[address(arg1)][idx]].field_1536)
            if idx >= mem[ceil32(ceil32(arg2.length)) + 97]:
                revert with 0, 50
            mem[(32 * idx) + ceil32(ceil32(arg2.length)) + 129] = tokenOfOwnerByIndex[address(arg1)][idx]
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            continue 
        _559 = mem[ceil32(ceil32(arg2.length)) + 97]
        idx = 0
        while idx < _559:
            if idx >= mem[ceil32(ceil32(arg2.length)) + 97]:
                revert with 0, 50
            mem[0] = mem[(32 * idx) + ceil32(ceil32(arg2.length)) + 129]
            mem[32] = 552
            _572 = sha3(mem[(32 * idx) + ceil32(ceil32(arg2.length)) + 129], 552)
            _573 = mem[64]
            mem[64] = mem[64] + 256
            mem[_573] = stor552[mem[(32 * idx) + ceil32(ceil32(arg2.length)) + 129]].field_0
            if bool(stor1[_572].field_0):
                if bool(stor1[_572].field_0) == uint255(stor1[_572].field_0) * 0.5 < 32:
                    revert with 0, 34
                _589 = mem[64]
                mem[64] = mem[64] + ceil32(uint255(stor1[_572].field_0) * 0.5) + 32
                mem[_589] = uint255(stor1[_572].field_0) * 0.5
                if bool(stor1[_572].field_0):
                    if bool(stor1[_572].field_0) == uint255(stor1[_572].field_0) * 0.5 < 32:
                        revert with 0, 34
                    if Mask(256, -1, stor1[_572].field_0):
                        if 31 >= uint255(stor1[_572].field_0) * 0.5:
                            mem[_589 + 32] = 256 * Mask(248, 0, stor1[_572].field_8)
                        else:
                            mem[0] = _572 + 1
                            mem[_589 + 32] = stor[sha3(_572 + 1)]
                            s = _589 + 32
                            t = sha3(_572 + 1)
                            while _589 + (uint255(stor1[_572].field_0) * 0.5) > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                else:
                    if bool(stor1[_572].field_0) == stor1[_572].field_1 % 128 < 32:
                        revert with 0, 34
                    if stor1[_572].field_1 % 128:
                        if 31 >= stor1[_572].field_1 % 128:
                            mem[_589 + 32] = 256 * Mask(248, 0, stor1[_572].field_8)
                        else:
                            mem[0] = _572 + 1
                            mem[_589 + 32] = stor[sha3(_572 + 1)]
                            s = _589 + 32
                            t = sha3(_572 + 1)
                            while _589 + stor1[_572].field_1 % 128 > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                mem[_573 + 32] = _589
                mem[_573 + 64] = stor2[_572]
                mem[_573 + 96] = stor3[_572]
                mem[_573 + 128] = stor4[_572]
                mem[_573 + 160] = stor5[_572]
                mem[_573 + 192] = bool(uint8(stor6[_572].field_0))
                mem[_573 + 224] = bool(uint8(stor6[_572].field_8))
                if sha3(mem[128 len mem[96]]) == sha3(mem[_589 + 32 len uint255(stor1[_572].field_0) * 0.5]):
                    return 0
            else:
                if bool(stor1[_572].field_0) == stor1[_572].field_1 % 128 < 32:
                    revert with 0, 34
                _591 = mem[64]
                mem[64] = mem[64] + ceil32(stor1[_572].field_1 % 128) + 32
                mem[_591] = stor1[_572].field_1 % 128
                if bool(stor1[_572].field_0):
                    if bool(stor1[_572].field_0) == uint255(stor1[_572].field_0) * 0.5 < 32:
                        revert with 0, 34
                    if Mask(256, -1, stor1[_572].field_0):
                        if 31 >= uint255(stor1[_572].field_0) * 0.5:
                            mem[_591 + 32] = 256 * Mask(248, 0, stor1[_572].field_8)
                        else:
                            mem[0] = _572 + 1
                            mem[_591 + 32] = stor[sha3(_572 + 1)]
                            s = _591 + 32
                            t = sha3(_572 + 1)
                            while _591 + (uint255(stor1[_572].field_0) * 0.5) > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                else:
                    if bool(stor1[_572].field_0) == stor1[_572].field_1 % 128 < 32:
                        revert with 0, 34
                    if stor1[_572].field_1 % 128:
                        if 31 >= stor1[_572].field_1 % 128:
                            mem[_591 + 32] = 256 * Mask(248, 0, stor1[_572].field_8)
                        else:
                            mem[0] = _572 + 1
                            mem[_591 + 32] = stor[sha3(_572 + 1)]
                            s = _591 + 32
                            t = sha3(_572 + 1)
                            while _591 + stor1[_572].field_1 % 128 > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                mem[_573 + 32] = _591
                mem[_573 + 64] = stor2[_572]
                mem[_573 + 96] = stor3[_572]
                mem[_573 + 128] = stor4[_572]
                mem[_573 + 160] = stor5[_572]
                mem[_573 + 192] = bool(uint8(stor6[_572].field_0))
                mem[_573 + 224] = bool(uint8(stor6[_572].field_8))
                if sha3(mem[128 len mem[96]]) == sha3(mem[_591 + 32 len stor1[_572].field_1 % 128]):
                    return 0
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            continue 
    return 1
}

function sub_c9619f43(?) payable {
    require calldata.size - 4 >= 64
    require arg1 <= test266151307()
    require arg1 + 35 < calldata.size
    if arg1.length > test266151307():
        revert with 0, 65
    if ceil32(ceil32(arg1.length)) + 97 < 96 or ceil32(ceil32(arg1.length)) + 97 > test266151307():
        revert with 0, 65
    mem[96] = arg1.length
    require arg1 + arg1.length + 36 <= calldata.size
    mem[128 len arg1.length] = arg1[all]
    mem[arg1.length + 128] = 0
    if stor401 == 2:
        revert with 0, 'ReentrancyGuard: reentrant call'
    stor401 = 2
    if not sub_4d1c3621Address:
        revert with 0, 'Troops: Army is not set'
    if not ownerOf[arg2]:
        revert with 0, 'ERC721: owner query for nonexistent token'
    if ownerOf[arg2] != msg.sender:
        revert with 0, 'Troops: Rename context invalid'
    if arg1.length <= 1:
        revert with 0, 'Troops: Rename context invalid'
    if arg1.length >= 32:
        revert with 0, 'Troops: Rename context invalid'
    if not msg.sender:
        revert with 0, 'ERC721: balance query for the zero address'
    mem[0] = msg.sender
    mem[32] = 104
    if balanceOf[address(msg.sender)] > test266151307():
        revert with 0, 65
    mem[ceil32(ceil32(arg1.length)) + 97] = balanceOf[address(msg.sender)]
    mem[64] = ceil32(ceil32(arg1.length)) + (32 * balanceOf[address(msg.sender)]) + 129
    if not balanceOf[address(msg.sender)]:
        idx = 0
        while idx < balanceOf[address(msg.sender)]:
            if not msg.sender:
                revert with 0, 'ERC721: balance query for the zero address'
            if idx >= balanceOf[address(msg.sender)]:
                revert with 0, 'ERC721Enumerable: owner index out of bounds'
            if tokenOfOwnerByIndex[address(msg.sender)][idx] <= 0:
                revert with 0, 'Troops: Id must be higher than zero'
            mem[0] = tokenOfOwnerByIndex[address(msg.sender)][idx]
            mem[32] = 552
            _339 = mem[64]
            mem[64] = mem[64] + 256
            mem[_339] = stor552[stor151[address(msg.sender)][idx]].field_0
            if bool(stor552[stor151[address(msg.sender)][idx]].field_256):
                if bool(stor552[stor151[address(msg.sender)][idx]].field_256) == uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5 < 32:
                    revert with 0, 34
                _354 = mem[64]
                mem[64] = mem[64] + ceil32(uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5) + 32
                mem[_354] = uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5
                if bool(stor552[stor151[address(msg.sender)][idx]].field_256):
                    if bool(stor552[stor151[address(msg.sender)][idx]].field_256) == uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5 < 32:
                        revert with 0, 34
                    if Mask(256, -1, stor552[stor151[address(msg.sender)][idx]].field_256):
                        if 31 >= uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5:
                            mem[_354 + 32] = 256 * Mask(248, 0, stor552[stor151[address(msg.sender)][idx]].field_264)
                        else:
                            mem[0] = sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1
                            mem[_354 + 32] = stor552[stor151[address(msg.sender)][idx]][1].field_0
                            s = _354 + 32
                            t = sha3(sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1)
                            while _354 + (uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5) > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                else:
                    if bool(stor552[stor151[address(msg.sender)][idx]].field_256) == stor552[stor151[address(msg.sender)][idx]].field_257 % 128 < 32:
                        revert with 0, 34
                    if stor552[stor151[address(msg.sender)][idx]].field_257 % 128:
                        if 31 >= stor552[stor151[address(msg.sender)][idx]].field_257 % 128:
                            mem[_354 + 32] = 256 * Mask(248, 0, stor552[stor151[address(msg.sender)][idx]].field_264)
                        else:
                            mem[0] = sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1
                            mem[_354 + 32] = stor552[stor151[address(msg.sender)][idx]][1].field_0
                            s = _354 + 32
                            t = sha3(sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1)
                            while _354 + stor552[stor151[address(msg.sender)][idx]].field_257 % 128 > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                mem[_339 + 32] = _354
            else:
                if bool(stor552[stor151[address(msg.sender)][idx]].field_256) == stor552[stor151[address(msg.sender)][idx]].field_257 % 128 < 32:
                    revert with 0, 34
                _363 = mem[64]
                mem[64] = mem[64] + ceil32(stor552[stor151[address(msg.sender)][idx]].field_257 % 128) + 32
                mem[_363] = stor552[stor151[address(msg.sender)][idx]].field_257 % 128
                if bool(stor552[stor151[address(msg.sender)][idx]].field_256):
                    if bool(stor552[stor151[address(msg.sender)][idx]].field_256) == uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5 < 32:
                        revert with 0, 34
                    if Mask(256, -1, stor552[stor151[address(msg.sender)][idx]].field_256):
                        if 31 >= uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5:
                            mem[_363 + 32] = 256 * Mask(248, 0, stor552[stor151[address(msg.sender)][idx]].field_264)
                        else:
                            mem[0] = sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1
                            mem[_363 + 32] = stor552[stor151[address(msg.sender)][idx]][1].field_0
                            s = _363 + 32
                            t = sha3(sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1)
                            while _363 + (uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5) > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                else:
                    if bool(stor552[stor151[address(msg.sender)][idx]].field_256) == stor552[stor151[address(msg.sender)][idx]].field_257 % 128 < 32:
                        revert with 0, 34
                    if stor552[stor151[address(msg.sender)][idx]].field_257 % 128:
                        if 31 >= stor552[stor151[address(msg.sender)][idx]].field_257 % 128:
                            mem[_363 + 32] = 256 * Mask(248, 0, stor552[stor151[address(msg.sender)][idx]].field_264)
                        else:
                            mem[0] = sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1
                            mem[_363 + 32] = stor552[stor151[address(msg.sender)][idx]][1].field_0
                            s = _363 + 32
                            t = sha3(sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1)
                            while _363 + stor552[stor151[address(msg.sender)][idx]].field_257 % 128 > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                mem[_339 + 32] = _363
            mem[_339 + 64] = stor552[stor151[address(msg.sender)][idx]].field_512
            mem[_339 + 96] = stor552[stor151[address(msg.sender)][idx]].field_768
            mem[_339 + 128] = stor552[stor151[address(msg.sender)][idx]].field_1024
            mem[_339 + 160] = stor552[stor151[address(msg.sender)][idx]].field_1280
            mem[_339 + 192] = bool(uint8(stor552[stor151[address(msg.sender)][idx]].field_1536))
            mem[_339 + 224] = bool(uint8(stor552[stor151[address(msg.sender)][idx]].field_1544))
            require uint8(stor552[stor151[address(msg.sender)][idx]].field_1536)
            if idx >= mem[ceil32(ceil32(arg1.length)) + 97]:
                revert with 0, 50
            mem[(32 * idx) + ceil32(ceil32(arg1.length)) + 129] = tokenOfOwnerByIndex[address(msg.sender)][idx]
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            continue 
        _597 = mem[ceil32(ceil32(arg1.length)) + 97]
        idx = 0
        while idx < _597:
            if idx >= mem[ceil32(ceil32(arg1.length)) + 97]:
                revert with 0, 50
            mem[0] = mem[(32 * idx) + ceil32(ceil32(arg1.length)) + 129]
            mem[32] = 552
            _602 = sha3(mem[(32 * idx) + ceil32(ceil32(arg1.length)) + 129], 552)
            _603 = mem[64]
            mem[64] = mem[64] + 256
            mem[_603] = stor552[mem[(32 * idx) + ceil32(ceil32(arg1.length)) + 129]].field_0
            if bool(stor1[_602].field_0):
                if bool(stor1[_602].field_0) == uint255(stor1[_602].field_0) * 0.5 < 32:
                    revert with 0, 34
                _627 = mem[64]
                mem[64] = mem[64] + ceil32(uint255(stor1[_602].field_0) * 0.5) + 32
                mem[_627] = uint255(stor1[_602].field_0) * 0.5
                if bool(stor1[_602].field_0):
                    if bool(stor1[_602].field_0) == uint255(stor1[_602].field_0) * 0.5 < 32:
                        revert with 0, 34
                    if Mask(256, -1, stor1[_602].field_0):
                        if 31 >= uint255(stor1[_602].field_0) * 0.5:
                            mem[_627 + 32] = 256 * Mask(248, 0, stor1[_602].field_8)
                        else:
                            mem[0] = _602 + 1
                            mem[_627 + 32] = stor[sha3(_602 + 1)]
                            s = _627 + 32
                            t = sha3(_602 + 1)
                            while _627 + (uint255(stor1[_602].field_0) * 0.5) > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                else:
                    if bool(stor1[_602].field_0) == stor1[_602].field_1 % 128 < 32:
                        revert with 0, 34
                    if stor1[_602].field_1 % 128:
                        if 31 >= stor1[_602].field_1 % 128:
                            mem[_627 + 32] = 256 * Mask(248, 0, stor1[_602].field_8)
                        else:
                            mem[0] = _602 + 1
                            mem[_627 + 32] = stor[sha3(_602 + 1)]
                            s = _627 + 32
                            t = sha3(_602 + 1)
                            while _627 + stor1[_602].field_1 % 128 > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                mem[_603 + 32] = _627
                mem[_603 + 64] = stor2[_602]
                mem[_603 + 96] = stor3[_602]
                mem[_603 + 128] = stor4[_602]
                mem[_603 + 160] = stor5[_602]
                mem[_603 + 192] = bool(uint8(stor6[_602].field_0))
                mem[_603 + 224] = bool(uint8(stor6[_602].field_8))
                if sha3(mem[128 len mem[96]]) == sha3(mem[_627 + 32 len uint255(stor1[_602].field_0) * 0.5]):
                    revert with 0, 'Troops: Rename context invalid'
            else:
                if bool(stor1[_602].field_0) == stor1[_602].field_1 % 128 < 32:
                    revert with 0, 34
                _629 = mem[64]
                mem[64] = mem[64] + ceil32(stor1[_602].field_1 % 128) + 32
                mem[_629] = stor1[_602].field_1 % 128
                if bool(stor1[_602].field_0):
                    if bool(stor1[_602].field_0) == uint255(stor1[_602].field_0) * 0.5 < 32:
                        revert with 0, 34
                    if Mask(256, -1, stor1[_602].field_0):
                        if 31 >= uint255(stor1[_602].field_0) * 0.5:
                            mem[_629 + 32] = 256 * Mask(248, 0, stor1[_602].field_8)
                        else:
                            mem[0] = _602 + 1
                            mem[_629 + 32] = stor[sha3(_602 + 1)]
                            s = _629 + 32
                            t = sha3(_602 + 1)
                            while _629 + (uint255(stor1[_602].field_0) * 0.5) > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                else:
                    if bool(stor1[_602].field_0) == stor1[_602].field_1 % 128 < 32:
                        revert with 0, 34
                    if stor1[_602].field_1 % 128:
                        if 31 >= stor1[_602].field_1 % 128:
                            mem[_629 + 32] = 256 * Mask(248, 0, stor1[_602].field_8)
                        else:
                            mem[0] = _602 + 1
                            mem[_629 + 32] = stor[sha3(_602 + 1)]
                            s = _629 + 32
                            t = sha3(_602 + 1)
                            while _629 + stor1[_602].field_1 % 128 > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                mem[_603 + 32] = _629
                mem[_603 + 64] = stor2[_602]
                mem[_603 + 96] = stor3[_602]
                mem[_603 + 128] = stor4[_602]
                mem[_603 + 160] = stor5[_602]
                mem[_603 + 192] = bool(uint8(stor6[_602].field_0))
                mem[_603 + 224] = bool(uint8(stor6[_602].field_8))
                if sha3(mem[128 len mem[96]]) == sha3(mem[_629 + 32 len stor1[_602].field_1 % 128]):
                    revert with 0, 'Troops: Rename context invalid'
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            continue 
    else:
        mem[ceil32(ceil32(arg1.length)) + 129 len 32 * balanceOf[address(msg.sender)]] = call.data[calldata.size len 32 * balanceOf[address(msg.sender)]]
        idx = 0
        while idx < balanceOf[address(msg.sender)]:
            if not msg.sender:
                revert with 0, 'ERC721: balance query for the zero address'
            if idx >= balanceOf[address(msg.sender)]:
                revert with 0, 'ERC721Enumerable: owner index out of bounds'
            if tokenOfOwnerByIndex[address(msg.sender)][idx] <= 0:
                revert with 0, 'Troops: Id must be higher than zero'
            mem[0] = tokenOfOwnerByIndex[address(msg.sender)][idx]
            mem[32] = 552
            _343 = mem[64]
            mem[64] = mem[64] + 256
            mem[_343] = stor552[stor151[address(msg.sender)][idx]].field_0
            if bool(stor552[stor151[address(msg.sender)][idx]].field_256):
                if bool(stor552[stor151[address(msg.sender)][idx]].field_256) == uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5 < 32:
                    revert with 0, 34
                _356 = mem[64]
                mem[64] = mem[64] + ceil32(uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5) + 32
                mem[_356] = uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5
                if bool(stor552[stor151[address(msg.sender)][idx]].field_256):
                    if bool(stor552[stor151[address(msg.sender)][idx]].field_256) == uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5 < 32:
                        revert with 0, 34
                    if Mask(256, -1, stor552[stor151[address(msg.sender)][idx]].field_256):
                        if 31 >= uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5:
                            mem[_356 + 32] = 256 * Mask(248, 0, stor552[stor151[address(msg.sender)][idx]].field_264)
                        else:
                            mem[0] = sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1
                            mem[_356 + 32] = stor552[stor151[address(msg.sender)][idx]][1].field_0
                            s = _356 + 32
                            t = sha3(sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1)
                            while _356 + (uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5) > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                else:
                    if bool(stor552[stor151[address(msg.sender)][idx]].field_256) == stor552[stor151[address(msg.sender)][idx]].field_257 % 128 < 32:
                        revert with 0, 34
                    if stor552[stor151[address(msg.sender)][idx]].field_257 % 128:
                        if 31 >= stor552[stor151[address(msg.sender)][idx]].field_257 % 128:
                            mem[_356 + 32] = 256 * Mask(248, 0, stor552[stor151[address(msg.sender)][idx]].field_264)
                        else:
                            mem[0] = sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1
                            mem[_356 + 32] = stor552[stor151[address(msg.sender)][idx]][1].field_0
                            s = _356 + 32
                            t = sha3(sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1)
                            while _356 + stor552[stor151[address(msg.sender)][idx]].field_257 % 128 > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                mem[_343 + 32] = _356
            else:
                if bool(stor552[stor151[address(msg.sender)][idx]].field_256) == stor552[stor151[address(msg.sender)][idx]].field_257 % 128 < 32:
                    revert with 0, 34
                _370 = mem[64]
                mem[64] = mem[64] + ceil32(stor552[stor151[address(msg.sender)][idx]].field_257 % 128) + 32
                mem[_370] = stor552[stor151[address(msg.sender)][idx]].field_257 % 128
                if bool(stor552[stor151[address(msg.sender)][idx]].field_256):
                    if bool(stor552[stor151[address(msg.sender)][idx]].field_256) == uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5 < 32:
                        revert with 0, 34
                    if Mask(256, -1, stor552[stor151[address(msg.sender)][idx]].field_256):
                        if 31 >= uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5:
                            mem[_370 + 32] = 256 * Mask(248, 0, stor552[stor151[address(msg.sender)][idx]].field_264)
                        else:
                            mem[0] = sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1
                            mem[_370 + 32] = stor552[stor151[address(msg.sender)][idx]][1].field_0
                            s = _370 + 32
                            t = sha3(sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1)
                            while _370 + (uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5) > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                else:
                    if bool(stor552[stor151[address(msg.sender)][idx]].field_256) == stor552[stor151[address(msg.sender)][idx]].field_257 % 128 < 32:
                        revert with 0, 34
                    if stor552[stor151[address(msg.sender)][idx]].field_257 % 128:
                        if 31 >= stor552[stor151[address(msg.sender)][idx]].field_257 % 128:
                            mem[_370 + 32] = 256 * Mask(248, 0, stor552[stor151[address(msg.sender)][idx]].field_264)
                        else:
                            mem[0] = sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1
                            mem[_370 + 32] = stor552[stor151[address(msg.sender)][idx]][1].field_0
                            s = _370 + 32
                            t = sha3(sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1)
                            while _370 + stor552[stor151[address(msg.sender)][idx]].field_257 % 128 > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                mem[_343 + 32] = _370
            mem[_343 + 64] = stor552[stor151[address(msg.sender)][idx]].field_512
            mem[_343 + 96] = stor552[stor151[address(msg.sender)][idx]].field_768
            mem[_343 + 128] = stor552[stor151[address(msg.sender)][idx]].field_1024
            mem[_343 + 160] = stor552[stor151[address(msg.sender)][idx]].field_1280
            mem[_343 + 192] = bool(uint8(stor552[stor151[address(msg.sender)][idx]].field_1536))
            mem[_343 + 224] = bool(uint8(stor552[stor151[address(msg.sender)][idx]].field_1544))
            require uint8(stor552[stor151[address(msg.sender)][idx]].field_1536)
            if idx >= mem[ceil32(ceil32(arg1.length)) + 97]:
                revert with 0, 50
            mem[(32 * idx) + ceil32(ceil32(arg1.length)) + 129] = tokenOfOwnerByIndex[address(msg.sender)][idx]
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            continue 
        _598 = mem[ceil32(ceil32(arg1.length)) + 97]
        idx = 0
        while idx < _598:
            if idx >= mem[ceil32(ceil32(arg1.length)) + 97]:
                revert with 0, 50
            mem[0] = mem[(32 * idx) + ceil32(ceil32(arg1.length)) + 129]
            mem[32] = 552
            _609 = sha3(mem[(32 * idx) + ceil32(ceil32(arg1.length)) + 129], 552)
            _610 = mem[64]
            mem[64] = mem[64] + 256
            mem[_610] = stor552[mem[(32 * idx) + ceil32(ceil32(arg1.length)) + 129]].field_0
            if bool(stor1[_609].field_0):
                if bool(stor1[_609].field_0) == uint255(stor1[_609].field_0) * 0.5 < 32:
                    revert with 0, 34
                _628 = mem[64]
                mem[64] = mem[64] + ceil32(uint255(stor1[_609].field_0) * 0.5) + 32
                mem[_628] = uint255(stor1[_609].field_0) * 0.5
                if bool(stor1[_609].field_0):
                    if bool(stor1[_609].field_0) == uint255(stor1[_609].field_0) * 0.5 < 32:
                        revert with 0, 34
                    if Mask(256, -1, stor1[_609].field_0):
                        if 31 >= uint255(stor1[_609].field_0) * 0.5:
                            mem[_628 + 32] = 256 * Mask(248, 0, stor1[_609].field_8)
                        else:
                            mem[0] = _609 + 1
                            mem[_628 + 32] = stor[sha3(_609 + 1)]
                            s = _628 + 32
                            t = sha3(_609 + 1)
                            while _628 + (uint255(stor1[_609].field_0) * 0.5) > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                else:
                    if bool(stor1[_609].field_0) == stor1[_609].field_1 % 128 < 32:
                        revert with 0, 34
                    if stor1[_609].field_1 % 128:
                        if 31 >= stor1[_609].field_1 % 128:
                            mem[_628 + 32] = 256 * Mask(248, 0, stor1[_609].field_8)
                        else:
                            mem[0] = _609 + 1
                            mem[_628 + 32] = stor[sha3(_609 + 1)]
                            s = _628 + 32
                            t = sha3(_609 + 1)
                            while _628 + stor1[_609].field_1 % 128 > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                mem[_610 + 32] = _628
                mem[_610 + 64] = stor2[_609]
                mem[_610 + 96] = stor3[_609]
                mem[_610 + 128] = stor4[_609]
                mem[_610 + 160] = stor5[_609]
                mem[_610 + 192] = bool(uint8(stor6[_609].field_0))
                mem[_610 + 224] = bool(uint8(stor6[_609].field_8))
                if sha3(mem[128 len mem[96]]) == sha3(mem[_628 + 32 len uint255(stor1[_609].field_0) * 0.5]):
                    revert with 0, 'Troops: Rename context invalid'
            else:
                if bool(stor1[_609].field_0) == stor1[_609].field_1 % 128 < 32:
                    revert with 0, 34
                _630 = mem[64]
                mem[64] = mem[64] + ceil32(stor1[_609].field_1 % 128) + 32
                mem[_630] = stor1[_609].field_1 % 128
                if bool(stor1[_609].field_0):
                    if bool(stor1[_609].field_0) == uint255(stor1[_609].field_0) * 0.5 < 32:
                        revert with 0, 34
                    if Mask(256, -1, stor1[_609].field_0):
                        if 31 >= uint255(stor1[_609].field_0) * 0.5:
                            mem[_630 + 32] = 256 * Mask(248, 0, stor1[_609].field_8)
                        else:
                            mem[0] = _609 + 1
                            mem[_630 + 32] = stor[sha3(_609 + 1)]
                            s = _630 + 32
                            t = sha3(_609 + 1)
                            while _630 + (uint255(stor1[_609].field_0) * 0.5) > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                else:
                    if bool(stor1[_609].field_0) == stor1[_609].field_1 % 128 < 32:
                        revert with 0, 34
                    if stor1[_609].field_1 % 128:
                        if 31 >= stor1[_609].field_1 % 128:
                            mem[_630 + 32] = 256 * Mask(248, 0, stor1[_609].field_8)
                        else:
                            mem[0] = _609 + 1
                            mem[_630 + 32] = stor[sha3(_609 + 1)]
                            s = _630 + 32
                            t = sha3(_609 + 1)
                            while _630 + stor1[_609].field_1 % 128 > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                mem[_610 + 32] = _630
                mem[_610 + 64] = stor2[_609]
                mem[_610 + 96] = stor3[_609]
                mem[_610 + 128] = stor4[_609]
                mem[_610 + 160] = stor5[_609]
                mem[_610 + 192] = bool(uint8(stor6[_609].field_0))
                mem[_610 + 224] = bool(uint8(stor6[_609].field_8))
                if sha3(mem[128 len mem[96]]) == sha3(mem[_630 + 32 len stor1[_609].field_1 % 128]):
                    revert with 0, 'Troops: Rename context invalid'
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            continue 
    if bool(stor552[arg2].field_256):
        if bool(stor552[arg2].field_256) == uint255(stor552[arg2].field_256) * 0.5 < 32:
            revert with 0, 34
        if mem[96]:
            stor552[arg2][1][].field_0 = Array(len=mem[96], data=mem[128 len mem[96]])
        else:
            stor552[arg2].field_256 = 0
            idx = 0
            while (uint255(stor552[arg2].field_256) * 0.5) + 31 / 32 > idx:
                stor552[arg2][idx + 1].field_0 = 0
                idx = idx + 1
                continue 
    else:
        if bool(stor552[arg2].field_256) == stor552[arg2].field_257 % 128 < 32:
            revert with 0, 34
        if mem[96]:
            stor552[arg2][1][].field_0 = Array(len=mem[96], data=mem[128 len mem[96]])
        else:
            stor552[arg2].field_256 = 0
            idx = 0
            while stor552[arg2].field_257 % 128 + 31 / 32 > idx:
                stor552[arg2][idx + 1].field_0 = 0
                idx = idx + 1
                continue 
    stor401 = 1
}

function safeTransferFrom(address arg1, address arg2, uint256 arg3) payable {
    require calldata.size - 4 >= 96
    require arg1 == arg1
    require arg2 == arg2
    mem[96] = 0
    if not ownerOf[arg3]:
        revert with 0, 'ERC721: operator query for nonexistent token'
    if not ownerOf[arg3]:
        revert with 0, 'ERC721: owner query for nonexistent token'
    if msg.sender == ownerOf[arg3]:
        if not ownerOf[arg3]:
            revert with 0, 'ERC721: owner query for nonexistent token'
        if ownerOf[arg3] != arg1:
            revert with 0, 'ERC721: transfer from incorrect owner'
        if not arg2:
            revert with 0, 'ERC721: transfer to the zero address'
        if owner == arg2:
            if not arg1:
                stor154[arg3] = tokenByIndex.length
                tokenByIndex.length++
                stor72A1[stor153.length] = arg3
            else:
                if arg1 != arg2:
                    if not arg1:
                        revert with 0, 'ERC721: balance query for the zero address'
                    if balanceOf[address(arg1)] < 1:
                        revert with 0, 17
                    if balanceOf[address(arg1)] - 1 != stor152[arg3]:
                        tokenOfOwnerByIndex[address(arg1)][stor152[arg3]] = tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1]
                        stor152[stor151[address(arg1)][stor104[address(arg1)] - 1]] = stor152[arg3]
                    stor152[arg3] = 0
                    tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
            if arg2:
                if arg2 != arg1:
                    if not arg2:
                        revert with 0, 'ERC721: balance query for the zero address'
                    tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                    stor152[arg3] = balanceOf[address(arg2)]
            else:
                if tokenByIndex.length < 1:
                    revert with 0, 17
                if tokenByIndex.length - 1 >= tokenByIndex.length:
                    revert with 0, 50
                if stor154[arg3] >= tokenByIndex.length:
                    revert with 0, 50
                tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                stor154[stor153[stor153.length]] = stor154[arg3]
                stor154[arg3] = 0
                if not tokenByIndex.length:
                    revert with 0, 49
                tokenByIndex[tokenByIndex.length] = 0
                tokenByIndex.length--
            approved[arg3] = 0
            if not ownerOf[arg3]:
                revert with 0, 'ERC721: owner query for nonexistent token'
            emit Approval(ownerOf[arg3], 0, arg3);
            if balanceOf[address(arg1)] < 1:
                revert with 0, 17
            balanceOf[address(arg1)]--
            if balanceOf[address(arg2)] > -2:
                revert with 0, 17
            balanceOf[address(arg2)]++
            ownerOf[arg3] = arg2
            emit Transfer(arg1, arg2, arg3);
            if ext_code.size(arg2):
                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                     gas gas_remaining wei
                    args 0, uint32(msg.sender), address(arg1), arg3, 128, 0
                if not ext_call.success:
                    if not return_data.size:
                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                    if not return_data.size:
                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
        else:
            if bool(uint8(stor552[arg3].field_1536)) != 1:
                if not arg1:
                    stor154[arg3] = tokenByIndex.length
                    tokenByIndex.length++
                    stor72A1[stor153.length] = arg3
                else:
                    if arg1 != arg2:
                        if not arg1:
                            revert with 0, 'ERC721: balance query for the zero address'
                        if balanceOf[address(arg1)] < 1:
                            revert with 0, 17
                        if balanceOf[address(arg1)] - 1 != stor152[arg3]:
                            tokenOfOwnerByIndex[address(arg1)][stor152[arg3]] = tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1]
                            stor152[stor151[address(arg1)][stor104[address(arg1)] - 1]] = stor152[arg3]
                        stor152[arg3] = 0
                        tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                if arg2:
                    if arg2 != arg1:
                        if not arg2:
                            revert with 0, 'ERC721: balance query for the zero address'
                        tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                        stor152[arg3] = balanceOf[address(arg2)]
                else:
                    if tokenByIndex.length < 1:
                        revert with 0, 17
                    if tokenByIndex.length - 1 >= tokenByIndex.length:
                        revert with 0, 50
                    if stor154[arg3] >= tokenByIndex.length:
                        revert with 0, 50
                    tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                    stor154[stor153[stor153.length]] = stor154[arg3]
                    stor154[arg3] = 0
                    if not tokenByIndex.length:
                        revert with 0, 49
                    tokenByIndex[tokenByIndex.length] = 0
                    tokenByIndex.length--
                approved[arg3] = 0
                if not ownerOf[arg3]:
                    revert with 0, 'ERC721: owner query for nonexistent token'
                emit Approval(ownerOf[arg3], 0, arg3);
                if balanceOf[address(arg1)] < 1:
                    revert with 0, 17
                balanceOf[address(arg1)]--
                if balanceOf[address(arg2)] > -2:
                    revert with 0, 17
                balanceOf[address(arg2)]++
                ownerOf[arg3] = arg2
                emit Transfer(arg1, arg2, arg3);
                if ext_code.size(arg2):
                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                         gas gas_remaining wei
                        args 0, uint32(msg.sender), address(arg1), arg3, 128, 0
                    if not ext_call.success:
                        if not return_data.size:
                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                        if not return_data.size:
                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                    if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
            else:
                if bool(uint8(stor552[arg3].field_1544)) != 1:
                    if not arg1:
                        stor154[arg3] = tokenByIndex.length
                        tokenByIndex.length++
                        stor72A1[stor153.length] = arg3
                    else:
                        if arg1 != arg2:
                            if not arg1:
                                revert with 0, 'ERC721: balance query for the zero address'
                            if balanceOf[address(arg1)] < 1:
                                revert with 0, 17
                            if balanceOf[address(arg1)] - 1 != stor152[arg3]:
                                tokenOfOwnerByIndex[address(arg1)][stor152[arg3]] = tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1]
                                stor152[stor151[address(arg1)][stor104[address(arg1)] - 1]] = stor152[arg3]
                            stor152[arg3] = 0
                            tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                    if arg2:
                        if arg2 != arg1:
                            if not arg2:
                                revert with 0, 'ERC721: balance query for the zero address'
                            tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                            stor152[arg3] = balanceOf[address(arg2)]
                    else:
                        if tokenByIndex.length < 1:
                            revert with 0, 17
                        if tokenByIndex.length - 1 >= tokenByIndex.length:
                            revert with 0, 50
                        if stor154[arg3] >= tokenByIndex.length:
                            revert with 0, 50
                        tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                        stor154[stor153[stor153.length]] = stor154[arg3]
                        stor154[arg3] = 0
                        if not tokenByIndex.length:
                            revert with 0, 49
                        tokenByIndex[tokenByIndex.length] = 0
                        tokenByIndex.length--
                    approved[arg3] = 0
                    if not ownerOf[arg3]:
                        revert with 0, 'ERC721: owner query for nonexistent token'
                    emit Approval(ownerOf[arg3], 0, arg3);
                    if balanceOf[address(arg1)] < 1:
                        revert with 0, 17
                    balanceOf[address(arg1)]--
                    if balanceOf[address(arg2)] > -2:
                        revert with 0, 17
                    balanceOf[address(arg2)]++
                    ownerOf[arg3] = arg2
                    emit Transfer(arg1, arg2, arg3);
                    if ext_code.size(arg2):
                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                             gas gas_remaining wei
                            args 0, uint32(msg.sender), address(arg1), arg3, 128, 0
                        if not ext_call.success:
                            if not return_data.size:
                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                            if not return_data.size:
                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                        if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                else:
                    if not liquidityPoolManagerImplementationAddress:
                        if not arg2:
                            revert with 0, 'ERC721: balance query for the zero address'
                        if balanceOf[address(arg2)] > test266151307():
                            revert with 0, 65
                        mem[128] = balanceOf[address(arg2)]
                        mem[64] = (32 * balanceOf[address(arg2)]) + 160
                        if not balanceOf[address(arg2)]:
                            idx = 0
                            while idx < balanceOf[address(arg2)]:
                                if not arg2:
                                    revert with 0, 'ERC721: balance query for the zero address'
                                if idx >= balanceOf[address(arg2)]:
                                    revert with 0, 'ERC721Enumerable: owner index out of bounds'
                                if tokenOfOwnerByIndex[address(arg2)][idx] <= 0:
                                    revert with 0, 'Troops: Id must be higher than zero'
                                mem[0] = tokenOfOwnerByIndex[address(arg2)][idx]
                                mem[32] = 552
                                _15881 = mem[64]
                                mem[64] = mem[64] + 256
                                mem[_15881] = stor552[stor151[address(arg2)][idx]].field_0
                                if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                    if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                        revert with 0, 34
                                    _17753 = mem[64]
                                    mem[64] = mem[64] + ceil32(uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) + 32
                                    mem[_17753] = uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5
                                    if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                            revert with 0, 34
                                        if Mask(256, -1, stor552[stor151[address(arg2)][idx]].field_256):
                                            if 31 >= uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5:
                                                mem[_17753 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                            else:
                                                mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                mem[_17753 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                s = _17753 + 32
                                                t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                while _17753 + (uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) > s:
                                                    mem[s + 32] = stor1[t].field_0
                                                    s = s + 32
                                                    t = t + 1
                                                    continue 
                                    else:
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                            revert with 0, 34
                                        if stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                            if 31 >= stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                mem[_17753 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                            else:
                                                mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                mem[_17753 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                s = _17753 + 32
                                                t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                while _17753 + stor552[stor151[address(arg2)][idx]].field_257 % 128 > s:
                                                    mem[s + 32] = stor1[t].field_0
                                                    s = s + 32
                                                    t = t + 1
                                                    continue 
                                    mem[_15881 + 32] = _17753
                                else:
                                    if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                        revert with 0, 34
                                    _17780 = mem[64]
                                    mem[64] = mem[64] + ceil32(stor552[stor151[address(arg2)][idx]].field_257 % 128) + 32
                                    mem[_17780] = stor552[stor151[address(arg2)][idx]].field_257 % 128
                                    if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                            revert with 0, 34
                                        if Mask(256, -1, stor552[stor151[address(arg2)][idx]].field_256):
                                            if 31 >= uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5:
                                                mem[_17780 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                            else:
                                                mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                mem[_17780 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                s = _17780 + 32
                                                t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                while _17780 + (uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) > s:
                                                    mem[s + 32] = stor1[t].field_0
                                                    s = s + 32
                                                    t = t + 1
                                                    continue 
                                    else:
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                            revert with 0, 34
                                        if stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                            if 31 >= stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                mem[_17780 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                            else:
                                                mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                mem[_17780 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                s = _17780 + 32
                                                t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                while _17780 + stor552[stor151[address(arg2)][idx]].field_257 % 128 > s:
                                                    mem[s + 32] = stor1[t].field_0
                                                    s = s + 32
                                                    t = t + 1
                                                    continue 
                                    mem[_15881 + 32] = _17780
                                mem[_15881 + 64] = stor552[stor151[address(arg2)][idx]].field_512
                                mem[_15881 + 96] = stor552[stor151[address(arg2)][idx]].field_768
                                mem[_15881 + 128] = stor552[stor151[address(arg2)][idx]].field_1024
                                mem[_15881 + 160] = stor552[stor151[address(arg2)][idx]].field_1280
                                mem[_15881 + 192] = bool(uint8(stor552[stor151[address(arg2)][idx]].field_1536))
                                mem[_15881 + 224] = bool(uint8(stor552[stor151[address(arg2)][idx]].field_1544))
                                require uint8(stor552[stor151[address(arg2)][idx]].field_1536)
                                if idx >= mem[128]:
                                    revert with 0, 50
                                mem[(32 * idx) + 160] = tokenOfOwnerByIndex[address(arg2)][idx]
                                if idx == -1:
                                    revert with 0, 17
                                idx = idx + 1
                                continue 
                            idx = 0
                            s = 0
                            while idx < mem[128]:
                                if idx >= mem[128]:
                                    revert with 0, 50
                                mem[0] = mem[(32 * idx) + 160]
                                mem[32] = 552
                                if not uint8(stor552[mem[(32 * idx) + 160]].field_1544):
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    s = s
                                    continue 
                                if s == -1:
                                    revert with 0, 17
                                if idx == -1:
                                    revert with 0, 17
                                idx = idx + 1
                                s = s + 1
                                continue 
                            if s >= 2:
                                revert with 0, 'Each holder can not hold more than 2 Gladiators'
                            if not arg1:
                                stor154[arg3] = tokenByIndex.length
                                tokenByIndex.length++
                                stor72A1[stor153.length] = arg3
                                if arg2:
                                    if arg2 == arg1:
                                        approved[arg3] = 0
                                        if not ownerOf[arg3]:
                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                        emit Approval(ownerOf[arg3], 0, arg3);
                                        if balanceOf[address(arg1)] < 1:
                                            revert with 0, 17
                                        balanceOf[address(arg1)]--
                                        if balanceOf[address(arg2)] > -2:
                                            revert with 0, 17
                                        balanceOf[address(arg2)]++
                                        mem[0] = arg3
                                        mem[32] = 103
                                        ownerOf[arg3] = arg2
                                        emit Transfer(arg1, arg2, arg3);
                                        if ext_code.size(arg2):
                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = msg.sender
                                            mem[mem[64] + 36] = arg1
                                            mem[mem[64] + 68] = arg3
                                            mem[mem[64] + 100] = 128
                                            mem[mem[64] + 132] = mem[96]
                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                            if ceil32(mem[96]) <= mem[96]:
                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    if not return_data.size:
                                                        if not mem[96]:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with memory
                                                          from 128
                                                           len mem[96]
                                                    if not return_data.size:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _32446 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                require mem[_32446] == Mask(32, 224, mem[_32446])
                                                if Mask(32, 224, mem[_32446]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                mem[mem[64] + mem[96] + 164] = 0
                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    if not return_data.size:
                                                        if not mem[96]:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with memory
                                                          from 128
                                                           len mem[96]
                                                    if not return_data.size:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _32725 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                require mem[_32725] == Mask(32, 224, mem[_32725])
                                                if Mask(32, 224, mem[_32725]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                    else:
                                        if not arg2:
                                            revert with 0, 'ERC721: balance query for the zero address'
                                        tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                        stor152[arg3] = balanceOf[address(arg2)]
                                        approved[arg3] = 0
                                        if not ownerOf[arg3]:
                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                        emit Approval(ownerOf[arg3], 0, arg3);
                                        if balanceOf[address(arg1)] < 1:
                                            revert with 0, 17
                                        balanceOf[address(arg1)]--
                                        if balanceOf[address(arg2)] > -2:
                                            revert with 0, 17
                                        balanceOf[address(arg2)]++
                                        mem[0] = arg3
                                        mem[32] = 103
                                        ownerOf[arg3] = arg2
                                        emit Transfer(arg1, arg2, arg3);
                                        if ext_code.size(arg2):
                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = msg.sender
                                            mem[mem[64] + 36] = arg1
                                            mem[mem[64] + 68] = arg3
                                            mem[mem[64] + 100] = 128
                                            mem[mem[64] + 132] = mem[96]
                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                            if ceil32(mem[96]) <= mem[96]:
                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    if not return_data.size:
                                                        if not mem[96]:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with memory
                                                          from 128
                                                           len mem[96]
                                                    if not return_data.size:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _32448 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                require mem[_32448] == Mask(32, 224, mem[_32448])
                                                if Mask(32, 224, mem[_32448]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                mem[mem[64] + mem[96] + 164] = 0
                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    if not return_data.size:
                                                        if not mem[96]:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with memory
                                                          from 128
                                                           len mem[96]
                                                    if not return_data.size:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _32726 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                require mem[_32726] == Mask(32, 224, mem[_32726])
                                                if Mask(32, 224, mem[_32726]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                else:
                                    if tokenByIndex.length < 1:
                                        revert with 0, 17
                                    if tokenByIndex.length - 1 >= tokenByIndex.length:
                                        revert with 0, 50
                                    if stor154[arg3] >= tokenByIndex.length:
                                        revert with 0, 50
                                    tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                    stor154[stor153[stor153.length]] = stor154[arg3]
                                    stor154[arg3] = 0
                                    if not tokenByIndex.length:
                                        revert with 0, 49
                                    tokenByIndex[tokenByIndex.length] = 0
                                    tokenByIndex.length--
                                    approved[arg3] = 0
                                    if not ownerOf[arg3]:
                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                    emit Approval(ownerOf[arg3], 0, arg3);
                                    if balanceOf[address(arg1)] < 1:
                                        revert with 0, 17
                                    balanceOf[address(arg1)]--
                                    if balanceOf[address(arg2)] > -2:
                                        revert with 0, 17
                                    balanceOf[address(arg2)]++
                                    mem[0] = arg3
                                    mem[32] = 103
                                    ownerOf[arg3] = arg2
                                    emit Transfer(arg1, arg2, arg3);
                                    if ext_code.size(arg2):
                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = arg1
                                        mem[mem[64] + 68] = arg3
                                        mem[mem[64] + 100] = 128
                                        mem[mem[64] + 132] = mem[96]
                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                        if ceil32(mem[96]) <= mem[96]:
                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                if not return_data.size:
                                                    if not mem[96]:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    revert with memory
                                                      from 128
                                                       len mem[96]
                                                if not return_data.size:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _32450 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            require mem[_32450] == Mask(32, 224, mem[_32450])
                                            if Mask(32, 224, mem[_32450]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            mem[mem[64] + mem[96] + 164] = 0
                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                if not return_data.size:
                                                    if not mem[96]:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    revert with memory
                                                      from 128
                                                       len mem[96]
                                                if not return_data.size:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _32727 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            require mem[_32727] == Mask(32, 224, mem[_32727])
                                            if Mask(32, 224, mem[_32727]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                            else:
                                if arg1 == arg2:
                                    if arg2:
                                        if arg2 == arg1:
                                            approved[arg3] = 0
                                            if not ownerOf[arg3]:
                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                            emit Approval(ownerOf[arg3], 0, arg3);
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            balanceOf[address(arg1)]--
                                            if balanceOf[address(arg2)] > -2:
                                                revert with 0, 17
                                            balanceOf[address(arg2)]++
                                            mem[0] = arg3
                                            mem[32] = 103
                                            ownerOf[arg3] = arg2
                                            emit Transfer(arg1, arg2, arg3);
                                            if ext_code.size(arg2):
                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = msg.sender
                                                mem[mem[64] + 36] = arg1
                                                mem[mem[64] + 68] = arg3
                                                mem[mem[64] + 100] = 128
                                                mem[mem[64] + 132] = mem[96]
                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                if ceil32(mem[96]) <= mem[96]:
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _32428 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_32428] == Mask(32, 224, mem[_32428])
                                                    if Mask(32, 224, mem[_32428]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    mem[mem[64] + mem[96] + 164] = 0
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _32716 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_32716] == Mask(32, 224, mem[_32716])
                                                    if Mask(32, 224, mem[_32716]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            if not arg2:
                                                revert with 0, 'ERC721: balance query for the zero address'
                                            tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                            stor152[arg3] = balanceOf[address(arg2)]
                                            approved[arg3] = 0
                                            if not ownerOf[arg3]:
                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                            emit Approval(ownerOf[arg3], 0, arg3);
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            balanceOf[address(arg1)]--
                                            if balanceOf[address(arg2)] > -2:
                                                revert with 0, 17
                                            balanceOf[address(arg2)]++
                                            mem[0] = arg3
                                            mem[32] = 103
                                            ownerOf[arg3] = arg2
                                            emit Transfer(arg1, arg2, arg3);
                                            if ext_code.size(arg2):
                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = msg.sender
                                                mem[mem[64] + 36] = arg1
                                                mem[mem[64] + 68] = arg3
                                                mem[mem[64] + 100] = 128
                                                mem[mem[64] + 132] = mem[96]
                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                if ceil32(mem[96]) <= mem[96]:
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _32430 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_32430] == Mask(32, 224, mem[_32430])
                                                    if Mask(32, 224, mem[_32430]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    mem[mem[64] + mem[96] + 164] = 0
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _32717 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_32717] == Mask(32, 224, mem[_32717])
                                                    if Mask(32, 224, mem[_32717]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                    else:
                                        if tokenByIndex.length < 1:
                                            revert with 0, 17
                                        if tokenByIndex.length - 1 >= tokenByIndex.length:
                                            revert with 0, 50
                                        if stor154[arg3] >= tokenByIndex.length:
                                            revert with 0, 50
                                        tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                        stor154[stor153[stor153.length]] = stor154[arg3]
                                        stor154[arg3] = 0
                                        if not tokenByIndex.length:
                                            revert with 0, 49
                                        tokenByIndex[tokenByIndex.length] = 0
                                        tokenByIndex.length--
                                        approved[arg3] = 0
                                        if not ownerOf[arg3]:
                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                        emit Approval(ownerOf[arg3], 0, arg3);
                                        if balanceOf[address(arg1)] < 1:
                                            revert with 0, 17
                                        balanceOf[address(arg1)]--
                                        if balanceOf[address(arg2)] > -2:
                                            revert with 0, 17
                                        balanceOf[address(arg2)]++
                                        mem[0] = arg3
                                        mem[32] = 103
                                        ownerOf[arg3] = arg2
                                        emit Transfer(arg1, arg2, arg3);
                                        if ext_code.size(arg2):
                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = msg.sender
                                            mem[mem[64] + 36] = arg1
                                            mem[mem[64] + 68] = arg3
                                            mem[mem[64] + 100] = 128
                                            mem[mem[64] + 132] = mem[96]
                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                            if ceil32(mem[96]) <= mem[96]:
                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    if not return_data.size:
                                                        if not mem[96]:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with memory
                                                          from 128
                                                           len mem[96]
                                                    if not return_data.size:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _32432 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                require mem[_32432] == Mask(32, 224, mem[_32432])
                                                if Mask(32, 224, mem[_32432]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                mem[mem[64] + mem[96] + 164] = 0
                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    if not return_data.size:
                                                        if not mem[96]:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with memory
                                                          from 128
                                                           len mem[96]
                                                    if not return_data.size:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _32718 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                require mem[_32718] == Mask(32, 224, mem[_32718])
                                                if Mask(32, 224, mem[_32718]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                else:
                                    if not arg1:
                                        revert with 0, 'ERC721: balance query for the zero address'
                                    if balanceOf[address(arg1)] < 1:
                                        revert with 0, 17
                                    if balanceOf[address(arg1)] - 1 == stor152[arg3]:
                                        stor152[arg3] = 0
                                        tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                                        if arg2:
                                            if arg2 == arg1:
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32434 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32434] == Mask(32, 224, mem[_32434])
                                                        if Mask(32, 224, mem[_32434]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[64] + mem[96] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32719 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32719] == Mask(32, 224, mem[_32719])
                                                        if Mask(32, 224, mem[_32719]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if not arg2:
                                                    revert with 0, 'ERC721: balance query for the zero address'
                                                tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                stor152[arg3] = balanceOf[address(arg2)]
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32436 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32436] == Mask(32, 224, mem[_32436])
                                                        if Mask(32, 224, mem[_32436]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[64] + mem[96] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32720 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32720] == Mask(32, 224, mem[_32720])
                                                        if Mask(32, 224, mem[_32720]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            if tokenByIndex.length < 1:
                                                revert with 0, 17
                                            if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                revert with 0, 50
                                            if stor154[arg3] >= tokenByIndex.length:
                                                revert with 0, 50
                                            tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                            stor154[stor153[stor153.length]] = stor154[arg3]
                                            stor154[arg3] = 0
                                            if not tokenByIndex.length:
                                                revert with 0, 49
                                            tokenByIndex[tokenByIndex.length] = 0
                                            tokenByIndex.length--
                                            approved[arg3] = 0
                                            if not ownerOf[arg3]:
                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                            emit Approval(ownerOf[arg3], 0, arg3);
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            balanceOf[address(arg1)]--
                                            if balanceOf[address(arg2)] > -2:
                                                revert with 0, 17
                                            balanceOf[address(arg2)]++
                                            mem[0] = arg3
                                            mem[32] = 103
                                            ownerOf[arg3] = arg2
                                            emit Transfer(arg1, arg2, arg3);
                                            if ext_code.size(arg2):
                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = msg.sender
                                                mem[mem[64] + 36] = arg1
                                                mem[mem[64] + 68] = arg3
                                                mem[mem[64] + 100] = 128
                                                mem[mem[64] + 132] = mem[96]
                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                if ceil32(mem[96]) <= mem[96]:
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _32438 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_32438] == Mask(32, 224, mem[_32438])
                                                    if Mask(32, 224, mem[_32438]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    mem[mem[64] + mem[96] + 164] = 0
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _32721 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_32721] == Mask(32, 224, mem[_32721])
                                                    if Mask(32, 224, mem[_32721]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                    else:
                                        tokenOfOwnerByIndex[address(arg1)][stor152[arg3]] = tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1]
                                        stor152[stor151[address(arg1)][stor104[address(arg1)] - 1]] = stor152[arg3]
                                        stor152[arg3] = 0
                                        tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                                        if arg2:
                                            if arg2 == arg1:
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32440 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32440] == Mask(32, 224, mem[_32440])
                                                        if Mask(32, 224, mem[_32440]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[64] + mem[96] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32722 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32722] == Mask(32, 224, mem[_32722])
                                                        if Mask(32, 224, mem[_32722]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if not arg2:
                                                    revert with 0, 'ERC721: balance query for the zero address'
                                                tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                stor152[arg3] = balanceOf[address(arg2)]
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32442 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32442] == Mask(32, 224, mem[_32442])
                                                        if Mask(32, 224, mem[_32442]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[64] + mem[96] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32723 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32723] == Mask(32, 224, mem[_32723])
                                                        if Mask(32, 224, mem[_32723]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            if tokenByIndex.length < 1:
                                                revert with 0, 17
                                            if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                revert with 0, 50
                                            if stor154[arg3] >= tokenByIndex.length:
                                                revert with 0, 50
                                            tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                            stor154[stor153[stor153.length]] = stor154[arg3]
                                            stor154[arg3] = 0
                                            if not tokenByIndex.length:
                                                revert with 0, 49
                                            tokenByIndex[tokenByIndex.length] = 0
                                            tokenByIndex.length--
                                            approved[arg3] = 0
                                            if not ownerOf[arg3]:
                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                            emit Approval(ownerOf[arg3], 0, arg3);
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            balanceOf[address(arg1)]--
                                            if balanceOf[address(arg2)] > -2:
                                                revert with 0, 17
                                            balanceOf[address(arg2)]++
                                            mem[0] = arg3
                                            mem[32] = 103
                                            ownerOf[arg3] = arg2
                                            emit Transfer(arg1, arg2, arg3);
                                            if ext_code.size(arg2):
                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = msg.sender
                                                mem[mem[64] + 36] = arg1
                                                mem[mem[64] + 68] = arg3
                                                mem[mem[64] + 100] = 128
                                                mem[mem[64] + 132] = mem[96]
                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                if ceil32(mem[96]) <= mem[96]:
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _32444 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_32444] == Mask(32, 224, mem[_32444])
                                                    if Mask(32, 224, mem[_32444]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    mem[mem[64] + mem[96] + 164] = 0
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _32724 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_32724] == Mask(32, 224, mem[_32724])
                                                    if Mask(32, 224, mem[_32724]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                        else:
                            mem[160 len 32 * balanceOf[address(arg2)]] = call.data[calldata.size len 32 * balanceOf[address(arg2)]]
                            idx = 0
                            while idx < balanceOf[address(arg2)]:
                                if not arg2:
                                    revert with 0, 'ERC721: balance query for the zero address'
                                if idx >= balanceOf[address(arg2)]:
                                    revert with 0, 'ERC721Enumerable: owner index out of bounds'
                                if tokenOfOwnerByIndex[address(arg2)][idx] <= 0:
                                    revert with 0, 'Troops: Id must be higher than zero'
                                mem[0] = tokenOfOwnerByIndex[address(arg2)][idx]
                                mem[32] = 552
                                _15884 = mem[64]
                                mem[64] = mem[64] + 256
                                mem[_15884] = stor552[stor151[address(arg2)][idx]].field_0
                                if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                    if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                        revert with 0, 34
                                    _17755 = mem[64]
                                    mem[64] = mem[64] + ceil32(uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) + 32
                                    mem[_17755] = uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5
                                    if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                            revert with 0, 34
                                        if Mask(256, -1, stor552[stor151[address(arg2)][idx]].field_256):
                                            if 31 >= uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5:
                                                mem[_17755 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                            else:
                                                mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                mem[_17755 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                s = _17755 + 32
                                                t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                while _17755 + (uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) > s:
                                                    mem[s + 32] = stor1[t].field_0
                                                    s = s + 32
                                                    t = t + 1
                                                    continue 
                                    else:
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                            revert with 0, 34
                                        if stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                            if 31 >= stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                mem[_17755 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                            else:
                                                mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                mem[_17755 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                s = _17755 + 32
                                                t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                while _17755 + stor552[stor151[address(arg2)][idx]].field_257 % 128 > s:
                                                    mem[s + 32] = stor1[t].field_0
                                                    s = s + 32
                                                    t = t + 1
                                                    continue 
                                    mem[_15884 + 32] = _17755
                                else:
                                    if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                        revert with 0, 34
                                    _17785 = mem[64]
                                    mem[64] = mem[64] + ceil32(stor552[stor151[address(arg2)][idx]].field_257 % 128) + 32
                                    mem[_17785] = stor552[stor151[address(arg2)][idx]].field_257 % 128
                                    if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                            revert with 0, 34
                                        if Mask(256, -1, stor552[stor151[address(arg2)][idx]].field_256):
                                            if 31 >= uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5:
                                                mem[_17785 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                            else:
                                                mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                mem[_17785 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                s = _17785 + 32
                                                t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                while _17785 + (uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) > s:
                                                    mem[s + 32] = stor1[t].field_0
                                                    s = s + 32
                                                    t = t + 1
                                                    continue 
                                    else:
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                            revert with 0, 34
                                        if stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                            if 31 >= stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                mem[_17785 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                            else:
                                                mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                mem[_17785 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                s = _17785 + 32
                                                t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                while _17785 + stor552[stor151[address(arg2)][idx]].field_257 % 128 > s:
                                                    mem[s + 32] = stor1[t].field_0
                                                    s = s + 32
                                                    t = t + 1
                                                    continue 
                                    mem[_15884 + 32] = _17785
                                mem[_15884 + 64] = stor552[stor151[address(arg2)][idx]].field_512
                                mem[_15884 + 96] = stor552[stor151[address(arg2)][idx]].field_768
                                mem[_15884 + 128] = stor552[stor151[address(arg2)][idx]].field_1024
                                mem[_15884 + 160] = stor552[stor151[address(arg2)][idx]].field_1280
                                mem[_15884 + 192] = bool(uint8(stor552[stor151[address(arg2)][idx]].field_1536))
                                mem[_15884 + 224] = bool(uint8(stor552[stor151[address(arg2)][idx]].field_1544))
                                require uint8(stor552[stor151[address(arg2)][idx]].field_1536)
                                if idx >= mem[128]:
                                    revert with 0, 50
                                mem[(32 * idx) + 160] = tokenOfOwnerByIndex[address(arg2)][idx]
                                if idx == -1:
                                    revert with 0, 17
                                idx = idx + 1
                                continue 
                            idx = 0
                            s = 0
                            while idx < mem[128]:
                                if idx >= mem[128]:
                                    revert with 0, 50
                                mem[0] = mem[(32 * idx) + 160]
                                mem[32] = 552
                                if not uint8(stor552[mem[(32 * idx) + 160]].field_1544):
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    s = s
                                    continue 
                                if s == -1:
                                    revert with 0, 17
                                if idx == -1:
                                    revert with 0, 17
                                idx = idx + 1
                                s = s + 1
                                continue 
                            if s >= 2:
                                revert with 0, 'Each holder can not hold more than 2 Gladiators'
                            if not arg1:
                                stor154[arg3] = tokenByIndex.length
                                tokenByIndex.length++
                                stor72A1[stor153.length] = arg3
                                if arg2:
                                    if arg2 == arg1:
                                        approved[arg3] = 0
                                        if not ownerOf[arg3]:
                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                        emit Approval(ownerOf[arg3], 0, arg3);
                                        if balanceOf[address(arg1)] < 1:
                                            revert with 0, 17
                                        balanceOf[address(arg1)]--
                                        if balanceOf[address(arg2)] > -2:
                                            revert with 0, 17
                                        balanceOf[address(arg2)]++
                                        mem[0] = arg3
                                        mem[32] = 103
                                        ownerOf[arg3] = arg2
                                        emit Transfer(arg1, arg2, arg3);
                                        if ext_code.size(arg2):
                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = msg.sender
                                            mem[mem[64] + 36] = arg1
                                            mem[mem[64] + 68] = arg3
                                            mem[mem[64] + 100] = 128
                                            mem[mem[64] + 132] = mem[96]
                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                            if ceil32(mem[96]) <= mem[96]:
                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    if not return_data.size:
                                                        if not mem[96]:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with memory
                                                          from 128
                                                           len mem[96]
                                                    if not return_data.size:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _32470 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                require mem[_32470] == Mask(32, 224, mem[_32470])
                                                if Mask(32, 224, mem[_32470]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                mem[mem[64] + mem[96] + 164] = 0
                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    if not return_data.size:
                                                        if not mem[96]:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with memory
                                                          from 128
                                                           len mem[96]
                                                    if not return_data.size:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _32737 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                require mem[_32737] == Mask(32, 224, mem[_32737])
                                                if Mask(32, 224, mem[_32737]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                    else:
                                        if not arg2:
                                            revert with 0, 'ERC721: balance query for the zero address'
                                        tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                        stor152[arg3] = balanceOf[address(arg2)]
                                        approved[arg3] = 0
                                        if not ownerOf[arg3]:
                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                        emit Approval(ownerOf[arg3], 0, arg3);
                                        if balanceOf[address(arg1)] < 1:
                                            revert with 0, 17
                                        balanceOf[address(arg1)]--
                                        if balanceOf[address(arg2)] > -2:
                                            revert with 0, 17
                                        balanceOf[address(arg2)]++
                                        mem[0] = arg3
                                        mem[32] = 103
                                        ownerOf[arg3] = arg2
                                        emit Transfer(arg1, arg2, arg3);
                                        if ext_code.size(arg2):
                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = msg.sender
                                            mem[mem[64] + 36] = arg1
                                            mem[mem[64] + 68] = arg3
                                            mem[mem[64] + 100] = 128
                                            mem[mem[64] + 132] = mem[96]
                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                            if ceil32(mem[96]) <= mem[96]:
                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    if not return_data.size:
                                                        if not mem[96]:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with memory
                                                          from 128
                                                           len mem[96]
                                                    if not return_data.size:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _32472 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                require mem[_32472] == Mask(32, 224, mem[_32472])
                                                if Mask(32, 224, mem[_32472]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                mem[mem[64] + mem[96] + 164] = 0
                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    if not return_data.size:
                                                        if not mem[96]:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with memory
                                                          from 128
                                                           len mem[96]
                                                    if not return_data.size:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _32738 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                require mem[_32738] == Mask(32, 224, mem[_32738])
                                                if Mask(32, 224, mem[_32738]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                else:
                                    if tokenByIndex.length < 1:
                                        revert with 0, 17
                                    if tokenByIndex.length - 1 >= tokenByIndex.length:
                                        revert with 0, 50
                                    if stor154[arg3] >= tokenByIndex.length:
                                        revert with 0, 50
                                    tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                    stor154[stor153[stor153.length]] = stor154[arg3]
                                    stor154[arg3] = 0
                                    if not tokenByIndex.length:
                                        revert with 0, 49
                                    tokenByIndex[tokenByIndex.length] = 0
                                    tokenByIndex.length--
                                    approved[arg3] = 0
                                    if not ownerOf[arg3]:
                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                    emit Approval(ownerOf[arg3], 0, arg3);
                                    if balanceOf[address(arg1)] < 1:
                                        revert with 0, 17
                                    balanceOf[address(arg1)]--
                                    if balanceOf[address(arg2)] > -2:
                                        revert with 0, 17
                                    balanceOf[address(arg2)]++
                                    mem[0] = arg3
                                    mem[32] = 103
                                    ownerOf[arg3] = arg2
                                    emit Transfer(arg1, arg2, arg3);
                                    if ext_code.size(arg2):
                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = arg1
                                        mem[mem[64] + 68] = arg3
                                        mem[mem[64] + 100] = 128
                                        mem[mem[64] + 132] = mem[96]
                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                        if ceil32(mem[96]) <= mem[96]:
                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                if not return_data.size:
                                                    if not mem[96]:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    revert with memory
                                                      from 128
                                                       len mem[96]
                                                if not return_data.size:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _32474 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            require mem[_32474] == Mask(32, 224, mem[_32474])
                                            if Mask(32, 224, mem[_32474]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            mem[mem[64] + mem[96] + 164] = 0
                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                if not return_data.size:
                                                    if not mem[96]:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    revert with memory
                                                      from 128
                                                       len mem[96]
                                                if not return_data.size:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _32739 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            require mem[_32739] == Mask(32, 224, mem[_32739])
                                            if Mask(32, 224, mem[_32739]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                            else:
                                if arg1 == arg2:
                                    if arg2:
                                        if arg2 == arg1:
                                            approved[arg3] = 0
                                            if not ownerOf[arg3]:
                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                            emit Approval(ownerOf[arg3], 0, arg3);
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            balanceOf[address(arg1)]--
                                            if balanceOf[address(arg2)] > -2:
                                                revert with 0, 17
                                            balanceOf[address(arg2)]++
                                            mem[0] = arg3
                                            mem[32] = 103
                                            ownerOf[arg3] = arg2
                                            emit Transfer(arg1, arg2, arg3);
                                            if ext_code.size(arg2):
                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = msg.sender
                                                mem[mem[64] + 36] = arg1
                                                mem[mem[64] + 68] = arg3
                                                mem[mem[64] + 100] = 128
                                                mem[mem[64] + 132] = mem[96]
                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                if ceil32(mem[96]) <= mem[96]:
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _32452 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_32452] == Mask(32, 224, mem[_32452])
                                                    if Mask(32, 224, mem[_32452]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    mem[mem[64] + mem[96] + 164] = 0
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _32728 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_32728] == Mask(32, 224, mem[_32728])
                                                    if Mask(32, 224, mem[_32728]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            if not arg2:
                                                revert with 0, 'ERC721: balance query for the zero address'
                                            tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                            stor152[arg3] = balanceOf[address(arg2)]
                                            approved[arg3] = 0
                                            if not ownerOf[arg3]:
                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                            emit Approval(ownerOf[arg3], 0, arg3);
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            balanceOf[address(arg1)]--
                                            if balanceOf[address(arg2)] > -2:
                                                revert with 0, 17
                                            balanceOf[address(arg2)]++
                                            mem[0] = arg3
                                            mem[32] = 103
                                            ownerOf[arg3] = arg2
                                            emit Transfer(arg1, arg2, arg3);
                                            if ext_code.size(arg2):
                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = msg.sender
                                                mem[mem[64] + 36] = arg1
                                                mem[mem[64] + 68] = arg3
                                                mem[mem[64] + 100] = 128
                                                mem[mem[64] + 132] = mem[96]
                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                if ceil32(mem[96]) <= mem[96]:
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _32454 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_32454] == Mask(32, 224, mem[_32454])
                                                    if Mask(32, 224, mem[_32454]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    mem[mem[64] + mem[96] + 164] = 0
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _32729 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_32729] == Mask(32, 224, mem[_32729])
                                                    if Mask(32, 224, mem[_32729]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                    else:
                                        if tokenByIndex.length < 1:
                                            revert with 0, 17
                                        if tokenByIndex.length - 1 >= tokenByIndex.length:
                                            revert with 0, 50
                                        if stor154[arg3] >= tokenByIndex.length:
                                            revert with 0, 50
                                        tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                        stor154[stor153[stor153.length]] = stor154[arg3]
                                        stor154[arg3] = 0
                                        if not tokenByIndex.length:
                                            revert with 0, 49
                                        tokenByIndex[tokenByIndex.length] = 0
                                        tokenByIndex.length--
                                        approved[arg3] = 0
                                        if not ownerOf[arg3]:
                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                        emit Approval(ownerOf[arg3], 0, arg3);
                                        if balanceOf[address(arg1)] < 1:
                                            revert with 0, 17
                                        balanceOf[address(arg1)]--
                                        if balanceOf[address(arg2)] > -2:
                                            revert with 0, 17
                                        balanceOf[address(arg2)]++
                                        mem[0] = arg3
                                        mem[32] = 103
                                        ownerOf[arg3] = arg2
                                        emit Transfer(arg1, arg2, arg3);
                                        if ext_code.size(arg2):
                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = msg.sender
                                            mem[mem[64] + 36] = arg1
                                            mem[mem[64] + 68] = arg3
                                            mem[mem[64] + 100] = 128
                                            mem[mem[64] + 132] = mem[96]
                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                            if ceil32(mem[96]) <= mem[96]:
                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    if not return_data.size:
                                                        if not mem[96]:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with memory
                                                          from 128
                                                           len mem[96]
                                                    if not return_data.size:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _32456 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                require mem[_32456] == Mask(32, 224, mem[_32456])
                                                if Mask(32, 224, mem[_32456]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                mem[mem[64] + mem[96] + 164] = 0
                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    if not return_data.size:
                                                        if not mem[96]:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with memory
                                                          from 128
                                                           len mem[96]
                                                    if not return_data.size:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _32730 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                require mem[_32730] == Mask(32, 224, mem[_32730])
                                                if Mask(32, 224, mem[_32730]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                else:
                                    if not arg1:
                                        revert with 0, 'ERC721: balance query for the zero address'
                                    if balanceOf[address(arg1)] < 1:
                                        revert with 0, 17
                                    if balanceOf[address(arg1)] - 1 == stor152[arg3]:
                                        stor152[arg3] = 0
                                        tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                                        if arg2:
                                            if arg2 == arg1:
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32458 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32458] == Mask(32, 224, mem[_32458])
                                                        if Mask(32, 224, mem[_32458]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[64] + mem[96] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32731 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32731] == Mask(32, 224, mem[_32731])
                                                        if Mask(32, 224, mem[_32731]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if not arg2:
                                                    revert with 0, 'ERC721: balance query for the zero address'
                                                tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                stor152[arg3] = balanceOf[address(arg2)]
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32460 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32460] == Mask(32, 224, mem[_32460])
                                                        if Mask(32, 224, mem[_32460]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[64] + mem[96] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32732 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32732] == Mask(32, 224, mem[_32732])
                                                        if Mask(32, 224, mem[_32732]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            if tokenByIndex.length < 1:
                                                revert with 0, 17
                                            if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                revert with 0, 50
                                            if stor154[arg3] >= tokenByIndex.length:
                                                revert with 0, 50
                                            tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                            stor154[stor153[stor153.length]] = stor154[arg3]
                                            stor154[arg3] = 0
                                            if not tokenByIndex.length:
                                                revert with 0, 49
                                            tokenByIndex[tokenByIndex.length] = 0
                                            tokenByIndex.length--
                                            approved[arg3] = 0
                                            if not ownerOf[arg3]:
                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                            emit Approval(ownerOf[arg3], 0, arg3);
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            balanceOf[address(arg1)]--
                                            if balanceOf[address(arg2)] > -2:
                                                revert with 0, 17
                                            balanceOf[address(arg2)]++
                                            mem[0] = arg3
                                            mem[32] = 103
                                            ownerOf[arg3] = arg2
                                            emit Transfer(arg1, arg2, arg3);
                                            if ext_code.size(arg2):
                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = msg.sender
                                                mem[mem[64] + 36] = arg1
                                                mem[mem[64] + 68] = arg3
                                                mem[mem[64] + 100] = 128
                                                mem[mem[64] + 132] = mem[96]
                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                if ceil32(mem[96]) <= mem[96]:
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _32462 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_32462] == Mask(32, 224, mem[_32462])
                                                    if Mask(32, 224, mem[_32462]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    mem[mem[64] + mem[96] + 164] = 0
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _32733 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_32733] == Mask(32, 224, mem[_32733])
                                                    if Mask(32, 224, mem[_32733]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                    else:
                                        tokenOfOwnerByIndex[address(arg1)][stor152[arg3]] = tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1]
                                        stor152[stor151[address(arg1)][stor104[address(arg1)] - 1]] = stor152[arg3]
                                        stor152[arg3] = 0
                                        tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                                        if arg2:
                                            if arg2 == arg1:
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32464 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32464] == Mask(32, 224, mem[_32464])
                                                        if Mask(32, 224, mem[_32464]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[64] + mem[96] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32734 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32734] == Mask(32, 224, mem[_32734])
                                                        if Mask(32, 224, mem[_32734]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if not arg2:
                                                    revert with 0, 'ERC721: balance query for the zero address'
                                                tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                stor152[arg3] = balanceOf[address(arg2)]
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32466 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32466] == Mask(32, 224, mem[_32466])
                                                        if Mask(32, 224, mem[_32466]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[64] + mem[96] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32735 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32735] == Mask(32, 224, mem[_32735])
                                                        if Mask(32, 224, mem[_32735]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            if tokenByIndex.length < 1:
                                                revert with 0, 17
                                            if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                revert with 0, 50
                                            if stor154[arg3] >= tokenByIndex.length:
                                                revert with 0, 50
                                            tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                            stor154[stor153[stor153.length]] = stor154[arg3]
                                            stor154[arg3] = 0
                                            if not tokenByIndex.length:
                                                revert with 0, 49
                                            tokenByIndex[tokenByIndex.length] = 0
                                            tokenByIndex.length--
                                            approved[arg3] = 0
                                            if not ownerOf[arg3]:
                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                            emit Approval(ownerOf[arg3], 0, arg3);
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            balanceOf[address(arg1)]--
                                            if balanceOf[address(arg2)] > -2:
                                                revert with 0, 17
                                            balanceOf[address(arg2)]++
                                            mem[0] = arg3
                                            mem[32] = 103
                                            ownerOf[arg3] = arg2
                                            emit Transfer(arg1, arg2, arg3);
                                            if ext_code.size(arg2):
                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = msg.sender
                                                mem[mem[64] + 36] = arg1
                                                mem[mem[64] + 68] = arg3
                                                mem[mem[64] + 100] = 128
                                                mem[mem[64] + 132] = mem[96]
                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                if ceil32(mem[96]) <= mem[96]:
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _32468 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_32468] == Mask(32, 224, mem[_32468])
                                                    if Mask(32, 224, mem[_32468]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    mem[mem[64] + mem[96] + 164] = 0
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _32736 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_32736] == Mask(32, 224, mem[_32736])
                                                    if Mask(32, 224, mem[_32736]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                    else:
                        mem[132] = arg2
                        staticcall liquidityPoolManagerImplementationAddress.0xb278110f with:
                                gas gas_remaining wei
                               args arg2
                        mem[128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        if ext_call.return_data[0]:
                            if not arg1:
                                stor154[arg3] = tokenByIndex.length
                                tokenByIndex.length++
                                stor72A1[stor153.length] = arg3
                            else:
                                if arg1 != arg2:
                                    if not arg1:
                                        revert with 0, 'ERC721: balance query for the zero address'
                                    if balanceOf[address(arg1)] < 1:
                                        revert with 0, 17
                                    if balanceOf[address(arg1)] - 1 != stor152[arg3]:
                                        tokenOfOwnerByIndex[address(arg1)][stor152[arg3]] = tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1]
                                        stor152[stor151[address(arg1)][stor104[address(arg1)] - 1]] = stor152[arg3]
                                    stor152[arg3] = 0
                                    tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                            if arg2:
                                if arg2 != arg1:
                                    if not arg2:
                                        revert with 0, 'ERC721: balance query for the zero address'
                                    tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                    stor152[arg3] = balanceOf[address(arg2)]
                            else:
                                if tokenByIndex.length < 1:
                                    revert with 0, 17
                                if tokenByIndex.length - 1 >= tokenByIndex.length:
                                    revert with 0, 50
                                if stor154[arg3] >= tokenByIndex.length:
                                    revert with 0, 50
                                tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                stor154[stor153[stor153.length]] = stor154[arg3]
                                stor154[arg3] = 0
                                if not tokenByIndex.length:
                                    revert with 0, 49
                                tokenByIndex[tokenByIndex.length] = 0
                                tokenByIndex.length--
                            approved[arg3] = 0
                            if not ownerOf[arg3]:
                                revert with 0, 'ERC721: owner query for nonexistent token'
                            emit Approval(ownerOf[arg3], 0, arg3);
                            if balanceOf[address(arg1)] < 1:
                                revert with 0, 17
                            balanceOf[address(arg1)]--
                            if balanceOf[address(arg2)] > -2:
                                revert with 0, 17
                            balanceOf[address(arg2)]++
                            ownerOf[arg3] = arg2
                            emit Transfer(arg1, arg2, arg3);
                            if ext_code.size(arg2):
                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args msg.sender, address(arg1), arg3, 128, 0
                                if not ext_call.success:
                                    if not return_data.size:
                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                    if not return_data.size:
                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                        else:
                            if not arg2:
                                revert with 0, 'ERC721: balance query for the zero address'
                            if balanceOf[address(arg2)] > test266151307():
                                revert with 0, 65
                            mem[ceil32(return_data.size) + 128] = balanceOf[address(arg2)]
                            mem[64] = ceil32(return_data.size) + (32 * balanceOf[address(arg2)]) + 160
                            if not balanceOf[address(arg2)]:
                                idx = 0
                                while idx < balanceOf[address(arg2)]:
                                    if not arg2:
                                        revert with 0, 'ERC721: balance query for the zero address'
                                    if idx >= balanceOf[address(arg2)]:
                                        revert with 0, 'ERC721Enumerable: owner index out of bounds'
                                    if tokenOfOwnerByIndex[address(arg2)][idx] <= 0:
                                        revert with 0, 'Troops: Id must be higher than zero'
                                    mem[0] = tokenOfOwnerByIndex[address(arg2)][idx]
                                    mem[32] = 552
                                    _15959 = mem[64]
                                    mem[64] = mem[64] + 256
                                    mem[_15959] = stor552[stor151[address(arg2)][idx]].field_0
                                    if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                            revert with 0, 34
                                        _17757 = mem[64]
                                        mem[64] = mem[64] + ceil32(uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) + 32
                                        mem[_17757] = uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                                revert with 0, 34
                                            if Mask(256, -1, stor552[stor151[address(arg2)][idx]].field_256):
                                                if 31 >= uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5:
                                                    mem[_17757 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                else:
                                                    mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                    mem[_17757 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                    s = _17757 + 32
                                                    t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                    while _17757 + (uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) > s:
                                                        mem[s + 32] = stor1[t].field_0
                                                        s = s + 32
                                                        t = t + 1
                                                        continue 
                                        else:
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                                revert with 0, 34
                                            if stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                if 31 >= stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                    mem[_17757 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                else:
                                                    mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                    mem[_17757 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                    s = _17757 + 32
                                                    t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                    while _17757 + stor552[stor151[address(arg2)][idx]].field_257 % 128 > s:
                                                        mem[s + 32] = stor1[t].field_0
                                                        s = s + 32
                                                        t = t + 1
                                                        continue 
                                        mem[_15959 + 32] = _17757
                                    else:
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                            revert with 0, 34
                                        _17790 = mem[64]
                                        mem[64] = mem[64] + ceil32(stor552[stor151[address(arg2)][idx]].field_257 % 128) + 32
                                        mem[_17790] = stor552[stor151[address(arg2)][idx]].field_257 % 128
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                                revert with 0, 34
                                            if Mask(256, -1, stor552[stor151[address(arg2)][idx]].field_256):
                                                if 31 >= uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5:
                                                    mem[_17790 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                else:
                                                    mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                    mem[_17790 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                    s = _17790 + 32
                                                    t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                    while _17790 + (uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) > s:
                                                        mem[s + 32] = stor1[t].field_0
                                                        s = s + 32
                                                        t = t + 1
                                                        continue 
                                        else:
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                                revert with 0, 34
                                            if stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                if 31 >= stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                    mem[_17790 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                else:
                                                    mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                    mem[_17790 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                    s = _17790 + 32
                                                    t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                    while _17790 + stor552[stor151[address(arg2)][idx]].field_257 % 128 > s:
                                                        mem[s + 32] = stor1[t].field_0
                                                        s = s + 32
                                                        t = t + 1
                                                        continue 
                                        mem[_15959 + 32] = _17790
                                    mem[_15959 + 64] = stor552[stor151[address(arg2)][idx]].field_512
                                    mem[_15959 + 96] = stor552[stor151[address(arg2)][idx]].field_768
                                    mem[_15959 + 128] = stor552[stor151[address(arg2)][idx]].field_1024
                                    mem[_15959 + 160] = stor552[stor151[address(arg2)][idx]].field_1280
                                    mem[_15959 + 192] = bool(uint8(stor552[stor151[address(arg2)][idx]].field_1536))
                                    mem[_15959 + 224] = bool(uint8(stor552[stor151[address(arg2)][idx]].field_1544))
                                    require uint8(stor552[stor151[address(arg2)][idx]].field_1536)
                                    if idx >= mem[ceil32(return_data.size) + 128]:
                                        revert with 0, 50
                                    mem[(32 * idx) + ceil32(return_data.size) + 160] = tokenOfOwnerByIndex[address(arg2)][idx]
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    continue 
                                idx = 0
                                s = 0
                                while idx < mem[ceil32(return_data.size) + 128]:
                                    if idx >= mem[ceil32(return_data.size) + 128]:
                                        revert with 0, 50
                                    mem[0] = mem[(32 * idx) + ceil32(return_data.size) + 160]
                                    mem[32] = 552
                                    if not uint8(stor552[mem[(32 * idx) + ceil32(return_data.size) + 160]].field_1544):
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = s
                                        continue 
                                    if s == -1:
                                        revert with 0, 17
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    s = s + 1
                                    continue 
                                if s >= 2:
                                    revert with 0, 'Each holder can not hold more than 2 Gladiators'
                                if not arg1:
                                    stor154[arg3] = tokenByIndex.length
                                    tokenByIndex.length++
                                    stor72A1[stor153.length] = arg3
                                    if arg2:
                                        if arg2 == arg1:
                                            approved[arg3] = 0
                                            if not ownerOf[arg3]:
                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                            emit Approval(ownerOf[arg3], 0, arg3);
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            balanceOf[address(arg1)]--
                                            if balanceOf[address(arg2)] > -2:
                                                revert with 0, 17
                                            balanceOf[address(arg2)]++
                                            mem[0] = arg3
                                            mem[32] = 103
                                            ownerOf[arg3] = arg2
                                            emit Transfer(arg1, arg2, arg3);
                                            if ext_code.size(arg2):
                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = msg.sender
                                                mem[mem[64] + 36] = arg1
                                                mem[mem[64] + 68] = arg3
                                                mem[mem[64] + 100] = 128
                                                mem[mem[64] + 132] = mem[96]
                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                if ceil32(mem[96]) <= mem[96]:
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _32494 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_32494] == Mask(32, 224, mem[_32494])
                                                    if Mask(32, 224, mem[_32494]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    mem[mem[64] + mem[96] + 164] = 0
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _32749 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_32749] == Mask(32, 224, mem[_32749])
                                                    if Mask(32, 224, mem[_32749]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            if not arg2:
                                                revert with 0, 'ERC721: balance query for the zero address'
                                            tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                            stor152[arg3] = balanceOf[address(arg2)]
                                            approved[arg3] = 0
                                            if not ownerOf[arg3]:
                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                            emit Approval(ownerOf[arg3], 0, arg3);
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            balanceOf[address(arg1)]--
                                            if balanceOf[address(arg2)] > -2:
                                                revert with 0, 17
                                            balanceOf[address(arg2)]++
                                            mem[0] = arg3
                                            mem[32] = 103
                                            ownerOf[arg3] = arg2
                                            emit Transfer(arg1, arg2, arg3);
                                            if ext_code.size(arg2):
                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = msg.sender
                                                mem[mem[64] + 36] = arg1
                                                mem[mem[64] + 68] = arg3
                                                mem[mem[64] + 100] = 128
                                                mem[mem[64] + 132] = mem[96]
                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                if ceil32(mem[96]) <= mem[96]:
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _32496 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_32496] == Mask(32, 224, mem[_32496])
                                                    if Mask(32, 224, mem[_32496]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    mem[mem[64] + mem[96] + 164] = 0
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _32750 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_32750] == Mask(32, 224, mem[_32750])
                                                    if Mask(32, 224, mem[_32750]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                    else:
                                        if tokenByIndex.length < 1:
                                            revert with 0, 17
                                        if tokenByIndex.length - 1 >= tokenByIndex.length:
                                            revert with 0, 50
                                        if stor154[arg3] >= tokenByIndex.length:
                                            revert with 0, 50
                                        tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                        stor154[stor153[stor153.length]] = stor154[arg3]
                                        stor154[arg3] = 0
                                        if not tokenByIndex.length:
                                            revert with 0, 49
                                        tokenByIndex[tokenByIndex.length] = 0
                                        tokenByIndex.length--
                                        approved[arg3] = 0
                                        if not ownerOf[arg3]:
                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                        emit Approval(ownerOf[arg3], 0, arg3);
                                        if balanceOf[address(arg1)] < 1:
                                            revert with 0, 17
                                        balanceOf[address(arg1)]--
                                        if balanceOf[address(arg2)] > -2:
                                            revert with 0, 17
                                        balanceOf[address(arg2)]++
                                        mem[0] = arg3
                                        mem[32] = 103
                                        ownerOf[arg3] = arg2
                                        emit Transfer(arg1, arg2, arg3);
                                        if ext_code.size(arg2):
                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = msg.sender
                                            mem[mem[64] + 36] = arg1
                                            mem[mem[64] + 68] = arg3
                                            mem[mem[64] + 100] = 128
                                            mem[mem[64] + 132] = mem[96]
                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                            if ceil32(mem[96]) <= mem[96]:
                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    if not return_data.size:
                                                        if not mem[96]:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with memory
                                                          from 128
                                                           len mem[96]
                                                    if not return_data.size:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _32498 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                require mem[_32498] == Mask(32, 224, mem[_32498])
                                                if Mask(32, 224, mem[_32498]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                mem[mem[64] + mem[96] + 164] = 0
                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    if not return_data.size:
                                                        if not mem[96]:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with memory
                                                          from 128
                                                           len mem[96]
                                                    if not return_data.size:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _32751 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                require mem[_32751] == Mask(32, 224, mem[_32751])
                                                if Mask(32, 224, mem[_32751]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                else:
                                    if arg1 == arg2:
                                        if arg2:
                                            if arg2 == arg1:
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32476 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32476] == Mask(32, 224, mem[_32476])
                                                        if Mask(32, 224, mem[_32476]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[64] + mem[96] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32740 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32740] == Mask(32, 224, mem[_32740])
                                                        if Mask(32, 224, mem[_32740]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if not arg2:
                                                    revert with 0, 'ERC721: balance query for the zero address'
                                                tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                stor152[arg3] = balanceOf[address(arg2)]
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32478 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32478] == Mask(32, 224, mem[_32478])
                                                        if Mask(32, 224, mem[_32478]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[64] + mem[96] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32741 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32741] == Mask(32, 224, mem[_32741])
                                                        if Mask(32, 224, mem[_32741]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            if tokenByIndex.length < 1:
                                                revert with 0, 17
                                            if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                revert with 0, 50
                                            if stor154[arg3] >= tokenByIndex.length:
                                                revert with 0, 50
                                            tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                            stor154[stor153[stor153.length]] = stor154[arg3]
                                            stor154[arg3] = 0
                                            if not tokenByIndex.length:
                                                revert with 0, 49
                                            tokenByIndex[tokenByIndex.length] = 0
                                            tokenByIndex.length--
                                            approved[arg3] = 0
                                            if not ownerOf[arg3]:
                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                            emit Approval(ownerOf[arg3], 0, arg3);
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            balanceOf[address(arg1)]--
                                            if balanceOf[address(arg2)] > -2:
                                                revert with 0, 17
                                            balanceOf[address(arg2)]++
                                            mem[0] = arg3
                                            mem[32] = 103
                                            ownerOf[arg3] = arg2
                                            emit Transfer(arg1, arg2, arg3);
                                            if ext_code.size(arg2):
                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = msg.sender
                                                mem[mem[64] + 36] = arg1
                                                mem[mem[64] + 68] = arg3
                                                mem[mem[64] + 100] = 128
                                                mem[mem[64] + 132] = mem[96]
                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                if ceil32(mem[96]) <= mem[96]:
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _32480 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_32480] == Mask(32, 224, mem[_32480])
                                                    if Mask(32, 224, mem[_32480]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    mem[mem[64] + mem[96] + 164] = 0
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _32742 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_32742] == Mask(32, 224, mem[_32742])
                                                    if Mask(32, 224, mem[_32742]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                    else:
                                        if not arg1:
                                            revert with 0, 'ERC721: balance query for the zero address'
                                        if balanceOf[address(arg1)] < 1:
                                            revert with 0, 17
                                        if balanceOf[address(arg1)] - 1 == stor152[arg3]:
                                            stor152[arg3] = 0
                                            tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                                            if arg2:
                                                if arg2 == arg1:
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _32482 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_32482] == Mask(32, 224, mem[_32482])
                                                            if Mask(32, 224, mem[_32482]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[64] + mem[96] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _32743 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_32743] == Mask(32, 224, mem[_32743])
                                                            if Mask(32, 224, mem[_32743]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    if not arg2:
                                                        revert with 0, 'ERC721: balance query for the zero address'
                                                    tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                    stor152[arg3] = balanceOf[address(arg2)]
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _32484 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_32484] == Mask(32, 224, mem[_32484])
                                                            if Mask(32, 224, mem[_32484]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[64] + mem[96] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _32744 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_32744] == Mask(32, 224, mem[_32744])
                                                            if Mask(32, 224, mem[_32744]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if tokenByIndex.length < 1:
                                                    revert with 0, 17
                                                if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                    revert with 0, 50
                                                if stor154[arg3] >= tokenByIndex.length:
                                                    revert with 0, 50
                                                tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                stor154[stor153[stor153.length]] = stor154[arg3]
                                                stor154[arg3] = 0
                                                if not tokenByIndex.length:
                                                    revert with 0, 49
                                                tokenByIndex[tokenByIndex.length] = 0
                                                tokenByIndex.length--
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32486 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32486] == Mask(32, 224, mem[_32486])
                                                        if Mask(32, 224, mem[_32486]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[64] + mem[96] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32745 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32745] == Mask(32, 224, mem[_32745])
                                                        if Mask(32, 224, mem[_32745]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            tokenOfOwnerByIndex[address(arg1)][stor152[arg3]] = tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1]
                                            stor152[stor151[address(arg1)][stor104[address(arg1)] - 1]] = stor152[arg3]
                                            stor152[arg3] = 0
                                            tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                                            if arg2:
                                                if arg2 == arg1:
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _32488 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_32488] == Mask(32, 224, mem[_32488])
                                                            if Mask(32, 224, mem[_32488]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[64] + mem[96] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _32746 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_32746] == Mask(32, 224, mem[_32746])
                                                            if Mask(32, 224, mem[_32746]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    if not arg2:
                                                        revert with 0, 'ERC721: balance query for the zero address'
                                                    tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                    stor152[arg3] = balanceOf[address(arg2)]
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _32490 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_32490] == Mask(32, 224, mem[_32490])
                                                            if Mask(32, 224, mem[_32490]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[64] + mem[96] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _32747 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_32747] == Mask(32, 224, mem[_32747])
                                                            if Mask(32, 224, mem[_32747]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if tokenByIndex.length < 1:
                                                    revert with 0, 17
                                                if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                    revert with 0, 50
                                                if stor154[arg3] >= tokenByIndex.length:
                                                    revert with 0, 50
                                                tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                stor154[stor153[stor153.length]] = stor154[arg3]
                                                stor154[arg3] = 0
                                                if not tokenByIndex.length:
                                                    revert with 0, 49
                                                tokenByIndex[tokenByIndex.length] = 0
                                                tokenByIndex.length--
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32492 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32492] == Mask(32, 224, mem[_32492])
                                                        if Mask(32, 224, mem[_32492]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[64] + mem[96] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32748 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32748] == Mask(32, 224, mem[_32748])
                                                        if Mask(32, 224, mem[_32748]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                            else:
                                mem[ceil32(return_data.size) + 160 len 32 * balanceOf[address(arg2)]] = call.data[calldata.size len 32 * balanceOf[address(arg2)]]
                                idx = 0
                                while idx < balanceOf[address(arg2)]:
                                    if not arg2:
                                        revert with 0, 'ERC721: balance query for the zero address'
                                    if idx >= balanceOf[address(arg2)]:
                                        revert with 0, 'ERC721Enumerable: owner index out of bounds'
                                    if tokenOfOwnerByIndex[address(arg2)][idx] <= 0:
                                        revert with 0, 'Troops: Id must be higher than zero'
                                    mem[0] = tokenOfOwnerByIndex[address(arg2)][idx]
                                    mem[32] = 552
                                    _15962 = mem[64]
                                    mem[64] = mem[64] + 256
                                    mem[_15962] = stor552[stor151[address(arg2)][idx]].field_0
                                    if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                            revert with 0, 34
                                        _17759 = mem[64]
                                        mem[64] = mem[64] + ceil32(uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) + 32
                                        mem[_17759] = uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                                revert with 0, 34
                                            if Mask(256, -1, stor552[stor151[address(arg2)][idx]].field_256):
                                                if 31 >= uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5:
                                                    mem[_17759 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                else:
                                                    mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                    mem[_17759 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                    s = _17759 + 32
                                                    t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                    while _17759 + (uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) > s:
                                                        mem[s + 32] = stor1[t].field_0
                                                        s = s + 32
                                                        t = t + 1
                                                        continue 
                                        else:
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                                revert with 0, 34
                                            if stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                if 31 >= stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                    mem[_17759 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                else:
                                                    mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                    mem[_17759 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                    s = _17759 + 32
                                                    t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                    while _17759 + stor552[stor151[address(arg2)][idx]].field_257 % 128 > s:
                                                        mem[s + 32] = stor1[t].field_0
                                                        s = s + 32
                                                        t = t + 1
                                                        continue 
                                        mem[_15962 + 32] = _17759
                                    else:
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                            revert with 0, 34
                                        _17795 = mem[64]
                                        mem[64] = mem[64] + ceil32(stor552[stor151[address(arg2)][idx]].field_257 % 128) + 32
                                        mem[_17795] = stor552[stor151[address(arg2)][idx]].field_257 % 128
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                                revert with 0, 34
                                            if Mask(256, -1, stor552[stor151[address(arg2)][idx]].field_256):
                                                if 31 >= uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5:
                                                    mem[_17795 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                else:
                                                    mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                    mem[_17795 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                    s = _17795 + 32
                                                    t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                    while _17795 + (uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) > s:
                                                        mem[s + 32] = stor1[t].field_0
                                                        s = s + 32
                                                        t = t + 1
                                                        continue 
                                        else:
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                                revert with 0, 34
                                            if stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                if 31 >= stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                    mem[_17795 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                else:
                                                    mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                    mem[_17795 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                    s = _17795 + 32
                                                    t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                    while _17795 + stor552[stor151[address(arg2)][idx]].field_257 % 128 > s:
                                                        mem[s + 32] = stor1[t].field_0
                                                        s = s + 32
                                                        t = t + 1
                                                        continue 
                                        mem[_15962 + 32] = _17795
                                    mem[_15962 + 64] = stor552[stor151[address(arg2)][idx]].field_512
                                    mem[_15962 + 96] = stor552[stor151[address(arg2)][idx]].field_768
                                    mem[_15962 + 128] = stor552[stor151[address(arg2)][idx]].field_1024
                                    mem[_15962 + 160] = stor552[stor151[address(arg2)][idx]].field_1280
                                    mem[_15962 + 192] = bool(uint8(stor552[stor151[address(arg2)][idx]].field_1536))
                                    mem[_15962 + 224] = bool(uint8(stor552[stor151[address(arg2)][idx]].field_1544))
                                    require uint8(stor552[stor151[address(arg2)][idx]].field_1536)
                                    if idx >= mem[ceil32(return_data.size) + 128]:
                                        revert with 0, 50
                                    mem[(32 * idx) + ceil32(return_data.size) + 160] = tokenOfOwnerByIndex[address(arg2)][idx]
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    continue 
                                idx = 0
                                s = 0
                                while idx < mem[ceil32(return_data.size) + 128]:
                                    if idx >= mem[ceil32(return_data.size) + 128]:
                                        revert with 0, 50
                                    mem[0] = mem[(32 * idx) + ceil32(return_data.size) + 160]
                                    mem[32] = 552
                                    if not uint8(stor552[mem[(32 * idx) + ceil32(return_data.size) + 160]].field_1544):
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = s
                                        continue 
                                    if s == -1:
                                        revert with 0, 17
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    s = s + 1
                                    continue 
                                if s >= 2:
                                    revert with 0, 'Each holder can not hold more than 2 Gladiators'
                                if not arg1:
                                    stor154[arg3] = tokenByIndex.length
                                    tokenByIndex.length++
                                    stor72A1[stor153.length] = arg3
                                    if arg2:
                                        if arg2 == arg1:
                                            approved[arg3] = 0
                                            if not ownerOf[arg3]:
                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                            emit Approval(ownerOf[arg3], 0, arg3);
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            balanceOf[address(arg1)]--
                                            if balanceOf[address(arg2)] > -2:
                                                revert with 0, 17
                                            balanceOf[address(arg2)]++
                                            mem[0] = arg3
                                            mem[32] = 103
                                            ownerOf[arg3] = arg2
                                            emit Transfer(arg1, arg2, arg3);
                                            if ext_code.size(arg2):
                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = msg.sender
                                                mem[mem[64] + 36] = arg1
                                                mem[mem[64] + 68] = arg3
                                                mem[mem[64] + 100] = 128
                                                mem[mem[64] + 132] = mem[96]
                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                if ceil32(mem[96]) <= mem[96]:
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _32518 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_32518] == Mask(32, 224, mem[_32518])
                                                    if Mask(32, 224, mem[_32518]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    mem[mem[64] + mem[96] + 164] = 0
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _32761 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_32761] == Mask(32, 224, mem[_32761])
                                                    if Mask(32, 224, mem[_32761]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            if not arg2:
                                                revert with 0, 'ERC721: balance query for the zero address'
                                            tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                            stor152[arg3] = balanceOf[address(arg2)]
                                            approved[arg3] = 0
                                            if not ownerOf[arg3]:
                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                            emit Approval(ownerOf[arg3], 0, arg3);
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            balanceOf[address(arg1)]--
                                            if balanceOf[address(arg2)] > -2:
                                                revert with 0, 17
                                            balanceOf[address(arg2)]++
                                            mem[0] = arg3
                                            mem[32] = 103
                                            ownerOf[arg3] = arg2
                                            emit Transfer(arg1, arg2, arg3);
                                            if ext_code.size(arg2):
                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = msg.sender
                                                mem[mem[64] + 36] = arg1
                                                mem[mem[64] + 68] = arg3
                                                mem[mem[64] + 100] = 128
                                                mem[mem[64] + 132] = mem[96]
                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                if ceil32(mem[96]) <= mem[96]:
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _32520 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_32520] == Mask(32, 224, mem[_32520])
                                                    if Mask(32, 224, mem[_32520]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    mem[mem[64] + mem[96] + 164] = 0
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _32762 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_32762] == Mask(32, 224, mem[_32762])
                                                    if Mask(32, 224, mem[_32762]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                    else:
                                        if tokenByIndex.length < 1:
                                            revert with 0, 17
                                        if tokenByIndex.length - 1 >= tokenByIndex.length:
                                            revert with 0, 50
                                        if stor154[arg3] >= tokenByIndex.length:
                                            revert with 0, 50
                                        tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                        stor154[stor153[stor153.length]] = stor154[arg3]
                                        stor154[arg3] = 0
                                        if not tokenByIndex.length:
                                            revert with 0, 49
                                        tokenByIndex[tokenByIndex.length] = 0
                                        tokenByIndex.length--
                                        approved[arg3] = 0
                                        if not ownerOf[arg3]:
                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                        emit Approval(ownerOf[arg3], 0, arg3);
                                        if balanceOf[address(arg1)] < 1:
                                            revert with 0, 17
                                        balanceOf[address(arg1)]--
                                        if balanceOf[address(arg2)] > -2:
                                            revert with 0, 17
                                        balanceOf[address(arg2)]++
                                        mem[0] = arg3
                                        mem[32] = 103
                                        ownerOf[arg3] = arg2
                                        emit Transfer(arg1, arg2, arg3);
                                        if ext_code.size(arg2):
                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = msg.sender
                                            mem[mem[64] + 36] = arg1
                                            mem[mem[64] + 68] = arg3
                                            mem[mem[64] + 100] = 128
                                            mem[mem[64] + 132] = mem[96]
                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                            if ceil32(mem[96]) <= mem[96]:
                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    if not return_data.size:
                                                        if not mem[96]:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with memory
                                                          from 128
                                                           len mem[96]
                                                    if not return_data.size:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _32522 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                require mem[_32522] == Mask(32, 224, mem[_32522])
                                                if Mask(32, 224, mem[_32522]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                mem[mem[64] + mem[96] + 164] = 0
                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    if not return_data.size:
                                                        if not mem[96]:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with memory
                                                          from 128
                                                           len mem[96]
                                                    if not return_data.size:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _32763 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                require mem[_32763] == Mask(32, 224, mem[_32763])
                                                if Mask(32, 224, mem[_32763]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                else:
                                    if arg1 == arg2:
                                        if arg2:
                                            if arg2 == arg1:
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32500 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32500] == Mask(32, 224, mem[_32500])
                                                        if Mask(32, 224, mem[_32500]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[64] + mem[96] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32752 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32752] == Mask(32, 224, mem[_32752])
                                                        if Mask(32, 224, mem[_32752]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if not arg2:
                                                    revert with 0, 'ERC721: balance query for the zero address'
                                                tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                stor152[arg3] = balanceOf[address(arg2)]
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32502 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32502] == Mask(32, 224, mem[_32502])
                                                        if Mask(32, 224, mem[_32502]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[64] + mem[96] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32753 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32753] == Mask(32, 224, mem[_32753])
                                                        if Mask(32, 224, mem[_32753]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            if tokenByIndex.length < 1:
                                                revert with 0, 17
                                            if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                revert with 0, 50
                                            if stor154[arg3] >= tokenByIndex.length:
                                                revert with 0, 50
                                            tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                            stor154[stor153[stor153.length]] = stor154[arg3]
                                            stor154[arg3] = 0
                                            if not tokenByIndex.length:
                                                revert with 0, 49
                                            tokenByIndex[tokenByIndex.length] = 0
                                            tokenByIndex.length--
                                            approved[arg3] = 0
                                            if not ownerOf[arg3]:
                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                            emit Approval(ownerOf[arg3], 0, arg3);
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            balanceOf[address(arg1)]--
                                            if balanceOf[address(arg2)] > -2:
                                                revert with 0, 17
                                            balanceOf[address(arg2)]++
                                            mem[0] = arg3
                                            mem[32] = 103
                                            ownerOf[arg3] = arg2
                                            emit Transfer(arg1, arg2, arg3);
                                            if ext_code.size(arg2):
                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = msg.sender
                                                mem[mem[64] + 36] = arg1
                                                mem[mem[64] + 68] = arg3
                                                mem[mem[64] + 100] = 128
                                                mem[mem[64] + 132] = mem[96]
                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                if ceil32(mem[96]) <= mem[96]:
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _32504 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_32504] == Mask(32, 224, mem[_32504])
                                                    if Mask(32, 224, mem[_32504]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    mem[mem[64] + mem[96] + 164] = 0
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _32754 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_32754] == Mask(32, 224, mem[_32754])
                                                    if Mask(32, 224, mem[_32754]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                    else:
                                        if not arg1:
                                            revert with 0, 'ERC721: balance query for the zero address'
                                        if balanceOf[address(arg1)] < 1:
                                            revert with 0, 17
                                        if balanceOf[address(arg1)] - 1 == stor152[arg3]:
                                            stor152[arg3] = 0
                                            tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                                            if arg2:
                                                if arg2 == arg1:
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _32506 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_32506] == Mask(32, 224, mem[_32506])
                                                            if Mask(32, 224, mem[_32506]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[64] + mem[96] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _32755 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_32755] == Mask(32, 224, mem[_32755])
                                                            if Mask(32, 224, mem[_32755]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    if not arg2:
                                                        revert with 0, 'ERC721: balance query for the zero address'
                                                    tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                    stor152[arg3] = balanceOf[address(arg2)]
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _32508 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_32508] == Mask(32, 224, mem[_32508])
                                                            if Mask(32, 224, mem[_32508]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[64] + mem[96] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _32756 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_32756] == Mask(32, 224, mem[_32756])
                                                            if Mask(32, 224, mem[_32756]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if tokenByIndex.length < 1:
                                                    revert with 0, 17
                                                if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                    revert with 0, 50
                                                if stor154[arg3] >= tokenByIndex.length:
                                                    revert with 0, 50
                                                tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                stor154[stor153[stor153.length]] = stor154[arg3]
                                                stor154[arg3] = 0
                                                if not tokenByIndex.length:
                                                    revert with 0, 49
                                                tokenByIndex[tokenByIndex.length] = 0
                                                tokenByIndex.length--
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32510 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32510] == Mask(32, 224, mem[_32510])
                                                        if Mask(32, 224, mem[_32510]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[64] + mem[96] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32757 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32757] == Mask(32, 224, mem[_32757])
                                                        if Mask(32, 224, mem[_32757]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            tokenOfOwnerByIndex[address(arg1)][stor152[arg3]] = tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1]
                                            stor152[stor151[address(arg1)][stor104[address(arg1)] - 1]] = stor152[arg3]
                                            stor152[arg3] = 0
                                            tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                                            if arg2:
                                                if arg2 == arg1:
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _32512 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_32512] == Mask(32, 224, mem[_32512])
                                                            if Mask(32, 224, mem[_32512]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[64] + mem[96] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _32758 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_32758] == Mask(32, 224, mem[_32758])
                                                            if Mask(32, 224, mem[_32758]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    if not arg2:
                                                        revert with 0, 'ERC721: balance query for the zero address'
                                                    tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                    stor152[arg3] = balanceOf[address(arg2)]
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _32514 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_32514] == Mask(32, 224, mem[_32514])
                                                            if Mask(32, 224, mem[_32514]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[64] + mem[96] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _32759 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_32759] == Mask(32, 224, mem[_32759])
                                                            if Mask(32, 224, mem[_32759]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if tokenByIndex.length < 1:
                                                    revert with 0, 17
                                                if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                    revert with 0, 50
                                                if stor154[arg3] >= tokenByIndex.length:
                                                    revert with 0, 50
                                                tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                stor154[stor153[stor153.length]] = stor154[arg3]
                                                stor154[arg3] = 0
                                                if not tokenByIndex.length:
                                                    revert with 0, 49
                                                tokenByIndex[tokenByIndex.length] = 0
                                                tokenByIndex.length--
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32516 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32516] == Mask(32, 224, mem[_32516])
                                                        if Mask(32, 224, mem[_32516]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[64] + mem[96] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32760 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32760] == Mask(32, 224, mem[_32760])
                                                        if Mask(32, 224, mem[_32760]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
    else:
        if not ownerOf[arg3]:
            revert with 0, 'ERC721: approved query for nonexistent token'
        if approved[arg3] == msg.sender:
            if not ownerOf[arg3]:
                revert with 0, 'ERC721: owner query for nonexistent token'
            if ownerOf[arg3] != arg1:
                revert with 0, 'ERC721: transfer from incorrect owner'
            if not arg2:
                revert with 0, 'ERC721: transfer to the zero address'
            if owner == arg2:
                if not arg1:
                    stor154[arg3] = tokenByIndex.length
                    tokenByIndex.length++
                    stor72A1[stor153.length] = arg3
                else:
                    if arg1 != arg2:
                        if not arg1:
                            revert with 0, 'ERC721: balance query for the zero address'
                        if balanceOf[address(arg1)] < 1:
                            revert with 0, 17
                        if balanceOf[address(arg1)] - 1 != stor152[arg3]:
                            tokenOfOwnerByIndex[address(arg1)][stor152[arg3]] = tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1]
                            stor152[stor151[address(arg1)][stor104[address(arg1)] - 1]] = stor152[arg3]
                        stor152[arg3] = 0
                        tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                if arg2:
                    if arg2 != arg1:
                        if not arg2:
                            revert with 0, 'ERC721: balance query for the zero address'
                        tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                        stor152[arg3] = balanceOf[address(arg2)]
                else:
                    if tokenByIndex.length < 1:
                        revert with 0, 17
                    if tokenByIndex.length - 1 >= tokenByIndex.length:
                        revert with 0, 50
                    if stor154[arg3] >= tokenByIndex.length:
                        revert with 0, 50
                    tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                    stor154[stor153[stor153.length]] = stor154[arg3]
                    stor154[arg3] = 0
                    if not tokenByIndex.length:
                        revert with 0, 49
                    tokenByIndex[tokenByIndex.length] = 0
                    tokenByIndex.length--
                approved[arg3] = 0
                if not ownerOf[arg3]:
                    revert with 0, 'ERC721: owner query for nonexistent token'
                emit Approval(ownerOf[arg3], 0, arg3);
                if balanceOf[address(arg1)] < 1:
                    revert with 0, 17
                balanceOf[address(arg1)]--
                if balanceOf[address(arg2)] > -2:
                    revert with 0, 17
                balanceOf[address(arg2)]++
                ownerOf[arg3] = arg2
                emit Transfer(arg1, arg2, arg3);
                if ext_code.size(arg2):
                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                         gas gas_remaining wei
                        args 0, uint32(msg.sender), address(arg1), arg3, 128, 0
                    if not ext_call.success:
                        if not return_data.size:
                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                        if not return_data.size:
                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                    if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
            else:
                if bool(uint8(stor552[arg3].field_1536)) != 1:
                    if not arg1:
                        stor154[arg3] = tokenByIndex.length
                        tokenByIndex.length++
                        stor72A1[stor153.length] = arg3
                    else:
                        if arg1 != arg2:
                            if not arg1:
                                revert with 0, 'ERC721: balance query for the zero address'
                            if balanceOf[address(arg1)] < 1:
                                revert with 0, 17
                            if balanceOf[address(arg1)] - 1 != stor152[arg3]:
                                tokenOfOwnerByIndex[address(arg1)][stor152[arg3]] = tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1]
                                stor152[stor151[address(arg1)][stor104[address(arg1)] - 1]] = stor152[arg3]
                            stor152[arg3] = 0
                            tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                    if arg2:
                        if arg2 != arg1:
                            if not arg2:
                                revert with 0, 'ERC721: balance query for the zero address'
                            tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                            stor152[arg3] = balanceOf[address(arg2)]
                    else:
                        if tokenByIndex.length < 1:
                            revert with 0, 17
                        if tokenByIndex.length - 1 >= tokenByIndex.length:
                            revert with 0, 50
                        if stor154[arg3] >= tokenByIndex.length:
                            revert with 0, 50
                        tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                        stor154[stor153[stor153.length]] = stor154[arg3]
                        stor154[arg3] = 0
                        if not tokenByIndex.length:
                            revert with 0, 49
                        tokenByIndex[tokenByIndex.length] = 0
                        tokenByIndex.length--
                    approved[arg3] = 0
                    if not ownerOf[arg3]:
                        revert with 0, 'ERC721: owner query for nonexistent token'
                    emit Approval(ownerOf[arg3], 0, arg3);
                    if balanceOf[address(arg1)] < 1:
                        revert with 0, 17
                    balanceOf[address(arg1)]--
                    if balanceOf[address(arg2)] > -2:
                        revert with 0, 17
                    balanceOf[address(arg2)]++
                    ownerOf[arg3] = arg2
                    emit Transfer(arg1, arg2, arg3);
                    if ext_code.size(arg2):
                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                             gas gas_remaining wei
                            args 0, uint32(msg.sender), address(arg1), arg3, 128, 0
                        if not ext_call.success:
                            if not return_data.size:
                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                            if not return_data.size:
                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                        if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                else:
                    if bool(uint8(stor552[arg3].field_1544)) != 1:
                        if not arg1:
                            stor154[arg3] = tokenByIndex.length
                            tokenByIndex.length++
                            stor72A1[stor153.length] = arg3
                        else:
                            if arg1 != arg2:
                                if not arg1:
                                    revert with 0, 'ERC721: balance query for the zero address'
                                if balanceOf[address(arg1)] < 1:
                                    revert with 0, 17
                                if balanceOf[address(arg1)] - 1 != stor152[arg3]:
                                    tokenOfOwnerByIndex[address(arg1)][stor152[arg3]] = tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1]
                                    stor152[stor151[address(arg1)][stor104[address(arg1)] - 1]] = stor152[arg3]
                                stor152[arg3] = 0
                                tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                        if arg2:
                            if arg2 != arg1:
                                if not arg2:
                                    revert with 0, 'ERC721: balance query for the zero address'
                                tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                stor152[arg3] = balanceOf[address(arg2)]
                        else:
                            if tokenByIndex.length < 1:
                                revert with 0, 17
                            if tokenByIndex.length - 1 >= tokenByIndex.length:
                                revert with 0, 50
                            if stor154[arg3] >= tokenByIndex.length:
                                revert with 0, 50
                            tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                            stor154[stor153[stor153.length]] = stor154[arg3]
                            stor154[arg3] = 0
                            if not tokenByIndex.length:
                                revert with 0, 49
                            tokenByIndex[tokenByIndex.length] = 0
                            tokenByIndex.length--
                        approved[arg3] = 0
                        if not ownerOf[arg3]:
                            revert with 0, 'ERC721: owner query for nonexistent token'
                        emit Approval(ownerOf[arg3], 0, arg3);
                        if balanceOf[address(arg1)] < 1:
                            revert with 0, 17
                        balanceOf[address(arg1)]--
                        if balanceOf[address(arg2)] > -2:
                            revert with 0, 17
                        balanceOf[address(arg2)]++
                        ownerOf[arg3] = arg2
                        emit Transfer(arg1, arg2, arg3);
                        if ext_code.size(arg2):
                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, uint32(msg.sender), address(arg1), arg3, 128, 0
                            if not ext_call.success:
                                if not return_data.size:
                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                if not return_data.size:
                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                            if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                    else:
                        if not liquidityPoolManagerImplementationAddress:
                            if not arg2:
                                revert with 0, 'ERC721: balance query for the zero address'
                            if balanceOf[address(arg2)] > test266151307():
                                revert with 0, 65
                            mem[128] = balanceOf[address(arg2)]
                            mem[64] = (32 * balanceOf[address(arg2)]) + 160
                            if not balanceOf[address(arg2)]:
                                idx = 0
                                while idx < balanceOf[address(arg2)]:
                                    if not arg2:
                                        revert with 0, 'ERC721: balance query for the zero address'
                                    if idx >= balanceOf[address(arg2)]:
                                        revert with 0, 'ERC721Enumerable: owner index out of bounds'
                                    if tokenOfOwnerByIndex[address(arg2)][idx] <= 0:
                                        revert with 0, 'Troops: Id must be higher than zero'
                                    mem[0] = tokenOfOwnerByIndex[address(arg2)][idx]
                                    mem[32] = 552
                                    _16181 = mem[64]
                                    mem[64] = mem[64] + 256
                                    mem[_16181] = stor552[stor151[address(arg2)][idx]].field_0
                                    if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                            revert with 0, 34
                                        _17761 = mem[64]
                                        mem[64] = mem[64] + ceil32(uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) + 32
                                        mem[_17761] = uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                                revert with 0, 34
                                            if Mask(256, -1, stor552[stor151[address(arg2)][idx]].field_256):
                                                if 31 >= uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5:
                                                    mem[_17761 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                else:
                                                    mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                    mem[_17761 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                    s = _17761 + 32
                                                    t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                    while _17761 + (uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) > s:
                                                        mem[s + 32] = stor1[t].field_0
                                                        s = s + 32
                                                        t = t + 1
                                                        continue 
                                        else:
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                                revert with 0, 34
                                            if stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                if 31 >= stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                    mem[_17761 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                else:
                                                    mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                    mem[_17761 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                    s = _17761 + 32
                                                    t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                    while _17761 + stor552[stor151[address(arg2)][idx]].field_257 % 128 > s:
                                                        mem[s + 32] = stor1[t].field_0
                                                        s = s + 32
                                                        t = t + 1
                                                        continue 
                                        mem[_16181 + 32] = _17761
                                    else:
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                            revert with 0, 34
                                        _17800 = mem[64]
                                        mem[64] = mem[64] + ceil32(stor552[stor151[address(arg2)][idx]].field_257 % 128) + 32
                                        mem[_17800] = stor552[stor151[address(arg2)][idx]].field_257 % 128
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                                revert with 0, 34
                                            if Mask(256, -1, stor552[stor151[address(arg2)][idx]].field_256):
                                                if 31 >= uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5:
                                                    mem[_17800 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                else:
                                                    mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                    mem[_17800 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                    s = _17800 + 32
                                                    t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                    while _17800 + (uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) > s:
                                                        mem[s + 32] = stor1[t].field_0
                                                        s = s + 32
                                                        t = t + 1
                                                        continue 
                                        else:
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                                revert with 0, 34
                                            if stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                if 31 >= stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                    mem[_17800 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                else:
                                                    mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                    mem[_17800 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                    s = _17800 + 32
                                                    t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                    while _17800 + stor552[stor151[address(arg2)][idx]].field_257 % 128 > s:
                                                        mem[s + 32] = stor1[t].field_0
                                                        s = s + 32
                                                        t = t + 1
                                                        continue 
                                        mem[_16181 + 32] = _17800
                                    mem[_16181 + 64] = stor552[stor151[address(arg2)][idx]].field_512
                                    mem[_16181 + 96] = stor552[stor151[address(arg2)][idx]].field_768
                                    mem[_16181 + 128] = stor552[stor151[address(arg2)][idx]].field_1024
                                    mem[_16181 + 160] = stor552[stor151[address(arg2)][idx]].field_1280
                                    mem[_16181 + 192] = bool(uint8(stor552[stor151[address(arg2)][idx]].field_1536))
                                    mem[_16181 + 224] = bool(uint8(stor552[stor151[address(arg2)][idx]].field_1544))
                                    require uint8(stor552[stor151[address(arg2)][idx]].field_1536)
                                    if idx >= mem[128]:
                                        revert with 0, 50
                                    mem[(32 * idx) + 160] = tokenOfOwnerByIndex[address(arg2)][idx]
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    continue 
                                idx = 0
                                s = 0
                                while idx < mem[128]:
                                    if idx >= mem[128]:
                                        revert with 0, 50
                                    mem[0] = mem[(32 * idx) + 160]
                                    mem[32] = 552
                                    if not uint8(stor552[mem[(32 * idx) + 160]].field_1544):
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = s
                                        continue 
                                    if s == -1:
                                        revert with 0, 17
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    s = s + 1
                                    continue 
                                if s >= 2:
                                    revert with 0, 'Each holder can not hold more than 2 Gladiators'
                                if not arg1:
                                    stor154[arg3] = tokenByIndex.length
                                    tokenByIndex.length++
                                    stor72A1[stor153.length] = arg3
                                    if arg2:
                                        if arg2 == arg1:
                                            approved[arg3] = 0
                                            if not ownerOf[arg3]:
                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                            emit Approval(ownerOf[arg3], 0, arg3);
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            balanceOf[address(arg1)]--
                                            if balanceOf[address(arg2)] > -2:
                                                revert with 0, 17
                                            balanceOf[address(arg2)]++
                                            mem[0] = arg3
                                            mem[32] = 103
                                            ownerOf[arg3] = arg2
                                            emit Transfer(arg1, arg2, arg3);
                                            if ext_code.size(arg2):
                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = msg.sender
                                                mem[mem[64] + 36] = arg1
                                                mem[mem[64] + 68] = arg3
                                                mem[mem[64] + 100] = 128
                                                mem[mem[64] + 132] = mem[96]
                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                if ceil32(mem[96]) <= mem[96]:
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _32542 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_32542] == Mask(32, 224, mem[_32542])
                                                    if Mask(32, 224, mem[_32542]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    mem[mem[64] + mem[96] + 164] = 0
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _32773 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_32773] == Mask(32, 224, mem[_32773])
                                                    if Mask(32, 224, mem[_32773]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            if not arg2:
                                                revert with 0, 'ERC721: balance query for the zero address'
                                            tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                            stor152[arg3] = balanceOf[address(arg2)]
                                            approved[arg3] = 0
                                            if not ownerOf[arg3]:
                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                            emit Approval(ownerOf[arg3], 0, arg3);
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            balanceOf[address(arg1)]--
                                            if balanceOf[address(arg2)] > -2:
                                                revert with 0, 17
                                            balanceOf[address(arg2)]++
                                            mem[0] = arg3
                                            mem[32] = 103
                                            ownerOf[arg3] = arg2
                                            emit Transfer(arg1, arg2, arg3);
                                            if ext_code.size(arg2):
                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = msg.sender
                                                mem[mem[64] + 36] = arg1
                                                mem[mem[64] + 68] = arg3
                                                mem[mem[64] + 100] = 128
                                                mem[mem[64] + 132] = mem[96]
                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                if ceil32(mem[96]) <= mem[96]:
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _32544 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_32544] == Mask(32, 224, mem[_32544])
                                                    if Mask(32, 224, mem[_32544]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    mem[mem[64] + mem[96] + 164] = 0
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _32774 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_32774] == Mask(32, 224, mem[_32774])
                                                    if Mask(32, 224, mem[_32774]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                    else:
                                        if tokenByIndex.length < 1:
                                            revert with 0, 17
                                        if tokenByIndex.length - 1 >= tokenByIndex.length:
                                            revert with 0, 50
                                        if stor154[arg3] >= tokenByIndex.length:
                                            revert with 0, 50
                                        tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                        stor154[stor153[stor153.length]] = stor154[arg3]
                                        stor154[arg3] = 0
                                        if not tokenByIndex.length:
                                            revert with 0, 49
                                        tokenByIndex[tokenByIndex.length] = 0
                                        tokenByIndex.length--
                                        approved[arg3] = 0
                                        if not ownerOf[arg3]:
                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                        emit Approval(ownerOf[arg3], 0, arg3);
                                        if balanceOf[address(arg1)] < 1:
                                            revert with 0, 17
                                        balanceOf[address(arg1)]--
                                        if balanceOf[address(arg2)] > -2:
                                            revert with 0, 17
                                        balanceOf[address(arg2)]++
                                        mem[0] = arg3
                                        mem[32] = 103
                                        ownerOf[arg3] = arg2
                                        emit Transfer(arg1, arg2, arg3);
                                        if ext_code.size(arg2):
                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = msg.sender
                                            mem[mem[64] + 36] = arg1
                                            mem[mem[64] + 68] = arg3
                                            mem[mem[64] + 100] = 128
                                            mem[mem[64] + 132] = mem[96]
                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                            if ceil32(mem[96]) <= mem[96]:
                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    if not return_data.size:
                                                        if not mem[96]:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with memory
                                                          from 128
                                                           len mem[96]
                                                    if not return_data.size:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _32546 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                require mem[_32546] == Mask(32, 224, mem[_32546])
                                                if Mask(32, 224, mem[_32546]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                mem[mem[64] + mem[96] + 164] = 0
                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    if not return_data.size:
                                                        if not mem[96]:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with memory
                                                          from 128
                                                           len mem[96]
                                                    if not return_data.size:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _32775 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                require mem[_32775] == Mask(32, 224, mem[_32775])
                                                if Mask(32, 224, mem[_32775]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                else:
                                    if arg1 == arg2:
                                        if arg2:
                                            if arg2 == arg1:
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32524 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32524] == Mask(32, 224, mem[_32524])
                                                        if Mask(32, 224, mem[_32524]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[64] + mem[96] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32764 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32764] == Mask(32, 224, mem[_32764])
                                                        if Mask(32, 224, mem[_32764]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if not arg2:
                                                    revert with 0, 'ERC721: balance query for the zero address'
                                                tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                stor152[arg3] = balanceOf[address(arg2)]
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32526 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32526] == Mask(32, 224, mem[_32526])
                                                        if Mask(32, 224, mem[_32526]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[64] + mem[96] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32765 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32765] == Mask(32, 224, mem[_32765])
                                                        if Mask(32, 224, mem[_32765]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            if tokenByIndex.length < 1:
                                                revert with 0, 17
                                            if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                revert with 0, 50
                                            if stor154[arg3] >= tokenByIndex.length:
                                                revert with 0, 50
                                            tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                            stor154[stor153[stor153.length]] = stor154[arg3]
                                            stor154[arg3] = 0
                                            if not tokenByIndex.length:
                                                revert with 0, 49
                                            tokenByIndex[tokenByIndex.length] = 0
                                            tokenByIndex.length--
                                            approved[arg3] = 0
                                            if not ownerOf[arg3]:
                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                            emit Approval(ownerOf[arg3], 0, arg3);
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            balanceOf[address(arg1)]--
                                            if balanceOf[address(arg2)] > -2:
                                                revert with 0, 17
                                            balanceOf[address(arg2)]++
                                            mem[0] = arg3
                                            mem[32] = 103
                                            ownerOf[arg3] = arg2
                                            emit Transfer(arg1, arg2, arg3);
                                            if ext_code.size(arg2):
                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = msg.sender
                                                mem[mem[64] + 36] = arg1
                                                mem[mem[64] + 68] = arg3
                                                mem[mem[64] + 100] = 128
                                                mem[mem[64] + 132] = mem[96]
                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                if ceil32(mem[96]) <= mem[96]:
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _32528 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_32528] == Mask(32, 224, mem[_32528])
                                                    if Mask(32, 224, mem[_32528]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    mem[mem[64] + mem[96] + 164] = 0
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _32766 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_32766] == Mask(32, 224, mem[_32766])
                                                    if Mask(32, 224, mem[_32766]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                    else:
                                        if not arg1:
                                            revert with 0, 'ERC721: balance query for the zero address'
                                        if balanceOf[address(arg1)] < 1:
                                            revert with 0, 17
                                        if balanceOf[address(arg1)] - 1 == stor152[arg3]:
                                            stor152[arg3] = 0
                                            tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                                            if arg2:
                                                if arg2 == arg1:
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _32530 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_32530] == Mask(32, 224, mem[_32530])
                                                            if Mask(32, 224, mem[_32530]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[64] + mem[96] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _32767 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_32767] == Mask(32, 224, mem[_32767])
                                                            if Mask(32, 224, mem[_32767]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    if not arg2:
                                                        revert with 0, 'ERC721: balance query for the zero address'
                                                    tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                    stor152[arg3] = balanceOf[address(arg2)]
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _32532 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_32532] == Mask(32, 224, mem[_32532])
                                                            if Mask(32, 224, mem[_32532]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[64] + mem[96] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _32768 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_32768] == Mask(32, 224, mem[_32768])
                                                            if Mask(32, 224, mem[_32768]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if tokenByIndex.length < 1:
                                                    revert with 0, 17
                                                if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                    revert with 0, 50
                                                if stor154[arg3] >= tokenByIndex.length:
                                                    revert with 0, 50
                                                tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                stor154[stor153[stor153.length]] = stor154[arg3]
                                                stor154[arg3] = 0
                                                if not tokenByIndex.length:
                                                    revert with 0, 49
                                                tokenByIndex[tokenByIndex.length] = 0
                                                tokenByIndex.length--
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32534 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32534] == Mask(32, 224, mem[_32534])
                                                        if Mask(32, 224, mem[_32534]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[64] + mem[96] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32769 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32769] == Mask(32, 224, mem[_32769])
                                                        if Mask(32, 224, mem[_32769]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            tokenOfOwnerByIndex[address(arg1)][stor152[arg3]] = tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1]
                                            stor152[stor151[address(arg1)][stor104[address(arg1)] - 1]] = stor152[arg3]
                                            stor152[arg3] = 0
                                            tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                                            if arg2:
                                                if arg2 == arg1:
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _32536 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_32536] == Mask(32, 224, mem[_32536])
                                                            if Mask(32, 224, mem[_32536]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[64] + mem[96] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _32770 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_32770] == Mask(32, 224, mem[_32770])
                                                            if Mask(32, 224, mem[_32770]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    if not arg2:
                                                        revert with 0, 'ERC721: balance query for the zero address'
                                                    tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                    stor152[arg3] = balanceOf[address(arg2)]
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _32538 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_32538] == Mask(32, 224, mem[_32538])
                                                            if Mask(32, 224, mem[_32538]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[64] + mem[96] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _32771 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_32771] == Mask(32, 224, mem[_32771])
                                                            if Mask(32, 224, mem[_32771]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if tokenByIndex.length < 1:
                                                    revert with 0, 17
                                                if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                    revert with 0, 50
                                                if stor154[arg3] >= tokenByIndex.length:
                                                    revert with 0, 50
                                                tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                stor154[stor153[stor153.length]] = stor154[arg3]
                                                stor154[arg3] = 0
                                                if not tokenByIndex.length:
                                                    revert with 0, 49
                                                tokenByIndex[tokenByIndex.length] = 0
                                                tokenByIndex.length--
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32540 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32540] == Mask(32, 224, mem[_32540])
                                                        if Mask(32, 224, mem[_32540]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[64] + mem[96] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32772 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32772] == Mask(32, 224, mem[_32772])
                                                        if Mask(32, 224, mem[_32772]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                            else:
                                mem[160 len 32 * balanceOf[address(arg2)]] = call.data[calldata.size len 32 * balanceOf[address(arg2)]]
                                idx = 0
                                while idx < balanceOf[address(arg2)]:
                                    if not arg2:
                                        revert with 0, 'ERC721: balance query for the zero address'
                                    if idx >= balanceOf[address(arg2)]:
                                        revert with 0, 'ERC721Enumerable: owner index out of bounds'
                                    if tokenOfOwnerByIndex[address(arg2)][idx] <= 0:
                                        revert with 0, 'Troops: Id must be higher than zero'
                                    mem[0] = tokenOfOwnerByIndex[address(arg2)][idx]
                                    mem[32] = 552
                                    _16184 = mem[64]
                                    mem[64] = mem[64] + 256
                                    mem[_16184] = stor552[stor151[address(arg2)][idx]].field_0
                                    if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                            revert with 0, 34
                                        _17763 = mem[64]
                                        mem[64] = mem[64] + ceil32(uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) + 32
                                        mem[_17763] = uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                                revert with 0, 34
                                            if Mask(256, -1, stor552[stor151[address(arg2)][idx]].field_256):
                                                if 31 >= uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5:
                                                    mem[_17763 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                else:
                                                    mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                    mem[_17763 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                    s = _17763 + 32
                                                    t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                    while _17763 + (uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) > s:
                                                        mem[s + 32] = stor1[t].field_0
                                                        s = s + 32
                                                        t = t + 1
                                                        continue 
                                        else:
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                                revert with 0, 34
                                            if stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                if 31 >= stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                    mem[_17763 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                else:
                                                    mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                    mem[_17763 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                    s = _17763 + 32
                                                    t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                    while _17763 + stor552[stor151[address(arg2)][idx]].field_257 % 128 > s:
                                                        mem[s + 32] = stor1[t].field_0
                                                        s = s + 32
                                                        t = t + 1
                                                        continue 
                                        mem[_16184 + 32] = _17763
                                    else:
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                            revert with 0, 34
                                        _17805 = mem[64]
                                        mem[64] = mem[64] + ceil32(stor552[stor151[address(arg2)][idx]].field_257 % 128) + 32
                                        mem[_17805] = stor552[stor151[address(arg2)][idx]].field_257 % 128
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                                revert with 0, 34
                                            if Mask(256, -1, stor552[stor151[address(arg2)][idx]].field_256):
                                                if 31 >= uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5:
                                                    mem[_17805 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                else:
                                                    mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                    mem[_17805 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                    s = _17805 + 32
                                                    t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                    while _17805 + (uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) > s:
                                                        mem[s + 32] = stor1[t].field_0
                                                        s = s + 32
                                                        t = t + 1
                                                        continue 
                                        else:
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                                revert with 0, 34
                                            if stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                if 31 >= stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                    mem[_17805 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                else:
                                                    mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                    mem[_17805 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                    s = _17805 + 32
                                                    t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                    while _17805 + stor552[stor151[address(arg2)][idx]].field_257 % 128 > s:
                                                        mem[s + 32] = stor1[t].field_0
                                                        s = s + 32
                                                        t = t + 1
                                                        continue 
                                        mem[_16184 + 32] = _17805
                                    mem[_16184 + 64] = stor552[stor151[address(arg2)][idx]].field_512
                                    mem[_16184 + 96] = stor552[stor151[address(arg2)][idx]].field_768
                                    mem[_16184 + 128] = stor552[stor151[address(arg2)][idx]].field_1024
                                    mem[_16184 + 160] = stor552[stor151[address(arg2)][idx]].field_1280
                                    mem[_16184 + 192] = bool(uint8(stor552[stor151[address(arg2)][idx]].field_1536))
                                    mem[_16184 + 224] = bool(uint8(stor552[stor151[address(arg2)][idx]].field_1544))
                                    require uint8(stor552[stor151[address(arg2)][idx]].field_1536)
                                    if idx >= mem[128]:
                                        revert with 0, 50
                                    mem[(32 * idx) + 160] = tokenOfOwnerByIndex[address(arg2)][idx]
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    continue 
                                idx = 0
                                s = 0
                                while idx < mem[128]:
                                    if idx >= mem[128]:
                                        revert with 0, 50
                                    mem[0] = mem[(32 * idx) + 160]
                                    mem[32] = 552
                                    if not uint8(stor552[mem[(32 * idx) + 160]].field_1544):
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = s
                                        continue 
                                    if s == -1:
                                        revert with 0, 17
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    s = s + 1
                                    continue 
                                if s >= 2:
                                    revert with 0, 'Each holder can not hold more than 2 Gladiators'
                                if not arg1:
                                    stor154[arg3] = tokenByIndex.length
                                    tokenByIndex.length++
                                    stor72A1[stor153.length] = arg3
                                    if arg2:
                                        if arg2 == arg1:
                                            approved[arg3] = 0
                                            if not ownerOf[arg3]:
                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                            emit Approval(ownerOf[arg3], 0, arg3);
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            balanceOf[address(arg1)]--
                                            if balanceOf[address(arg2)] > -2:
                                                revert with 0, 17
                                            balanceOf[address(arg2)]++
                                            mem[0] = arg3
                                            mem[32] = 103
                                            ownerOf[arg3] = arg2
                                            emit Transfer(arg1, arg2, arg3);
                                            if ext_code.size(arg2):
                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = msg.sender
                                                mem[mem[64] + 36] = arg1
                                                mem[mem[64] + 68] = arg3
                                                mem[mem[64] + 100] = 128
                                                mem[mem[64] + 132] = mem[96]
                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                if ceil32(mem[96]) <= mem[96]:
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _32566 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_32566] == Mask(32, 224, mem[_32566])
                                                    if Mask(32, 224, mem[_32566]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    mem[mem[64] + mem[96] + 164] = 0
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _32785 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_32785] == Mask(32, 224, mem[_32785])
                                                    if Mask(32, 224, mem[_32785]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            if not arg2:
                                                revert with 0, 'ERC721: balance query for the zero address'
                                            tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                            stor152[arg3] = balanceOf[address(arg2)]
                                            approved[arg3] = 0
                                            if not ownerOf[arg3]:
                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                            emit Approval(ownerOf[arg3], 0, arg3);
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            balanceOf[address(arg1)]--
                                            if balanceOf[address(arg2)] > -2:
                                                revert with 0, 17
                                            balanceOf[address(arg2)]++
                                            mem[0] = arg3
                                            mem[32] = 103
                                            ownerOf[arg3] = arg2
                                            emit Transfer(arg1, arg2, arg3);
                                            if ext_code.size(arg2):
                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = msg.sender
                                                mem[mem[64] + 36] = arg1
                                                mem[mem[64] + 68] = arg3
                                                mem[mem[64] + 100] = 128
                                                mem[mem[64] + 132] = mem[96]
                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                if ceil32(mem[96]) <= mem[96]:
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _32568 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_32568] == Mask(32, 224, mem[_32568])
                                                    if Mask(32, 224, mem[_32568]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    mem[mem[64] + mem[96] + 164] = 0
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _32786 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_32786] == Mask(32, 224, mem[_32786])
                                                    if Mask(32, 224, mem[_32786]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                    else:
                                        if tokenByIndex.length < 1:
                                            revert with 0, 17
                                        if tokenByIndex.length - 1 >= tokenByIndex.length:
                                            revert with 0, 50
                                        if stor154[arg3] >= tokenByIndex.length:
                                            revert with 0, 50
                                        tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                        stor154[stor153[stor153.length]] = stor154[arg3]
                                        stor154[arg3] = 0
                                        if not tokenByIndex.length:
                                            revert with 0, 49
                                        tokenByIndex[tokenByIndex.length] = 0
                                        tokenByIndex.length--
                                        approved[arg3] = 0
                                        if not ownerOf[arg3]:
                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                        emit Approval(ownerOf[arg3], 0, arg3);
                                        if balanceOf[address(arg1)] < 1:
                                            revert with 0, 17
                                        balanceOf[address(arg1)]--
                                        if balanceOf[address(arg2)] > -2:
                                            revert with 0, 17
                                        balanceOf[address(arg2)]++
                                        mem[0] = arg3
                                        mem[32] = 103
                                        ownerOf[arg3] = arg2
                                        emit Transfer(arg1, arg2, arg3);
                                        if ext_code.size(arg2):
                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = msg.sender
                                            mem[mem[64] + 36] = arg1
                                            mem[mem[64] + 68] = arg3
                                            mem[mem[64] + 100] = 128
                                            mem[mem[64] + 132] = mem[96]
                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                            if ceil32(mem[96]) <= mem[96]:
                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    if not return_data.size:
                                                        if not mem[96]:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with memory
                                                          from 128
                                                           len mem[96]
                                                    if not return_data.size:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _32570 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                require mem[_32570] == Mask(32, 224, mem[_32570])
                                                if Mask(32, 224, mem[_32570]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                mem[mem[64] + mem[96] + 164] = 0
                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    if not return_data.size:
                                                        if not mem[96]:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with memory
                                                          from 128
                                                           len mem[96]
                                                    if not return_data.size:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _32787 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                require mem[_32787] == Mask(32, 224, mem[_32787])
                                                if Mask(32, 224, mem[_32787]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                else:
                                    if arg1 == arg2:
                                        if arg2:
                                            if arg2 == arg1:
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32548 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32548] == Mask(32, 224, mem[_32548])
                                                        if Mask(32, 224, mem[_32548]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[64] + mem[96] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32776 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32776] == Mask(32, 224, mem[_32776])
                                                        if Mask(32, 224, mem[_32776]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if not arg2:
                                                    revert with 0, 'ERC721: balance query for the zero address'
                                                tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                stor152[arg3] = balanceOf[address(arg2)]
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32550 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32550] == Mask(32, 224, mem[_32550])
                                                        if Mask(32, 224, mem[_32550]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[64] + mem[96] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32777 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32777] == Mask(32, 224, mem[_32777])
                                                        if Mask(32, 224, mem[_32777]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            if tokenByIndex.length < 1:
                                                revert with 0, 17
                                            if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                revert with 0, 50
                                            if stor154[arg3] >= tokenByIndex.length:
                                                revert with 0, 50
                                            tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                            stor154[stor153[stor153.length]] = stor154[arg3]
                                            stor154[arg3] = 0
                                            if not tokenByIndex.length:
                                                revert with 0, 49
                                            tokenByIndex[tokenByIndex.length] = 0
                                            tokenByIndex.length--
                                            approved[arg3] = 0
                                            if not ownerOf[arg3]:
                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                            emit Approval(ownerOf[arg3], 0, arg3);
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            balanceOf[address(arg1)]--
                                            if balanceOf[address(arg2)] > -2:
                                                revert with 0, 17
                                            balanceOf[address(arg2)]++
                                            mem[0] = arg3
                                            mem[32] = 103
                                            ownerOf[arg3] = arg2
                                            emit Transfer(arg1, arg2, arg3);
                                            if ext_code.size(arg2):
                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = msg.sender
                                                mem[mem[64] + 36] = arg1
                                                mem[mem[64] + 68] = arg3
                                                mem[mem[64] + 100] = 128
                                                mem[mem[64] + 132] = mem[96]
                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                if ceil32(mem[96]) <= mem[96]:
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _32552 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_32552] == Mask(32, 224, mem[_32552])
                                                    if Mask(32, 224, mem[_32552]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    mem[mem[64] + mem[96] + 164] = 0
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _32778 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_32778] == Mask(32, 224, mem[_32778])
                                                    if Mask(32, 224, mem[_32778]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                    else:
                                        if not arg1:
                                            revert with 0, 'ERC721: balance query for the zero address'
                                        if balanceOf[address(arg1)] < 1:
                                            revert with 0, 17
                                        if balanceOf[address(arg1)] - 1 == stor152[arg3]:
                                            stor152[arg3] = 0
                                            tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                                            if arg2:
                                                if arg2 == arg1:
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _32554 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_32554] == Mask(32, 224, mem[_32554])
                                                            if Mask(32, 224, mem[_32554]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[64] + mem[96] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _32779 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_32779] == Mask(32, 224, mem[_32779])
                                                            if Mask(32, 224, mem[_32779]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    if not arg2:
                                                        revert with 0, 'ERC721: balance query for the zero address'
                                                    tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                    stor152[arg3] = balanceOf[address(arg2)]
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _32556 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_32556] == Mask(32, 224, mem[_32556])
                                                            if Mask(32, 224, mem[_32556]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[64] + mem[96] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _32780 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_32780] == Mask(32, 224, mem[_32780])
                                                            if Mask(32, 224, mem[_32780]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if tokenByIndex.length < 1:
                                                    revert with 0, 17
                                                if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                    revert with 0, 50
                                                if stor154[arg3] >= tokenByIndex.length:
                                                    revert with 0, 50
                                                tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                stor154[stor153[stor153.length]] = stor154[arg3]
                                                stor154[arg3] = 0
                                                if not tokenByIndex.length:
                                                    revert with 0, 49
                                                tokenByIndex[tokenByIndex.length] = 0
                                                tokenByIndex.length--
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32558 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32558] == Mask(32, 224, mem[_32558])
                                                        if Mask(32, 224, mem[_32558]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[64] + mem[96] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32781 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32781] == Mask(32, 224, mem[_32781])
                                                        if Mask(32, 224, mem[_32781]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            tokenOfOwnerByIndex[address(arg1)][stor152[arg3]] = tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1]
                                            stor152[stor151[address(arg1)][stor104[address(arg1)] - 1]] = stor152[arg3]
                                            stor152[arg3] = 0
                                            tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                                            if arg2:
                                                if arg2 == arg1:
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _32560 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_32560] == Mask(32, 224, mem[_32560])
                                                            if Mask(32, 224, mem[_32560]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[64] + mem[96] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _32782 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_32782] == Mask(32, 224, mem[_32782])
                                                            if Mask(32, 224, mem[_32782]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    if not arg2:
                                                        revert with 0, 'ERC721: balance query for the zero address'
                                                    tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                    stor152[arg3] = balanceOf[address(arg2)]
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _32562 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_32562] == Mask(32, 224, mem[_32562])
                                                            if Mask(32, 224, mem[_32562]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[64] + mem[96] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _32783 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_32783] == Mask(32, 224, mem[_32783])
                                                            if Mask(32, 224, mem[_32783]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if tokenByIndex.length < 1:
                                                    revert with 0, 17
                                                if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                    revert with 0, 50
                                                if stor154[arg3] >= tokenByIndex.length:
                                                    revert with 0, 50
                                                tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                stor154[stor153[stor153.length]] = stor154[arg3]
                                                stor154[arg3] = 0
                                                if not tokenByIndex.length:
                                                    revert with 0, 49
                                                tokenByIndex[tokenByIndex.length] = 0
                                                tokenByIndex.length--
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32564 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32564] == Mask(32, 224, mem[_32564])
                                                        if Mask(32, 224, mem[_32564]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[64] + mem[96] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32784 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32784] == Mask(32, 224, mem[_32784])
                                                        if Mask(32, 224, mem[_32784]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                        else:
                            mem[132] = arg2
                            staticcall liquidityPoolManagerImplementationAddress.0xb278110f with:
                                    gas gas_remaining wei
                                   args arg2
                            mem[128] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            if ext_call.return_data[0]:
                                if not arg1:
                                    stor154[arg3] = tokenByIndex.length
                                    tokenByIndex.length++
                                    stor72A1[stor153.length] = arg3
                                else:
                                    if arg1 != arg2:
                                        if not arg1:
                                            revert with 0, 'ERC721: balance query for the zero address'
                                        if balanceOf[address(arg1)] < 1:
                                            revert with 0, 17
                                        if balanceOf[address(arg1)] - 1 != stor152[arg3]:
                                            tokenOfOwnerByIndex[address(arg1)][stor152[arg3]] = tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1]
                                            stor152[stor151[address(arg1)][stor104[address(arg1)] - 1]] = stor152[arg3]
                                        stor152[arg3] = 0
                                        tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                                if arg2:
                                    if arg2 != arg1:
                                        if not arg2:
                                            revert with 0, 'ERC721: balance query for the zero address'
                                        tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                        stor152[arg3] = balanceOf[address(arg2)]
                                else:
                                    if tokenByIndex.length < 1:
                                        revert with 0, 17
                                    if tokenByIndex.length - 1 >= tokenByIndex.length:
                                        revert with 0, 50
                                    if stor154[arg3] >= tokenByIndex.length:
                                        revert with 0, 50
                                    tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                    stor154[stor153[stor153.length]] = stor154[arg3]
                                    stor154[arg3] = 0
                                    if not tokenByIndex.length:
                                        revert with 0, 49
                                    tokenByIndex[tokenByIndex.length] = 0
                                    tokenByIndex.length--
                                approved[arg3] = 0
                                if not ownerOf[arg3]:
                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                emit Approval(ownerOf[arg3], 0, arg3);
                                if balanceOf[address(arg1)] < 1:
                                    revert with 0, 17
                                balanceOf[address(arg1)]--
                                if balanceOf[address(arg2)] > -2:
                                    revert with 0, 17
                                balanceOf[address(arg2)]++
                                ownerOf[arg3] = arg2
                                emit Transfer(arg1, arg2, arg3);
                                if ext_code.size(arg2):
                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args msg.sender, address(arg1), arg3, 128, 0
                                    if not ext_call.success:
                                        if not return_data.size:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        if not return_data.size:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                    if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                            else:
                                if not arg2:
                                    revert with 0, 'ERC721: balance query for the zero address'
                                if balanceOf[address(arg2)] > test266151307():
                                    revert with 0, 65
                                mem[ceil32(return_data.size) + 128] = balanceOf[address(arg2)]
                                mem[64] = ceil32(return_data.size) + (32 * balanceOf[address(arg2)]) + 160
                                if not balanceOf[address(arg2)]:
                                    idx = 0
                                    while idx < balanceOf[address(arg2)]:
                                        if not arg2:
                                            revert with 0, 'ERC721: balance query for the zero address'
                                        if idx >= balanceOf[address(arg2)]:
                                            revert with 0, 'ERC721Enumerable: owner index out of bounds'
                                        if tokenOfOwnerByIndex[address(arg2)][idx] <= 0:
                                            revert with 0, 'Troops: Id must be higher than zero'
                                        mem[0] = tokenOfOwnerByIndex[address(arg2)][idx]
                                        mem[32] = 552
                                        _16259 = mem[64]
                                        mem[64] = mem[64] + 256
                                        mem[_16259] = stor552[stor151[address(arg2)][idx]].field_0
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                                revert with 0, 34
                                            _17765 = mem[64]
                                            mem[64] = mem[64] + ceil32(uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) + 32
                                            mem[_17765] = uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                                if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                                    revert with 0, 34
                                                if Mask(256, -1, stor552[stor151[address(arg2)][idx]].field_256):
                                                    if 31 >= uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5:
                                                        mem[_17765 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                    else:
                                                        mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                        mem[_17765 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                        s = _17765 + 32
                                                        t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                        while _17765 + (uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) > s:
                                                            mem[s + 32] = stor1[t].field_0
                                                            s = s + 32
                                                            t = t + 1
                                                            continue 
                                            else:
                                                if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                                    revert with 0, 34
                                                if stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                    if 31 >= stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                        mem[_17765 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                    else:
                                                        mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                        mem[_17765 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                        s = _17765 + 32
                                                        t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                        while _17765 + stor552[stor151[address(arg2)][idx]].field_257 % 128 > s:
                                                            mem[s + 32] = stor1[t].field_0
                                                            s = s + 32
                                                            t = t + 1
                                                            continue 
                                            mem[_16259 + 32] = _17765
                                        else:
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                                revert with 0, 34
                                            _17810 = mem[64]
                                            mem[64] = mem[64] + ceil32(stor552[stor151[address(arg2)][idx]].field_257 % 128) + 32
                                            mem[_17810] = stor552[stor151[address(arg2)][idx]].field_257 % 128
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                                if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                                    revert with 0, 34
                                                if Mask(256, -1, stor552[stor151[address(arg2)][idx]].field_256):
                                                    if 31 >= uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5:
                                                        mem[_17810 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                    else:
                                                        mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                        mem[_17810 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                        s = _17810 + 32
                                                        t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                        while _17810 + (uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) > s:
                                                            mem[s + 32] = stor1[t].field_0
                                                            s = s + 32
                                                            t = t + 1
                                                            continue 
                                            else:
                                                if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                                    revert with 0, 34
                                                if stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                    if 31 >= stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                        mem[_17810 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                    else:
                                                        mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                        mem[_17810 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                        s = _17810 + 32
                                                        t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                        while _17810 + stor552[stor151[address(arg2)][idx]].field_257 % 128 > s:
                                                            mem[s + 32] = stor1[t].field_0
                                                            s = s + 32
                                                            t = t + 1
                                                            continue 
                                            mem[_16259 + 32] = _17810
                                        mem[_16259 + 64] = stor552[stor151[address(arg2)][idx]].field_512
                                        mem[_16259 + 96] = stor552[stor151[address(arg2)][idx]].field_768
                                        mem[_16259 + 128] = stor552[stor151[address(arg2)][idx]].field_1024
                                        mem[_16259 + 160] = stor552[stor151[address(arg2)][idx]].field_1280
                                        mem[_16259 + 192] = bool(uint8(stor552[stor151[address(arg2)][idx]].field_1536))
                                        mem[_16259 + 224] = bool(uint8(stor552[stor151[address(arg2)][idx]].field_1544))
                                        require uint8(stor552[stor151[address(arg2)][idx]].field_1536)
                                        if idx >= mem[ceil32(return_data.size) + 128]:
                                            revert with 0, 50
                                        mem[(32 * idx) + ceil32(return_data.size) + 160] = tokenOfOwnerByIndex[address(arg2)][idx]
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        continue 
                                    idx = 0
                                    s = 0
                                    while idx < mem[ceil32(return_data.size) + 128]:
                                        if idx >= mem[ceil32(return_data.size) + 128]:
                                            revert with 0, 50
                                        mem[0] = mem[(32 * idx) + ceil32(return_data.size) + 160]
                                        mem[32] = 552
                                        if not uint8(stor552[mem[(32 * idx) + ceil32(return_data.size) + 160]].field_1544):
                                            if idx == -1:
                                                revert with 0, 17
                                            idx = idx + 1
                                            s = s
                                            continue 
                                        if s == -1:
                                            revert with 0, 17
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = s + 1
                                        continue 
                                    if s >= 2:
                                        revert with 0, 'Each holder can not hold more than 2 Gladiators'
                                    if not arg1:
                                        stor154[arg3] = tokenByIndex.length
                                        tokenByIndex.length++
                                        stor72A1[stor153.length] = arg3
                                        if arg2:
                                            if arg2 == arg1:
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32590 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32590] == Mask(32, 224, mem[_32590])
                                                        if Mask(32, 224, mem[_32590]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[64] + mem[96] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32797 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32797] == Mask(32, 224, mem[_32797])
                                                        if Mask(32, 224, mem[_32797]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if not arg2:
                                                    revert with 0, 'ERC721: balance query for the zero address'
                                                tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                stor152[arg3] = balanceOf[address(arg2)]
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32592 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32592] == Mask(32, 224, mem[_32592])
                                                        if Mask(32, 224, mem[_32592]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[64] + mem[96] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32798 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32798] == Mask(32, 224, mem[_32798])
                                                        if Mask(32, 224, mem[_32798]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            if tokenByIndex.length < 1:
                                                revert with 0, 17
                                            if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                revert with 0, 50
                                            if stor154[arg3] >= tokenByIndex.length:
                                                revert with 0, 50
                                            tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                            stor154[stor153[stor153.length]] = stor154[arg3]
                                            stor154[arg3] = 0
                                            if not tokenByIndex.length:
                                                revert with 0, 49
                                            tokenByIndex[tokenByIndex.length] = 0
                                            tokenByIndex.length--
                                            approved[arg3] = 0
                                            if not ownerOf[arg3]:
                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                            emit Approval(ownerOf[arg3], 0, arg3);
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            balanceOf[address(arg1)]--
                                            if balanceOf[address(arg2)] > -2:
                                                revert with 0, 17
                                            balanceOf[address(arg2)]++
                                            mem[0] = arg3
                                            mem[32] = 103
                                            ownerOf[arg3] = arg2
                                            emit Transfer(arg1, arg2, arg3);
                                            if ext_code.size(arg2):
                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = msg.sender
                                                mem[mem[64] + 36] = arg1
                                                mem[mem[64] + 68] = arg3
                                                mem[mem[64] + 100] = 128
                                                mem[mem[64] + 132] = mem[96]
                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                if ceil32(mem[96]) <= mem[96]:
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _32594 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_32594] == Mask(32, 224, mem[_32594])
                                                    if Mask(32, 224, mem[_32594]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    mem[mem[64] + mem[96] + 164] = 0
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _32799 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_32799] == Mask(32, 224, mem[_32799])
                                                    if Mask(32, 224, mem[_32799]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                    else:
                                        if arg1 == arg2:
                                            if arg2:
                                                if arg2 == arg1:
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _32572 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_32572] == Mask(32, 224, mem[_32572])
                                                            if Mask(32, 224, mem[_32572]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[64] + mem[96] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _32788 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_32788] == Mask(32, 224, mem[_32788])
                                                            if Mask(32, 224, mem[_32788]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    if not arg2:
                                                        revert with 0, 'ERC721: balance query for the zero address'
                                                    tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                    stor152[arg3] = balanceOf[address(arg2)]
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _32574 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_32574] == Mask(32, 224, mem[_32574])
                                                            if Mask(32, 224, mem[_32574]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[64] + mem[96] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _32789 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_32789] == Mask(32, 224, mem[_32789])
                                                            if Mask(32, 224, mem[_32789]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if tokenByIndex.length < 1:
                                                    revert with 0, 17
                                                if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                    revert with 0, 50
                                                if stor154[arg3] >= tokenByIndex.length:
                                                    revert with 0, 50
                                                tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                stor154[stor153[stor153.length]] = stor154[arg3]
                                                stor154[arg3] = 0
                                                if not tokenByIndex.length:
                                                    revert with 0, 49
                                                tokenByIndex[tokenByIndex.length] = 0
                                                tokenByIndex.length--
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32576 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32576] == Mask(32, 224, mem[_32576])
                                                        if Mask(32, 224, mem[_32576]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[64] + mem[96] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32790 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32790] == Mask(32, 224, mem[_32790])
                                                        if Mask(32, 224, mem[_32790]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            if not arg1:
                                                revert with 0, 'ERC721: balance query for the zero address'
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            if balanceOf[address(arg1)] - 1 == stor152[arg3]:
                                                stor152[arg3] = 0
                                                tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                                                if arg2:
                                                    if arg2 == arg1:
                                                        approved[arg3] = 0
                                                        if not ownerOf[arg3]:
                                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                                        emit Approval(ownerOf[arg3], 0, arg3);
                                                        if balanceOf[address(arg1)] < 1:
                                                            revert with 0, 17
                                                        balanceOf[address(arg1)]--
                                                        if balanceOf[address(arg2)] > -2:
                                                            revert with 0, 17
                                                        balanceOf[address(arg2)]++
                                                        mem[0] = arg3
                                                        mem[32] = 103
                                                        ownerOf[arg3] = arg2
                                                        emit Transfer(arg1, arg2, arg3);
                                                        if ext_code.size(arg2):
                                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = msg.sender
                                                            mem[mem[64] + 36] = arg1
                                                            mem[mem[64] + 68] = arg3
                                                            mem[mem[64] + 100] = 128
                                                            mem[mem[64] + 132] = mem[96]
                                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                            if ceil32(mem[96]) <= mem[96]:
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _32578 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_32578] == Mask(32, 224, mem[_32578])
                                                                if Mask(32, 224, mem[_32578]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            else:
                                                                mem[mem[64] + mem[96] + 164] = 0
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _32791 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_32791] == Mask(32, 224, mem[_32791])
                                                                if Mask(32, 224, mem[_32791]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        if not arg2:
                                                            revert with 0, 'ERC721: balance query for the zero address'
                                                        tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                        stor152[arg3] = balanceOf[address(arg2)]
                                                        approved[arg3] = 0
                                                        if not ownerOf[arg3]:
                                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                                        emit Approval(ownerOf[arg3], 0, arg3);
                                                        if balanceOf[address(arg1)] < 1:
                                                            revert with 0, 17
                                                        balanceOf[address(arg1)]--
                                                        if balanceOf[address(arg2)] > -2:
                                                            revert with 0, 17
                                                        balanceOf[address(arg2)]++
                                                        mem[0] = arg3
                                                        mem[32] = 103
                                                        ownerOf[arg3] = arg2
                                                        emit Transfer(arg1, arg2, arg3);
                                                        if ext_code.size(arg2):
                                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = msg.sender
                                                            mem[mem[64] + 36] = arg1
                                                            mem[mem[64] + 68] = arg3
                                                            mem[mem[64] + 100] = 128
                                                            mem[mem[64] + 132] = mem[96]
                                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                            if ceil32(mem[96]) <= mem[96]:
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _32580 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_32580] == Mask(32, 224, mem[_32580])
                                                                if Mask(32, 224, mem[_32580]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            else:
                                                                mem[mem[64] + mem[96] + 164] = 0
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _32792 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_32792] == Mask(32, 224, mem[_32792])
                                                                if Mask(32, 224, mem[_32792]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    if tokenByIndex.length < 1:
                                                        revert with 0, 17
                                                    if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                        revert with 0, 50
                                                    if stor154[arg3] >= tokenByIndex.length:
                                                        revert with 0, 50
                                                    tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                    stor154[stor153[stor153.length]] = stor154[arg3]
                                                    stor154[arg3] = 0
                                                    if not tokenByIndex.length:
                                                        revert with 0, 49
                                                    tokenByIndex[tokenByIndex.length] = 0
                                                    tokenByIndex.length--
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _32582 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_32582] == Mask(32, 224, mem[_32582])
                                                            if Mask(32, 224, mem[_32582]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[64] + mem[96] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _32793 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_32793] == Mask(32, 224, mem[_32793])
                                                            if Mask(32, 224, mem[_32793]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                tokenOfOwnerByIndex[address(arg1)][stor152[arg3]] = tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1]
                                                stor152[stor151[address(arg1)][stor104[address(arg1)] - 1]] = stor152[arg3]
                                                stor152[arg3] = 0
                                                tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                                                if arg2:
                                                    if arg2 == arg1:
                                                        approved[arg3] = 0
                                                        if not ownerOf[arg3]:
                                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                                        emit Approval(ownerOf[arg3], 0, arg3);
                                                        if balanceOf[address(arg1)] < 1:
                                                            revert with 0, 17
                                                        balanceOf[address(arg1)]--
                                                        if balanceOf[address(arg2)] > -2:
                                                            revert with 0, 17
                                                        balanceOf[address(arg2)]++
                                                        mem[0] = arg3
                                                        mem[32] = 103
                                                        ownerOf[arg3] = arg2
                                                        emit Transfer(arg1, arg2, arg3);
                                                        if ext_code.size(arg2):
                                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = msg.sender
                                                            mem[mem[64] + 36] = arg1
                                                            mem[mem[64] + 68] = arg3
                                                            mem[mem[64] + 100] = 128
                                                            mem[mem[64] + 132] = mem[96]
                                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                            if ceil32(mem[96]) <= mem[96]:
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _32584 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_32584] == Mask(32, 224, mem[_32584])
                                                                if Mask(32, 224, mem[_32584]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            else:
                                                                mem[mem[64] + mem[96] + 164] = 0
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _32794 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_32794] == Mask(32, 224, mem[_32794])
                                                                if Mask(32, 224, mem[_32794]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        if not arg2:
                                                            revert with 0, 'ERC721: balance query for the zero address'
                                                        tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                        stor152[arg3] = balanceOf[address(arg2)]
                                                        approved[arg3] = 0
                                                        if not ownerOf[arg3]:
                                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                                        emit Approval(ownerOf[arg3], 0, arg3);
                                                        if balanceOf[address(arg1)] < 1:
                                                            revert with 0, 17
                                                        balanceOf[address(arg1)]--
                                                        if balanceOf[address(arg2)] > -2:
                                                            revert with 0, 17
                                                        balanceOf[address(arg2)]++
                                                        mem[0] = arg3
                                                        mem[32] = 103
                                                        ownerOf[arg3] = arg2
                                                        emit Transfer(arg1, arg2, arg3);
                                                        if ext_code.size(arg2):
                                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = msg.sender
                                                            mem[mem[64] + 36] = arg1
                                                            mem[mem[64] + 68] = arg3
                                                            mem[mem[64] + 100] = 128
                                                            mem[mem[64] + 132] = mem[96]
                                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                            if ceil32(mem[96]) <= mem[96]:
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _32586 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_32586] == Mask(32, 224, mem[_32586])
                                                                if Mask(32, 224, mem[_32586]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            else:
                                                                mem[mem[64] + mem[96] + 164] = 0
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _32795 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_32795] == Mask(32, 224, mem[_32795])
                                                                if Mask(32, 224, mem[_32795]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    if tokenByIndex.length < 1:
                                                        revert with 0, 17
                                                    if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                        revert with 0, 50
                                                    if stor154[arg3] >= tokenByIndex.length:
                                                        revert with 0, 50
                                                    tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                    stor154[stor153[stor153.length]] = stor154[arg3]
                                                    stor154[arg3] = 0
                                                    if not tokenByIndex.length:
                                                        revert with 0, 49
                                                    tokenByIndex[tokenByIndex.length] = 0
                                                    tokenByIndex.length--
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _32588 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_32588] == Mask(32, 224, mem[_32588])
                                                            if Mask(32, 224, mem[_32588]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[64] + mem[96] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _32796 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_32796] == Mask(32, 224, mem[_32796])
                                                            if Mask(32, 224, mem[_32796]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                else:
                                    mem[ceil32(return_data.size) + 160 len 32 * balanceOf[address(arg2)]] = call.data[calldata.size len 32 * balanceOf[address(arg2)]]
                                    idx = 0
                                    while idx < balanceOf[address(arg2)]:
                                        if not arg2:
                                            revert with 0, 'ERC721: balance query for the zero address'
                                        if idx >= balanceOf[address(arg2)]:
                                            revert with 0, 'ERC721Enumerable: owner index out of bounds'
                                        if tokenOfOwnerByIndex[address(arg2)][idx] <= 0:
                                            revert with 0, 'Troops: Id must be higher than zero'
                                        mem[0] = tokenOfOwnerByIndex[address(arg2)][idx]
                                        mem[32] = 552
                                        _16262 = mem[64]
                                        mem[64] = mem[64] + 256
                                        mem[_16262] = stor552[stor151[address(arg2)][idx]].field_0
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                                revert with 0, 34
                                            _17767 = mem[64]
                                            mem[64] = mem[64] + ceil32(uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) + 32
                                            mem[_17767] = uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                                if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                                    revert with 0, 34
                                                if Mask(256, -1, stor552[stor151[address(arg2)][idx]].field_256):
                                                    if 31 >= uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5:
                                                        mem[_17767 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                    else:
                                                        mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                        mem[_17767 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                        s = _17767 + 32
                                                        t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                        while _17767 + (uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) > s:
                                                            mem[s + 32] = stor1[t].field_0
                                                            s = s + 32
                                                            t = t + 1
                                                            continue 
                                            else:
                                                if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                                    revert with 0, 34
                                                if stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                    if 31 >= stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                        mem[_17767 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                    else:
                                                        mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                        mem[_17767 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                        s = _17767 + 32
                                                        t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                        while _17767 + stor552[stor151[address(arg2)][idx]].field_257 % 128 > s:
                                                            mem[s + 32] = stor1[t].field_0
                                                            s = s + 32
                                                            t = t + 1
                                                            continue 
                                            mem[_16262 + 32] = _17767
                                        else:
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                                revert with 0, 34
                                            _17815 = mem[64]
                                            mem[64] = mem[64] + ceil32(stor552[stor151[address(arg2)][idx]].field_257 % 128) + 32
                                            mem[_17815] = stor552[stor151[address(arg2)][idx]].field_257 % 128
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                                if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                                    revert with 0, 34
                                                if Mask(256, -1, stor552[stor151[address(arg2)][idx]].field_256):
                                                    if 31 >= uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5:
                                                        mem[_17815 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                    else:
                                                        mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                        mem[_17815 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                        s = _17815 + 32
                                                        t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                        while _17815 + (uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) > s:
                                                            mem[s + 32] = stor1[t].field_0
                                                            s = s + 32
                                                            t = t + 1
                                                            continue 
                                            else:
                                                if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                                    revert with 0, 34
                                                if stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                    if 31 >= stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                        mem[_17815 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                    else:
                                                        mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                        mem[_17815 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                        s = _17815 + 32
                                                        t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                        while _17815 + stor552[stor151[address(arg2)][idx]].field_257 % 128 > s:
                                                            mem[s + 32] = stor1[t].field_0
                                                            s = s + 32
                                                            t = t + 1
                                                            continue 
                                            mem[_16262 + 32] = _17815
                                        mem[_16262 + 64] = stor552[stor151[address(arg2)][idx]].field_512
                                        mem[_16262 + 96] = stor552[stor151[address(arg2)][idx]].field_768
                                        mem[_16262 + 128] = stor552[stor151[address(arg2)][idx]].field_1024
                                        mem[_16262 + 160] = stor552[stor151[address(arg2)][idx]].field_1280
                                        mem[_16262 + 192] = bool(uint8(stor552[stor151[address(arg2)][idx]].field_1536))
                                        mem[_16262 + 224] = bool(uint8(stor552[stor151[address(arg2)][idx]].field_1544))
                                        require uint8(stor552[stor151[address(arg2)][idx]].field_1536)
                                        if idx >= mem[ceil32(return_data.size) + 128]:
                                            revert with 0, 50
                                        mem[(32 * idx) + ceil32(return_data.size) + 160] = tokenOfOwnerByIndex[address(arg2)][idx]
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        continue 
                                    idx = 0
                                    s = 0
                                    while idx < mem[ceil32(return_data.size) + 128]:
                                        if idx >= mem[ceil32(return_data.size) + 128]:
                                            revert with 0, 50
                                        mem[0] = mem[(32 * idx) + ceil32(return_data.size) + 160]
                                        mem[32] = 552
                                        if not uint8(stor552[mem[(32 * idx) + ceil32(return_data.size) + 160]].field_1544):
                                            if idx == -1:
                                                revert with 0, 17
                                            idx = idx + 1
                                            s = s
                                            continue 
                                        if s == -1:
                                            revert with 0, 17
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = s + 1
                                        continue 
                                    if s >= 2:
                                        revert with 0, 'Each holder can not hold more than 2 Gladiators'
                                    if not arg1:
                                        stor154[arg3] = tokenByIndex.length
                                        tokenByIndex.length++
                                        stor72A1[stor153.length] = arg3
                                        if arg2:
                                            if arg2 == arg1:
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32614 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32614] == Mask(32, 224, mem[_32614])
                                                        if Mask(32, 224, mem[_32614]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[64] + mem[96] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32809 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32809] == Mask(32, 224, mem[_32809])
                                                        if Mask(32, 224, mem[_32809]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if not arg2:
                                                    revert with 0, 'ERC721: balance query for the zero address'
                                                tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                stor152[arg3] = balanceOf[address(arg2)]
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32616 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32616] == Mask(32, 224, mem[_32616])
                                                        if Mask(32, 224, mem[_32616]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[64] + mem[96] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32810 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32810] == Mask(32, 224, mem[_32810])
                                                        if Mask(32, 224, mem[_32810]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            if tokenByIndex.length < 1:
                                                revert with 0, 17
                                            if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                revert with 0, 50
                                            if stor154[arg3] >= tokenByIndex.length:
                                                revert with 0, 50
                                            tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                            stor154[stor153[stor153.length]] = stor154[arg3]
                                            stor154[arg3] = 0
                                            if not tokenByIndex.length:
                                                revert with 0, 49
                                            tokenByIndex[tokenByIndex.length] = 0
                                            tokenByIndex.length--
                                            approved[arg3] = 0
                                            if not ownerOf[arg3]:
                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                            emit Approval(ownerOf[arg3], 0, arg3);
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            balanceOf[address(arg1)]--
                                            if balanceOf[address(arg2)] > -2:
                                                revert with 0, 17
                                            balanceOf[address(arg2)]++
                                            mem[0] = arg3
                                            mem[32] = 103
                                            ownerOf[arg3] = arg2
                                            emit Transfer(arg1, arg2, arg3);
                                            if ext_code.size(arg2):
                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = msg.sender
                                                mem[mem[64] + 36] = arg1
                                                mem[mem[64] + 68] = arg3
                                                mem[mem[64] + 100] = 128
                                                mem[mem[64] + 132] = mem[96]
                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                if ceil32(mem[96]) <= mem[96]:
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _32618 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_32618] == Mask(32, 224, mem[_32618])
                                                    if Mask(32, 224, mem[_32618]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    mem[mem[64] + mem[96] + 164] = 0
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _32811 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_32811] == Mask(32, 224, mem[_32811])
                                                    if Mask(32, 224, mem[_32811]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                    else:
                                        if arg1 == arg2:
                                            if arg2:
                                                if arg2 == arg1:
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _32596 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_32596] == Mask(32, 224, mem[_32596])
                                                            if Mask(32, 224, mem[_32596]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[64] + mem[96] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _32800 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_32800] == Mask(32, 224, mem[_32800])
                                                            if Mask(32, 224, mem[_32800]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    if not arg2:
                                                        revert with 0, 'ERC721: balance query for the zero address'
                                                    tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                    stor152[arg3] = balanceOf[address(arg2)]
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _32598 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_32598] == Mask(32, 224, mem[_32598])
                                                            if Mask(32, 224, mem[_32598]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[64] + mem[96] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _32801 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_32801] == Mask(32, 224, mem[_32801])
                                                            if Mask(32, 224, mem[_32801]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if tokenByIndex.length < 1:
                                                    revert with 0, 17
                                                if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                    revert with 0, 50
                                                if stor154[arg3] >= tokenByIndex.length:
                                                    revert with 0, 50
                                                tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                stor154[stor153[stor153.length]] = stor154[arg3]
                                                stor154[arg3] = 0
                                                if not tokenByIndex.length:
                                                    revert with 0, 49
                                                tokenByIndex[tokenByIndex.length] = 0
                                                tokenByIndex.length--
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32600 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32600] == Mask(32, 224, mem[_32600])
                                                        if Mask(32, 224, mem[_32600]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[64] + mem[96] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32802 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32802] == Mask(32, 224, mem[_32802])
                                                        if Mask(32, 224, mem[_32802]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            if not arg1:
                                                revert with 0, 'ERC721: balance query for the zero address'
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            if balanceOf[address(arg1)] - 1 == stor152[arg3]:
                                                stor152[arg3] = 0
                                                tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                                                if arg2:
                                                    if arg2 == arg1:
                                                        approved[arg3] = 0
                                                        if not ownerOf[arg3]:
                                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                                        emit Approval(ownerOf[arg3], 0, arg3);
                                                        if balanceOf[address(arg1)] < 1:
                                                            revert with 0, 17
                                                        balanceOf[address(arg1)]--
                                                        if balanceOf[address(arg2)] > -2:
                                                            revert with 0, 17
                                                        balanceOf[address(arg2)]++
                                                        mem[0] = arg3
                                                        mem[32] = 103
                                                        ownerOf[arg3] = arg2
                                                        emit Transfer(arg1, arg2, arg3);
                                                        if ext_code.size(arg2):
                                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = msg.sender
                                                            mem[mem[64] + 36] = arg1
                                                            mem[mem[64] + 68] = arg3
                                                            mem[mem[64] + 100] = 128
                                                            mem[mem[64] + 132] = mem[96]
                                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                            if ceil32(mem[96]) <= mem[96]:
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _32602 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_32602] == Mask(32, 224, mem[_32602])
                                                                if Mask(32, 224, mem[_32602]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            else:
                                                                mem[mem[64] + mem[96] + 164] = 0
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _32803 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_32803] == Mask(32, 224, mem[_32803])
                                                                if Mask(32, 224, mem[_32803]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        if not arg2:
                                                            revert with 0, 'ERC721: balance query for the zero address'
                                                        tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                        stor152[arg3] = balanceOf[address(arg2)]
                                                        approved[arg3] = 0
                                                        if not ownerOf[arg3]:
                                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                                        emit Approval(ownerOf[arg3], 0, arg3);
                                                        if balanceOf[address(arg1)] < 1:
                                                            revert with 0, 17
                                                        balanceOf[address(arg1)]--
                                                        if balanceOf[address(arg2)] > -2:
                                                            revert with 0, 17
                                                        balanceOf[address(arg2)]++
                                                        mem[0] = arg3
                                                        mem[32] = 103
                                                        ownerOf[arg3] = arg2
                                                        emit Transfer(arg1, arg2, arg3);
                                                        if ext_code.size(arg2):
                                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = msg.sender
                                                            mem[mem[64] + 36] = arg1
                                                            mem[mem[64] + 68] = arg3
                                                            mem[mem[64] + 100] = 128
                                                            mem[mem[64] + 132] = mem[96]
                                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                            if ceil32(mem[96]) <= mem[96]:
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _32604 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_32604] == Mask(32, 224, mem[_32604])
                                                                if Mask(32, 224, mem[_32604]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            else:
                                                                mem[mem[64] + mem[96] + 164] = 0
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _32804 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_32804] == Mask(32, 224, mem[_32804])
                                                                if Mask(32, 224, mem[_32804]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    if tokenByIndex.length < 1:
                                                        revert with 0, 17
                                                    if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                        revert with 0, 50
                                                    if stor154[arg3] >= tokenByIndex.length:
                                                        revert with 0, 50
                                                    tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                    stor154[stor153[stor153.length]] = stor154[arg3]
                                                    stor154[arg3] = 0
                                                    if not tokenByIndex.length:
                                                        revert with 0, 49
                                                    tokenByIndex[tokenByIndex.length] = 0
                                                    tokenByIndex.length--
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _32606 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_32606] == Mask(32, 224, mem[_32606])
                                                            if Mask(32, 224, mem[_32606]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[64] + mem[96] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _32805 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_32805] == Mask(32, 224, mem[_32805])
                                                            if Mask(32, 224, mem[_32805]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                tokenOfOwnerByIndex[address(arg1)][stor152[arg3]] = tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1]
                                                stor152[stor151[address(arg1)][stor104[address(arg1)] - 1]] = stor152[arg3]
                                                stor152[arg3] = 0
                                                tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                                                if arg2:
                                                    if arg2 == arg1:
                                                        approved[arg3] = 0
                                                        if not ownerOf[arg3]:
                                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                                        emit Approval(ownerOf[arg3], 0, arg3);
                                                        if balanceOf[address(arg1)] < 1:
                                                            revert with 0, 17
                                                        balanceOf[address(arg1)]--
                                                        if balanceOf[address(arg2)] > -2:
                                                            revert with 0, 17
                                                        balanceOf[address(arg2)]++
                                                        mem[0] = arg3
                                                        mem[32] = 103
                                                        ownerOf[arg3] = arg2
                                                        emit Transfer(arg1, arg2, arg3);
                                                        if ext_code.size(arg2):
                                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = msg.sender
                                                            mem[mem[64] + 36] = arg1
                                                            mem[mem[64] + 68] = arg3
                                                            mem[mem[64] + 100] = 128
                                                            mem[mem[64] + 132] = mem[96]
                                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                            if ceil32(mem[96]) <= mem[96]:
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _32608 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_32608] == Mask(32, 224, mem[_32608])
                                                                if Mask(32, 224, mem[_32608]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            else:
                                                                mem[mem[64] + mem[96] + 164] = 0
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _32806 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_32806] == Mask(32, 224, mem[_32806])
                                                                if Mask(32, 224, mem[_32806]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        if not arg2:
                                                            revert with 0, 'ERC721: balance query for the zero address'
                                                        tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                        stor152[arg3] = balanceOf[address(arg2)]
                                                        approved[arg3] = 0
                                                        if not ownerOf[arg3]:
                                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                                        emit Approval(ownerOf[arg3], 0, arg3);
                                                        if balanceOf[address(arg1)] < 1:
                                                            revert with 0, 17
                                                        balanceOf[address(arg1)]--
                                                        if balanceOf[address(arg2)] > -2:
                                                            revert with 0, 17
                                                        balanceOf[address(arg2)]++
                                                        mem[0] = arg3
                                                        mem[32] = 103
                                                        ownerOf[arg3] = arg2
                                                        emit Transfer(arg1, arg2, arg3);
                                                        if ext_code.size(arg2):
                                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = msg.sender
                                                            mem[mem[64] + 36] = arg1
                                                            mem[mem[64] + 68] = arg3
                                                            mem[mem[64] + 100] = 128
                                                            mem[mem[64] + 132] = mem[96]
                                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                            if ceil32(mem[96]) <= mem[96]:
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _32610 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_32610] == Mask(32, 224, mem[_32610])
                                                                if Mask(32, 224, mem[_32610]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            else:
                                                                mem[mem[64] + mem[96] + 164] = 0
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _32807 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_32807] == Mask(32, 224, mem[_32807])
                                                                if Mask(32, 224, mem[_32807]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    if tokenByIndex.length < 1:
                                                        revert with 0, 17
                                                    if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                        revert with 0, 50
                                                    if stor154[arg3] >= tokenByIndex.length:
                                                        revert with 0, 50
                                                    tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                    stor154[stor153[stor153.length]] = stor154[arg3]
                                                    stor154[arg3] = 0
                                                    if not tokenByIndex.length:
                                                        revert with 0, 49
                                                    tokenByIndex[tokenByIndex.length] = 0
                                                    tokenByIndex.length--
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _32612 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_32612] == Mask(32, 224, mem[_32612])
                                                            if Mask(32, 224, mem[_32612]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[64] + mem[96] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _32808 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_32808] == Mask(32, 224, mem[_32808])
                                                            if Mask(32, 224, mem[_32808]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
        else:
            if not stor106[stor103[arg3]][address(msg.sender)]:
                revert with 0, 'ERC721: transfer caller is not owner nor approved'
            if not ownerOf[arg3]:
                revert with 0, 'ERC721: owner query for nonexistent token'
            if ownerOf[arg3] != arg1:
                revert with 0, 'ERC721: transfer from incorrect owner'
            if not arg2:
                revert with 0, 'ERC721: transfer to the zero address'
            if owner == arg2:
                if not arg1:
                    stor154[arg3] = tokenByIndex.length
                    tokenByIndex.length++
                    stor72A1[stor153.length] = arg3
                else:
                    if arg1 != arg2:
                        if not arg1:
                            revert with 0, 'ERC721: balance query for the zero address'
                        if balanceOf[address(arg1)] < 1:
                            revert with 0, 17
                        if balanceOf[address(arg1)] - 1 != stor152[arg3]:
                            tokenOfOwnerByIndex[address(arg1)][stor152[arg3]] = tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1]
                            stor152[stor151[address(arg1)][stor104[address(arg1)] - 1]] = stor152[arg3]
                        stor152[arg3] = 0
                        tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                if arg2:
                    if arg2 != arg1:
                        if not arg2:
                            revert with 0, 'ERC721: balance query for the zero address'
                        tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                        stor152[arg3] = balanceOf[address(arg2)]
                else:
                    if tokenByIndex.length < 1:
                        revert with 0, 17
                    if tokenByIndex.length - 1 >= tokenByIndex.length:
                        revert with 0, 50
                    if stor154[arg3] >= tokenByIndex.length:
                        revert with 0, 50
                    tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                    stor154[stor153[stor153.length]] = stor154[arg3]
                    stor154[arg3] = 0
                    if not tokenByIndex.length:
                        revert with 0, 49
                    tokenByIndex[tokenByIndex.length] = 0
                    tokenByIndex.length--
                approved[arg3] = 0
                if not ownerOf[arg3]:
                    revert with 0, 'ERC721: owner query for nonexistent token'
                emit Approval(ownerOf[arg3], 0, arg3);
                if balanceOf[address(arg1)] < 1:
                    revert with 0, 17
                balanceOf[address(arg1)]--
                if balanceOf[address(arg2)] > -2:
                    revert with 0, 17
                balanceOf[address(arg2)]++
                ownerOf[arg3] = arg2
                emit Transfer(arg1, arg2, arg3);
                if ext_code.size(arg2):
                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                         gas gas_remaining wei
                        args 0, uint32(msg.sender), address(arg1), arg3, 128, 0
                    if not ext_call.success:
                        if not return_data.size:
                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                        if not return_data.size:
                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                    if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
            else:
                if bool(uint8(stor552[arg3].field_1536)) != 1:
                    if not arg1:
                        stor154[arg3] = tokenByIndex.length
                        tokenByIndex.length++
                        stor72A1[stor153.length] = arg3
                    else:
                        if arg1 != arg2:
                            if not arg1:
                                revert with 0, 'ERC721: balance query for the zero address'
                            if balanceOf[address(arg1)] < 1:
                                revert with 0, 17
                            if balanceOf[address(arg1)] - 1 != stor152[arg3]:
                                tokenOfOwnerByIndex[address(arg1)][stor152[arg3]] = tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1]
                                stor152[stor151[address(arg1)][stor104[address(arg1)] - 1]] = stor152[arg3]
                            stor152[arg3] = 0
                            tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                    if arg2:
                        if arg2 != arg1:
                            if not arg2:
                                revert with 0, 'ERC721: balance query for the zero address'
                            tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                            stor152[arg3] = balanceOf[address(arg2)]
                    else:
                        if tokenByIndex.length < 1:
                            revert with 0, 17
                        if tokenByIndex.length - 1 >= tokenByIndex.length:
                            revert with 0, 50
                        if stor154[arg3] >= tokenByIndex.length:
                            revert with 0, 50
                        tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                        stor154[stor153[stor153.length]] = stor154[arg3]
                        stor154[arg3] = 0
                        if not tokenByIndex.length:
                            revert with 0, 49
                        tokenByIndex[tokenByIndex.length] = 0
                        tokenByIndex.length--
                    approved[arg3] = 0
                    if not ownerOf[arg3]:
                        revert with 0, 'ERC721: owner query for nonexistent token'
                    emit Approval(ownerOf[arg3], 0, arg3);
                    if balanceOf[address(arg1)] < 1:
                        revert with 0, 17
                    balanceOf[address(arg1)]--
                    if balanceOf[address(arg2)] > -2:
                        revert with 0, 17
                    balanceOf[address(arg2)]++
                    ownerOf[arg3] = arg2
                    emit Transfer(arg1, arg2, arg3);
                    if ext_code.size(arg2):
                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                             gas gas_remaining wei
                            args 0, uint32(msg.sender), address(arg1), arg3, 128, 0
                        if not ext_call.success:
                            if not return_data.size:
                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                            if not return_data.size:
                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                        if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                else:
                    if bool(uint8(stor552[arg3].field_1544)) != 1:
                        if not arg1:
                            stor154[arg3] = tokenByIndex.length
                            tokenByIndex.length++
                            stor72A1[stor153.length] = arg3
                        else:
                            if arg1 != arg2:
                                if not arg1:
                                    revert with 0, 'ERC721: balance query for the zero address'
                                if balanceOf[address(arg1)] < 1:
                                    revert with 0, 17
                                if balanceOf[address(arg1)] - 1 != stor152[arg3]:
                                    tokenOfOwnerByIndex[address(arg1)][stor152[arg3]] = tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1]
                                    stor152[stor151[address(arg1)][stor104[address(arg1)] - 1]] = stor152[arg3]
                                stor152[arg3] = 0
                                tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                        if arg2:
                            if arg2 != arg1:
                                if not arg2:
                                    revert with 0, 'ERC721: balance query for the zero address'
                                tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                stor152[arg3] = balanceOf[address(arg2)]
                        else:
                            if tokenByIndex.length < 1:
                                revert with 0, 17
                            if tokenByIndex.length - 1 >= tokenByIndex.length:
                                revert with 0, 50
                            if stor154[arg3] >= tokenByIndex.length:
                                revert with 0, 50
                            tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                            stor154[stor153[stor153.length]] = stor154[arg3]
                            stor154[arg3] = 0
                            if not tokenByIndex.length:
                                revert with 0, 49
                            tokenByIndex[tokenByIndex.length] = 0
                            tokenByIndex.length--
                        approved[arg3] = 0
                        if not ownerOf[arg3]:
                            revert with 0, 'ERC721: owner query for nonexistent token'
                        emit Approval(ownerOf[arg3], 0, arg3);
                        if balanceOf[address(arg1)] < 1:
                            revert with 0, 17
                        balanceOf[address(arg1)]--
                        if balanceOf[address(arg2)] > -2:
                            revert with 0, 17
                        balanceOf[address(arg2)]++
                        ownerOf[arg3] = arg2
                        emit Transfer(arg1, arg2, arg3);
                        if ext_code.size(arg2):
                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, uint32(msg.sender), address(arg1), arg3, 128, 0
                            if not ext_call.success:
                                if not return_data.size:
                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                if not return_data.size:
                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                            if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                    else:
                        if not liquidityPoolManagerImplementationAddress:
                            if not arg2:
                                revert with 0, 'ERC721: balance query for the zero address'
                            if balanceOf[address(arg2)] > test266151307():
                                revert with 0, 65
                            mem[128] = balanceOf[address(arg2)]
                            mem[64] = (32 * balanceOf[address(arg2)]) + 160
                            if not balanceOf[address(arg2)]:
                                idx = 0
                                while idx < balanceOf[address(arg2)]:
                                    if not arg2:
                                        revert with 0, 'ERC721: balance query for the zero address'
                                    if idx >= balanceOf[address(arg2)]:
                                        revert with 0, 'ERC721Enumerable: owner index out of bounds'
                                    if tokenOfOwnerByIndex[address(arg2)][idx] <= 0:
                                        revert with 0, 'Troops: Id must be higher than zero'
                                    mem[0] = tokenOfOwnerByIndex[address(arg2)][idx]
                                    mem[32] = 552
                                    _16481 = mem[64]
                                    mem[64] = mem[64] + 256
                                    mem[_16481] = stor552[stor151[address(arg2)][idx]].field_0
                                    if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                            revert with 0, 34
                                        _17769 = mem[64]
                                        mem[64] = mem[64] + ceil32(uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) + 32
                                        mem[_17769] = uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                                revert with 0, 34
                                            if Mask(256, -1, stor552[stor151[address(arg2)][idx]].field_256):
                                                if 31 >= uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5:
                                                    mem[_17769 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                else:
                                                    mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                    mem[_17769 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                    s = _17769 + 32
                                                    t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                    while _17769 + (uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) > s:
                                                        mem[s + 32] = stor1[t].field_0
                                                        s = s + 32
                                                        t = t + 1
                                                        continue 
                                        else:
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                                revert with 0, 34
                                            if stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                if 31 >= stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                    mem[_17769 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                else:
                                                    mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                    mem[_17769 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                    s = _17769 + 32
                                                    t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                    while _17769 + stor552[stor151[address(arg2)][idx]].field_257 % 128 > s:
                                                        mem[s + 32] = stor1[t].field_0
                                                        s = s + 32
                                                        t = t + 1
                                                        continue 
                                        mem[_16481 + 32] = _17769
                                    else:
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                            revert with 0, 34
                                        _17820 = mem[64]
                                        mem[64] = mem[64] + ceil32(stor552[stor151[address(arg2)][idx]].field_257 % 128) + 32
                                        mem[_17820] = stor552[stor151[address(arg2)][idx]].field_257 % 128
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                                revert with 0, 34
                                            if Mask(256, -1, stor552[stor151[address(arg2)][idx]].field_256):
                                                if 31 >= uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5:
                                                    mem[_17820 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                else:
                                                    mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                    mem[_17820 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                    s = _17820 + 32
                                                    t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                    while _17820 + (uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) > s:
                                                        mem[s + 32] = stor1[t].field_0
                                                        s = s + 32
                                                        t = t + 1
                                                        continue 
                                        else:
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                                revert with 0, 34
                                            if stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                if 31 >= stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                    mem[_17820 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                else:
                                                    mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                    mem[_17820 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                    s = _17820 + 32
                                                    t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                    while _17820 + stor552[stor151[address(arg2)][idx]].field_257 % 128 > s:
                                                        mem[s + 32] = stor1[t].field_0
                                                        s = s + 32
                                                        t = t + 1
                                                        continue 
                                        mem[_16481 + 32] = _17820
                                    mem[_16481 + 64] = stor552[stor151[address(arg2)][idx]].field_512
                                    mem[_16481 + 96] = stor552[stor151[address(arg2)][idx]].field_768
                                    mem[_16481 + 128] = stor552[stor151[address(arg2)][idx]].field_1024
                                    mem[_16481 + 160] = stor552[stor151[address(arg2)][idx]].field_1280
                                    mem[_16481 + 192] = bool(uint8(stor552[stor151[address(arg2)][idx]].field_1536))
                                    mem[_16481 + 224] = bool(uint8(stor552[stor151[address(arg2)][idx]].field_1544))
                                    require uint8(stor552[stor151[address(arg2)][idx]].field_1536)
                                    if idx >= mem[128]:
                                        revert with 0, 50
                                    mem[(32 * idx) + 160] = tokenOfOwnerByIndex[address(arg2)][idx]
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    continue 
                                idx = 0
                                s = 0
                                while idx < mem[128]:
                                    if idx >= mem[128]:
                                        revert with 0, 50
                                    mem[0] = mem[(32 * idx) + 160]
                                    mem[32] = 552
                                    if not uint8(stor552[mem[(32 * idx) + 160]].field_1544):
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = s
                                        continue 
                                    if s == -1:
                                        revert with 0, 17
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    s = s + 1
                                    continue 
                                if s >= 2:
                                    revert with 0, 'Each holder can not hold more than 2 Gladiators'
                                if not arg1:
                                    stor154[arg3] = tokenByIndex.length
                                    tokenByIndex.length++
                                    stor72A1[stor153.length] = arg3
                                    if arg2:
                                        if arg2 == arg1:
                                            approved[arg3] = 0
                                            if not ownerOf[arg3]:
                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                            emit Approval(ownerOf[arg3], 0, arg3);
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            balanceOf[address(arg1)]--
                                            if balanceOf[address(arg2)] > -2:
                                                revert with 0, 17
                                            balanceOf[address(arg2)]++
                                            mem[0] = arg3
                                            mem[32] = 103
                                            ownerOf[arg3] = arg2
                                            emit Transfer(arg1, arg2, arg3);
                                            if ext_code.size(arg2):
                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = msg.sender
                                                mem[mem[64] + 36] = arg1
                                                mem[mem[64] + 68] = arg3
                                                mem[mem[64] + 100] = 128
                                                mem[mem[64] + 132] = mem[96]
                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                if ceil32(mem[96]) <= mem[96]:
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _32638 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_32638] == Mask(32, 224, mem[_32638])
                                                    if Mask(32, 224, mem[_32638]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    mem[mem[64] + mem[96] + 164] = 0
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _32821 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_32821] == Mask(32, 224, mem[_32821])
                                                    if Mask(32, 224, mem[_32821]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            if not arg2:
                                                revert with 0, 'ERC721: balance query for the zero address'
                                            tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                            stor152[arg3] = balanceOf[address(arg2)]
                                            approved[arg3] = 0
                                            if not ownerOf[arg3]:
                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                            emit Approval(ownerOf[arg3], 0, arg3);
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            balanceOf[address(arg1)]--
                                            if balanceOf[address(arg2)] > -2:
                                                revert with 0, 17
                                            balanceOf[address(arg2)]++
                                            mem[0] = arg3
                                            mem[32] = 103
                                            ownerOf[arg3] = arg2
                                            emit Transfer(arg1, arg2, arg3);
                                            if ext_code.size(arg2):
                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = msg.sender
                                                mem[mem[64] + 36] = arg1
                                                mem[mem[64] + 68] = arg3
                                                mem[mem[64] + 100] = 128
                                                mem[mem[64] + 132] = mem[96]
                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                if ceil32(mem[96]) <= mem[96]:
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _32640 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_32640] == Mask(32, 224, mem[_32640])
                                                    if Mask(32, 224, mem[_32640]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    mem[mem[64] + mem[96] + 164] = 0
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _32822 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_32822] == Mask(32, 224, mem[_32822])
                                                    if Mask(32, 224, mem[_32822]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                    else:
                                        if tokenByIndex.length < 1:
                                            revert with 0, 17
                                        if tokenByIndex.length - 1 >= tokenByIndex.length:
                                            revert with 0, 50
                                        if stor154[arg3] >= tokenByIndex.length:
                                            revert with 0, 50
                                        tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                        stor154[stor153[stor153.length]] = stor154[arg3]
                                        stor154[arg3] = 0
                                        if not tokenByIndex.length:
                                            revert with 0, 49
                                        tokenByIndex[tokenByIndex.length] = 0
                                        tokenByIndex.length--
                                        approved[arg3] = 0
                                        if not ownerOf[arg3]:
                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                        emit Approval(ownerOf[arg3], 0, arg3);
                                        if balanceOf[address(arg1)] < 1:
                                            revert with 0, 17
                                        balanceOf[address(arg1)]--
                                        if balanceOf[address(arg2)] > -2:
                                            revert with 0, 17
                                        balanceOf[address(arg2)]++
                                        mem[0] = arg3
                                        mem[32] = 103
                                        ownerOf[arg3] = arg2
                                        emit Transfer(arg1, arg2, arg3);
                                        if ext_code.size(arg2):
                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = msg.sender
                                            mem[mem[64] + 36] = arg1
                                            mem[mem[64] + 68] = arg3
                                            mem[mem[64] + 100] = 128
                                            mem[mem[64] + 132] = mem[96]
                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                            if ceil32(mem[96]) <= mem[96]:
                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    if not return_data.size:
                                                        if not mem[96]:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with memory
                                                          from 128
                                                           len mem[96]
                                                    if not return_data.size:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _32642 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                require mem[_32642] == Mask(32, 224, mem[_32642])
                                                if Mask(32, 224, mem[_32642]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                mem[mem[64] + mem[96] + 164] = 0
                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    if not return_data.size:
                                                        if not mem[96]:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with memory
                                                          from 128
                                                           len mem[96]
                                                    if not return_data.size:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _32823 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                require mem[_32823] == Mask(32, 224, mem[_32823])
                                                if Mask(32, 224, mem[_32823]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                else:
                                    if arg1 == arg2:
                                        if arg2:
                                            if arg2 == arg1:
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32620 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32620] == Mask(32, 224, mem[_32620])
                                                        if Mask(32, 224, mem[_32620]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[64] + mem[96] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32812 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32812] == Mask(32, 224, mem[_32812])
                                                        if Mask(32, 224, mem[_32812]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if not arg2:
                                                    revert with 0, 'ERC721: balance query for the zero address'
                                                tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                stor152[arg3] = balanceOf[address(arg2)]
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32622 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32622] == Mask(32, 224, mem[_32622])
                                                        if Mask(32, 224, mem[_32622]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[64] + mem[96] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32813 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32813] == Mask(32, 224, mem[_32813])
                                                        if Mask(32, 224, mem[_32813]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            if tokenByIndex.length < 1:
                                                revert with 0, 17
                                            if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                revert with 0, 50
                                            if stor154[arg3] >= tokenByIndex.length:
                                                revert with 0, 50
                                            tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                            stor154[stor153[stor153.length]] = stor154[arg3]
                                            stor154[arg3] = 0
                                            if not tokenByIndex.length:
                                                revert with 0, 49
                                            tokenByIndex[tokenByIndex.length] = 0
                                            tokenByIndex.length--
                                            approved[arg3] = 0
                                            if not ownerOf[arg3]:
                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                            emit Approval(ownerOf[arg3], 0, arg3);
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            balanceOf[address(arg1)]--
                                            if balanceOf[address(arg2)] > -2:
                                                revert with 0, 17
                                            balanceOf[address(arg2)]++
                                            mem[0] = arg3
                                            mem[32] = 103
                                            ownerOf[arg3] = arg2
                                            emit Transfer(arg1, arg2, arg3);
                                            if ext_code.size(arg2):
                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = msg.sender
                                                mem[mem[64] + 36] = arg1
                                                mem[mem[64] + 68] = arg3
                                                mem[mem[64] + 100] = 128
                                                mem[mem[64] + 132] = mem[96]
                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                if ceil32(mem[96]) <= mem[96]:
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _32624 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_32624] == Mask(32, 224, mem[_32624])
                                                    if Mask(32, 224, mem[_32624]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    mem[mem[64] + mem[96] + 164] = 0
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _32814 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_32814] == Mask(32, 224, mem[_32814])
                                                    if Mask(32, 224, mem[_32814]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                    else:
                                        if not arg1:
                                            revert with 0, 'ERC721: balance query for the zero address'
                                        if balanceOf[address(arg1)] < 1:
                                            revert with 0, 17
                                        if balanceOf[address(arg1)] - 1 == stor152[arg3]:
                                            stor152[arg3] = 0
                                            tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                                            if arg2:
                                                if arg2 == arg1:
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _32626 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_32626] == Mask(32, 224, mem[_32626])
                                                            if Mask(32, 224, mem[_32626]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[64] + mem[96] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _32815 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_32815] == Mask(32, 224, mem[_32815])
                                                            if Mask(32, 224, mem[_32815]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    if not arg2:
                                                        revert with 0, 'ERC721: balance query for the zero address'
                                                    tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                    stor152[arg3] = balanceOf[address(arg2)]
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _32628 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_32628] == Mask(32, 224, mem[_32628])
                                                            if Mask(32, 224, mem[_32628]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[64] + mem[96] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _32816 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_32816] == Mask(32, 224, mem[_32816])
                                                            if Mask(32, 224, mem[_32816]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if tokenByIndex.length < 1:
                                                    revert with 0, 17
                                                if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                    revert with 0, 50
                                                if stor154[arg3] >= tokenByIndex.length:
                                                    revert with 0, 50
                                                tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                stor154[stor153[stor153.length]] = stor154[arg3]
                                                stor154[arg3] = 0
                                                if not tokenByIndex.length:
                                                    revert with 0, 49
                                                tokenByIndex[tokenByIndex.length] = 0
                                                tokenByIndex.length--
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32630 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32630] == Mask(32, 224, mem[_32630])
                                                        if Mask(32, 224, mem[_32630]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[64] + mem[96] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32817 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32817] == Mask(32, 224, mem[_32817])
                                                        if Mask(32, 224, mem[_32817]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            tokenOfOwnerByIndex[address(arg1)][stor152[arg3]] = tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1]
                                            stor152[stor151[address(arg1)][stor104[address(arg1)] - 1]] = stor152[arg3]
                                            stor152[arg3] = 0
                                            tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                                            if arg2:
                                                if arg2 == arg1:
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _32632 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_32632] == Mask(32, 224, mem[_32632])
                                                            if Mask(32, 224, mem[_32632]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[64] + mem[96] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _32818 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_32818] == Mask(32, 224, mem[_32818])
                                                            if Mask(32, 224, mem[_32818]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    if not arg2:
                                                        revert with 0, 'ERC721: balance query for the zero address'
                                                    tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                    stor152[arg3] = balanceOf[address(arg2)]
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _32634 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_32634] == Mask(32, 224, mem[_32634])
                                                            if Mask(32, 224, mem[_32634]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[64] + mem[96] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _32819 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_32819] == Mask(32, 224, mem[_32819])
                                                            if Mask(32, 224, mem[_32819]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if tokenByIndex.length < 1:
                                                    revert with 0, 17
                                                if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                    revert with 0, 50
                                                if stor154[arg3] >= tokenByIndex.length:
                                                    revert with 0, 50
                                                tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                stor154[stor153[stor153.length]] = stor154[arg3]
                                                stor154[arg3] = 0
                                                if not tokenByIndex.length:
                                                    revert with 0, 49
                                                tokenByIndex[tokenByIndex.length] = 0
                                                tokenByIndex.length--
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32636 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32636] == Mask(32, 224, mem[_32636])
                                                        if Mask(32, 224, mem[_32636]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[64] + mem[96] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32820 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32820] == Mask(32, 224, mem[_32820])
                                                        if Mask(32, 224, mem[_32820]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                            else:
                                mem[160 len 32 * balanceOf[address(arg2)]] = call.data[calldata.size len 32 * balanceOf[address(arg2)]]
                                idx = 0
                                while idx < balanceOf[address(arg2)]:
                                    if not arg2:
                                        revert with 0, 'ERC721: balance query for the zero address'
                                    if idx >= balanceOf[address(arg2)]:
                                        revert with 0, 'ERC721Enumerable: owner index out of bounds'
                                    if tokenOfOwnerByIndex[address(arg2)][idx] <= 0:
                                        revert with 0, 'Troops: Id must be higher than zero'
                                    mem[0] = tokenOfOwnerByIndex[address(arg2)][idx]
                                    mem[32] = 552
                                    _16484 = mem[64]
                                    mem[64] = mem[64] + 256
                                    mem[_16484] = stor552[stor151[address(arg2)][idx]].field_0
                                    if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                            revert with 0, 34
                                        _17771 = mem[64]
                                        mem[64] = mem[64] + ceil32(uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) + 32
                                        mem[_17771] = uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                                revert with 0, 34
                                            if Mask(256, -1, stor552[stor151[address(arg2)][idx]].field_256):
                                                if 31 >= uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5:
                                                    mem[_17771 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                else:
                                                    mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                    mem[_17771 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                    s = _17771 + 32
                                                    t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                    while _17771 + (uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) > s:
                                                        mem[s + 32] = stor1[t].field_0
                                                        s = s + 32
                                                        t = t + 1
                                                        continue 
                                        else:
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                                revert with 0, 34
                                            if stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                if 31 >= stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                    mem[_17771 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                else:
                                                    mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                    mem[_17771 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                    s = _17771 + 32
                                                    t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                    while _17771 + stor552[stor151[address(arg2)][idx]].field_257 % 128 > s:
                                                        mem[s + 32] = stor1[t].field_0
                                                        s = s + 32
                                                        t = t + 1
                                                        continue 
                                        mem[_16484 + 32] = _17771
                                    else:
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                            revert with 0, 34
                                        _17825 = mem[64]
                                        mem[64] = mem[64] + ceil32(stor552[stor151[address(arg2)][idx]].field_257 % 128) + 32
                                        mem[_17825] = stor552[stor151[address(arg2)][idx]].field_257 % 128
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                                revert with 0, 34
                                            if Mask(256, -1, stor552[stor151[address(arg2)][idx]].field_256):
                                                if 31 >= uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5:
                                                    mem[_17825 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                else:
                                                    mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                    mem[_17825 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                    s = _17825 + 32
                                                    t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                    while _17825 + (uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) > s:
                                                        mem[s + 32] = stor1[t].field_0
                                                        s = s + 32
                                                        t = t + 1
                                                        continue 
                                        else:
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                                revert with 0, 34
                                            if stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                if 31 >= stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                    mem[_17825 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                else:
                                                    mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                    mem[_17825 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                    s = _17825 + 32
                                                    t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                    while _17825 + stor552[stor151[address(arg2)][idx]].field_257 % 128 > s:
                                                        mem[s + 32] = stor1[t].field_0
                                                        s = s + 32
                                                        t = t + 1
                                                        continue 
                                        mem[_16484 + 32] = _17825
                                    mem[_16484 + 64] = stor552[stor151[address(arg2)][idx]].field_512
                                    mem[_16484 + 96] = stor552[stor151[address(arg2)][idx]].field_768
                                    mem[_16484 + 128] = stor552[stor151[address(arg2)][idx]].field_1024
                                    mem[_16484 + 160] = stor552[stor151[address(arg2)][idx]].field_1280
                                    mem[_16484 + 192] = bool(uint8(stor552[stor151[address(arg2)][idx]].field_1536))
                                    mem[_16484 + 224] = bool(uint8(stor552[stor151[address(arg2)][idx]].field_1544))
                                    require uint8(stor552[stor151[address(arg2)][idx]].field_1536)
                                    if idx >= mem[128]:
                                        revert with 0, 50
                                    mem[(32 * idx) + 160] = tokenOfOwnerByIndex[address(arg2)][idx]
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    continue 
                                idx = 0
                                s = 0
                                while idx < mem[128]:
                                    if idx >= mem[128]:
                                        revert with 0, 50
                                    mem[0] = mem[(32 * idx) + 160]
                                    mem[32] = 552
                                    if not uint8(stor552[mem[(32 * idx) + 160]].field_1544):
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = s
                                        continue 
                                    if s == -1:
                                        revert with 0, 17
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    s = s + 1
                                    continue 
                                if s >= 2:
                                    revert with 0, 'Each holder can not hold more than 2 Gladiators'
                                if not arg1:
                                    stor154[arg3] = tokenByIndex.length
                                    tokenByIndex.length++
                                    stor72A1[stor153.length] = arg3
                                    if arg2:
                                        if arg2 == arg1:
                                            approved[arg3] = 0
                                            if not ownerOf[arg3]:
                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                            emit Approval(ownerOf[arg3], 0, arg3);
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            balanceOf[address(arg1)]--
                                            if balanceOf[address(arg2)] > -2:
                                                revert with 0, 17
                                            balanceOf[address(arg2)]++
                                            mem[0] = arg3
                                            mem[32] = 103
                                            ownerOf[arg3] = arg2
                                            emit Transfer(arg1, arg2, arg3);
                                            if ext_code.size(arg2):
                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = msg.sender
                                                mem[mem[64] + 36] = arg1
                                                mem[mem[64] + 68] = arg3
                                                mem[mem[64] + 100] = 128
                                                mem[mem[64] + 132] = mem[96]
                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                if ceil32(mem[96]) <= mem[96]:
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _32662 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_32662] == Mask(32, 224, mem[_32662])
                                                    if Mask(32, 224, mem[_32662]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    mem[mem[64] + mem[96] + 164] = 0
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _32833 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_32833] == Mask(32, 224, mem[_32833])
                                                    if Mask(32, 224, mem[_32833]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            if not arg2:
                                                revert with 0, 'ERC721: balance query for the zero address'
                                            tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                            stor152[arg3] = balanceOf[address(arg2)]
                                            approved[arg3] = 0
                                            if not ownerOf[arg3]:
                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                            emit Approval(ownerOf[arg3], 0, arg3);
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            balanceOf[address(arg1)]--
                                            if balanceOf[address(arg2)] > -2:
                                                revert with 0, 17
                                            balanceOf[address(arg2)]++
                                            mem[0] = arg3
                                            mem[32] = 103
                                            ownerOf[arg3] = arg2
                                            emit Transfer(arg1, arg2, arg3);
                                            if ext_code.size(arg2):
                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = msg.sender
                                                mem[mem[64] + 36] = arg1
                                                mem[mem[64] + 68] = arg3
                                                mem[mem[64] + 100] = 128
                                                mem[mem[64] + 132] = mem[96]
                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                if ceil32(mem[96]) <= mem[96]:
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _32664 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_32664] == Mask(32, 224, mem[_32664])
                                                    if Mask(32, 224, mem[_32664]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    mem[mem[64] + mem[96] + 164] = 0
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _32834 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_32834] == Mask(32, 224, mem[_32834])
                                                    if Mask(32, 224, mem[_32834]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                    else:
                                        if tokenByIndex.length < 1:
                                            revert with 0, 17
                                        if tokenByIndex.length - 1 >= tokenByIndex.length:
                                            revert with 0, 50
                                        if stor154[arg3] >= tokenByIndex.length:
                                            revert with 0, 50
                                        tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                        stor154[stor153[stor153.length]] = stor154[arg3]
                                        stor154[arg3] = 0
                                        if not tokenByIndex.length:
                                            revert with 0, 49
                                        tokenByIndex[tokenByIndex.length] = 0
                                        tokenByIndex.length--
                                        approved[arg3] = 0
                                        if not ownerOf[arg3]:
                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                        emit Approval(ownerOf[arg3], 0, arg3);
                                        if balanceOf[address(arg1)] < 1:
                                            revert with 0, 17
                                        balanceOf[address(arg1)]--
                                        if balanceOf[address(arg2)] > -2:
                                            revert with 0, 17
                                        balanceOf[address(arg2)]++
                                        mem[0] = arg3
                                        mem[32] = 103
                                        ownerOf[arg3] = arg2
                                        emit Transfer(arg1, arg2, arg3);
                                        if ext_code.size(arg2):
                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = msg.sender
                                            mem[mem[64] + 36] = arg1
                                            mem[mem[64] + 68] = arg3
                                            mem[mem[64] + 100] = 128
                                            mem[mem[64] + 132] = mem[96]
                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                            if ceil32(mem[96]) <= mem[96]:
                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    if not return_data.size:
                                                        if not mem[96]:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with memory
                                                          from 128
                                                           len mem[96]
                                                    if not return_data.size:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _32666 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                require mem[_32666] == Mask(32, 224, mem[_32666])
                                                if Mask(32, 224, mem[_32666]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                mem[mem[64] + mem[96] + 164] = 0
                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    if not return_data.size:
                                                        if not mem[96]:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with memory
                                                          from 128
                                                           len mem[96]
                                                    if not return_data.size:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _32835 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                require mem[_32835] == Mask(32, 224, mem[_32835])
                                                if Mask(32, 224, mem[_32835]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                else:
                                    if arg1 == arg2:
                                        if arg2:
                                            if arg2 == arg1:
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32644 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32644] == Mask(32, 224, mem[_32644])
                                                        if Mask(32, 224, mem[_32644]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[64] + mem[96] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32824 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32824] == Mask(32, 224, mem[_32824])
                                                        if Mask(32, 224, mem[_32824]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if not arg2:
                                                    revert with 0, 'ERC721: balance query for the zero address'
                                                tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                stor152[arg3] = balanceOf[address(arg2)]
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32646 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32646] == Mask(32, 224, mem[_32646])
                                                        if Mask(32, 224, mem[_32646]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[64] + mem[96] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32825 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32825] == Mask(32, 224, mem[_32825])
                                                        if Mask(32, 224, mem[_32825]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            if tokenByIndex.length < 1:
                                                revert with 0, 17
                                            if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                revert with 0, 50
                                            if stor154[arg3] >= tokenByIndex.length:
                                                revert with 0, 50
                                            tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                            stor154[stor153[stor153.length]] = stor154[arg3]
                                            stor154[arg3] = 0
                                            if not tokenByIndex.length:
                                                revert with 0, 49
                                            tokenByIndex[tokenByIndex.length] = 0
                                            tokenByIndex.length--
                                            approved[arg3] = 0
                                            if not ownerOf[arg3]:
                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                            emit Approval(ownerOf[arg3], 0, arg3);
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            balanceOf[address(arg1)]--
                                            if balanceOf[address(arg2)] > -2:
                                                revert with 0, 17
                                            balanceOf[address(arg2)]++
                                            mem[0] = arg3
                                            mem[32] = 103
                                            ownerOf[arg3] = arg2
                                            emit Transfer(arg1, arg2, arg3);
                                            if ext_code.size(arg2):
                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = msg.sender
                                                mem[mem[64] + 36] = arg1
                                                mem[mem[64] + 68] = arg3
                                                mem[mem[64] + 100] = 128
                                                mem[mem[64] + 132] = mem[96]
                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                if ceil32(mem[96]) <= mem[96]:
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _32648 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_32648] == Mask(32, 224, mem[_32648])
                                                    if Mask(32, 224, mem[_32648]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    mem[mem[64] + mem[96] + 164] = 0
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _32826 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_32826] == Mask(32, 224, mem[_32826])
                                                    if Mask(32, 224, mem[_32826]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                    else:
                                        if not arg1:
                                            revert with 0, 'ERC721: balance query for the zero address'
                                        if balanceOf[address(arg1)] < 1:
                                            revert with 0, 17
                                        if balanceOf[address(arg1)] - 1 == stor152[arg3]:
                                            stor152[arg3] = 0
                                            tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                                            if arg2:
                                                if arg2 == arg1:
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _32650 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_32650] == Mask(32, 224, mem[_32650])
                                                            if Mask(32, 224, mem[_32650]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[64] + mem[96] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _32827 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_32827] == Mask(32, 224, mem[_32827])
                                                            if Mask(32, 224, mem[_32827]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    if not arg2:
                                                        revert with 0, 'ERC721: balance query for the zero address'
                                                    tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                    stor152[arg3] = balanceOf[address(arg2)]
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _32652 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_32652] == Mask(32, 224, mem[_32652])
                                                            if Mask(32, 224, mem[_32652]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[64] + mem[96] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _32828 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_32828] == Mask(32, 224, mem[_32828])
                                                            if Mask(32, 224, mem[_32828]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if tokenByIndex.length < 1:
                                                    revert with 0, 17
                                                if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                    revert with 0, 50
                                                if stor154[arg3] >= tokenByIndex.length:
                                                    revert with 0, 50
                                                tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                stor154[stor153[stor153.length]] = stor154[arg3]
                                                stor154[arg3] = 0
                                                if not tokenByIndex.length:
                                                    revert with 0, 49
                                                tokenByIndex[tokenByIndex.length] = 0
                                                tokenByIndex.length--
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32654 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32654] == Mask(32, 224, mem[_32654])
                                                        if Mask(32, 224, mem[_32654]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[64] + mem[96] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32829 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32829] == Mask(32, 224, mem[_32829])
                                                        if Mask(32, 224, mem[_32829]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            tokenOfOwnerByIndex[address(arg1)][stor152[arg3]] = tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1]
                                            stor152[stor151[address(arg1)][stor104[address(arg1)] - 1]] = stor152[arg3]
                                            stor152[arg3] = 0
                                            tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                                            if arg2:
                                                if arg2 == arg1:
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _32656 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_32656] == Mask(32, 224, mem[_32656])
                                                            if Mask(32, 224, mem[_32656]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[64] + mem[96] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _32830 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_32830] == Mask(32, 224, mem[_32830])
                                                            if Mask(32, 224, mem[_32830]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    if not arg2:
                                                        revert with 0, 'ERC721: balance query for the zero address'
                                                    tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                    stor152[arg3] = balanceOf[address(arg2)]
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _32658 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_32658] == Mask(32, 224, mem[_32658])
                                                            if Mask(32, 224, mem[_32658]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[64] + mem[96] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _32831 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_32831] == Mask(32, 224, mem[_32831])
                                                            if Mask(32, 224, mem[_32831]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if tokenByIndex.length < 1:
                                                    revert with 0, 17
                                                if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                    revert with 0, 50
                                                if stor154[arg3] >= tokenByIndex.length:
                                                    revert with 0, 50
                                                tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                stor154[stor153[stor153.length]] = stor154[arg3]
                                                stor154[arg3] = 0
                                                if not tokenByIndex.length:
                                                    revert with 0, 49
                                                tokenByIndex[tokenByIndex.length] = 0
                                                tokenByIndex.length--
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32660 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32660] == Mask(32, 224, mem[_32660])
                                                        if Mask(32, 224, mem[_32660]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[64] + mem[96] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32832 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32832] == Mask(32, 224, mem[_32832])
                                                        if Mask(32, 224, mem[_32832]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                        else:
                            mem[132] = arg2
                            staticcall liquidityPoolManagerImplementationAddress.0xb278110f with:
                                    gas gas_remaining wei
                                   args arg2
                            mem[128] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            if ext_call.return_data[0]:
                                if not arg1:
                                    stor154[arg3] = tokenByIndex.length
                                    tokenByIndex.length++
                                    stor72A1[stor153.length] = arg3
                                else:
                                    if arg1 != arg2:
                                        if not arg1:
                                            revert with 0, 'ERC721: balance query for the zero address'
                                        if balanceOf[address(arg1)] < 1:
                                            revert with 0, 17
                                        if balanceOf[address(arg1)] - 1 != stor152[arg3]:
                                            tokenOfOwnerByIndex[address(arg1)][stor152[arg3]] = tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1]
                                            stor152[stor151[address(arg1)][stor104[address(arg1)] - 1]] = stor152[arg3]
                                        stor152[arg3] = 0
                                        tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                                if arg2:
                                    if arg2 != arg1:
                                        if not arg2:
                                            revert with 0, 'ERC721: balance query for the zero address'
                                        tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                        stor152[arg3] = balanceOf[address(arg2)]
                                else:
                                    if tokenByIndex.length < 1:
                                        revert with 0, 17
                                    if tokenByIndex.length - 1 >= tokenByIndex.length:
                                        revert with 0, 50
                                    if stor154[arg3] >= tokenByIndex.length:
                                        revert with 0, 50
                                    tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                    stor154[stor153[stor153.length]] = stor154[arg3]
                                    stor154[arg3] = 0
                                    if not tokenByIndex.length:
                                        revert with 0, 49
                                    tokenByIndex[tokenByIndex.length] = 0
                                    tokenByIndex.length--
                                approved[arg3] = 0
                                if not ownerOf[arg3]:
                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                emit Approval(ownerOf[arg3], 0, arg3);
                                if balanceOf[address(arg1)] < 1:
                                    revert with 0, 17
                                balanceOf[address(arg1)]--
                                if balanceOf[address(arg2)] > -2:
                                    revert with 0, 17
                                balanceOf[address(arg2)]++
                                ownerOf[arg3] = arg2
                                emit Transfer(arg1, arg2, arg3);
                                if ext_code.size(arg2):
                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args msg.sender, address(arg1), arg3, 128, 0
                                    if not ext_call.success:
                                        if not return_data.size:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        if not return_data.size:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                    if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                            else:
                                if not arg2:
                                    revert with 0, 'ERC721: balance query for the zero address'
                                if balanceOf[address(arg2)] > test266151307():
                                    revert with 0, 65
                                mem[ceil32(return_data.size) + 128] = balanceOf[address(arg2)]
                                mem[64] = ceil32(return_data.size) + (32 * balanceOf[address(arg2)]) + 160
                                if not balanceOf[address(arg2)]:
                                    idx = 0
                                    while idx < balanceOf[address(arg2)]:
                                        if not arg2:
                                            revert with 0, 'ERC721: balance query for the zero address'
                                        if idx >= balanceOf[address(arg2)]:
                                            revert with 0, 'ERC721Enumerable: owner index out of bounds'
                                        if tokenOfOwnerByIndex[address(arg2)][idx] <= 0:
                                            revert with 0, 'Troops: Id must be higher than zero'
                                        mem[0] = tokenOfOwnerByIndex[address(arg2)][idx]
                                        mem[32] = 552
                                        _16559 = mem[64]
                                        mem[64] = mem[64] + 256
                                        mem[_16559] = stor552[stor151[address(arg2)][idx]].field_0
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                                revert with 0, 34
                                            _17773 = mem[64]
                                            mem[64] = mem[64] + ceil32(uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) + 32
                                            mem[_17773] = uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                                if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                                    revert with 0, 34
                                                if Mask(256, -1, stor552[stor151[address(arg2)][idx]].field_256):
                                                    if 31 >= uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5:
                                                        mem[_17773 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                    else:
                                                        mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                        mem[_17773 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                        s = _17773 + 32
                                                        t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                        while _17773 + (uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) > s:
                                                            mem[s + 32] = stor1[t].field_0
                                                            s = s + 32
                                                            t = t + 1
                                                            continue 
                                            else:
                                                if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                                    revert with 0, 34
                                                if stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                    if 31 >= stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                        mem[_17773 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                    else:
                                                        mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                        mem[_17773 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                        s = _17773 + 32
                                                        t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                        while _17773 + stor552[stor151[address(arg2)][idx]].field_257 % 128 > s:
                                                            mem[s + 32] = stor1[t].field_0
                                                            s = s + 32
                                                            t = t + 1
                                                            continue 
                                            mem[_16559 + 32] = _17773
                                        else:
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                                revert with 0, 34
                                            _17830 = mem[64]
                                            mem[64] = mem[64] + ceil32(stor552[stor151[address(arg2)][idx]].field_257 % 128) + 32
                                            mem[_17830] = stor552[stor151[address(arg2)][idx]].field_257 % 128
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                                if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                                    revert with 0, 34
                                                if Mask(256, -1, stor552[stor151[address(arg2)][idx]].field_256):
                                                    if 31 >= uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5:
                                                        mem[_17830 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                    else:
                                                        mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                        mem[_17830 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                        s = _17830 + 32
                                                        t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                        while _17830 + (uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) > s:
                                                            mem[s + 32] = stor1[t].field_0
                                                            s = s + 32
                                                            t = t + 1
                                                            continue 
                                            else:
                                                if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                                    revert with 0, 34
                                                if stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                    if 31 >= stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                        mem[_17830 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                    else:
                                                        mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                        mem[_17830 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                        s = _17830 + 32
                                                        t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                        while _17830 + stor552[stor151[address(arg2)][idx]].field_257 % 128 > s:
                                                            mem[s + 32] = stor1[t].field_0
                                                            s = s + 32
                                                            t = t + 1
                                                            continue 
                                            mem[_16559 + 32] = _17830
                                        mem[_16559 + 64] = stor552[stor151[address(arg2)][idx]].field_512
                                        mem[_16559 + 96] = stor552[stor151[address(arg2)][idx]].field_768
                                        mem[_16559 + 128] = stor552[stor151[address(arg2)][idx]].field_1024
                                        mem[_16559 + 160] = stor552[stor151[address(arg2)][idx]].field_1280
                                        mem[_16559 + 192] = bool(uint8(stor552[stor151[address(arg2)][idx]].field_1536))
                                        mem[_16559 + 224] = bool(uint8(stor552[stor151[address(arg2)][idx]].field_1544))
                                        require uint8(stor552[stor151[address(arg2)][idx]].field_1536)
                                        if idx >= mem[ceil32(return_data.size) + 128]:
                                            revert with 0, 50
                                        mem[(32 * idx) + ceil32(return_data.size) + 160] = tokenOfOwnerByIndex[address(arg2)][idx]
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        continue 
                                    idx = 0
                                    s = 0
                                    while idx < mem[ceil32(return_data.size) + 128]:
                                        if idx >= mem[ceil32(return_data.size) + 128]:
                                            revert with 0, 50
                                        mem[0] = mem[(32 * idx) + ceil32(return_data.size) + 160]
                                        mem[32] = 552
                                        if not uint8(stor552[mem[(32 * idx) + ceil32(return_data.size) + 160]].field_1544):
                                            if idx == -1:
                                                revert with 0, 17
                                            idx = idx + 1
                                            s = s
                                            continue 
                                        if s == -1:
                                            revert with 0, 17
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = s + 1
                                        continue 
                                    if s >= 2:
                                        revert with 0, 'Each holder can not hold more than 2 Gladiators'
                                    if not arg1:
                                        stor154[arg3] = tokenByIndex.length
                                        tokenByIndex.length++
                                        stor72A1[stor153.length] = arg3
                                        if arg2:
                                            if arg2 == arg1:
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32686 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32686] == Mask(32, 224, mem[_32686])
                                                        if Mask(32, 224, mem[_32686]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[64] + mem[96] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32845 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32845] == Mask(32, 224, mem[_32845])
                                                        if Mask(32, 224, mem[_32845]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if not arg2:
                                                    revert with 0, 'ERC721: balance query for the zero address'
                                                tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                stor152[arg3] = balanceOf[address(arg2)]
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32688 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32688] == Mask(32, 224, mem[_32688])
                                                        if Mask(32, 224, mem[_32688]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[64] + mem[96] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32846 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32846] == Mask(32, 224, mem[_32846])
                                                        if Mask(32, 224, mem[_32846]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            if tokenByIndex.length < 1:
                                                revert with 0, 17
                                            if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                revert with 0, 50
                                            if stor154[arg3] >= tokenByIndex.length:
                                                revert with 0, 50
                                            tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                            stor154[stor153[stor153.length]] = stor154[arg3]
                                            stor154[arg3] = 0
                                            if not tokenByIndex.length:
                                                revert with 0, 49
                                            tokenByIndex[tokenByIndex.length] = 0
                                            tokenByIndex.length--
                                            approved[arg3] = 0
                                            if not ownerOf[arg3]:
                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                            emit Approval(ownerOf[arg3], 0, arg3);
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            balanceOf[address(arg1)]--
                                            if balanceOf[address(arg2)] > -2:
                                                revert with 0, 17
                                            balanceOf[address(arg2)]++
                                            mem[0] = arg3
                                            mem[32] = 103
                                            ownerOf[arg3] = arg2
                                            emit Transfer(arg1, arg2, arg3);
                                            if ext_code.size(arg2):
                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = msg.sender
                                                mem[mem[64] + 36] = arg1
                                                mem[mem[64] + 68] = arg3
                                                mem[mem[64] + 100] = 128
                                                mem[mem[64] + 132] = mem[96]
                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                if ceil32(mem[96]) <= mem[96]:
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _32690 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_32690] == Mask(32, 224, mem[_32690])
                                                    if Mask(32, 224, mem[_32690]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    mem[mem[64] + mem[96] + 164] = 0
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _32847 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_32847] == Mask(32, 224, mem[_32847])
                                                    if Mask(32, 224, mem[_32847]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                    else:
                                        if arg1 == arg2:
                                            if arg2:
                                                if arg2 == arg1:
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _32668 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_32668] == Mask(32, 224, mem[_32668])
                                                            if Mask(32, 224, mem[_32668]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[64] + mem[96] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _32836 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_32836] == Mask(32, 224, mem[_32836])
                                                            if Mask(32, 224, mem[_32836]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    if not arg2:
                                                        revert with 0, 'ERC721: balance query for the zero address'
                                                    tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                    stor152[arg3] = balanceOf[address(arg2)]
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _32670 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_32670] == Mask(32, 224, mem[_32670])
                                                            if Mask(32, 224, mem[_32670]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[64] + mem[96] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _32837 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_32837] == Mask(32, 224, mem[_32837])
                                                            if Mask(32, 224, mem[_32837]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if tokenByIndex.length < 1:
                                                    revert with 0, 17
                                                if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                    revert with 0, 50
                                                if stor154[arg3] >= tokenByIndex.length:
                                                    revert with 0, 50
                                                tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                stor154[stor153[stor153.length]] = stor154[arg3]
                                                stor154[arg3] = 0
                                                if not tokenByIndex.length:
                                                    revert with 0, 49
                                                tokenByIndex[tokenByIndex.length] = 0
                                                tokenByIndex.length--
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32672 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32672] == Mask(32, 224, mem[_32672])
                                                        if Mask(32, 224, mem[_32672]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[64] + mem[96] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32838 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32838] == Mask(32, 224, mem[_32838])
                                                        if Mask(32, 224, mem[_32838]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            if not arg1:
                                                revert with 0, 'ERC721: balance query for the zero address'
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            if balanceOf[address(arg1)] - 1 == stor152[arg3]:
                                                stor152[arg3] = 0
                                                tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                                                if arg2:
                                                    if arg2 == arg1:
                                                        approved[arg3] = 0
                                                        if not ownerOf[arg3]:
                                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                                        emit Approval(ownerOf[arg3], 0, arg3);
                                                        if balanceOf[address(arg1)] < 1:
                                                            revert with 0, 17
                                                        balanceOf[address(arg1)]--
                                                        if balanceOf[address(arg2)] > -2:
                                                            revert with 0, 17
                                                        balanceOf[address(arg2)]++
                                                        mem[0] = arg3
                                                        mem[32] = 103
                                                        ownerOf[arg3] = arg2
                                                        emit Transfer(arg1, arg2, arg3);
                                                        if ext_code.size(arg2):
                                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = msg.sender
                                                            mem[mem[64] + 36] = arg1
                                                            mem[mem[64] + 68] = arg3
                                                            mem[mem[64] + 100] = 128
                                                            mem[mem[64] + 132] = mem[96]
                                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                            if ceil32(mem[96]) <= mem[96]:
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _32674 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_32674] == Mask(32, 224, mem[_32674])
                                                                if Mask(32, 224, mem[_32674]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            else:
                                                                mem[mem[64] + mem[96] + 164] = 0
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _32839 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_32839] == Mask(32, 224, mem[_32839])
                                                                if Mask(32, 224, mem[_32839]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        if not arg2:
                                                            revert with 0, 'ERC721: balance query for the zero address'
                                                        tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                        stor152[arg3] = balanceOf[address(arg2)]
                                                        approved[arg3] = 0
                                                        if not ownerOf[arg3]:
                                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                                        emit Approval(ownerOf[arg3], 0, arg3);
                                                        if balanceOf[address(arg1)] < 1:
                                                            revert with 0, 17
                                                        balanceOf[address(arg1)]--
                                                        if balanceOf[address(arg2)] > -2:
                                                            revert with 0, 17
                                                        balanceOf[address(arg2)]++
                                                        mem[0] = arg3
                                                        mem[32] = 103
                                                        ownerOf[arg3] = arg2
                                                        emit Transfer(arg1, arg2, arg3);
                                                        if ext_code.size(arg2):
                                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = msg.sender
                                                            mem[mem[64] + 36] = arg1
                                                            mem[mem[64] + 68] = arg3
                                                            mem[mem[64] + 100] = 128
                                                            mem[mem[64] + 132] = mem[96]
                                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                            if ceil32(mem[96]) <= mem[96]:
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _32676 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_32676] == Mask(32, 224, mem[_32676])
                                                                if Mask(32, 224, mem[_32676]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            else:
                                                                mem[mem[64] + mem[96] + 164] = 0
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _32840 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_32840] == Mask(32, 224, mem[_32840])
                                                                if Mask(32, 224, mem[_32840]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    if tokenByIndex.length < 1:
                                                        revert with 0, 17
                                                    if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                        revert with 0, 50
                                                    if stor154[arg3] >= tokenByIndex.length:
                                                        revert with 0, 50
                                                    tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                    stor154[stor153[stor153.length]] = stor154[arg3]
                                                    stor154[arg3] = 0
                                                    if not tokenByIndex.length:
                                                        revert with 0, 49
                                                    tokenByIndex[tokenByIndex.length] = 0
                                                    tokenByIndex.length--
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _32678 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_32678] == Mask(32, 224, mem[_32678])
                                                            if Mask(32, 224, mem[_32678]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[64] + mem[96] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _32841 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_32841] == Mask(32, 224, mem[_32841])
                                                            if Mask(32, 224, mem[_32841]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                tokenOfOwnerByIndex[address(arg1)][stor152[arg3]] = tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1]
                                                stor152[stor151[address(arg1)][stor104[address(arg1)] - 1]] = stor152[arg3]
                                                stor152[arg3] = 0
                                                tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                                                if arg2:
                                                    if arg2 == arg1:
                                                        approved[arg3] = 0
                                                        if not ownerOf[arg3]:
                                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                                        emit Approval(ownerOf[arg3], 0, arg3);
                                                        if balanceOf[address(arg1)] < 1:
                                                            revert with 0, 17
                                                        balanceOf[address(arg1)]--
                                                        if balanceOf[address(arg2)] > -2:
                                                            revert with 0, 17
                                                        balanceOf[address(arg2)]++
                                                        mem[0] = arg3
                                                        mem[32] = 103
                                                        ownerOf[arg3] = arg2
                                                        emit Transfer(arg1, arg2, arg3);
                                                        if ext_code.size(arg2):
                                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = msg.sender
                                                            mem[mem[64] + 36] = arg1
                                                            mem[mem[64] + 68] = arg3
                                                            mem[mem[64] + 100] = 128
                                                            mem[mem[64] + 132] = mem[96]
                                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                            if ceil32(mem[96]) <= mem[96]:
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _32680 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_32680] == Mask(32, 224, mem[_32680])
                                                                if Mask(32, 224, mem[_32680]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            else:
                                                                mem[mem[64] + mem[96] + 164] = 0
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _32842 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_32842] == Mask(32, 224, mem[_32842])
                                                                if Mask(32, 224, mem[_32842]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        if not arg2:
                                                            revert with 0, 'ERC721: balance query for the zero address'
                                                        tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                        stor152[arg3] = balanceOf[address(arg2)]
                                                        approved[arg3] = 0
                                                        if not ownerOf[arg3]:
                                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                                        emit Approval(ownerOf[arg3], 0, arg3);
                                                        if balanceOf[address(arg1)] < 1:
                                                            revert with 0, 17
                                                        balanceOf[address(arg1)]--
                                                        if balanceOf[address(arg2)] > -2:
                                                            revert with 0, 17
                                                        balanceOf[address(arg2)]++
                                                        mem[0] = arg3
                                                        mem[32] = 103
                                                        ownerOf[arg3] = arg2
                                                        emit Transfer(arg1, arg2, arg3);
                                                        if ext_code.size(arg2):
                                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = msg.sender
                                                            mem[mem[64] + 36] = arg1
                                                            mem[mem[64] + 68] = arg3
                                                            mem[mem[64] + 100] = 128
                                                            mem[mem[64] + 132] = mem[96]
                                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                            if ceil32(mem[96]) <= mem[96]:
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _32682 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_32682] == Mask(32, 224, mem[_32682])
                                                                if Mask(32, 224, mem[_32682]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            else:
                                                                mem[mem[64] + mem[96] + 164] = 0
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _32843 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_32843] == Mask(32, 224, mem[_32843])
                                                                if Mask(32, 224, mem[_32843]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    if tokenByIndex.length < 1:
                                                        revert with 0, 17
                                                    if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                        revert with 0, 50
                                                    if stor154[arg3] >= tokenByIndex.length:
                                                        revert with 0, 50
                                                    tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                    stor154[stor153[stor153.length]] = stor154[arg3]
                                                    stor154[arg3] = 0
                                                    if not tokenByIndex.length:
                                                        revert with 0, 49
                                                    tokenByIndex[tokenByIndex.length] = 0
                                                    tokenByIndex.length--
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _32684 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_32684] == Mask(32, 224, mem[_32684])
                                                            if Mask(32, 224, mem[_32684]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[64] + mem[96] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _32844 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_32844] == Mask(32, 224, mem[_32844])
                                                            if Mask(32, 224, mem[_32844]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                else:
                                    mem[ceil32(return_data.size) + 160 len 32 * balanceOf[address(arg2)]] = call.data[calldata.size len 32 * balanceOf[address(arg2)]]
                                    idx = 0
                                    while idx < balanceOf[address(arg2)]:
                                        if not arg2:
                                            revert with 0, 'ERC721: balance query for the zero address'
                                        if idx >= balanceOf[address(arg2)]:
                                            revert with 0, 'ERC721Enumerable: owner index out of bounds'
                                        if tokenOfOwnerByIndex[address(arg2)][idx] <= 0:
                                            revert with 0, 'Troops: Id must be higher than zero'
                                        mem[0] = tokenOfOwnerByIndex[address(arg2)][idx]
                                        mem[32] = 552
                                        _16562 = mem[64]
                                        mem[64] = mem[64] + 256
                                        mem[_16562] = stor552[stor151[address(arg2)][idx]].field_0
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                                revert with 0, 34
                                            _17775 = mem[64]
                                            mem[64] = mem[64] + ceil32(uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) + 32
                                            mem[_17775] = uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                                if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                                    revert with 0, 34
                                                if Mask(256, -1, stor552[stor151[address(arg2)][idx]].field_256):
                                                    if 31 >= uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5:
                                                        mem[_17775 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                    else:
                                                        mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                        mem[_17775 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                        s = _17775 + 32
                                                        t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                        while _17775 + (uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) > s:
                                                            mem[s + 32] = stor1[t].field_0
                                                            s = s + 32
                                                            t = t + 1
                                                            continue 
                                            else:
                                                if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                                    revert with 0, 34
                                                if stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                    if 31 >= stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                        mem[_17775 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                    else:
                                                        mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                        mem[_17775 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                        s = _17775 + 32
                                                        t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                        while _17775 + stor552[stor151[address(arg2)][idx]].field_257 % 128 > s:
                                                            mem[s + 32] = stor1[t].field_0
                                                            s = s + 32
                                                            t = t + 1
                                                            continue 
                                            mem[_16562 + 32] = _17775
                                        else:
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                                revert with 0, 34
                                            _17835 = mem[64]
                                            mem[64] = mem[64] + ceil32(stor552[stor151[address(arg2)][idx]].field_257 % 128) + 32
                                            mem[_17835] = stor552[stor151[address(arg2)][idx]].field_257 % 128
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                                if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                                    revert with 0, 34
                                                if Mask(256, -1, stor552[stor151[address(arg2)][idx]].field_256):
                                                    if 31 >= uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5:
                                                        mem[_17835 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                    else:
                                                        mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                        mem[_17835 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                        s = _17835 + 32
                                                        t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                        while _17835 + (uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) > s:
                                                            mem[s + 32] = stor1[t].field_0
                                                            s = s + 32
                                                            t = t + 1
                                                            continue 
                                            else:
                                                if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                                    revert with 0, 34
                                                if stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                    if 31 >= stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                        mem[_17835 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                    else:
                                                        mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                        mem[_17835 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                        s = _17835 + 32
                                                        t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                        while _17835 + stor552[stor151[address(arg2)][idx]].field_257 % 128 > s:
                                                            mem[s + 32] = stor1[t].field_0
                                                            s = s + 32
                                                            t = t + 1
                                                            continue 
                                            mem[_16562 + 32] = _17835
                                        mem[_16562 + 64] = stor552[stor151[address(arg2)][idx]].field_512
                                        mem[_16562 + 96] = stor552[stor151[address(arg2)][idx]].field_768
                                        mem[_16562 + 128] = stor552[stor151[address(arg2)][idx]].field_1024
                                        mem[_16562 + 160] = stor552[stor151[address(arg2)][idx]].field_1280
                                        mem[_16562 + 192] = bool(uint8(stor552[stor151[address(arg2)][idx]].field_1536))
                                        mem[_16562 + 224] = bool(uint8(stor552[stor151[address(arg2)][idx]].field_1544))
                                        require uint8(stor552[stor151[address(arg2)][idx]].field_1536)
                                        if idx >= mem[ceil32(return_data.size) + 128]:
                                            revert with 0, 50
                                        mem[(32 * idx) + ceil32(return_data.size) + 160] = tokenOfOwnerByIndex[address(arg2)][idx]
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        continue 
                                    idx = 0
                                    s = 0
                                    while idx < mem[ceil32(return_data.size) + 128]:
                                        if idx >= mem[ceil32(return_data.size) + 128]:
                                            revert with 0, 50
                                        mem[0] = mem[(32 * idx) + ceil32(return_data.size) + 160]
                                        mem[32] = 552
                                        if not uint8(stor552[mem[(32 * idx) + ceil32(return_data.size) + 160]].field_1544):
                                            if idx == -1:
                                                revert with 0, 17
                                            idx = idx + 1
                                            s = s
                                            continue 
                                        if s == -1:
                                            revert with 0, 17
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = s + 1
                                        continue 
                                    if s >= 2:
                                        revert with 0, 'Each holder can not hold more than 2 Gladiators'
                                    if not arg1:
                                        stor154[arg3] = tokenByIndex.length
                                        tokenByIndex.length++
                                        stor72A1[stor153.length] = arg3
                                        if arg2:
                                            if arg2 == arg1:
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32710 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32710] == Mask(32, 224, mem[_32710])
                                                        if Mask(32, 224, mem[_32710]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[64] + mem[96] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32857 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32857] == Mask(32, 224, mem[_32857])
                                                        if Mask(32, 224, mem[_32857]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if not arg2:
                                                    revert with 0, 'ERC721: balance query for the zero address'
                                                tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                stor152[arg3] = balanceOf[address(arg2)]
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32712 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32712] == Mask(32, 224, mem[_32712])
                                                        if Mask(32, 224, mem[_32712]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[64] + mem[96] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32858 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32858] == Mask(32, 224, mem[_32858])
                                                        if Mask(32, 224, mem[_32858]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            if tokenByIndex.length < 1:
                                                revert with 0, 17
                                            if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                revert with 0, 50
                                            if stor154[arg3] >= tokenByIndex.length:
                                                revert with 0, 50
                                            tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                            stor154[stor153[stor153.length]] = stor154[arg3]
                                            stor154[arg3] = 0
                                            if not tokenByIndex.length:
                                                revert with 0, 49
                                            tokenByIndex[tokenByIndex.length] = 0
                                            tokenByIndex.length--
                                            approved[arg3] = 0
                                            if not ownerOf[arg3]:
                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                            emit Approval(ownerOf[arg3], 0, arg3);
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            balanceOf[address(arg1)]--
                                            if balanceOf[address(arg2)] > -2:
                                                revert with 0, 17
                                            balanceOf[address(arg2)]++
                                            mem[0] = arg3
                                            mem[32] = 103
                                            ownerOf[arg3] = arg2
                                            emit Transfer(arg1, arg2, arg3);
                                            if ext_code.size(arg2):
                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = msg.sender
                                                mem[mem[64] + 36] = arg1
                                                mem[mem[64] + 68] = arg3
                                                mem[mem[64] + 100] = 128
                                                mem[mem[64] + 132] = mem[96]
                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                if ceil32(mem[96]) <= mem[96]:
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _32714 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_32714] == Mask(32, 224, mem[_32714])
                                                    if Mask(32, 224, mem[_32714]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    mem[mem[64] + mem[96] + 164] = 0
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _32859 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_32859] == Mask(32, 224, mem[_32859])
                                                    if Mask(32, 224, mem[_32859]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                    else:
                                        if arg1 == arg2:
                                            if arg2:
                                                if arg2 == arg1:
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _32692 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_32692] == Mask(32, 224, mem[_32692])
                                                            if Mask(32, 224, mem[_32692]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[64] + mem[96] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _32848 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_32848] == Mask(32, 224, mem[_32848])
                                                            if Mask(32, 224, mem[_32848]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    if not arg2:
                                                        revert with 0, 'ERC721: balance query for the zero address'
                                                    tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                    stor152[arg3] = balanceOf[address(arg2)]
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _32694 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_32694] == Mask(32, 224, mem[_32694])
                                                            if Mask(32, 224, mem[_32694]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[64] + mem[96] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _32849 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_32849] == Mask(32, 224, mem[_32849])
                                                            if Mask(32, 224, mem[_32849]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if tokenByIndex.length < 1:
                                                    revert with 0, 17
                                                if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                    revert with 0, 50
                                                if stor154[arg3] >= tokenByIndex.length:
                                                    revert with 0, 50
                                                tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                stor154[stor153[stor153.length]] = stor154[arg3]
                                                stor154[arg3] = 0
                                                if not tokenByIndex.length:
                                                    revert with 0, 49
                                                tokenByIndex[tokenByIndex.length] = 0
                                                tokenByIndex.length--
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32696 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32696] == Mask(32, 224, mem[_32696])
                                                        if Mask(32, 224, mem[_32696]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[64] + mem[96] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32850 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32850] == Mask(32, 224, mem[_32850])
                                                        if Mask(32, 224, mem[_32850]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            if not arg1:
                                                revert with 0, 'ERC721: balance query for the zero address'
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            if balanceOf[address(arg1)] - 1 == stor152[arg3]:
                                                stor152[arg3] = 0
                                                tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                                                if arg2:
                                                    if arg2 == arg1:
                                                        approved[arg3] = 0
                                                        if not ownerOf[arg3]:
                                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                                        emit Approval(ownerOf[arg3], 0, arg3);
                                                        if balanceOf[address(arg1)] < 1:
                                                            revert with 0, 17
                                                        balanceOf[address(arg1)]--
                                                        if balanceOf[address(arg2)] > -2:
                                                            revert with 0, 17
                                                        balanceOf[address(arg2)]++
                                                        mem[0] = arg3
                                                        mem[32] = 103
                                                        ownerOf[arg3] = arg2
                                                        emit Transfer(arg1, arg2, arg3);
                                                        if ext_code.size(arg2):
                                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = msg.sender
                                                            mem[mem[64] + 36] = arg1
                                                            mem[mem[64] + 68] = arg3
                                                            mem[mem[64] + 100] = 128
                                                            mem[mem[64] + 132] = mem[96]
                                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                            if ceil32(mem[96]) <= mem[96]:
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _32698 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_32698] == Mask(32, 224, mem[_32698])
                                                                if Mask(32, 224, mem[_32698]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            else:
                                                                mem[mem[64] + mem[96] + 164] = 0
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _32851 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_32851] == Mask(32, 224, mem[_32851])
                                                                if Mask(32, 224, mem[_32851]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        if not arg2:
                                                            revert with 0, 'ERC721: balance query for the zero address'
                                                        tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                        stor152[arg3] = balanceOf[address(arg2)]
                                                        approved[arg3] = 0
                                                        if not ownerOf[arg3]:
                                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                                        emit Approval(ownerOf[arg3], 0, arg3);
                                                        if balanceOf[address(arg1)] < 1:
                                                            revert with 0, 17
                                                        balanceOf[address(arg1)]--
                                                        if balanceOf[address(arg2)] > -2:
                                                            revert with 0, 17
                                                        balanceOf[address(arg2)]++
                                                        mem[0] = arg3
                                                        mem[32] = 103
                                                        ownerOf[arg3] = arg2
                                                        emit Transfer(arg1, arg2, arg3);
                                                        if ext_code.size(arg2):
                                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = msg.sender
                                                            mem[mem[64] + 36] = arg1
                                                            mem[mem[64] + 68] = arg3
                                                            mem[mem[64] + 100] = 128
                                                            mem[mem[64] + 132] = mem[96]
                                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                            if ceil32(mem[96]) <= mem[96]:
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _32700 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_32700] == Mask(32, 224, mem[_32700])
                                                                if Mask(32, 224, mem[_32700]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            else:
                                                                mem[mem[64] + mem[96] + 164] = 0
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _32852 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_32852] == Mask(32, 224, mem[_32852])
                                                                if Mask(32, 224, mem[_32852]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    if tokenByIndex.length < 1:
                                                        revert with 0, 17
                                                    if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                        revert with 0, 50
                                                    if stor154[arg3] >= tokenByIndex.length:
                                                        revert with 0, 50
                                                    tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                    stor154[stor153[stor153.length]] = stor154[arg3]
                                                    stor154[arg3] = 0
                                                    if not tokenByIndex.length:
                                                        revert with 0, 49
                                                    tokenByIndex[tokenByIndex.length] = 0
                                                    tokenByIndex.length--
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _32702 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_32702] == Mask(32, 224, mem[_32702])
                                                            if Mask(32, 224, mem[_32702]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[64] + mem[96] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _32853 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_32853] == Mask(32, 224, mem[_32853])
                                                            if Mask(32, 224, mem[_32853]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                tokenOfOwnerByIndex[address(arg1)][stor152[arg3]] = tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1]
                                                stor152[stor151[address(arg1)][stor104[address(arg1)] - 1]] = stor152[arg3]
                                                stor152[arg3] = 0
                                                tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                                                if arg2:
                                                    if arg2 == arg1:
                                                        approved[arg3] = 0
                                                        if not ownerOf[arg3]:
                                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                                        emit Approval(ownerOf[arg3], 0, arg3);
                                                        if balanceOf[address(arg1)] < 1:
                                                            revert with 0, 17
                                                        balanceOf[address(arg1)]--
                                                        if balanceOf[address(arg2)] > -2:
                                                            revert with 0, 17
                                                        balanceOf[address(arg2)]++
                                                        mem[0] = arg3
                                                        mem[32] = 103
                                                        ownerOf[arg3] = arg2
                                                        emit Transfer(arg1, arg2, arg3);
                                                        if ext_code.size(arg2):
                                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = msg.sender
                                                            mem[mem[64] + 36] = arg1
                                                            mem[mem[64] + 68] = arg3
                                                            mem[mem[64] + 100] = 128
                                                            mem[mem[64] + 132] = mem[96]
                                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                            if ceil32(mem[96]) <= mem[96]:
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _32704 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_32704] == Mask(32, 224, mem[_32704])
                                                                if Mask(32, 224, mem[_32704]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            else:
                                                                mem[mem[64] + mem[96] + 164] = 0
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _32854 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_32854] == Mask(32, 224, mem[_32854])
                                                                if Mask(32, 224, mem[_32854]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        if not arg2:
                                                            revert with 0, 'ERC721: balance query for the zero address'
                                                        tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                        stor152[arg3] = balanceOf[address(arg2)]
                                                        approved[arg3] = 0
                                                        if not ownerOf[arg3]:
                                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                                        emit Approval(ownerOf[arg3], 0, arg3);
                                                        if balanceOf[address(arg1)] < 1:
                                                            revert with 0, 17
                                                        balanceOf[address(arg1)]--
                                                        if balanceOf[address(arg2)] > -2:
                                                            revert with 0, 17
                                                        balanceOf[address(arg2)]++
                                                        mem[0] = arg3
                                                        mem[32] = 103
                                                        ownerOf[arg3] = arg2
                                                        emit Transfer(arg1, arg2, arg3);
                                                        if ext_code.size(arg2):
                                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = msg.sender
                                                            mem[mem[64] + 36] = arg1
                                                            mem[mem[64] + 68] = arg3
                                                            mem[mem[64] + 100] = 128
                                                            mem[mem[64] + 132] = mem[96]
                                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                            if ceil32(mem[96]) <= mem[96]:
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _32706 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_32706] == Mask(32, 224, mem[_32706])
                                                                if Mask(32, 224, mem[_32706]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            else:
                                                                mem[mem[64] + mem[96] + 164] = 0
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _32855 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_32855] == Mask(32, 224, mem[_32855])
                                                                if Mask(32, 224, mem[_32855]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    if tokenByIndex.length < 1:
                                                        revert with 0, 17
                                                    if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                        revert with 0, 50
                                                    if stor154[arg3] >= tokenByIndex.length:
                                                        revert with 0, 50
                                                    tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                    stor154[stor153[stor153.length]] = stor154[arg3]
                                                    stor154[arg3] = 0
                                                    if not tokenByIndex.length:
                                                        revert with 0, 49
                                                    tokenByIndex[tokenByIndex.length] = 0
                                                    tokenByIndex.length--
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _32708 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_32708] == Mask(32, 224, mem[_32708])
                                                            if Mask(32, 224, mem[_32708]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[64] + mem[96] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _32856 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_32856] == Mask(32, 224, mem[_32856])
                                                            if Mask(32, 224, mem[_32856]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
}

function safeTransferFrom(address arg1, address arg2, uint256 arg3, bytes arg4) payable {
    require calldata.size - 4 >= 128
    require arg1 == arg1
    require arg2 == arg2
    require arg4 <= test266151307()
    require calldata.size > arg4 + 35
    if arg4.length > test266151307():
        revert with 0, 65
    if ceil32(ceil32(arg4.length)) + 97 < 96 or ceil32(ceil32(arg4.length)) + 97 > test266151307():
        revert with 0, 65
    mem[96] = arg4.length
    require arg4 + arg4.length + 36 <= calldata.size
    mem[128 len arg4.length] = arg4[all]
    mem[arg4.length + 128] = 0
    if not ownerOf[arg3]:
        revert with 0, 'ERC721: operator query for nonexistent token'
    if not ownerOf[arg3]:
        revert with 0, 'ERC721: owner query for nonexistent token'
    if msg.sender == ownerOf[arg3]:
        if not ownerOf[arg3]:
            revert with 0, 'ERC721: owner query for nonexistent token'
        if ownerOf[arg3] != arg1:
            revert with 0, 'ERC721: transfer from incorrect owner'
        if not arg2:
            revert with 0, 'ERC721: transfer to the zero address'
        if owner == arg2:
            if not arg1:
                stor154[arg3] = tokenByIndex.length
                tokenByIndex.length++
                stor72A1[stor153.length] = arg3
            else:
                if arg1 != arg2:
                    if not arg1:
                        revert with 0, 'ERC721: balance query for the zero address'
                    if balanceOf[address(arg1)] < 1:
                        revert with 0, 17
                    if balanceOf[address(arg1)] - 1 != stor152[arg3]:
                        tokenOfOwnerByIndex[address(arg1)][stor152[arg3]] = tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1]
                        stor152[stor151[address(arg1)][stor104[address(arg1)] - 1]] = stor152[arg3]
                    stor152[arg3] = 0
                    tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
            if arg2:
                if arg2 != arg1:
                    if not arg2:
                        revert with 0, 'ERC721: balance query for the zero address'
                    tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                    stor152[arg3] = balanceOf[address(arg2)]
            else:
                if tokenByIndex.length < 1:
                    revert with 0, 17
                if tokenByIndex.length - 1 >= tokenByIndex.length:
                    revert with 0, 50
                if stor154[arg3] >= tokenByIndex.length:
                    revert with 0, 50
                tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                stor154[stor153[stor153.length]] = stor154[arg3]
                stor154[arg3] = 0
                if not tokenByIndex.length:
                    revert with 0, 49
                tokenByIndex[tokenByIndex.length] = 0
                tokenByIndex.length--
            approved[arg3] = 0
            if not ownerOf[arg3]:
                revert with 0, 'ERC721: owner query for nonexistent token'
            emit Approval(ownerOf[arg3], 0, arg3);
            if balanceOf[address(arg1)] < 1:
                revert with 0, 17
            balanceOf[address(arg1)]--
            if balanceOf[address(arg2)] > -2:
                revert with 0, 17
            balanceOf[address(arg2)]++
            ownerOf[arg3] = arg2
            emit Transfer(arg1, arg2, arg3);
            if ext_code.size(arg2):
                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                     gas gas_remaining wei
                    args msg.sender, address(arg1), arg3, Array(len=arg4.length, data=arg4[all])
                if not ext_call.success:
                    if not return_data.size:
                        if not arg4.length:
                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                        revert with arg4[all]
                    if not return_data.size:
                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
        else:
            if bool(uint8(stor552[arg3].field_1536)) != 1:
                if not arg1:
                    stor154[arg3] = tokenByIndex.length
                    tokenByIndex.length++
                    stor72A1[stor153.length] = arg3
                else:
                    if arg1 != arg2:
                        if not arg1:
                            revert with 0, 'ERC721: balance query for the zero address'
                        if balanceOf[address(arg1)] < 1:
                            revert with 0, 17
                        if balanceOf[address(arg1)] - 1 != stor152[arg3]:
                            tokenOfOwnerByIndex[address(arg1)][stor152[arg3]] = tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1]
                            stor152[stor151[address(arg1)][stor104[address(arg1)] - 1]] = stor152[arg3]
                        stor152[arg3] = 0
                        tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                if arg2:
                    if arg2 != arg1:
                        if not arg2:
                            revert with 0, 'ERC721: balance query for the zero address'
                        tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                        stor152[arg3] = balanceOf[address(arg2)]
                else:
                    if tokenByIndex.length < 1:
                        revert with 0, 17
                    if tokenByIndex.length - 1 >= tokenByIndex.length:
                        revert with 0, 50
                    if stor154[arg3] >= tokenByIndex.length:
                        revert with 0, 50
                    tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                    stor154[stor153[stor153.length]] = stor154[arg3]
                    stor154[arg3] = 0
                    if not tokenByIndex.length:
                        revert with 0, 49
                    tokenByIndex[tokenByIndex.length] = 0
                    tokenByIndex.length--
                approved[arg3] = 0
                if not ownerOf[arg3]:
                    revert with 0, 'ERC721: owner query for nonexistent token'
                emit Approval(ownerOf[arg3], 0, arg3);
                if balanceOf[address(arg1)] < 1:
                    revert with 0, 17
                balanceOf[address(arg1)]--
                if balanceOf[address(arg2)] > -2:
                    revert with 0, 17
                balanceOf[address(arg2)]++
                ownerOf[arg3] = arg2
                emit Transfer(arg1, arg2, arg3);
                if ext_code.size(arg2):
                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                         gas gas_remaining wei
                        args msg.sender, address(arg1), arg3, Array(len=arg4.length, data=arg4[all])
                    if not ext_call.success:
                        if not return_data.size:
                            if not arg4.length:
                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                            revert with arg4[all]
                        if not return_data.size:
                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                    if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
            else:
                if bool(uint8(stor552[arg3].field_1544)) != 1:
                    if not arg1:
                        stor154[arg3] = tokenByIndex.length
                        tokenByIndex.length++
                        stor72A1[stor153.length] = arg3
                    else:
                        if arg1 != arg2:
                            if not arg1:
                                revert with 0, 'ERC721: balance query for the zero address'
                            if balanceOf[address(arg1)] < 1:
                                revert with 0, 17
                            if balanceOf[address(arg1)] - 1 != stor152[arg3]:
                                tokenOfOwnerByIndex[address(arg1)][stor152[arg3]] = tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1]
                                stor152[stor151[address(arg1)][stor104[address(arg1)] - 1]] = stor152[arg3]
                            stor152[arg3] = 0
                            tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                    if arg2:
                        if arg2 != arg1:
                            if not arg2:
                                revert with 0, 'ERC721: balance query for the zero address'
                            tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                            stor152[arg3] = balanceOf[address(arg2)]
                    else:
                        if tokenByIndex.length < 1:
                            revert with 0, 17
                        if tokenByIndex.length - 1 >= tokenByIndex.length:
                            revert with 0, 50
                        if stor154[arg3] >= tokenByIndex.length:
                            revert with 0, 50
                        tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                        stor154[stor153[stor153.length]] = stor154[arg3]
                        stor154[arg3] = 0
                        if not tokenByIndex.length:
                            revert with 0, 49
                        tokenByIndex[tokenByIndex.length] = 0
                        tokenByIndex.length--
                    approved[arg3] = 0
                    if not ownerOf[arg3]:
                        revert with 0, 'ERC721: owner query for nonexistent token'
                    emit Approval(ownerOf[arg3], 0, arg3);
                    if balanceOf[address(arg1)] < 1:
                        revert with 0, 17
                    balanceOf[address(arg1)]--
                    if balanceOf[address(arg2)] > -2:
                        revert with 0, 17
                    balanceOf[address(arg2)]++
                    ownerOf[arg3] = arg2
                    emit Transfer(arg1, arg2, arg3);
                    if ext_code.size(arg2):
                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                             gas gas_remaining wei
                            args msg.sender, address(arg1), arg3, Array(len=arg4.length, data=arg4[all])
                        if not ext_call.success:
                            if not return_data.size:
                                if not arg4.length:
                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                revert with arg4[all]
                            if not return_data.size:
                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                        if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                else:
                    if not liquidityPoolManagerImplementationAddress:
                        if not arg2:
                            revert with 0, 'ERC721: balance query for the zero address'
                        if balanceOf[address(arg2)] > test266151307():
                            revert with 0, 65
                        mem[ceil32(ceil32(arg4.length)) + 97] = balanceOf[address(arg2)]
                        mem[64] = ceil32(ceil32(arg4.length)) + (32 * balanceOf[address(arg2)]) + 129
                        if not balanceOf[address(arg2)]:
                            idx = 0
                            while idx < balanceOf[address(arg2)]:
                                if not arg2:
                                    revert with 0, 'ERC721: balance query for the zero address'
                                if idx >= balanceOf[address(arg2)]:
                                    revert with 0, 'ERC721Enumerable: owner index out of bounds'
                                if tokenOfOwnerByIndex[address(arg2)][idx] <= 0:
                                    revert with 0, 'Troops: Id must be higher than zero'
                                mem[0] = tokenOfOwnerByIndex[address(arg2)][idx]
                                mem[32] = 552
                                _15881 = mem[64]
                                mem[64] = mem[64] + 256
                                mem[_15881] = stor552[stor151[address(arg2)][idx]].field_0
                                if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                    if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                        revert with 0, 34
                                    _17753 = mem[64]
                                    mem[64] = mem[64] + ceil32(uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) + 32
                                    mem[_17753] = uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5
                                    if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                            revert with 0, 34
                                        if Mask(256, -1, stor552[stor151[address(arg2)][idx]].field_256):
                                            if 31 >= uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5:
                                                mem[_17753 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                            else:
                                                mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                mem[_17753 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                s = _17753 + 32
                                                t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                while _17753 + (uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) > s:
                                                    mem[s + 32] = stor1[t].field_0
                                                    s = s + 32
                                                    t = t + 1
                                                    continue 
                                    else:
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                            revert with 0, 34
                                        if stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                            if 31 >= stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                mem[_17753 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                            else:
                                                mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                mem[_17753 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                s = _17753 + 32
                                                t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                while _17753 + stor552[stor151[address(arg2)][idx]].field_257 % 128 > s:
                                                    mem[s + 32] = stor1[t].field_0
                                                    s = s + 32
                                                    t = t + 1
                                                    continue 
                                    mem[_15881 + 32] = _17753
                                else:
                                    if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                        revert with 0, 34
                                    _17780 = mem[64]
                                    mem[64] = mem[64] + ceil32(stor552[stor151[address(arg2)][idx]].field_257 % 128) + 32
                                    mem[_17780] = stor552[stor151[address(arg2)][idx]].field_257 % 128
                                    if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                            revert with 0, 34
                                        if Mask(256, -1, stor552[stor151[address(arg2)][idx]].field_256):
                                            if 31 >= uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5:
                                                mem[_17780 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                            else:
                                                mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                mem[_17780 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                s = _17780 + 32
                                                t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                while _17780 + (uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) > s:
                                                    mem[s + 32] = stor1[t].field_0
                                                    s = s + 32
                                                    t = t + 1
                                                    continue 
                                    else:
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                            revert with 0, 34
                                        if stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                            if 31 >= stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                mem[_17780 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                            else:
                                                mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                mem[_17780 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                s = _17780 + 32
                                                t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                while _17780 + stor552[stor151[address(arg2)][idx]].field_257 % 128 > s:
                                                    mem[s + 32] = stor1[t].field_0
                                                    s = s + 32
                                                    t = t + 1
                                                    continue 
                                    mem[_15881 + 32] = _17780
                                mem[_15881 + 64] = stor552[stor151[address(arg2)][idx]].field_512
                                mem[_15881 + 96] = stor552[stor151[address(arg2)][idx]].field_768
                                mem[_15881 + 128] = stor552[stor151[address(arg2)][idx]].field_1024
                                mem[_15881 + 160] = stor552[stor151[address(arg2)][idx]].field_1280
                                mem[_15881 + 192] = bool(uint8(stor552[stor151[address(arg2)][idx]].field_1536))
                                mem[_15881 + 224] = bool(uint8(stor552[stor151[address(arg2)][idx]].field_1544))
                                require uint8(stor552[stor151[address(arg2)][idx]].field_1536)
                                if idx >= mem[ceil32(ceil32(arg4.length)) + 97]:
                                    revert with 0, 50
                                mem[(32 * idx) + ceil32(ceil32(arg4.length)) + 129] = tokenOfOwnerByIndex[address(arg2)][idx]
                                if idx == -1:
                                    revert with 0, 17
                                idx = idx + 1
                                continue 
                            idx = 0
                            s = 0
                            while idx < mem[ceil32(ceil32(arg4.length)) + 97]:
                                if idx >= mem[ceil32(ceil32(arg4.length)) + 97]:
                                    revert with 0, 50
                                mem[0] = mem[(32 * idx) + ceil32(ceil32(arg4.length)) + 129]
                                mem[32] = 552
                                if not uint8(stor552[mem[(32 * idx) + ceil32(ceil32(arg4.length)) + 129]].field_1544):
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    s = s
                                    continue 
                                if s == -1:
                                    revert with 0, 17
                                if idx == -1:
                                    revert with 0, 17
                                idx = idx + 1
                                s = s + 1
                                continue 
                            if s >= 2:
                                revert with 0, 'Each holder can not hold more than 2 Gladiators'
                            if not arg1:
                                stor154[arg3] = tokenByIndex.length
                                tokenByIndex.length++
                                stor72A1[stor153.length] = arg3
                                if arg2:
                                    if arg2 == arg1:
                                        approved[arg3] = 0
                                        if not ownerOf[arg3]:
                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                        emit Approval(ownerOf[arg3], 0, arg3);
                                        if balanceOf[address(arg1)] < 1:
                                            revert with 0, 17
                                        balanceOf[address(arg1)]--
                                        if balanceOf[address(arg2)] > -2:
                                            revert with 0, 17
                                        balanceOf[address(arg2)]++
                                        mem[0] = arg3
                                        mem[32] = 103
                                        ownerOf[arg3] = arg2
                                        emit Transfer(arg1, arg2, arg3);
                                        if ext_code.size(arg2):
                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = msg.sender
                                            mem[mem[64] + 36] = arg1
                                            mem[mem[64] + 68] = arg3
                                            mem[mem[64] + 100] = 128
                                            mem[mem[64] + 132] = mem[96]
                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                            if ceil32(mem[96]) <= mem[96]:
                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    if not return_data.size:
                                                        if not mem[96]:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with memory
                                                          from 128
                                                           len mem[96]
                                                    if not return_data.size:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _32446 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                require mem[_32446] == Mask(32, 224, mem[_32446])
                                                if Mask(32, 224, mem[_32446]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                mem[mem[64] + mem[96] + 164] = 0
                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    if not return_data.size:
                                                        if not mem[96]:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with memory
                                                          from 128
                                                           len mem[96]
                                                    if not return_data.size:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _32725 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                require mem[_32725] == Mask(32, 224, mem[_32725])
                                                if Mask(32, 224, mem[_32725]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                    else:
                                        if not arg2:
                                            revert with 0, 'ERC721: balance query for the zero address'
                                        tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                        stor152[arg3] = balanceOf[address(arg2)]
                                        approved[arg3] = 0
                                        if not ownerOf[arg3]:
                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                        emit Approval(ownerOf[arg3], 0, arg3);
                                        if balanceOf[address(arg1)] < 1:
                                            revert with 0, 17
                                        balanceOf[address(arg1)]--
                                        if balanceOf[address(arg2)] > -2:
                                            revert with 0, 17
                                        balanceOf[address(arg2)]++
                                        mem[0] = arg3
                                        mem[32] = 103
                                        ownerOf[arg3] = arg2
                                        emit Transfer(arg1, arg2, arg3);
                                        if ext_code.size(arg2):
                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = msg.sender
                                            mem[mem[64] + 36] = arg1
                                            mem[mem[64] + 68] = arg3
                                            mem[mem[64] + 100] = 128
                                            mem[mem[64] + 132] = mem[96]
                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                            if ceil32(mem[96]) <= mem[96]:
                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    if not return_data.size:
                                                        if not mem[96]:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with memory
                                                          from 128
                                                           len mem[96]
                                                    if not return_data.size:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _32448 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                require mem[_32448] == Mask(32, 224, mem[_32448])
                                                if Mask(32, 224, mem[_32448]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                mem[mem[64] + mem[96] + 164] = 0
                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    if not return_data.size:
                                                        if not mem[96]:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with memory
                                                          from 128
                                                           len mem[96]
                                                    if not return_data.size:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _32726 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                require mem[_32726] == Mask(32, 224, mem[_32726])
                                                if Mask(32, 224, mem[_32726]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                else:
                                    if tokenByIndex.length < 1:
                                        revert with 0, 17
                                    if tokenByIndex.length - 1 >= tokenByIndex.length:
                                        revert with 0, 50
                                    if stor154[arg3] >= tokenByIndex.length:
                                        revert with 0, 50
                                    tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                    stor154[stor153[stor153.length]] = stor154[arg3]
                                    stor154[arg3] = 0
                                    if not tokenByIndex.length:
                                        revert with 0, 49
                                    tokenByIndex[tokenByIndex.length] = 0
                                    tokenByIndex.length--
                                    approved[arg3] = 0
                                    if not ownerOf[arg3]:
                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                    emit Approval(ownerOf[arg3], 0, arg3);
                                    if balanceOf[address(arg1)] < 1:
                                        revert with 0, 17
                                    balanceOf[address(arg1)]--
                                    if balanceOf[address(arg2)] > -2:
                                        revert with 0, 17
                                    balanceOf[address(arg2)]++
                                    mem[0] = arg3
                                    mem[32] = 103
                                    ownerOf[arg3] = arg2
                                    emit Transfer(arg1, arg2, arg3);
                                    if ext_code.size(arg2):
                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = arg1
                                        mem[mem[64] + 68] = arg3
                                        mem[mem[64] + 100] = 128
                                        mem[mem[64] + 132] = mem[96]
                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                        if ceil32(mem[96]) <= mem[96]:
                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                if not return_data.size:
                                                    if not mem[96]:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    revert with memory
                                                      from 128
                                                       len mem[96]
                                                if not return_data.size:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _32450 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            require mem[_32450] == Mask(32, 224, mem[_32450])
                                            if Mask(32, 224, mem[_32450]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            mem[mem[64] + mem[96] + 164] = 0
                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                if not return_data.size:
                                                    if not mem[96]:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    revert with memory
                                                      from 128
                                                       len mem[96]
                                                if not return_data.size:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _32727 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            require mem[_32727] == Mask(32, 224, mem[_32727])
                                            if Mask(32, 224, mem[_32727]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                            else:
                                if arg1 == arg2:
                                    if arg2:
                                        if arg2 == arg1:
                                            approved[arg3] = 0
                                            if not ownerOf[arg3]:
                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                            emit Approval(ownerOf[arg3], 0, arg3);
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            balanceOf[address(arg1)]--
                                            if balanceOf[address(arg2)] > -2:
                                                revert with 0, 17
                                            balanceOf[address(arg2)]++
                                            mem[0] = arg3
                                            mem[32] = 103
                                            ownerOf[arg3] = arg2
                                            emit Transfer(arg1, arg2, arg3);
                                            if ext_code.size(arg2):
                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = msg.sender
                                                mem[mem[64] + 36] = arg1
                                                mem[mem[64] + 68] = arg3
                                                mem[mem[64] + 100] = 128
                                                mem[mem[64] + 132] = mem[96]
                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                if ceil32(mem[96]) <= mem[96]:
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _32428 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_32428] == Mask(32, 224, mem[_32428])
                                                    if Mask(32, 224, mem[_32428]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    mem[mem[64] + mem[96] + 164] = 0
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _32716 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_32716] == Mask(32, 224, mem[_32716])
                                                    if Mask(32, 224, mem[_32716]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            if not arg2:
                                                revert with 0, 'ERC721: balance query for the zero address'
                                            tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                            stor152[arg3] = balanceOf[address(arg2)]
                                            approved[arg3] = 0
                                            if not ownerOf[arg3]:
                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                            emit Approval(ownerOf[arg3], 0, arg3);
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            balanceOf[address(arg1)]--
                                            if balanceOf[address(arg2)] > -2:
                                                revert with 0, 17
                                            balanceOf[address(arg2)]++
                                            mem[0] = arg3
                                            mem[32] = 103
                                            ownerOf[arg3] = arg2
                                            emit Transfer(arg1, arg2, arg3);
                                            if ext_code.size(arg2):
                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = msg.sender
                                                mem[mem[64] + 36] = arg1
                                                mem[mem[64] + 68] = arg3
                                                mem[mem[64] + 100] = 128
                                                mem[mem[64] + 132] = mem[96]
                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                if ceil32(mem[96]) <= mem[96]:
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _32430 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_32430] == Mask(32, 224, mem[_32430])
                                                    if Mask(32, 224, mem[_32430]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    mem[mem[64] + mem[96] + 164] = 0
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _32717 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_32717] == Mask(32, 224, mem[_32717])
                                                    if Mask(32, 224, mem[_32717]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                    else:
                                        if tokenByIndex.length < 1:
                                            revert with 0, 17
                                        if tokenByIndex.length - 1 >= tokenByIndex.length:
                                            revert with 0, 50
                                        if stor154[arg3] >= tokenByIndex.length:
                                            revert with 0, 50
                                        tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                        stor154[stor153[stor153.length]] = stor154[arg3]
                                        stor154[arg3] = 0
                                        if not tokenByIndex.length:
                                            revert with 0, 49
                                        tokenByIndex[tokenByIndex.length] = 0
                                        tokenByIndex.length--
                                        approved[arg3] = 0
                                        if not ownerOf[arg3]:
                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                        emit Approval(ownerOf[arg3], 0, arg3);
                                        if balanceOf[address(arg1)] < 1:
                                            revert with 0, 17
                                        balanceOf[address(arg1)]--
                                        if balanceOf[address(arg2)] > -2:
                                            revert with 0, 17
                                        balanceOf[address(arg2)]++
                                        mem[0] = arg3
                                        mem[32] = 103
                                        ownerOf[arg3] = arg2
                                        emit Transfer(arg1, arg2, arg3);
                                        if ext_code.size(arg2):
                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = msg.sender
                                            mem[mem[64] + 36] = arg1
                                            mem[mem[64] + 68] = arg3
                                            mem[mem[64] + 100] = 128
                                            mem[mem[64] + 132] = mem[96]
                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                            if ceil32(mem[96]) <= mem[96]:
                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    if not return_data.size:
                                                        if not mem[96]:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with memory
                                                          from 128
                                                           len mem[96]
                                                    if not return_data.size:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _32432 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                require mem[_32432] == Mask(32, 224, mem[_32432])
                                                if Mask(32, 224, mem[_32432]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                mem[mem[64] + mem[96] + 164] = 0
                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    if not return_data.size:
                                                        if not mem[96]:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with memory
                                                          from 128
                                                           len mem[96]
                                                    if not return_data.size:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _32718 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                require mem[_32718] == Mask(32, 224, mem[_32718])
                                                if Mask(32, 224, mem[_32718]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                else:
                                    if not arg1:
                                        revert with 0, 'ERC721: balance query for the zero address'
                                    if balanceOf[address(arg1)] < 1:
                                        revert with 0, 17
                                    if balanceOf[address(arg1)] - 1 == stor152[arg3]:
                                        stor152[arg3] = 0
                                        tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                                        if arg2:
                                            if arg2 == arg1:
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32434 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32434] == Mask(32, 224, mem[_32434])
                                                        if Mask(32, 224, mem[_32434]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[64] + mem[96] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32719 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32719] == Mask(32, 224, mem[_32719])
                                                        if Mask(32, 224, mem[_32719]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if not arg2:
                                                    revert with 0, 'ERC721: balance query for the zero address'
                                                tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                stor152[arg3] = balanceOf[address(arg2)]
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32436 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32436] == Mask(32, 224, mem[_32436])
                                                        if Mask(32, 224, mem[_32436]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[64] + mem[96] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32720 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32720] == Mask(32, 224, mem[_32720])
                                                        if Mask(32, 224, mem[_32720]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            if tokenByIndex.length < 1:
                                                revert with 0, 17
                                            if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                revert with 0, 50
                                            if stor154[arg3] >= tokenByIndex.length:
                                                revert with 0, 50
                                            tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                            stor154[stor153[stor153.length]] = stor154[arg3]
                                            stor154[arg3] = 0
                                            if not tokenByIndex.length:
                                                revert with 0, 49
                                            tokenByIndex[tokenByIndex.length] = 0
                                            tokenByIndex.length--
                                            approved[arg3] = 0
                                            if not ownerOf[arg3]:
                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                            emit Approval(ownerOf[arg3], 0, arg3);
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            balanceOf[address(arg1)]--
                                            if balanceOf[address(arg2)] > -2:
                                                revert with 0, 17
                                            balanceOf[address(arg2)]++
                                            mem[0] = arg3
                                            mem[32] = 103
                                            ownerOf[arg3] = arg2
                                            emit Transfer(arg1, arg2, arg3);
                                            if ext_code.size(arg2):
                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = msg.sender
                                                mem[mem[64] + 36] = arg1
                                                mem[mem[64] + 68] = arg3
                                                mem[mem[64] + 100] = 128
                                                mem[mem[64] + 132] = mem[96]
                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                if ceil32(mem[96]) <= mem[96]:
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _32438 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_32438] == Mask(32, 224, mem[_32438])
                                                    if Mask(32, 224, mem[_32438]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    mem[mem[64] + mem[96] + 164] = 0
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _32721 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_32721] == Mask(32, 224, mem[_32721])
                                                    if Mask(32, 224, mem[_32721]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                    else:
                                        tokenOfOwnerByIndex[address(arg1)][stor152[arg3]] = tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1]
                                        stor152[stor151[address(arg1)][stor104[address(arg1)] - 1]] = stor152[arg3]
                                        stor152[arg3] = 0
                                        tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                                        if arg2:
                                            if arg2 == arg1:
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32440 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32440] == Mask(32, 224, mem[_32440])
                                                        if Mask(32, 224, mem[_32440]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[64] + mem[96] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32722 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32722] == Mask(32, 224, mem[_32722])
                                                        if Mask(32, 224, mem[_32722]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if not arg2:
                                                    revert with 0, 'ERC721: balance query for the zero address'
                                                tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                stor152[arg3] = balanceOf[address(arg2)]
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32442 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32442] == Mask(32, 224, mem[_32442])
                                                        if Mask(32, 224, mem[_32442]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[64] + mem[96] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32723 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32723] == Mask(32, 224, mem[_32723])
                                                        if Mask(32, 224, mem[_32723]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            if tokenByIndex.length < 1:
                                                revert with 0, 17
                                            if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                revert with 0, 50
                                            if stor154[arg3] >= tokenByIndex.length:
                                                revert with 0, 50
                                            tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                            stor154[stor153[stor153.length]] = stor154[arg3]
                                            stor154[arg3] = 0
                                            if not tokenByIndex.length:
                                                revert with 0, 49
                                            tokenByIndex[tokenByIndex.length] = 0
                                            tokenByIndex.length--
                                            approved[arg3] = 0
                                            if not ownerOf[arg3]:
                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                            emit Approval(ownerOf[arg3], 0, arg3);
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            balanceOf[address(arg1)]--
                                            if balanceOf[address(arg2)] > -2:
                                                revert with 0, 17
                                            balanceOf[address(arg2)]++
                                            mem[0] = arg3
                                            mem[32] = 103
                                            ownerOf[arg3] = arg2
                                            emit Transfer(arg1, arg2, arg3);
                                            if ext_code.size(arg2):
                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = msg.sender
                                                mem[mem[64] + 36] = arg1
                                                mem[mem[64] + 68] = arg3
                                                mem[mem[64] + 100] = 128
                                                mem[mem[64] + 132] = mem[96]
                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                if ceil32(mem[96]) <= mem[96]:
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _32444 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_32444] == Mask(32, 224, mem[_32444])
                                                    if Mask(32, 224, mem[_32444]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    mem[mem[64] + mem[96] + 164] = 0
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _32724 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_32724] == Mask(32, 224, mem[_32724])
                                                    if Mask(32, 224, mem[_32724]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                        else:
                            mem[ceil32(ceil32(arg4.length)) + 129 len 32 * balanceOf[address(arg2)]] = call.data[calldata.size len 32 * balanceOf[address(arg2)]]
                            idx = 0
                            while idx < balanceOf[address(arg2)]:
                                if not arg2:
                                    revert with 0, 'ERC721: balance query for the zero address'
                                if idx >= balanceOf[address(arg2)]:
                                    revert with 0, 'ERC721Enumerable: owner index out of bounds'
                                if tokenOfOwnerByIndex[address(arg2)][idx] <= 0:
                                    revert with 0, 'Troops: Id must be higher than zero'
                                mem[0] = tokenOfOwnerByIndex[address(arg2)][idx]
                                mem[32] = 552
                                _15884 = mem[64]
                                mem[64] = mem[64] + 256
                                mem[_15884] = stor552[stor151[address(arg2)][idx]].field_0
                                if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                    if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                        revert with 0, 34
                                    _17755 = mem[64]
                                    mem[64] = mem[64] + ceil32(uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) + 32
                                    mem[_17755] = uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5
                                    if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                            revert with 0, 34
                                        if Mask(256, -1, stor552[stor151[address(arg2)][idx]].field_256):
                                            if 31 >= uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5:
                                                mem[_17755 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                            else:
                                                mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                mem[_17755 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                s = _17755 + 32
                                                t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                while _17755 + (uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) > s:
                                                    mem[s + 32] = stor1[t].field_0
                                                    s = s + 32
                                                    t = t + 1
                                                    continue 
                                    else:
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                            revert with 0, 34
                                        if stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                            if 31 >= stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                mem[_17755 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                            else:
                                                mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                mem[_17755 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                s = _17755 + 32
                                                t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                while _17755 + stor552[stor151[address(arg2)][idx]].field_257 % 128 > s:
                                                    mem[s + 32] = stor1[t].field_0
                                                    s = s + 32
                                                    t = t + 1
                                                    continue 
                                    mem[_15884 + 32] = _17755
                                else:
                                    if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                        revert with 0, 34
                                    _17785 = mem[64]
                                    mem[64] = mem[64] + ceil32(stor552[stor151[address(arg2)][idx]].field_257 % 128) + 32
                                    mem[_17785] = stor552[stor151[address(arg2)][idx]].field_257 % 128
                                    if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                            revert with 0, 34
                                        if Mask(256, -1, stor552[stor151[address(arg2)][idx]].field_256):
                                            if 31 >= uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5:
                                                mem[_17785 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                            else:
                                                mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                mem[_17785 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                s = _17785 + 32
                                                t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                while _17785 + (uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) > s:
                                                    mem[s + 32] = stor1[t].field_0
                                                    s = s + 32
                                                    t = t + 1
                                                    continue 
                                    else:
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                            revert with 0, 34
                                        if stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                            if 31 >= stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                mem[_17785 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                            else:
                                                mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                mem[_17785 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                s = _17785 + 32
                                                t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                while _17785 + stor552[stor151[address(arg2)][idx]].field_257 % 128 > s:
                                                    mem[s + 32] = stor1[t].field_0
                                                    s = s + 32
                                                    t = t + 1
                                                    continue 
                                    mem[_15884 + 32] = _17785
                                mem[_15884 + 64] = stor552[stor151[address(arg2)][idx]].field_512
                                mem[_15884 + 96] = stor552[stor151[address(arg2)][idx]].field_768
                                mem[_15884 + 128] = stor552[stor151[address(arg2)][idx]].field_1024
                                mem[_15884 + 160] = stor552[stor151[address(arg2)][idx]].field_1280
                                mem[_15884 + 192] = bool(uint8(stor552[stor151[address(arg2)][idx]].field_1536))
                                mem[_15884 + 224] = bool(uint8(stor552[stor151[address(arg2)][idx]].field_1544))
                                require uint8(stor552[stor151[address(arg2)][idx]].field_1536)
                                if idx >= mem[ceil32(ceil32(arg4.length)) + 97]:
                                    revert with 0, 50
                                mem[(32 * idx) + ceil32(ceil32(arg4.length)) + 129] = tokenOfOwnerByIndex[address(arg2)][idx]
                                if idx == -1:
                                    revert with 0, 17
                                idx = idx + 1
                                continue 
                            idx = 0
                            s = 0
                            while idx < mem[ceil32(ceil32(arg4.length)) + 97]:
                                if idx >= mem[ceil32(ceil32(arg4.length)) + 97]:
                                    revert with 0, 50
                                mem[0] = mem[(32 * idx) + ceil32(ceil32(arg4.length)) + 129]
                                mem[32] = 552
                                if not uint8(stor552[mem[(32 * idx) + ceil32(ceil32(arg4.length)) + 129]].field_1544):
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    s = s
                                    continue 
                                if s == -1:
                                    revert with 0, 17
                                if idx == -1:
                                    revert with 0, 17
                                idx = idx + 1
                                s = s + 1
                                continue 
                            if s >= 2:
                                revert with 0, 'Each holder can not hold more than 2 Gladiators'
                            if not arg1:
                                stor154[arg3] = tokenByIndex.length
                                tokenByIndex.length++
                                stor72A1[stor153.length] = arg3
                                if arg2:
                                    if arg2 == arg1:
                                        approved[arg3] = 0
                                        if not ownerOf[arg3]:
                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                        emit Approval(ownerOf[arg3], 0, arg3);
                                        if balanceOf[address(arg1)] < 1:
                                            revert with 0, 17
                                        balanceOf[address(arg1)]--
                                        if balanceOf[address(arg2)] > -2:
                                            revert with 0, 17
                                        balanceOf[address(arg2)]++
                                        mem[0] = arg3
                                        mem[32] = 103
                                        ownerOf[arg3] = arg2
                                        emit Transfer(arg1, arg2, arg3);
                                        if ext_code.size(arg2):
                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = msg.sender
                                            mem[mem[64] + 36] = arg1
                                            mem[mem[64] + 68] = arg3
                                            mem[mem[64] + 100] = 128
                                            mem[mem[64] + 132] = mem[96]
                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                            if ceil32(mem[96]) <= mem[96]:
                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    if not return_data.size:
                                                        if not mem[96]:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with memory
                                                          from 128
                                                           len mem[96]
                                                    if not return_data.size:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _32470 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                require mem[_32470] == Mask(32, 224, mem[_32470])
                                                if Mask(32, 224, mem[_32470]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                mem[mem[64] + mem[96] + 164] = 0
                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    if not return_data.size:
                                                        if not mem[96]:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with memory
                                                          from 128
                                                           len mem[96]
                                                    if not return_data.size:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _32737 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                require mem[_32737] == Mask(32, 224, mem[_32737])
                                                if Mask(32, 224, mem[_32737]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                    else:
                                        if not arg2:
                                            revert with 0, 'ERC721: balance query for the zero address'
                                        tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                        stor152[arg3] = balanceOf[address(arg2)]
                                        approved[arg3] = 0
                                        if not ownerOf[arg3]:
                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                        emit Approval(ownerOf[arg3], 0, arg3);
                                        if balanceOf[address(arg1)] < 1:
                                            revert with 0, 17
                                        balanceOf[address(arg1)]--
                                        if balanceOf[address(arg2)] > -2:
                                            revert with 0, 17
                                        balanceOf[address(arg2)]++
                                        mem[0] = arg3
                                        mem[32] = 103
                                        ownerOf[arg3] = arg2
                                        emit Transfer(arg1, arg2, arg3);
                                        if ext_code.size(arg2):
                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = msg.sender
                                            mem[mem[64] + 36] = arg1
                                            mem[mem[64] + 68] = arg3
                                            mem[mem[64] + 100] = 128
                                            mem[mem[64] + 132] = mem[96]
                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                            if ceil32(mem[96]) <= mem[96]:
                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    if not return_data.size:
                                                        if not mem[96]:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with memory
                                                          from 128
                                                           len mem[96]
                                                    if not return_data.size:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _32472 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                require mem[_32472] == Mask(32, 224, mem[_32472])
                                                if Mask(32, 224, mem[_32472]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                mem[mem[64] + mem[96] + 164] = 0
                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    if not return_data.size:
                                                        if not mem[96]:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with memory
                                                          from 128
                                                           len mem[96]
                                                    if not return_data.size:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _32738 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                require mem[_32738] == Mask(32, 224, mem[_32738])
                                                if Mask(32, 224, mem[_32738]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                else:
                                    if tokenByIndex.length < 1:
                                        revert with 0, 17
                                    if tokenByIndex.length - 1 >= tokenByIndex.length:
                                        revert with 0, 50
                                    if stor154[arg3] >= tokenByIndex.length:
                                        revert with 0, 50
                                    tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                    stor154[stor153[stor153.length]] = stor154[arg3]
                                    stor154[arg3] = 0
                                    if not tokenByIndex.length:
                                        revert with 0, 49
                                    tokenByIndex[tokenByIndex.length] = 0
                                    tokenByIndex.length--
                                    approved[arg3] = 0
                                    if not ownerOf[arg3]:
                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                    emit Approval(ownerOf[arg3], 0, arg3);
                                    if balanceOf[address(arg1)] < 1:
                                        revert with 0, 17
                                    balanceOf[address(arg1)]--
                                    if balanceOf[address(arg2)] > -2:
                                        revert with 0, 17
                                    balanceOf[address(arg2)]++
                                    mem[0] = arg3
                                    mem[32] = 103
                                    ownerOf[arg3] = arg2
                                    emit Transfer(arg1, arg2, arg3);
                                    if ext_code.size(arg2):
                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = arg1
                                        mem[mem[64] + 68] = arg3
                                        mem[mem[64] + 100] = 128
                                        mem[mem[64] + 132] = mem[96]
                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                        if ceil32(mem[96]) <= mem[96]:
                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                if not return_data.size:
                                                    if not mem[96]:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    revert with memory
                                                      from 128
                                                       len mem[96]
                                                if not return_data.size:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _32474 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            require mem[_32474] == Mask(32, 224, mem[_32474])
                                            if Mask(32, 224, mem[_32474]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            mem[mem[64] + mem[96] + 164] = 0
                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                if not return_data.size:
                                                    if not mem[96]:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    revert with memory
                                                      from 128
                                                       len mem[96]
                                                if not return_data.size:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _32739 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            require mem[_32739] == Mask(32, 224, mem[_32739])
                                            if Mask(32, 224, mem[_32739]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                            else:
                                if arg1 == arg2:
                                    if arg2:
                                        if arg2 == arg1:
                                            approved[arg3] = 0
                                            if not ownerOf[arg3]:
                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                            emit Approval(ownerOf[arg3], 0, arg3);
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            balanceOf[address(arg1)]--
                                            if balanceOf[address(arg2)] > -2:
                                                revert with 0, 17
                                            balanceOf[address(arg2)]++
                                            mem[0] = arg3
                                            mem[32] = 103
                                            ownerOf[arg3] = arg2
                                            emit Transfer(arg1, arg2, arg3);
                                            if ext_code.size(arg2):
                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = msg.sender
                                                mem[mem[64] + 36] = arg1
                                                mem[mem[64] + 68] = arg3
                                                mem[mem[64] + 100] = 128
                                                mem[mem[64] + 132] = mem[96]
                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                if ceil32(mem[96]) <= mem[96]:
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _32452 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_32452] == Mask(32, 224, mem[_32452])
                                                    if Mask(32, 224, mem[_32452]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    mem[mem[64] + mem[96] + 164] = 0
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _32728 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_32728] == Mask(32, 224, mem[_32728])
                                                    if Mask(32, 224, mem[_32728]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            if not arg2:
                                                revert with 0, 'ERC721: balance query for the zero address'
                                            tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                            stor152[arg3] = balanceOf[address(arg2)]
                                            approved[arg3] = 0
                                            if not ownerOf[arg3]:
                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                            emit Approval(ownerOf[arg3], 0, arg3);
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            balanceOf[address(arg1)]--
                                            if balanceOf[address(arg2)] > -2:
                                                revert with 0, 17
                                            balanceOf[address(arg2)]++
                                            mem[0] = arg3
                                            mem[32] = 103
                                            ownerOf[arg3] = arg2
                                            emit Transfer(arg1, arg2, arg3);
                                            if ext_code.size(arg2):
                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = msg.sender
                                                mem[mem[64] + 36] = arg1
                                                mem[mem[64] + 68] = arg3
                                                mem[mem[64] + 100] = 128
                                                mem[mem[64] + 132] = mem[96]
                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                if ceil32(mem[96]) <= mem[96]:
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _32454 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_32454] == Mask(32, 224, mem[_32454])
                                                    if Mask(32, 224, mem[_32454]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    mem[mem[64] + mem[96] + 164] = 0
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _32729 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_32729] == Mask(32, 224, mem[_32729])
                                                    if Mask(32, 224, mem[_32729]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                    else:
                                        if tokenByIndex.length < 1:
                                            revert with 0, 17
                                        if tokenByIndex.length - 1 >= tokenByIndex.length:
                                            revert with 0, 50
                                        if stor154[arg3] >= tokenByIndex.length:
                                            revert with 0, 50
                                        tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                        stor154[stor153[stor153.length]] = stor154[arg3]
                                        stor154[arg3] = 0
                                        if not tokenByIndex.length:
                                            revert with 0, 49
                                        tokenByIndex[tokenByIndex.length] = 0
                                        tokenByIndex.length--
                                        approved[arg3] = 0
                                        if not ownerOf[arg3]:
                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                        emit Approval(ownerOf[arg3], 0, arg3);
                                        if balanceOf[address(arg1)] < 1:
                                            revert with 0, 17
                                        balanceOf[address(arg1)]--
                                        if balanceOf[address(arg2)] > -2:
                                            revert with 0, 17
                                        balanceOf[address(arg2)]++
                                        mem[0] = arg3
                                        mem[32] = 103
                                        ownerOf[arg3] = arg2
                                        emit Transfer(arg1, arg2, arg3);
                                        if ext_code.size(arg2):
                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = msg.sender
                                            mem[mem[64] + 36] = arg1
                                            mem[mem[64] + 68] = arg3
                                            mem[mem[64] + 100] = 128
                                            mem[mem[64] + 132] = mem[96]
                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                            if ceil32(mem[96]) <= mem[96]:
                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    if not return_data.size:
                                                        if not mem[96]:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with memory
                                                          from 128
                                                           len mem[96]
                                                    if not return_data.size:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _32456 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                require mem[_32456] == Mask(32, 224, mem[_32456])
                                                if Mask(32, 224, mem[_32456]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                mem[mem[64] + mem[96] + 164] = 0
                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    if not return_data.size:
                                                        if not mem[96]:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with memory
                                                          from 128
                                                           len mem[96]
                                                    if not return_data.size:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _32730 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                require mem[_32730] == Mask(32, 224, mem[_32730])
                                                if Mask(32, 224, mem[_32730]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                else:
                                    if not arg1:
                                        revert with 0, 'ERC721: balance query for the zero address'
                                    if balanceOf[address(arg1)] < 1:
                                        revert with 0, 17
                                    if balanceOf[address(arg1)] - 1 == stor152[arg3]:
                                        stor152[arg3] = 0
                                        tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                                        if arg2:
                                            if arg2 == arg1:
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32458 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32458] == Mask(32, 224, mem[_32458])
                                                        if Mask(32, 224, mem[_32458]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[64] + mem[96] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32731 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32731] == Mask(32, 224, mem[_32731])
                                                        if Mask(32, 224, mem[_32731]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if not arg2:
                                                    revert with 0, 'ERC721: balance query for the zero address'
                                                tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                stor152[arg3] = balanceOf[address(arg2)]
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32460 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32460] == Mask(32, 224, mem[_32460])
                                                        if Mask(32, 224, mem[_32460]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[64] + mem[96] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32732 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32732] == Mask(32, 224, mem[_32732])
                                                        if Mask(32, 224, mem[_32732]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            if tokenByIndex.length < 1:
                                                revert with 0, 17
                                            if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                revert with 0, 50
                                            if stor154[arg3] >= tokenByIndex.length:
                                                revert with 0, 50
                                            tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                            stor154[stor153[stor153.length]] = stor154[arg3]
                                            stor154[arg3] = 0
                                            if not tokenByIndex.length:
                                                revert with 0, 49
                                            tokenByIndex[tokenByIndex.length] = 0
                                            tokenByIndex.length--
                                            approved[arg3] = 0
                                            if not ownerOf[arg3]:
                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                            emit Approval(ownerOf[arg3], 0, arg3);
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            balanceOf[address(arg1)]--
                                            if balanceOf[address(arg2)] > -2:
                                                revert with 0, 17
                                            balanceOf[address(arg2)]++
                                            mem[0] = arg3
                                            mem[32] = 103
                                            ownerOf[arg3] = arg2
                                            emit Transfer(arg1, arg2, arg3);
                                            if ext_code.size(arg2):
                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = msg.sender
                                                mem[mem[64] + 36] = arg1
                                                mem[mem[64] + 68] = arg3
                                                mem[mem[64] + 100] = 128
                                                mem[mem[64] + 132] = mem[96]
                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                if ceil32(mem[96]) <= mem[96]:
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _32462 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_32462] == Mask(32, 224, mem[_32462])
                                                    if Mask(32, 224, mem[_32462]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    mem[mem[64] + mem[96] + 164] = 0
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _32733 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_32733] == Mask(32, 224, mem[_32733])
                                                    if Mask(32, 224, mem[_32733]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                    else:
                                        tokenOfOwnerByIndex[address(arg1)][stor152[arg3]] = tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1]
                                        stor152[stor151[address(arg1)][stor104[address(arg1)] - 1]] = stor152[arg3]
                                        stor152[arg3] = 0
                                        tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                                        if arg2:
                                            if arg2 == arg1:
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32464 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32464] == Mask(32, 224, mem[_32464])
                                                        if Mask(32, 224, mem[_32464]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[64] + mem[96] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32734 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32734] == Mask(32, 224, mem[_32734])
                                                        if Mask(32, 224, mem[_32734]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if not arg2:
                                                    revert with 0, 'ERC721: balance query for the zero address'
                                                tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                stor152[arg3] = balanceOf[address(arg2)]
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32466 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32466] == Mask(32, 224, mem[_32466])
                                                        if Mask(32, 224, mem[_32466]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[64] + mem[96] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32735 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32735] == Mask(32, 224, mem[_32735])
                                                        if Mask(32, 224, mem[_32735]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            if tokenByIndex.length < 1:
                                                revert with 0, 17
                                            if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                revert with 0, 50
                                            if stor154[arg3] >= tokenByIndex.length:
                                                revert with 0, 50
                                            tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                            stor154[stor153[stor153.length]] = stor154[arg3]
                                            stor154[arg3] = 0
                                            if not tokenByIndex.length:
                                                revert with 0, 49
                                            tokenByIndex[tokenByIndex.length] = 0
                                            tokenByIndex.length--
                                            approved[arg3] = 0
                                            if not ownerOf[arg3]:
                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                            emit Approval(ownerOf[arg3], 0, arg3);
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            balanceOf[address(arg1)]--
                                            if balanceOf[address(arg2)] > -2:
                                                revert with 0, 17
                                            balanceOf[address(arg2)]++
                                            mem[0] = arg3
                                            mem[32] = 103
                                            ownerOf[arg3] = arg2
                                            emit Transfer(arg1, arg2, arg3);
                                            if ext_code.size(arg2):
                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = msg.sender
                                                mem[mem[64] + 36] = arg1
                                                mem[mem[64] + 68] = arg3
                                                mem[mem[64] + 100] = 128
                                                mem[mem[64] + 132] = mem[96]
                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                if ceil32(mem[96]) <= mem[96]:
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _32468 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_32468] == Mask(32, 224, mem[_32468])
                                                    if Mask(32, 224, mem[_32468]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    mem[mem[64] + mem[96] + 164] = 0
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _32736 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_32736] == Mask(32, 224, mem[_32736])
                                                    if Mask(32, 224, mem[_32736]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                    else:
                        mem[ceil32(ceil32(arg4.length)) + 101] = arg2
                        staticcall liquidityPoolManagerImplementationAddress.0xb278110f with:
                                gas gas_remaining wei
                               args arg2
                        mem[ceil32(ceil32(arg4.length)) + 97] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        if ext_call.return_data[0]:
                            if not arg1:
                                stor154[arg3] = tokenByIndex.length
                                tokenByIndex.length++
                                stor72A1[stor153.length] = arg3
                            else:
                                if arg1 != arg2:
                                    if not arg1:
                                        revert with 0, 'ERC721: balance query for the zero address'
                                    if balanceOf[address(arg1)] < 1:
                                        revert with 0, 17
                                    if balanceOf[address(arg1)] - 1 != stor152[arg3]:
                                        tokenOfOwnerByIndex[address(arg1)][stor152[arg3]] = tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1]
                                        stor152[stor151[address(arg1)][stor104[address(arg1)] - 1]] = stor152[arg3]
                                    stor152[arg3] = 0
                                    tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                            if arg2:
                                if arg2 != arg1:
                                    if not arg2:
                                        revert with 0, 'ERC721: balance query for the zero address'
                                    tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                    stor152[arg3] = balanceOf[address(arg2)]
                            else:
                                if tokenByIndex.length < 1:
                                    revert with 0, 17
                                if tokenByIndex.length - 1 >= tokenByIndex.length:
                                    revert with 0, 50
                                if stor154[arg3] >= tokenByIndex.length:
                                    revert with 0, 50
                                tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                stor154[stor153[stor153.length]] = stor154[arg3]
                                stor154[arg3] = 0
                                if not tokenByIndex.length:
                                    revert with 0, 49
                                tokenByIndex[tokenByIndex.length] = 0
                                tokenByIndex.length--
                            approved[arg3] = 0
                            if not ownerOf[arg3]:
                                revert with 0, 'ERC721: owner query for nonexistent token'
                            emit Approval(ownerOf[arg3], 0, arg3);
                            if balanceOf[address(arg1)] < 1:
                                revert with 0, 17
                            balanceOf[address(arg1)]--
                            if balanceOf[address(arg2)] > -2:
                                revert with 0, 17
                            balanceOf[address(arg2)]++
                            ownerOf[arg3] = arg2
                            emit Transfer(arg1, arg2, arg3);
                            if ext_code.size(arg2):
                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args msg.sender, address(arg1), arg3, Array(len=arg4.length, data=arg4[all])
                                if not ext_call.success:
                                    if not return_data.size:
                                        if not arg4.length:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        revert with arg4[all]
                                    if not return_data.size:
                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                        else:
                            if not arg2:
                                revert with 0, 'ERC721: balance query for the zero address'
                            if balanceOf[address(arg2)] > test266151307():
                                revert with 0, 65
                            mem[ceil32(ceil32(arg4.length)) + ceil32(return_data.size) + 97] = balanceOf[address(arg2)]
                            mem[64] = ceil32(ceil32(arg4.length)) + ceil32(return_data.size) + (32 * balanceOf[address(arg2)]) + 129
                            if not balanceOf[address(arg2)]:
                                idx = 0
                                while idx < balanceOf[address(arg2)]:
                                    if not arg2:
                                        revert with 0, 'ERC721: balance query for the zero address'
                                    if idx >= balanceOf[address(arg2)]:
                                        revert with 0, 'ERC721Enumerable: owner index out of bounds'
                                    if tokenOfOwnerByIndex[address(arg2)][idx] <= 0:
                                        revert with 0, 'Troops: Id must be higher than zero'
                                    mem[0] = tokenOfOwnerByIndex[address(arg2)][idx]
                                    mem[32] = 552
                                    _15959 = mem[64]
                                    mem[64] = mem[64] + 256
                                    mem[_15959] = stor552[stor151[address(arg2)][idx]].field_0
                                    if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                            revert with 0, 34
                                        _17757 = mem[64]
                                        mem[64] = mem[64] + ceil32(uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) + 32
                                        mem[_17757] = uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                                revert with 0, 34
                                            if Mask(256, -1, stor552[stor151[address(arg2)][idx]].field_256):
                                                if 31 >= uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5:
                                                    mem[_17757 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                else:
                                                    mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                    mem[_17757 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                    s = _17757 + 32
                                                    t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                    while _17757 + (uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) > s:
                                                        mem[s + 32] = stor1[t].field_0
                                                        s = s + 32
                                                        t = t + 1
                                                        continue 
                                        else:
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                                revert with 0, 34
                                            if stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                if 31 >= stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                    mem[_17757 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                else:
                                                    mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                    mem[_17757 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                    s = _17757 + 32
                                                    t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                    while _17757 + stor552[stor151[address(arg2)][idx]].field_257 % 128 > s:
                                                        mem[s + 32] = stor1[t].field_0
                                                        s = s + 32
                                                        t = t + 1
                                                        continue 
                                        mem[_15959 + 32] = _17757
                                    else:
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                            revert with 0, 34
                                        _17790 = mem[64]
                                        mem[64] = mem[64] + ceil32(stor552[stor151[address(arg2)][idx]].field_257 % 128) + 32
                                        mem[_17790] = stor552[stor151[address(arg2)][idx]].field_257 % 128
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                                revert with 0, 34
                                            if Mask(256, -1, stor552[stor151[address(arg2)][idx]].field_256):
                                                if 31 >= uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5:
                                                    mem[_17790 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                else:
                                                    mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                    mem[_17790 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                    s = _17790 + 32
                                                    t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                    while _17790 + (uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) > s:
                                                        mem[s + 32] = stor1[t].field_0
                                                        s = s + 32
                                                        t = t + 1
                                                        continue 
                                        else:
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                                revert with 0, 34
                                            if stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                if 31 >= stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                    mem[_17790 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                else:
                                                    mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                    mem[_17790 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                    s = _17790 + 32
                                                    t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                    while _17790 + stor552[stor151[address(arg2)][idx]].field_257 % 128 > s:
                                                        mem[s + 32] = stor1[t].field_0
                                                        s = s + 32
                                                        t = t + 1
                                                        continue 
                                        mem[_15959 + 32] = _17790
                                    mem[_15959 + 64] = stor552[stor151[address(arg2)][idx]].field_512
                                    mem[_15959 + 96] = stor552[stor151[address(arg2)][idx]].field_768
                                    mem[_15959 + 128] = stor552[stor151[address(arg2)][idx]].field_1024
                                    mem[_15959 + 160] = stor552[stor151[address(arg2)][idx]].field_1280
                                    mem[_15959 + 192] = bool(uint8(stor552[stor151[address(arg2)][idx]].field_1536))
                                    mem[_15959 + 224] = bool(uint8(stor552[stor151[address(arg2)][idx]].field_1544))
                                    require uint8(stor552[stor151[address(arg2)][idx]].field_1536)
                                    if idx >= mem[ceil32(ceil32(arg4.length)) + ceil32(return_data.size) + 97]:
                                        revert with 0, 50
                                    mem[(32 * idx) + ceil32(ceil32(arg4.length)) + ceil32(return_data.size) + 129] = tokenOfOwnerByIndex[address(arg2)][idx]
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    continue 
                                idx = 0
                                s = 0
                                while idx < mem[ceil32(ceil32(arg4.length)) + ceil32(return_data.size) + 97]:
                                    if idx >= mem[ceil32(ceil32(arg4.length)) + ceil32(return_data.size) + 97]:
                                        revert with 0, 50
                                    mem[0] = mem[(32 * idx) + ceil32(ceil32(arg4.length)) + ceil32(return_data.size) + 129]
                                    mem[32] = 552
                                    if not uint8(stor552[mem[(32 * idx) + ceil32(ceil32(arg4.length)) + ceil32(return_data.size) + 129]].field_1544):
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = s
                                        continue 
                                    if s == -1:
                                        revert with 0, 17
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    s = s + 1
                                    continue 
                                if s >= 2:
                                    revert with 0, 'Each holder can not hold more than 2 Gladiators'
                                if not arg1:
                                    stor154[arg3] = tokenByIndex.length
                                    tokenByIndex.length++
                                    stor72A1[stor153.length] = arg3
                                    if arg2:
                                        if arg2 == arg1:
                                            approved[arg3] = 0
                                            if not ownerOf[arg3]:
                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                            emit Approval(ownerOf[arg3], 0, arg3);
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            balanceOf[address(arg1)]--
                                            if balanceOf[address(arg2)] > -2:
                                                revert with 0, 17
                                            balanceOf[address(arg2)]++
                                            mem[0] = arg3
                                            mem[32] = 103
                                            ownerOf[arg3] = arg2
                                            emit Transfer(arg1, arg2, arg3);
                                            if ext_code.size(arg2):
                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = msg.sender
                                                mem[mem[64] + 36] = arg1
                                                mem[mem[64] + 68] = arg3
                                                mem[mem[64] + 100] = 128
                                                mem[mem[64] + 132] = mem[96]
                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                if ceil32(mem[96]) <= mem[96]:
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _32494 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_32494] == Mask(32, 224, mem[_32494])
                                                    if Mask(32, 224, mem[_32494]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    mem[mem[64] + mem[96] + 164] = 0
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _32749 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_32749] == Mask(32, 224, mem[_32749])
                                                    if Mask(32, 224, mem[_32749]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            if not arg2:
                                                revert with 0, 'ERC721: balance query for the zero address'
                                            tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                            stor152[arg3] = balanceOf[address(arg2)]
                                            approved[arg3] = 0
                                            if not ownerOf[arg3]:
                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                            emit Approval(ownerOf[arg3], 0, arg3);
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            balanceOf[address(arg1)]--
                                            if balanceOf[address(arg2)] > -2:
                                                revert with 0, 17
                                            balanceOf[address(arg2)]++
                                            mem[0] = arg3
                                            mem[32] = 103
                                            ownerOf[arg3] = arg2
                                            emit Transfer(arg1, arg2, arg3);
                                            if ext_code.size(arg2):
                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = msg.sender
                                                mem[mem[64] + 36] = arg1
                                                mem[mem[64] + 68] = arg3
                                                mem[mem[64] + 100] = 128
                                                mem[mem[64] + 132] = mem[96]
                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                if ceil32(mem[96]) <= mem[96]:
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _32496 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_32496] == Mask(32, 224, mem[_32496])
                                                    if Mask(32, 224, mem[_32496]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    mem[mem[64] + mem[96] + 164] = 0
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _32750 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_32750] == Mask(32, 224, mem[_32750])
                                                    if Mask(32, 224, mem[_32750]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                    else:
                                        if tokenByIndex.length < 1:
                                            revert with 0, 17
                                        if tokenByIndex.length - 1 >= tokenByIndex.length:
                                            revert with 0, 50
                                        if stor154[arg3] >= tokenByIndex.length:
                                            revert with 0, 50
                                        tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                        stor154[stor153[stor153.length]] = stor154[arg3]
                                        stor154[arg3] = 0
                                        if not tokenByIndex.length:
                                            revert with 0, 49
                                        tokenByIndex[tokenByIndex.length] = 0
                                        tokenByIndex.length--
                                        approved[arg3] = 0
                                        if not ownerOf[arg3]:
                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                        emit Approval(ownerOf[arg3], 0, arg3);
                                        if balanceOf[address(arg1)] < 1:
                                            revert with 0, 17
                                        balanceOf[address(arg1)]--
                                        if balanceOf[address(arg2)] > -2:
                                            revert with 0, 17
                                        balanceOf[address(arg2)]++
                                        mem[0] = arg3
                                        mem[32] = 103
                                        ownerOf[arg3] = arg2
                                        emit Transfer(arg1, arg2, arg3);
                                        if ext_code.size(arg2):
                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = msg.sender
                                            mem[mem[64] + 36] = arg1
                                            mem[mem[64] + 68] = arg3
                                            mem[mem[64] + 100] = 128
                                            mem[mem[64] + 132] = mem[96]
                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                            if ceil32(mem[96]) <= mem[96]:
                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    if not return_data.size:
                                                        if not mem[96]:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with memory
                                                          from 128
                                                           len mem[96]
                                                    if not return_data.size:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _32498 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                require mem[_32498] == Mask(32, 224, mem[_32498])
                                                if Mask(32, 224, mem[_32498]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                mem[mem[64] + mem[96] + 164] = 0
                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    if not return_data.size:
                                                        if not mem[96]:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with memory
                                                          from 128
                                                           len mem[96]
                                                    if not return_data.size:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _32751 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                require mem[_32751] == Mask(32, 224, mem[_32751])
                                                if Mask(32, 224, mem[_32751]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                else:
                                    if arg1 == arg2:
                                        if arg2:
                                            if arg2 == arg1:
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32476 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32476] == Mask(32, 224, mem[_32476])
                                                        if Mask(32, 224, mem[_32476]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[64] + mem[96] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32740 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32740] == Mask(32, 224, mem[_32740])
                                                        if Mask(32, 224, mem[_32740]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if not arg2:
                                                    revert with 0, 'ERC721: balance query for the zero address'
                                                tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                stor152[arg3] = balanceOf[address(arg2)]
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32478 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32478] == Mask(32, 224, mem[_32478])
                                                        if Mask(32, 224, mem[_32478]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[64] + mem[96] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32741 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32741] == Mask(32, 224, mem[_32741])
                                                        if Mask(32, 224, mem[_32741]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            if tokenByIndex.length < 1:
                                                revert with 0, 17
                                            if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                revert with 0, 50
                                            if stor154[arg3] >= tokenByIndex.length:
                                                revert with 0, 50
                                            tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                            stor154[stor153[stor153.length]] = stor154[arg3]
                                            stor154[arg3] = 0
                                            if not tokenByIndex.length:
                                                revert with 0, 49
                                            tokenByIndex[tokenByIndex.length] = 0
                                            tokenByIndex.length--
                                            approved[arg3] = 0
                                            if not ownerOf[arg3]:
                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                            emit Approval(ownerOf[arg3], 0, arg3);
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            balanceOf[address(arg1)]--
                                            if balanceOf[address(arg2)] > -2:
                                                revert with 0, 17
                                            balanceOf[address(arg2)]++
                                            mem[0] = arg3
                                            mem[32] = 103
                                            ownerOf[arg3] = arg2
                                            emit Transfer(arg1, arg2, arg3);
                                            if ext_code.size(arg2):
                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = msg.sender
                                                mem[mem[64] + 36] = arg1
                                                mem[mem[64] + 68] = arg3
                                                mem[mem[64] + 100] = 128
                                                mem[mem[64] + 132] = mem[96]
                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                if ceil32(mem[96]) <= mem[96]:
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _32480 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_32480] == Mask(32, 224, mem[_32480])
                                                    if Mask(32, 224, mem[_32480]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    mem[mem[64] + mem[96] + 164] = 0
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _32742 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_32742] == Mask(32, 224, mem[_32742])
                                                    if Mask(32, 224, mem[_32742]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                    else:
                                        if not arg1:
                                            revert with 0, 'ERC721: balance query for the zero address'
                                        if balanceOf[address(arg1)] < 1:
                                            revert with 0, 17
                                        if balanceOf[address(arg1)] - 1 == stor152[arg3]:
                                            stor152[arg3] = 0
                                            tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                                            if arg2:
                                                if arg2 == arg1:
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _32482 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_32482] == Mask(32, 224, mem[_32482])
                                                            if Mask(32, 224, mem[_32482]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[64] + mem[96] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _32743 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_32743] == Mask(32, 224, mem[_32743])
                                                            if Mask(32, 224, mem[_32743]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    if not arg2:
                                                        revert with 0, 'ERC721: balance query for the zero address'
                                                    tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                    stor152[arg3] = balanceOf[address(arg2)]
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _32484 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_32484] == Mask(32, 224, mem[_32484])
                                                            if Mask(32, 224, mem[_32484]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[64] + mem[96] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _32744 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_32744] == Mask(32, 224, mem[_32744])
                                                            if Mask(32, 224, mem[_32744]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if tokenByIndex.length < 1:
                                                    revert with 0, 17
                                                if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                    revert with 0, 50
                                                if stor154[arg3] >= tokenByIndex.length:
                                                    revert with 0, 50
                                                tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                stor154[stor153[stor153.length]] = stor154[arg3]
                                                stor154[arg3] = 0
                                                if not tokenByIndex.length:
                                                    revert with 0, 49
                                                tokenByIndex[tokenByIndex.length] = 0
                                                tokenByIndex.length--
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32486 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32486] == Mask(32, 224, mem[_32486])
                                                        if Mask(32, 224, mem[_32486]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[64] + mem[96] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32745 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32745] == Mask(32, 224, mem[_32745])
                                                        if Mask(32, 224, mem[_32745]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            tokenOfOwnerByIndex[address(arg1)][stor152[arg3]] = tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1]
                                            stor152[stor151[address(arg1)][stor104[address(arg1)] - 1]] = stor152[arg3]
                                            stor152[arg3] = 0
                                            tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                                            if arg2:
                                                if arg2 == arg1:
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _32488 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_32488] == Mask(32, 224, mem[_32488])
                                                            if Mask(32, 224, mem[_32488]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[64] + mem[96] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _32746 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_32746] == Mask(32, 224, mem[_32746])
                                                            if Mask(32, 224, mem[_32746]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    if not arg2:
                                                        revert with 0, 'ERC721: balance query for the zero address'
                                                    tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                    stor152[arg3] = balanceOf[address(arg2)]
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _32490 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_32490] == Mask(32, 224, mem[_32490])
                                                            if Mask(32, 224, mem[_32490]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[64] + mem[96] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _32747 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_32747] == Mask(32, 224, mem[_32747])
                                                            if Mask(32, 224, mem[_32747]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if tokenByIndex.length < 1:
                                                    revert with 0, 17
                                                if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                    revert with 0, 50
                                                if stor154[arg3] >= tokenByIndex.length:
                                                    revert with 0, 50
                                                tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                stor154[stor153[stor153.length]] = stor154[arg3]
                                                stor154[arg3] = 0
                                                if not tokenByIndex.length:
                                                    revert with 0, 49
                                                tokenByIndex[tokenByIndex.length] = 0
                                                tokenByIndex.length--
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32492 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32492] == Mask(32, 224, mem[_32492])
                                                        if Mask(32, 224, mem[_32492]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[64] + mem[96] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32748 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32748] == Mask(32, 224, mem[_32748])
                                                        if Mask(32, 224, mem[_32748]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                            else:
                                mem[ceil32(ceil32(arg4.length)) + ceil32(return_data.size) + 129 len 32 * balanceOf[address(arg2)]] = call.data[calldata.size len 32 * balanceOf[address(arg2)]]
                                idx = 0
                                while idx < balanceOf[address(arg2)]:
                                    if not arg2:
                                        revert with 0, 'ERC721: balance query for the zero address'
                                    if idx >= balanceOf[address(arg2)]:
                                        revert with 0, 'ERC721Enumerable: owner index out of bounds'
                                    if tokenOfOwnerByIndex[address(arg2)][idx] <= 0:
                                        revert with 0, 'Troops: Id must be higher than zero'
                                    mem[0] = tokenOfOwnerByIndex[address(arg2)][idx]
                                    mem[32] = 552
                                    _15962 = mem[64]
                                    mem[64] = mem[64] + 256
                                    mem[_15962] = stor552[stor151[address(arg2)][idx]].field_0
                                    if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                            revert with 0, 34
                                        _17759 = mem[64]
                                        mem[64] = mem[64] + ceil32(uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) + 32
                                        mem[_17759] = uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                                revert with 0, 34
                                            if Mask(256, -1, stor552[stor151[address(arg2)][idx]].field_256):
                                                if 31 >= uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5:
                                                    mem[_17759 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                else:
                                                    mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                    mem[_17759 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                    s = _17759 + 32
                                                    t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                    while _17759 + (uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) > s:
                                                        mem[s + 32] = stor1[t].field_0
                                                        s = s + 32
                                                        t = t + 1
                                                        continue 
                                        else:
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                                revert with 0, 34
                                            if stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                if 31 >= stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                    mem[_17759 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                else:
                                                    mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                    mem[_17759 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                    s = _17759 + 32
                                                    t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                    while _17759 + stor552[stor151[address(arg2)][idx]].field_257 % 128 > s:
                                                        mem[s + 32] = stor1[t].field_0
                                                        s = s + 32
                                                        t = t + 1
                                                        continue 
                                        mem[_15962 + 32] = _17759
                                    else:
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                            revert with 0, 34
                                        _17795 = mem[64]
                                        mem[64] = mem[64] + ceil32(stor552[stor151[address(arg2)][idx]].field_257 % 128) + 32
                                        mem[_17795] = stor552[stor151[address(arg2)][idx]].field_257 % 128
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                                revert with 0, 34
                                            if Mask(256, -1, stor552[stor151[address(arg2)][idx]].field_256):
                                                if 31 >= uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5:
                                                    mem[_17795 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                else:
                                                    mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                    mem[_17795 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                    s = _17795 + 32
                                                    t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                    while _17795 + (uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) > s:
                                                        mem[s + 32] = stor1[t].field_0
                                                        s = s + 32
                                                        t = t + 1
                                                        continue 
                                        else:
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                                revert with 0, 34
                                            if stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                if 31 >= stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                    mem[_17795 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                else:
                                                    mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                    mem[_17795 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                    s = _17795 + 32
                                                    t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                    while _17795 + stor552[stor151[address(arg2)][idx]].field_257 % 128 > s:
                                                        mem[s + 32] = stor1[t].field_0
                                                        s = s + 32
                                                        t = t + 1
                                                        continue 
                                        mem[_15962 + 32] = _17795
                                    mem[_15962 + 64] = stor552[stor151[address(arg2)][idx]].field_512
                                    mem[_15962 + 96] = stor552[stor151[address(arg2)][idx]].field_768
                                    mem[_15962 + 128] = stor552[stor151[address(arg2)][idx]].field_1024
                                    mem[_15962 + 160] = stor552[stor151[address(arg2)][idx]].field_1280
                                    mem[_15962 + 192] = bool(uint8(stor552[stor151[address(arg2)][idx]].field_1536))
                                    mem[_15962 + 224] = bool(uint8(stor552[stor151[address(arg2)][idx]].field_1544))
                                    require uint8(stor552[stor151[address(arg2)][idx]].field_1536)
                                    if idx >= mem[ceil32(ceil32(arg4.length)) + ceil32(return_data.size) + 97]:
                                        revert with 0, 50
                                    mem[(32 * idx) + ceil32(ceil32(arg4.length)) + ceil32(return_data.size) + 129] = tokenOfOwnerByIndex[address(arg2)][idx]
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    continue 
                                idx = 0
                                s = 0
                                while idx < mem[ceil32(ceil32(arg4.length)) + ceil32(return_data.size) + 97]:
                                    if idx >= mem[ceil32(ceil32(arg4.length)) + ceil32(return_data.size) + 97]:
                                        revert with 0, 50
                                    mem[0] = mem[(32 * idx) + ceil32(ceil32(arg4.length)) + ceil32(return_data.size) + 129]
                                    mem[32] = 552
                                    if not uint8(stor552[mem[(32 * idx) + ceil32(ceil32(arg4.length)) + ceil32(return_data.size) + 129]].field_1544):
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = s
                                        continue 
                                    if s == -1:
                                        revert with 0, 17
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    s = s + 1
                                    continue 
                                if s >= 2:
                                    revert with 0, 'Each holder can not hold more than 2 Gladiators'
                                if not arg1:
                                    stor154[arg3] = tokenByIndex.length
                                    tokenByIndex.length++
                                    stor72A1[stor153.length] = arg3
                                    if arg2:
                                        if arg2 == arg1:
                                            approved[arg3] = 0
                                            if not ownerOf[arg3]:
                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                            emit Approval(ownerOf[arg3], 0, arg3);
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            balanceOf[address(arg1)]--
                                            if balanceOf[address(arg2)] > -2:
                                                revert with 0, 17
                                            balanceOf[address(arg2)]++
                                            mem[0] = arg3
                                            mem[32] = 103
                                            ownerOf[arg3] = arg2
                                            emit Transfer(arg1, arg2, arg3);
                                            if ext_code.size(arg2):
                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = msg.sender
                                                mem[mem[64] + 36] = arg1
                                                mem[mem[64] + 68] = arg3
                                                mem[mem[64] + 100] = 128
                                                mem[mem[64] + 132] = mem[96]
                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                if ceil32(mem[96]) <= mem[96]:
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _32518 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_32518] == Mask(32, 224, mem[_32518])
                                                    if Mask(32, 224, mem[_32518]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    mem[mem[64] + mem[96] + 164] = 0
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _32761 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_32761] == Mask(32, 224, mem[_32761])
                                                    if Mask(32, 224, mem[_32761]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            if not arg2:
                                                revert with 0, 'ERC721: balance query for the zero address'
                                            tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                            stor152[arg3] = balanceOf[address(arg2)]
                                            approved[arg3] = 0
                                            if not ownerOf[arg3]:
                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                            emit Approval(ownerOf[arg3], 0, arg3);
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            balanceOf[address(arg1)]--
                                            if balanceOf[address(arg2)] > -2:
                                                revert with 0, 17
                                            balanceOf[address(arg2)]++
                                            mem[0] = arg3
                                            mem[32] = 103
                                            ownerOf[arg3] = arg2
                                            emit Transfer(arg1, arg2, arg3);
                                            if ext_code.size(arg2):
                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = msg.sender
                                                mem[mem[64] + 36] = arg1
                                                mem[mem[64] + 68] = arg3
                                                mem[mem[64] + 100] = 128
                                                mem[mem[64] + 132] = mem[96]
                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                if ceil32(mem[96]) <= mem[96]:
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _32520 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_32520] == Mask(32, 224, mem[_32520])
                                                    if Mask(32, 224, mem[_32520]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    mem[mem[64] + mem[96] + 164] = 0
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _32762 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_32762] == Mask(32, 224, mem[_32762])
                                                    if Mask(32, 224, mem[_32762]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                    else:
                                        if tokenByIndex.length < 1:
                                            revert with 0, 17
                                        if tokenByIndex.length - 1 >= tokenByIndex.length:
                                            revert with 0, 50
                                        if stor154[arg3] >= tokenByIndex.length:
                                            revert with 0, 50
                                        tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                        stor154[stor153[stor153.length]] = stor154[arg3]
                                        stor154[arg3] = 0
                                        if not tokenByIndex.length:
                                            revert with 0, 49
                                        tokenByIndex[tokenByIndex.length] = 0
                                        tokenByIndex.length--
                                        approved[arg3] = 0
                                        if not ownerOf[arg3]:
                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                        emit Approval(ownerOf[arg3], 0, arg3);
                                        if balanceOf[address(arg1)] < 1:
                                            revert with 0, 17
                                        balanceOf[address(arg1)]--
                                        if balanceOf[address(arg2)] > -2:
                                            revert with 0, 17
                                        balanceOf[address(arg2)]++
                                        mem[0] = arg3
                                        mem[32] = 103
                                        ownerOf[arg3] = arg2
                                        emit Transfer(arg1, arg2, arg3);
                                        if ext_code.size(arg2):
                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = msg.sender
                                            mem[mem[64] + 36] = arg1
                                            mem[mem[64] + 68] = arg3
                                            mem[mem[64] + 100] = 128
                                            mem[mem[64] + 132] = mem[96]
                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                            if ceil32(mem[96]) <= mem[96]:
                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    if not return_data.size:
                                                        if not mem[96]:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with memory
                                                          from 128
                                                           len mem[96]
                                                    if not return_data.size:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _32522 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                require mem[_32522] == Mask(32, 224, mem[_32522])
                                                if Mask(32, 224, mem[_32522]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                mem[mem[64] + mem[96] + 164] = 0
                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    if not return_data.size:
                                                        if not mem[96]:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with memory
                                                          from 128
                                                           len mem[96]
                                                    if not return_data.size:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _32763 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                require mem[_32763] == Mask(32, 224, mem[_32763])
                                                if Mask(32, 224, mem[_32763]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                else:
                                    if arg1 == arg2:
                                        if arg2:
                                            if arg2 == arg1:
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32500 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32500] == Mask(32, 224, mem[_32500])
                                                        if Mask(32, 224, mem[_32500]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[64] + mem[96] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32752 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32752] == Mask(32, 224, mem[_32752])
                                                        if Mask(32, 224, mem[_32752]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if not arg2:
                                                    revert with 0, 'ERC721: balance query for the zero address'
                                                tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                stor152[arg3] = balanceOf[address(arg2)]
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32502 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32502] == Mask(32, 224, mem[_32502])
                                                        if Mask(32, 224, mem[_32502]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[64] + mem[96] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32753 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32753] == Mask(32, 224, mem[_32753])
                                                        if Mask(32, 224, mem[_32753]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            if tokenByIndex.length < 1:
                                                revert with 0, 17
                                            if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                revert with 0, 50
                                            if stor154[arg3] >= tokenByIndex.length:
                                                revert with 0, 50
                                            tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                            stor154[stor153[stor153.length]] = stor154[arg3]
                                            stor154[arg3] = 0
                                            if not tokenByIndex.length:
                                                revert with 0, 49
                                            tokenByIndex[tokenByIndex.length] = 0
                                            tokenByIndex.length--
                                            approved[arg3] = 0
                                            if not ownerOf[arg3]:
                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                            emit Approval(ownerOf[arg3], 0, arg3);
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            balanceOf[address(arg1)]--
                                            if balanceOf[address(arg2)] > -2:
                                                revert with 0, 17
                                            balanceOf[address(arg2)]++
                                            mem[0] = arg3
                                            mem[32] = 103
                                            ownerOf[arg3] = arg2
                                            emit Transfer(arg1, arg2, arg3);
                                            if ext_code.size(arg2):
                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = msg.sender
                                                mem[mem[64] + 36] = arg1
                                                mem[mem[64] + 68] = arg3
                                                mem[mem[64] + 100] = 128
                                                mem[mem[64] + 132] = mem[96]
                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                if ceil32(mem[96]) <= mem[96]:
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _32504 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_32504] == Mask(32, 224, mem[_32504])
                                                    if Mask(32, 224, mem[_32504]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    mem[mem[64] + mem[96] + 164] = 0
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _32754 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_32754] == Mask(32, 224, mem[_32754])
                                                    if Mask(32, 224, mem[_32754]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                    else:
                                        if not arg1:
                                            revert with 0, 'ERC721: balance query for the zero address'
                                        if balanceOf[address(arg1)] < 1:
                                            revert with 0, 17
                                        if balanceOf[address(arg1)] - 1 == stor152[arg3]:
                                            stor152[arg3] = 0
                                            tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                                            if arg2:
                                                if arg2 == arg1:
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _32506 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_32506] == Mask(32, 224, mem[_32506])
                                                            if Mask(32, 224, mem[_32506]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[64] + mem[96] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _32755 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_32755] == Mask(32, 224, mem[_32755])
                                                            if Mask(32, 224, mem[_32755]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    if not arg2:
                                                        revert with 0, 'ERC721: balance query for the zero address'
                                                    tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                    stor152[arg3] = balanceOf[address(arg2)]
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _32508 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_32508] == Mask(32, 224, mem[_32508])
                                                            if Mask(32, 224, mem[_32508]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[64] + mem[96] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _32756 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_32756] == Mask(32, 224, mem[_32756])
                                                            if Mask(32, 224, mem[_32756]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if tokenByIndex.length < 1:
                                                    revert with 0, 17
                                                if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                    revert with 0, 50
                                                if stor154[arg3] >= tokenByIndex.length:
                                                    revert with 0, 50
                                                tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                stor154[stor153[stor153.length]] = stor154[arg3]
                                                stor154[arg3] = 0
                                                if not tokenByIndex.length:
                                                    revert with 0, 49
                                                tokenByIndex[tokenByIndex.length] = 0
                                                tokenByIndex.length--
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32510 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32510] == Mask(32, 224, mem[_32510])
                                                        if Mask(32, 224, mem[_32510]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[64] + mem[96] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32757 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32757] == Mask(32, 224, mem[_32757])
                                                        if Mask(32, 224, mem[_32757]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            tokenOfOwnerByIndex[address(arg1)][stor152[arg3]] = tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1]
                                            stor152[stor151[address(arg1)][stor104[address(arg1)] - 1]] = stor152[arg3]
                                            stor152[arg3] = 0
                                            tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                                            if arg2:
                                                if arg2 == arg1:
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _32512 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_32512] == Mask(32, 224, mem[_32512])
                                                            if Mask(32, 224, mem[_32512]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[64] + mem[96] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _32758 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_32758] == Mask(32, 224, mem[_32758])
                                                            if Mask(32, 224, mem[_32758]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    if not arg2:
                                                        revert with 0, 'ERC721: balance query for the zero address'
                                                    tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                    stor152[arg3] = balanceOf[address(arg2)]
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _32514 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_32514] == Mask(32, 224, mem[_32514])
                                                            if Mask(32, 224, mem[_32514]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[64] + mem[96] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _32759 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_32759] == Mask(32, 224, mem[_32759])
                                                            if Mask(32, 224, mem[_32759]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if tokenByIndex.length < 1:
                                                    revert with 0, 17
                                                if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                    revert with 0, 50
                                                if stor154[arg3] >= tokenByIndex.length:
                                                    revert with 0, 50
                                                tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                stor154[stor153[stor153.length]] = stor154[arg3]
                                                stor154[arg3] = 0
                                                if not tokenByIndex.length:
                                                    revert with 0, 49
                                                tokenByIndex[tokenByIndex.length] = 0
                                                tokenByIndex.length--
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32516 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32516] == Mask(32, 224, mem[_32516])
                                                        if Mask(32, 224, mem[_32516]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[64] + mem[96] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32760 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32760] == Mask(32, 224, mem[_32760])
                                                        if Mask(32, 224, mem[_32760]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
    else:
        if not ownerOf[arg3]:
            revert with 0, 'ERC721: approved query for nonexistent token'
        if approved[arg3] == msg.sender:
            if not ownerOf[arg3]:
                revert with 0, 'ERC721: owner query for nonexistent token'
            if ownerOf[arg3] != arg1:
                revert with 0, 'ERC721: transfer from incorrect owner'
            if not arg2:
                revert with 0, 'ERC721: transfer to the zero address'
            if owner == arg2:
                if not arg1:
                    stor154[arg3] = tokenByIndex.length
                    tokenByIndex.length++
                    stor72A1[stor153.length] = arg3
                else:
                    if arg1 != arg2:
                        if not arg1:
                            revert with 0, 'ERC721: balance query for the zero address'
                        if balanceOf[address(arg1)] < 1:
                            revert with 0, 17
                        if balanceOf[address(arg1)] - 1 != stor152[arg3]:
                            tokenOfOwnerByIndex[address(arg1)][stor152[arg3]] = tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1]
                            stor152[stor151[address(arg1)][stor104[address(arg1)] - 1]] = stor152[arg3]
                        stor152[arg3] = 0
                        tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                if arg2:
                    if arg2 != arg1:
                        if not arg2:
                            revert with 0, 'ERC721: balance query for the zero address'
                        tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                        stor152[arg3] = balanceOf[address(arg2)]
                else:
                    if tokenByIndex.length < 1:
                        revert with 0, 17
                    if tokenByIndex.length - 1 >= tokenByIndex.length:
                        revert with 0, 50
                    if stor154[arg3] >= tokenByIndex.length:
                        revert with 0, 50
                    tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                    stor154[stor153[stor153.length]] = stor154[arg3]
                    stor154[arg3] = 0
                    if not tokenByIndex.length:
                        revert with 0, 49
                    tokenByIndex[tokenByIndex.length] = 0
                    tokenByIndex.length--
                approved[arg3] = 0
                if not ownerOf[arg3]:
                    revert with 0, 'ERC721: owner query for nonexistent token'
                emit Approval(ownerOf[arg3], 0, arg3);
                if balanceOf[address(arg1)] < 1:
                    revert with 0, 17
                balanceOf[address(arg1)]--
                if balanceOf[address(arg2)] > -2:
                    revert with 0, 17
                balanceOf[address(arg2)]++
                ownerOf[arg3] = arg2
                emit Transfer(arg1, arg2, arg3);
                if ext_code.size(arg2):
                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                         gas gas_remaining wei
                        args msg.sender, address(arg1), arg3, Array(len=arg4.length, data=arg4[all])
                    if not ext_call.success:
                        if not return_data.size:
                            if not arg4.length:
                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                            revert with arg4[all]
                        if not return_data.size:
                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                    if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
            else:
                if bool(uint8(stor552[arg3].field_1536)) != 1:
                    if not arg1:
                        stor154[arg3] = tokenByIndex.length
                        tokenByIndex.length++
                        stor72A1[stor153.length] = arg3
                    else:
                        if arg1 != arg2:
                            if not arg1:
                                revert with 0, 'ERC721: balance query for the zero address'
                            if balanceOf[address(arg1)] < 1:
                                revert with 0, 17
                            if balanceOf[address(arg1)] - 1 != stor152[arg3]:
                                tokenOfOwnerByIndex[address(arg1)][stor152[arg3]] = tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1]
                                stor152[stor151[address(arg1)][stor104[address(arg1)] - 1]] = stor152[arg3]
                            stor152[arg3] = 0
                            tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                    if arg2:
                        if arg2 != arg1:
                            if not arg2:
                                revert with 0, 'ERC721: balance query for the zero address'
                            tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                            stor152[arg3] = balanceOf[address(arg2)]
                    else:
                        if tokenByIndex.length < 1:
                            revert with 0, 17
                        if tokenByIndex.length - 1 >= tokenByIndex.length:
                            revert with 0, 50
                        if stor154[arg3] >= tokenByIndex.length:
                            revert with 0, 50
                        tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                        stor154[stor153[stor153.length]] = stor154[arg3]
                        stor154[arg3] = 0
                        if not tokenByIndex.length:
                            revert with 0, 49
                        tokenByIndex[tokenByIndex.length] = 0
                        tokenByIndex.length--
                    approved[arg3] = 0
                    if not ownerOf[arg3]:
                        revert with 0, 'ERC721: owner query for nonexistent token'
                    emit Approval(ownerOf[arg3], 0, arg3);
                    if balanceOf[address(arg1)] < 1:
                        revert with 0, 17
                    balanceOf[address(arg1)]--
                    if balanceOf[address(arg2)] > -2:
                        revert with 0, 17
                    balanceOf[address(arg2)]++
                    ownerOf[arg3] = arg2
                    emit Transfer(arg1, arg2, arg3);
                    if ext_code.size(arg2):
                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                             gas gas_remaining wei
                            args msg.sender, address(arg1), arg3, Array(len=arg4.length, data=arg4[all])
                        if not ext_call.success:
                            if not return_data.size:
                                if not arg4.length:
                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                revert with arg4[all]
                            if not return_data.size:
                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                        if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                else:
                    if bool(uint8(stor552[arg3].field_1544)) != 1:
                        if not arg1:
                            stor154[arg3] = tokenByIndex.length
                            tokenByIndex.length++
                            stor72A1[stor153.length] = arg3
                        else:
                            if arg1 != arg2:
                                if not arg1:
                                    revert with 0, 'ERC721: balance query for the zero address'
                                if balanceOf[address(arg1)] < 1:
                                    revert with 0, 17
                                if balanceOf[address(arg1)] - 1 != stor152[arg3]:
                                    tokenOfOwnerByIndex[address(arg1)][stor152[arg3]] = tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1]
                                    stor152[stor151[address(arg1)][stor104[address(arg1)] - 1]] = stor152[arg3]
                                stor152[arg3] = 0
                                tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                        if arg2:
                            if arg2 != arg1:
                                if not arg2:
                                    revert with 0, 'ERC721: balance query for the zero address'
                                tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                stor152[arg3] = balanceOf[address(arg2)]
                        else:
                            if tokenByIndex.length < 1:
                                revert with 0, 17
                            if tokenByIndex.length - 1 >= tokenByIndex.length:
                                revert with 0, 50
                            if stor154[arg3] >= tokenByIndex.length:
                                revert with 0, 50
                            tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                            stor154[stor153[stor153.length]] = stor154[arg3]
                            stor154[arg3] = 0
                            if not tokenByIndex.length:
                                revert with 0, 49
                            tokenByIndex[tokenByIndex.length] = 0
                            tokenByIndex.length--
                        approved[arg3] = 0
                        if not ownerOf[arg3]:
                            revert with 0, 'ERC721: owner query for nonexistent token'
                        emit Approval(ownerOf[arg3], 0, arg3);
                        if balanceOf[address(arg1)] < 1:
                            revert with 0, 17
                        balanceOf[address(arg1)]--
                        if balanceOf[address(arg2)] > -2:
                            revert with 0, 17
                        balanceOf[address(arg2)]++
                        ownerOf[arg3] = arg2
                        emit Transfer(arg1, arg2, arg3);
                        if ext_code.size(arg2):
                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args msg.sender, address(arg1), arg3, Array(len=arg4.length, data=arg4[all])
                            if not ext_call.success:
                                if not return_data.size:
                                    if not arg4.length:
                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                    revert with arg4[all]
                                if not return_data.size:
                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                            if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                    else:
                        if not liquidityPoolManagerImplementationAddress:
                            if not arg2:
                                revert with 0, 'ERC721: balance query for the zero address'
                            if balanceOf[address(arg2)] > test266151307():
                                revert with 0, 65
                            mem[ceil32(ceil32(arg4.length)) + 97] = balanceOf[address(arg2)]
                            mem[64] = ceil32(ceil32(arg4.length)) + (32 * balanceOf[address(arg2)]) + 129
                            if not balanceOf[address(arg2)]:
                                idx = 0
                                while idx < balanceOf[address(arg2)]:
                                    if not arg2:
                                        revert with 0, 'ERC721: balance query for the zero address'
                                    if idx >= balanceOf[address(arg2)]:
                                        revert with 0, 'ERC721Enumerable: owner index out of bounds'
                                    if tokenOfOwnerByIndex[address(arg2)][idx] <= 0:
                                        revert with 0, 'Troops: Id must be higher than zero'
                                    mem[0] = tokenOfOwnerByIndex[address(arg2)][idx]
                                    mem[32] = 552
                                    _16181 = mem[64]
                                    mem[64] = mem[64] + 256
                                    mem[_16181] = stor552[stor151[address(arg2)][idx]].field_0
                                    if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                            revert with 0, 34
                                        _17761 = mem[64]
                                        mem[64] = mem[64] + ceil32(uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) + 32
                                        mem[_17761] = uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                                revert with 0, 34
                                            if Mask(256, -1, stor552[stor151[address(arg2)][idx]].field_256):
                                                if 31 >= uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5:
                                                    mem[_17761 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                else:
                                                    mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                    mem[_17761 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                    s = _17761 + 32
                                                    t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                    while _17761 + (uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) > s:
                                                        mem[s + 32] = stor1[t].field_0
                                                        s = s + 32
                                                        t = t + 1
                                                        continue 
                                        else:
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                                revert with 0, 34
                                            if stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                if 31 >= stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                    mem[_17761 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                else:
                                                    mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                    mem[_17761 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                    s = _17761 + 32
                                                    t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                    while _17761 + stor552[stor151[address(arg2)][idx]].field_257 % 128 > s:
                                                        mem[s + 32] = stor1[t].field_0
                                                        s = s + 32
                                                        t = t + 1
                                                        continue 
                                        mem[_16181 + 32] = _17761
                                    else:
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                            revert with 0, 34
                                        _17800 = mem[64]
                                        mem[64] = mem[64] + ceil32(stor552[stor151[address(arg2)][idx]].field_257 % 128) + 32
                                        mem[_17800] = stor552[stor151[address(arg2)][idx]].field_257 % 128
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                                revert with 0, 34
                                            if Mask(256, -1, stor552[stor151[address(arg2)][idx]].field_256):
                                                if 31 >= uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5:
                                                    mem[_17800 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                else:
                                                    mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                    mem[_17800 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                    s = _17800 + 32
                                                    t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                    while _17800 + (uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) > s:
                                                        mem[s + 32] = stor1[t].field_0
                                                        s = s + 32
                                                        t = t + 1
                                                        continue 
                                        else:
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                                revert with 0, 34
                                            if stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                if 31 >= stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                    mem[_17800 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                else:
                                                    mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                    mem[_17800 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                    s = _17800 + 32
                                                    t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                    while _17800 + stor552[stor151[address(arg2)][idx]].field_257 % 128 > s:
                                                        mem[s + 32] = stor1[t].field_0
                                                        s = s + 32
                                                        t = t + 1
                                                        continue 
                                        mem[_16181 + 32] = _17800
                                    mem[_16181 + 64] = stor552[stor151[address(arg2)][idx]].field_512
                                    mem[_16181 + 96] = stor552[stor151[address(arg2)][idx]].field_768
                                    mem[_16181 + 128] = stor552[stor151[address(arg2)][idx]].field_1024
                                    mem[_16181 + 160] = stor552[stor151[address(arg2)][idx]].field_1280
                                    mem[_16181 + 192] = bool(uint8(stor552[stor151[address(arg2)][idx]].field_1536))
                                    mem[_16181 + 224] = bool(uint8(stor552[stor151[address(arg2)][idx]].field_1544))
                                    require uint8(stor552[stor151[address(arg2)][idx]].field_1536)
                                    if idx >= mem[ceil32(ceil32(arg4.length)) + 97]:
                                        revert with 0, 50
                                    mem[(32 * idx) + ceil32(ceil32(arg4.length)) + 129] = tokenOfOwnerByIndex[address(arg2)][idx]
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    continue 
                                idx = 0
                                s = 0
                                while idx < mem[ceil32(ceil32(arg4.length)) + 97]:
                                    if idx >= mem[ceil32(ceil32(arg4.length)) + 97]:
                                        revert with 0, 50
                                    mem[0] = mem[(32 * idx) + ceil32(ceil32(arg4.length)) + 129]
                                    mem[32] = 552
                                    if not uint8(stor552[mem[(32 * idx) + ceil32(ceil32(arg4.length)) + 129]].field_1544):
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = s
                                        continue 
                                    if s == -1:
                                        revert with 0, 17
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    s = s + 1
                                    continue 
                                if s >= 2:
                                    revert with 0, 'Each holder can not hold more than 2 Gladiators'
                                if not arg1:
                                    stor154[arg3] = tokenByIndex.length
                                    tokenByIndex.length++
                                    stor72A1[stor153.length] = arg3
                                    if arg2:
                                        if arg2 == arg1:
                                            approved[arg3] = 0
                                            if not ownerOf[arg3]:
                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                            emit Approval(ownerOf[arg3], 0, arg3);
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            balanceOf[address(arg1)]--
                                            if balanceOf[address(arg2)] > -2:
                                                revert with 0, 17
                                            balanceOf[address(arg2)]++
                                            mem[0] = arg3
                                            mem[32] = 103
                                            ownerOf[arg3] = arg2
                                            emit Transfer(arg1, arg2, arg3);
                                            if ext_code.size(arg2):
                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = msg.sender
                                                mem[mem[64] + 36] = arg1
                                                mem[mem[64] + 68] = arg3
                                                mem[mem[64] + 100] = 128
                                                mem[mem[64] + 132] = mem[96]
                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                if ceil32(mem[96]) <= mem[96]:
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _32542 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_32542] == Mask(32, 224, mem[_32542])
                                                    if Mask(32, 224, mem[_32542]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    mem[mem[64] + mem[96] + 164] = 0
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _32773 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_32773] == Mask(32, 224, mem[_32773])
                                                    if Mask(32, 224, mem[_32773]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            if not arg2:
                                                revert with 0, 'ERC721: balance query for the zero address'
                                            tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                            stor152[arg3] = balanceOf[address(arg2)]
                                            approved[arg3] = 0
                                            if not ownerOf[arg3]:
                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                            emit Approval(ownerOf[arg3], 0, arg3);
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            balanceOf[address(arg1)]--
                                            if balanceOf[address(arg2)] > -2:
                                                revert with 0, 17
                                            balanceOf[address(arg2)]++
                                            mem[0] = arg3
                                            mem[32] = 103
                                            ownerOf[arg3] = arg2
                                            emit Transfer(arg1, arg2, arg3);
                                            if ext_code.size(arg2):
                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = msg.sender
                                                mem[mem[64] + 36] = arg1
                                                mem[mem[64] + 68] = arg3
                                                mem[mem[64] + 100] = 128
                                                mem[mem[64] + 132] = mem[96]
                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                if ceil32(mem[96]) <= mem[96]:
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _32544 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_32544] == Mask(32, 224, mem[_32544])
                                                    if Mask(32, 224, mem[_32544]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    mem[mem[64] + mem[96] + 164] = 0
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _32774 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_32774] == Mask(32, 224, mem[_32774])
                                                    if Mask(32, 224, mem[_32774]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                    else:
                                        if tokenByIndex.length < 1:
                                            revert with 0, 17
                                        if tokenByIndex.length - 1 >= tokenByIndex.length:
                                            revert with 0, 50
                                        if stor154[arg3] >= tokenByIndex.length:
                                            revert with 0, 50
                                        tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                        stor154[stor153[stor153.length]] = stor154[arg3]
                                        stor154[arg3] = 0
                                        if not tokenByIndex.length:
                                            revert with 0, 49
                                        tokenByIndex[tokenByIndex.length] = 0
                                        tokenByIndex.length--
                                        approved[arg3] = 0
                                        if not ownerOf[arg3]:
                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                        emit Approval(ownerOf[arg3], 0, arg3);
                                        if balanceOf[address(arg1)] < 1:
                                            revert with 0, 17
                                        balanceOf[address(arg1)]--
                                        if balanceOf[address(arg2)] > -2:
                                            revert with 0, 17
                                        balanceOf[address(arg2)]++
                                        mem[0] = arg3
                                        mem[32] = 103
                                        ownerOf[arg3] = arg2
                                        emit Transfer(arg1, arg2, arg3);
                                        if ext_code.size(arg2):
                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = msg.sender
                                            mem[mem[64] + 36] = arg1
                                            mem[mem[64] + 68] = arg3
                                            mem[mem[64] + 100] = 128
                                            mem[mem[64] + 132] = mem[96]
                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                            if ceil32(mem[96]) <= mem[96]:
                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    if not return_data.size:
                                                        if not mem[96]:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with memory
                                                          from 128
                                                           len mem[96]
                                                    if not return_data.size:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _32546 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                require mem[_32546] == Mask(32, 224, mem[_32546])
                                                if Mask(32, 224, mem[_32546]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                mem[mem[64] + mem[96] + 164] = 0
                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    if not return_data.size:
                                                        if not mem[96]:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with memory
                                                          from 128
                                                           len mem[96]
                                                    if not return_data.size:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _32775 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                require mem[_32775] == Mask(32, 224, mem[_32775])
                                                if Mask(32, 224, mem[_32775]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                else:
                                    if arg1 == arg2:
                                        if arg2:
                                            if arg2 == arg1:
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32524 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32524] == Mask(32, 224, mem[_32524])
                                                        if Mask(32, 224, mem[_32524]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[64] + mem[96] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32764 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32764] == Mask(32, 224, mem[_32764])
                                                        if Mask(32, 224, mem[_32764]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if not arg2:
                                                    revert with 0, 'ERC721: balance query for the zero address'
                                                tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                stor152[arg3] = balanceOf[address(arg2)]
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32526 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32526] == Mask(32, 224, mem[_32526])
                                                        if Mask(32, 224, mem[_32526]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[64] + mem[96] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32765 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32765] == Mask(32, 224, mem[_32765])
                                                        if Mask(32, 224, mem[_32765]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            if tokenByIndex.length < 1:
                                                revert with 0, 17
                                            if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                revert with 0, 50
                                            if stor154[arg3] >= tokenByIndex.length:
                                                revert with 0, 50
                                            tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                            stor154[stor153[stor153.length]] = stor154[arg3]
                                            stor154[arg3] = 0
                                            if not tokenByIndex.length:
                                                revert with 0, 49
                                            tokenByIndex[tokenByIndex.length] = 0
                                            tokenByIndex.length--
                                            approved[arg3] = 0
                                            if not ownerOf[arg3]:
                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                            emit Approval(ownerOf[arg3], 0, arg3);
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            balanceOf[address(arg1)]--
                                            if balanceOf[address(arg2)] > -2:
                                                revert with 0, 17
                                            balanceOf[address(arg2)]++
                                            mem[0] = arg3
                                            mem[32] = 103
                                            ownerOf[arg3] = arg2
                                            emit Transfer(arg1, arg2, arg3);
                                            if ext_code.size(arg2):
                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = msg.sender
                                                mem[mem[64] + 36] = arg1
                                                mem[mem[64] + 68] = arg3
                                                mem[mem[64] + 100] = 128
                                                mem[mem[64] + 132] = mem[96]
                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                if ceil32(mem[96]) <= mem[96]:
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _32528 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_32528] == Mask(32, 224, mem[_32528])
                                                    if Mask(32, 224, mem[_32528]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    mem[mem[64] + mem[96] + 164] = 0
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _32766 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_32766] == Mask(32, 224, mem[_32766])
                                                    if Mask(32, 224, mem[_32766]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                    else:
                                        if not arg1:
                                            revert with 0, 'ERC721: balance query for the zero address'
                                        if balanceOf[address(arg1)] < 1:
                                            revert with 0, 17
                                        if balanceOf[address(arg1)] - 1 == stor152[arg3]:
                                            stor152[arg3] = 0
                                            tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                                            if arg2:
                                                if arg2 == arg1:
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _32530 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_32530] == Mask(32, 224, mem[_32530])
                                                            if Mask(32, 224, mem[_32530]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[64] + mem[96] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _32767 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_32767] == Mask(32, 224, mem[_32767])
                                                            if Mask(32, 224, mem[_32767]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    if not arg2:
                                                        revert with 0, 'ERC721: balance query for the zero address'
                                                    tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                    stor152[arg3] = balanceOf[address(arg2)]
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _32532 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_32532] == Mask(32, 224, mem[_32532])
                                                            if Mask(32, 224, mem[_32532]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[64] + mem[96] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _32768 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_32768] == Mask(32, 224, mem[_32768])
                                                            if Mask(32, 224, mem[_32768]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if tokenByIndex.length < 1:
                                                    revert with 0, 17
                                                if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                    revert with 0, 50
                                                if stor154[arg3] >= tokenByIndex.length:
                                                    revert with 0, 50
                                                tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                stor154[stor153[stor153.length]] = stor154[arg3]
                                                stor154[arg3] = 0
                                                if not tokenByIndex.length:
                                                    revert with 0, 49
                                                tokenByIndex[tokenByIndex.length] = 0
                                                tokenByIndex.length--
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32534 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32534] == Mask(32, 224, mem[_32534])
                                                        if Mask(32, 224, mem[_32534]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[64] + mem[96] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32769 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32769] == Mask(32, 224, mem[_32769])
                                                        if Mask(32, 224, mem[_32769]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            tokenOfOwnerByIndex[address(arg1)][stor152[arg3]] = tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1]
                                            stor152[stor151[address(arg1)][stor104[address(arg1)] - 1]] = stor152[arg3]
                                            stor152[arg3] = 0
                                            tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                                            if arg2:
                                                if arg2 == arg1:
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _32536 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_32536] == Mask(32, 224, mem[_32536])
                                                            if Mask(32, 224, mem[_32536]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[64] + mem[96] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _32770 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_32770] == Mask(32, 224, mem[_32770])
                                                            if Mask(32, 224, mem[_32770]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    if not arg2:
                                                        revert with 0, 'ERC721: balance query for the zero address'
                                                    tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                    stor152[arg3] = balanceOf[address(arg2)]
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _32538 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_32538] == Mask(32, 224, mem[_32538])
                                                            if Mask(32, 224, mem[_32538]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[64] + mem[96] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _32771 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_32771] == Mask(32, 224, mem[_32771])
                                                            if Mask(32, 224, mem[_32771]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if tokenByIndex.length < 1:
                                                    revert with 0, 17
                                                if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                    revert with 0, 50
                                                if stor154[arg3] >= tokenByIndex.length:
                                                    revert with 0, 50
                                                tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                stor154[stor153[stor153.length]] = stor154[arg3]
                                                stor154[arg3] = 0
                                                if not tokenByIndex.length:
                                                    revert with 0, 49
                                                tokenByIndex[tokenByIndex.length] = 0
                                                tokenByIndex.length--
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32540 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32540] == Mask(32, 224, mem[_32540])
                                                        if Mask(32, 224, mem[_32540]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[64] + mem[96] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32772 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32772] == Mask(32, 224, mem[_32772])
                                                        if Mask(32, 224, mem[_32772]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                            else:
                                mem[ceil32(ceil32(arg4.length)) + 129 len 32 * balanceOf[address(arg2)]] = call.data[calldata.size len 32 * balanceOf[address(arg2)]]
                                idx = 0
                                while idx < balanceOf[address(arg2)]:
                                    if not arg2:
                                        revert with 0, 'ERC721: balance query for the zero address'
                                    if idx >= balanceOf[address(arg2)]:
                                        revert with 0, 'ERC721Enumerable: owner index out of bounds'
                                    if tokenOfOwnerByIndex[address(arg2)][idx] <= 0:
                                        revert with 0, 'Troops: Id must be higher than zero'
                                    mem[0] = tokenOfOwnerByIndex[address(arg2)][idx]
                                    mem[32] = 552
                                    _16184 = mem[64]
                                    mem[64] = mem[64] + 256
                                    mem[_16184] = stor552[stor151[address(arg2)][idx]].field_0
                                    if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                            revert with 0, 34
                                        _17763 = mem[64]
                                        mem[64] = mem[64] + ceil32(uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) + 32
                                        mem[_17763] = uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                                revert with 0, 34
                                            if Mask(256, -1, stor552[stor151[address(arg2)][idx]].field_256):
                                                if 31 >= uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5:
                                                    mem[_17763 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                else:
                                                    mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                    mem[_17763 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                    s = _17763 + 32
                                                    t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                    while _17763 + (uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) > s:
                                                        mem[s + 32] = stor1[t].field_0
                                                        s = s + 32
                                                        t = t + 1
                                                        continue 
                                        else:
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                                revert with 0, 34
                                            if stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                if 31 >= stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                    mem[_17763 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                else:
                                                    mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                    mem[_17763 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                    s = _17763 + 32
                                                    t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                    while _17763 + stor552[stor151[address(arg2)][idx]].field_257 % 128 > s:
                                                        mem[s + 32] = stor1[t].field_0
                                                        s = s + 32
                                                        t = t + 1
                                                        continue 
                                        mem[_16184 + 32] = _17763
                                    else:
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                            revert with 0, 34
                                        _17805 = mem[64]
                                        mem[64] = mem[64] + ceil32(stor552[stor151[address(arg2)][idx]].field_257 % 128) + 32
                                        mem[_17805] = stor552[stor151[address(arg2)][idx]].field_257 % 128
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                                revert with 0, 34
                                            if Mask(256, -1, stor552[stor151[address(arg2)][idx]].field_256):
                                                if 31 >= uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5:
                                                    mem[_17805 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                else:
                                                    mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                    mem[_17805 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                    s = _17805 + 32
                                                    t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                    while _17805 + (uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) > s:
                                                        mem[s + 32] = stor1[t].field_0
                                                        s = s + 32
                                                        t = t + 1
                                                        continue 
                                        else:
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                                revert with 0, 34
                                            if stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                if 31 >= stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                    mem[_17805 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                else:
                                                    mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                    mem[_17805 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                    s = _17805 + 32
                                                    t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                    while _17805 + stor552[stor151[address(arg2)][idx]].field_257 % 128 > s:
                                                        mem[s + 32] = stor1[t].field_0
                                                        s = s + 32
                                                        t = t + 1
                                                        continue 
                                        mem[_16184 + 32] = _17805
                                    mem[_16184 + 64] = stor552[stor151[address(arg2)][idx]].field_512
                                    mem[_16184 + 96] = stor552[stor151[address(arg2)][idx]].field_768
                                    mem[_16184 + 128] = stor552[stor151[address(arg2)][idx]].field_1024
                                    mem[_16184 + 160] = stor552[stor151[address(arg2)][idx]].field_1280
                                    mem[_16184 + 192] = bool(uint8(stor552[stor151[address(arg2)][idx]].field_1536))
                                    mem[_16184 + 224] = bool(uint8(stor552[stor151[address(arg2)][idx]].field_1544))
                                    require uint8(stor552[stor151[address(arg2)][idx]].field_1536)
                                    if idx >= mem[ceil32(ceil32(arg4.length)) + 97]:
                                        revert with 0, 50
                                    mem[(32 * idx) + ceil32(ceil32(arg4.length)) + 129] = tokenOfOwnerByIndex[address(arg2)][idx]
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    continue 
                                idx = 0
                                s = 0
                                while idx < mem[ceil32(ceil32(arg4.length)) + 97]:
                                    if idx >= mem[ceil32(ceil32(arg4.length)) + 97]:
                                        revert with 0, 50
                                    mem[0] = mem[(32 * idx) + ceil32(ceil32(arg4.length)) + 129]
                                    mem[32] = 552
                                    if not uint8(stor552[mem[(32 * idx) + ceil32(ceil32(arg4.length)) + 129]].field_1544):
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = s
                                        continue 
                                    if s == -1:
                                        revert with 0, 17
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    s = s + 1
                                    continue 
                                if s >= 2:
                                    revert with 0, 'Each holder can not hold more than 2 Gladiators'
                                if not arg1:
                                    stor154[arg3] = tokenByIndex.length
                                    tokenByIndex.length++
                                    stor72A1[stor153.length] = arg3
                                    if arg2:
                                        if arg2 == arg1:
                                            approved[arg3] = 0
                                            if not ownerOf[arg3]:
                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                            emit Approval(ownerOf[arg3], 0, arg3);
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            balanceOf[address(arg1)]--
                                            if balanceOf[address(arg2)] > -2:
                                                revert with 0, 17
                                            balanceOf[address(arg2)]++
                                            mem[0] = arg3
                                            mem[32] = 103
                                            ownerOf[arg3] = arg2
                                            emit Transfer(arg1, arg2, arg3);
                                            if ext_code.size(arg2):
                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = msg.sender
                                                mem[mem[64] + 36] = arg1
                                                mem[mem[64] + 68] = arg3
                                                mem[mem[64] + 100] = 128
                                                mem[mem[64] + 132] = mem[96]
                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                if ceil32(mem[96]) <= mem[96]:
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _32566 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_32566] == Mask(32, 224, mem[_32566])
                                                    if Mask(32, 224, mem[_32566]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    mem[mem[64] + mem[96] + 164] = 0
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _32785 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_32785] == Mask(32, 224, mem[_32785])
                                                    if Mask(32, 224, mem[_32785]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            if not arg2:
                                                revert with 0, 'ERC721: balance query for the zero address'
                                            tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                            stor152[arg3] = balanceOf[address(arg2)]
                                            approved[arg3] = 0
                                            if not ownerOf[arg3]:
                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                            emit Approval(ownerOf[arg3], 0, arg3);
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            balanceOf[address(arg1)]--
                                            if balanceOf[address(arg2)] > -2:
                                                revert with 0, 17
                                            balanceOf[address(arg2)]++
                                            mem[0] = arg3
                                            mem[32] = 103
                                            ownerOf[arg3] = arg2
                                            emit Transfer(arg1, arg2, arg3);
                                            if ext_code.size(arg2):
                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = msg.sender
                                                mem[mem[64] + 36] = arg1
                                                mem[mem[64] + 68] = arg3
                                                mem[mem[64] + 100] = 128
                                                mem[mem[64] + 132] = mem[96]
                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                if ceil32(mem[96]) <= mem[96]:
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _32568 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_32568] == Mask(32, 224, mem[_32568])
                                                    if Mask(32, 224, mem[_32568]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    mem[mem[64] + mem[96] + 164] = 0
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _32786 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_32786] == Mask(32, 224, mem[_32786])
                                                    if Mask(32, 224, mem[_32786]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                    else:
                                        if tokenByIndex.length < 1:
                                            revert with 0, 17
                                        if tokenByIndex.length - 1 >= tokenByIndex.length:
                                            revert with 0, 50
                                        if stor154[arg3] >= tokenByIndex.length:
                                            revert with 0, 50
                                        tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                        stor154[stor153[stor153.length]] = stor154[arg3]
                                        stor154[arg3] = 0
                                        if not tokenByIndex.length:
                                            revert with 0, 49
                                        tokenByIndex[tokenByIndex.length] = 0
                                        tokenByIndex.length--
                                        approved[arg3] = 0
                                        if not ownerOf[arg3]:
                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                        emit Approval(ownerOf[arg3], 0, arg3);
                                        if balanceOf[address(arg1)] < 1:
                                            revert with 0, 17
                                        balanceOf[address(arg1)]--
                                        if balanceOf[address(arg2)] > -2:
                                            revert with 0, 17
                                        balanceOf[address(arg2)]++
                                        mem[0] = arg3
                                        mem[32] = 103
                                        ownerOf[arg3] = arg2
                                        emit Transfer(arg1, arg2, arg3);
                                        if ext_code.size(arg2):
                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = msg.sender
                                            mem[mem[64] + 36] = arg1
                                            mem[mem[64] + 68] = arg3
                                            mem[mem[64] + 100] = 128
                                            mem[mem[64] + 132] = mem[96]
                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                            if ceil32(mem[96]) <= mem[96]:
                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    if not return_data.size:
                                                        if not mem[96]:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with memory
                                                          from 128
                                                           len mem[96]
                                                    if not return_data.size:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _32570 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                require mem[_32570] == Mask(32, 224, mem[_32570])
                                                if Mask(32, 224, mem[_32570]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                mem[mem[64] + mem[96] + 164] = 0
                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    if not return_data.size:
                                                        if not mem[96]:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with memory
                                                          from 128
                                                           len mem[96]
                                                    if not return_data.size:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _32787 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                require mem[_32787] == Mask(32, 224, mem[_32787])
                                                if Mask(32, 224, mem[_32787]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                else:
                                    if arg1 == arg2:
                                        if arg2:
                                            if arg2 == arg1:
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32548 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32548] == Mask(32, 224, mem[_32548])
                                                        if Mask(32, 224, mem[_32548]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[64] + mem[96] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32776 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32776] == Mask(32, 224, mem[_32776])
                                                        if Mask(32, 224, mem[_32776]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if not arg2:
                                                    revert with 0, 'ERC721: balance query for the zero address'
                                                tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                stor152[arg3] = balanceOf[address(arg2)]
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32550 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32550] == Mask(32, 224, mem[_32550])
                                                        if Mask(32, 224, mem[_32550]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[64] + mem[96] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32777 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32777] == Mask(32, 224, mem[_32777])
                                                        if Mask(32, 224, mem[_32777]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            if tokenByIndex.length < 1:
                                                revert with 0, 17
                                            if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                revert with 0, 50
                                            if stor154[arg3] >= tokenByIndex.length:
                                                revert with 0, 50
                                            tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                            stor154[stor153[stor153.length]] = stor154[arg3]
                                            stor154[arg3] = 0
                                            if not tokenByIndex.length:
                                                revert with 0, 49
                                            tokenByIndex[tokenByIndex.length] = 0
                                            tokenByIndex.length--
                                            approved[arg3] = 0
                                            if not ownerOf[arg3]:
                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                            emit Approval(ownerOf[arg3], 0, arg3);
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            balanceOf[address(arg1)]--
                                            if balanceOf[address(arg2)] > -2:
                                                revert with 0, 17
                                            balanceOf[address(arg2)]++
                                            mem[0] = arg3
                                            mem[32] = 103
                                            ownerOf[arg3] = arg2
                                            emit Transfer(arg1, arg2, arg3);
                                            if ext_code.size(arg2):
                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = msg.sender
                                                mem[mem[64] + 36] = arg1
                                                mem[mem[64] + 68] = arg3
                                                mem[mem[64] + 100] = 128
                                                mem[mem[64] + 132] = mem[96]
                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                if ceil32(mem[96]) <= mem[96]:
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _32552 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_32552] == Mask(32, 224, mem[_32552])
                                                    if Mask(32, 224, mem[_32552]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    mem[mem[64] + mem[96] + 164] = 0
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _32778 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_32778] == Mask(32, 224, mem[_32778])
                                                    if Mask(32, 224, mem[_32778]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                    else:
                                        if not arg1:
                                            revert with 0, 'ERC721: balance query for the zero address'
                                        if balanceOf[address(arg1)] < 1:
                                            revert with 0, 17
                                        if balanceOf[address(arg1)] - 1 == stor152[arg3]:
                                            stor152[arg3] = 0
                                            tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                                            if arg2:
                                                if arg2 == arg1:
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _32554 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_32554] == Mask(32, 224, mem[_32554])
                                                            if Mask(32, 224, mem[_32554]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[64] + mem[96] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _32779 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_32779] == Mask(32, 224, mem[_32779])
                                                            if Mask(32, 224, mem[_32779]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    if not arg2:
                                                        revert with 0, 'ERC721: balance query for the zero address'
                                                    tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                    stor152[arg3] = balanceOf[address(arg2)]
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _32556 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_32556] == Mask(32, 224, mem[_32556])
                                                            if Mask(32, 224, mem[_32556]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[64] + mem[96] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _32780 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_32780] == Mask(32, 224, mem[_32780])
                                                            if Mask(32, 224, mem[_32780]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if tokenByIndex.length < 1:
                                                    revert with 0, 17
                                                if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                    revert with 0, 50
                                                if stor154[arg3] >= tokenByIndex.length:
                                                    revert with 0, 50
                                                tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                stor154[stor153[stor153.length]] = stor154[arg3]
                                                stor154[arg3] = 0
                                                if not tokenByIndex.length:
                                                    revert with 0, 49
                                                tokenByIndex[tokenByIndex.length] = 0
                                                tokenByIndex.length--
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32558 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32558] == Mask(32, 224, mem[_32558])
                                                        if Mask(32, 224, mem[_32558]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[64] + mem[96] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32781 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32781] == Mask(32, 224, mem[_32781])
                                                        if Mask(32, 224, mem[_32781]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            tokenOfOwnerByIndex[address(arg1)][stor152[arg3]] = tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1]
                                            stor152[stor151[address(arg1)][stor104[address(arg1)] - 1]] = stor152[arg3]
                                            stor152[arg3] = 0
                                            tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                                            if arg2:
                                                if arg2 == arg1:
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _32560 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_32560] == Mask(32, 224, mem[_32560])
                                                            if Mask(32, 224, mem[_32560]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[64] + mem[96] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _32782 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_32782] == Mask(32, 224, mem[_32782])
                                                            if Mask(32, 224, mem[_32782]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    if not arg2:
                                                        revert with 0, 'ERC721: balance query for the zero address'
                                                    tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                    stor152[arg3] = balanceOf[address(arg2)]
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _32562 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_32562] == Mask(32, 224, mem[_32562])
                                                            if Mask(32, 224, mem[_32562]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[64] + mem[96] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _32783 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_32783] == Mask(32, 224, mem[_32783])
                                                            if Mask(32, 224, mem[_32783]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if tokenByIndex.length < 1:
                                                    revert with 0, 17
                                                if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                    revert with 0, 50
                                                if stor154[arg3] >= tokenByIndex.length:
                                                    revert with 0, 50
                                                tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                stor154[stor153[stor153.length]] = stor154[arg3]
                                                stor154[arg3] = 0
                                                if not tokenByIndex.length:
                                                    revert with 0, 49
                                                tokenByIndex[tokenByIndex.length] = 0
                                                tokenByIndex.length--
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32564 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32564] == Mask(32, 224, mem[_32564])
                                                        if Mask(32, 224, mem[_32564]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[64] + mem[96] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32784 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32784] == Mask(32, 224, mem[_32784])
                                                        if Mask(32, 224, mem[_32784]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                        else:
                            mem[ceil32(ceil32(arg4.length)) + 101] = arg2
                            staticcall liquidityPoolManagerImplementationAddress.0xb278110f with:
                                    gas gas_remaining wei
                                   args arg2
                            mem[ceil32(ceil32(arg4.length)) + 97] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            if ext_call.return_data[0]:
                                if not arg1:
                                    stor154[arg3] = tokenByIndex.length
                                    tokenByIndex.length++
                                    stor72A1[stor153.length] = arg3
                                else:
                                    if arg1 != arg2:
                                        if not arg1:
                                            revert with 0, 'ERC721: balance query for the zero address'
                                        if balanceOf[address(arg1)] < 1:
                                            revert with 0, 17
                                        if balanceOf[address(arg1)] - 1 != stor152[arg3]:
                                            tokenOfOwnerByIndex[address(arg1)][stor152[arg3]] = tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1]
                                            stor152[stor151[address(arg1)][stor104[address(arg1)] - 1]] = stor152[arg3]
                                        stor152[arg3] = 0
                                        tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                                if arg2:
                                    if arg2 != arg1:
                                        if not arg2:
                                            revert with 0, 'ERC721: balance query for the zero address'
                                        tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                        stor152[arg3] = balanceOf[address(arg2)]
                                else:
                                    if tokenByIndex.length < 1:
                                        revert with 0, 17
                                    if tokenByIndex.length - 1 >= tokenByIndex.length:
                                        revert with 0, 50
                                    if stor154[arg3] >= tokenByIndex.length:
                                        revert with 0, 50
                                    tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                    stor154[stor153[stor153.length]] = stor154[arg3]
                                    stor154[arg3] = 0
                                    if not tokenByIndex.length:
                                        revert with 0, 49
                                    tokenByIndex[tokenByIndex.length] = 0
                                    tokenByIndex.length--
                                approved[arg3] = 0
                                if not ownerOf[arg3]:
                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                emit Approval(ownerOf[arg3], 0, arg3);
                                if balanceOf[address(arg1)] < 1:
                                    revert with 0, 17
                                balanceOf[address(arg1)]--
                                if balanceOf[address(arg2)] > -2:
                                    revert with 0, 17
                                balanceOf[address(arg2)]++
                                ownerOf[arg3] = arg2
                                emit Transfer(arg1, arg2, arg3);
                                if ext_code.size(arg2):
                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args msg.sender, address(arg1), arg3, Array(len=arg4.length, data=arg4[all])
                                    if not ext_call.success:
                                        if not return_data.size:
                                            if not arg4.length:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            revert with arg4[all]
                                        if not return_data.size:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                    if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                            else:
                                if not arg2:
                                    revert with 0, 'ERC721: balance query for the zero address'
                                if balanceOf[address(arg2)] > test266151307():
                                    revert with 0, 65
                                mem[ceil32(ceil32(arg4.length)) + ceil32(return_data.size) + 97] = balanceOf[address(arg2)]
                                mem[64] = ceil32(ceil32(arg4.length)) + ceil32(return_data.size) + (32 * balanceOf[address(arg2)]) + 129
                                if not balanceOf[address(arg2)]:
                                    idx = 0
                                    while idx < balanceOf[address(arg2)]:
                                        if not arg2:
                                            revert with 0, 'ERC721: balance query for the zero address'
                                        if idx >= balanceOf[address(arg2)]:
                                            revert with 0, 'ERC721Enumerable: owner index out of bounds'
                                        if tokenOfOwnerByIndex[address(arg2)][idx] <= 0:
                                            revert with 0, 'Troops: Id must be higher than zero'
                                        mem[0] = tokenOfOwnerByIndex[address(arg2)][idx]
                                        mem[32] = 552
                                        _16259 = mem[64]
                                        mem[64] = mem[64] + 256
                                        mem[_16259] = stor552[stor151[address(arg2)][idx]].field_0
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                                revert with 0, 34
                                            _17765 = mem[64]
                                            mem[64] = mem[64] + ceil32(uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) + 32
                                            mem[_17765] = uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                                if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                                    revert with 0, 34
                                                if Mask(256, -1, stor552[stor151[address(arg2)][idx]].field_256):
                                                    if 31 >= uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5:
                                                        mem[_17765 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                    else:
                                                        mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                        mem[_17765 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                        s = _17765 + 32
                                                        t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                        while _17765 + (uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) > s:
                                                            mem[s + 32] = stor1[t].field_0
                                                            s = s + 32
                                                            t = t + 1
                                                            continue 
                                            else:
                                                if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                                    revert with 0, 34
                                                if stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                    if 31 >= stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                        mem[_17765 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                    else:
                                                        mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                        mem[_17765 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                        s = _17765 + 32
                                                        t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                        while _17765 + stor552[stor151[address(arg2)][idx]].field_257 % 128 > s:
                                                            mem[s + 32] = stor1[t].field_0
                                                            s = s + 32
                                                            t = t + 1
                                                            continue 
                                            mem[_16259 + 32] = _17765
                                        else:
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                                revert with 0, 34
                                            _17810 = mem[64]
                                            mem[64] = mem[64] + ceil32(stor552[stor151[address(arg2)][idx]].field_257 % 128) + 32
                                            mem[_17810] = stor552[stor151[address(arg2)][idx]].field_257 % 128
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                                if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                                    revert with 0, 34
                                                if Mask(256, -1, stor552[stor151[address(arg2)][idx]].field_256):
                                                    if 31 >= uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5:
                                                        mem[_17810 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                    else:
                                                        mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                        mem[_17810 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                        s = _17810 + 32
                                                        t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                        while _17810 + (uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) > s:
                                                            mem[s + 32] = stor1[t].field_0
                                                            s = s + 32
                                                            t = t + 1
                                                            continue 
                                            else:
                                                if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                                    revert with 0, 34
                                                if stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                    if 31 >= stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                        mem[_17810 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                    else:
                                                        mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                        mem[_17810 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                        s = _17810 + 32
                                                        t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                        while _17810 + stor552[stor151[address(arg2)][idx]].field_257 % 128 > s:
                                                            mem[s + 32] = stor1[t].field_0
                                                            s = s + 32
                                                            t = t + 1
                                                            continue 
                                            mem[_16259 + 32] = _17810
                                        mem[_16259 + 64] = stor552[stor151[address(arg2)][idx]].field_512
                                        mem[_16259 + 96] = stor552[stor151[address(arg2)][idx]].field_768
                                        mem[_16259 + 128] = stor552[stor151[address(arg2)][idx]].field_1024
                                        mem[_16259 + 160] = stor552[stor151[address(arg2)][idx]].field_1280
                                        mem[_16259 + 192] = bool(uint8(stor552[stor151[address(arg2)][idx]].field_1536))
                                        mem[_16259 + 224] = bool(uint8(stor552[stor151[address(arg2)][idx]].field_1544))
                                        require uint8(stor552[stor151[address(arg2)][idx]].field_1536)
                                        if idx >= mem[ceil32(ceil32(arg4.length)) + ceil32(return_data.size) + 97]:
                                            revert with 0, 50
                                        mem[(32 * idx) + ceil32(ceil32(arg4.length)) + ceil32(return_data.size) + 129] = tokenOfOwnerByIndex[address(arg2)][idx]
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        continue 
                                    idx = 0
                                    s = 0
                                    while idx < mem[ceil32(ceil32(arg4.length)) + ceil32(return_data.size) + 97]:
                                        if idx >= mem[ceil32(ceil32(arg4.length)) + ceil32(return_data.size) + 97]:
                                            revert with 0, 50
                                        mem[0] = mem[(32 * idx) + ceil32(ceil32(arg4.length)) + ceil32(return_data.size) + 129]
                                        mem[32] = 552
                                        if not uint8(stor552[mem[(32 * idx) + ceil32(ceil32(arg4.length)) + ceil32(return_data.size) + 129]].field_1544):
                                            if idx == -1:
                                                revert with 0, 17
                                            idx = idx + 1
                                            s = s
                                            continue 
                                        if s == -1:
                                            revert with 0, 17
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = s + 1
                                        continue 
                                    if s >= 2:
                                        revert with 0, 'Each holder can not hold more than 2 Gladiators'
                                    if not arg1:
                                        stor154[arg3] = tokenByIndex.length
                                        tokenByIndex.length++
                                        stor72A1[stor153.length] = arg3
                                        if arg2:
                                            if arg2 == arg1:
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32590 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32590] == Mask(32, 224, mem[_32590])
                                                        if Mask(32, 224, mem[_32590]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[64] + mem[96] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32797 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32797] == Mask(32, 224, mem[_32797])
                                                        if Mask(32, 224, mem[_32797]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if not arg2:
                                                    revert with 0, 'ERC721: balance query for the zero address'
                                                tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                stor152[arg3] = balanceOf[address(arg2)]
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32592 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32592] == Mask(32, 224, mem[_32592])
                                                        if Mask(32, 224, mem[_32592]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[64] + mem[96] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32798 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32798] == Mask(32, 224, mem[_32798])
                                                        if Mask(32, 224, mem[_32798]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            if tokenByIndex.length < 1:
                                                revert with 0, 17
                                            if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                revert with 0, 50
                                            if stor154[arg3] >= tokenByIndex.length:
                                                revert with 0, 50
                                            tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                            stor154[stor153[stor153.length]] = stor154[arg3]
                                            stor154[arg3] = 0
                                            if not tokenByIndex.length:
                                                revert with 0, 49
                                            tokenByIndex[tokenByIndex.length] = 0
                                            tokenByIndex.length--
                                            approved[arg3] = 0
                                            if not ownerOf[arg3]:
                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                            emit Approval(ownerOf[arg3], 0, arg3);
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            balanceOf[address(arg1)]--
                                            if balanceOf[address(arg2)] > -2:
                                                revert with 0, 17
                                            balanceOf[address(arg2)]++
                                            mem[0] = arg3
                                            mem[32] = 103
                                            ownerOf[arg3] = arg2
                                            emit Transfer(arg1, arg2, arg3);
                                            if ext_code.size(arg2):
                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = msg.sender
                                                mem[mem[64] + 36] = arg1
                                                mem[mem[64] + 68] = arg3
                                                mem[mem[64] + 100] = 128
                                                mem[mem[64] + 132] = mem[96]
                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                if ceil32(mem[96]) <= mem[96]:
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _32594 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_32594] == Mask(32, 224, mem[_32594])
                                                    if Mask(32, 224, mem[_32594]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    mem[mem[64] + mem[96] + 164] = 0
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _32799 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_32799] == Mask(32, 224, mem[_32799])
                                                    if Mask(32, 224, mem[_32799]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                    else:
                                        if arg1 == arg2:
                                            if arg2:
                                                if arg2 == arg1:
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _32572 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_32572] == Mask(32, 224, mem[_32572])
                                                            if Mask(32, 224, mem[_32572]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[64] + mem[96] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _32788 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_32788] == Mask(32, 224, mem[_32788])
                                                            if Mask(32, 224, mem[_32788]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    if not arg2:
                                                        revert with 0, 'ERC721: balance query for the zero address'
                                                    tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                    stor152[arg3] = balanceOf[address(arg2)]
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _32574 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_32574] == Mask(32, 224, mem[_32574])
                                                            if Mask(32, 224, mem[_32574]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[64] + mem[96] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _32789 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_32789] == Mask(32, 224, mem[_32789])
                                                            if Mask(32, 224, mem[_32789]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if tokenByIndex.length < 1:
                                                    revert with 0, 17
                                                if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                    revert with 0, 50
                                                if stor154[arg3] >= tokenByIndex.length:
                                                    revert with 0, 50
                                                tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                stor154[stor153[stor153.length]] = stor154[arg3]
                                                stor154[arg3] = 0
                                                if not tokenByIndex.length:
                                                    revert with 0, 49
                                                tokenByIndex[tokenByIndex.length] = 0
                                                tokenByIndex.length--
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32576 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32576] == Mask(32, 224, mem[_32576])
                                                        if Mask(32, 224, mem[_32576]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[64] + mem[96] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32790 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32790] == Mask(32, 224, mem[_32790])
                                                        if Mask(32, 224, mem[_32790]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            if not arg1:
                                                revert with 0, 'ERC721: balance query for the zero address'
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            if balanceOf[address(arg1)] - 1 == stor152[arg3]:
                                                stor152[arg3] = 0
                                                tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                                                if arg2:
                                                    if arg2 == arg1:
                                                        approved[arg3] = 0
                                                        if not ownerOf[arg3]:
                                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                                        emit Approval(ownerOf[arg3], 0, arg3);
                                                        if balanceOf[address(arg1)] < 1:
                                                            revert with 0, 17
                                                        balanceOf[address(arg1)]--
                                                        if balanceOf[address(arg2)] > -2:
                                                            revert with 0, 17
                                                        balanceOf[address(arg2)]++
                                                        mem[0] = arg3
                                                        mem[32] = 103
                                                        ownerOf[arg3] = arg2
                                                        emit Transfer(arg1, arg2, arg3);
                                                        if ext_code.size(arg2):
                                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = msg.sender
                                                            mem[mem[64] + 36] = arg1
                                                            mem[mem[64] + 68] = arg3
                                                            mem[mem[64] + 100] = 128
                                                            mem[mem[64] + 132] = mem[96]
                                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                            if ceil32(mem[96]) <= mem[96]:
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _32578 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_32578] == Mask(32, 224, mem[_32578])
                                                                if Mask(32, 224, mem[_32578]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            else:
                                                                mem[mem[64] + mem[96] + 164] = 0
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _32791 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_32791] == Mask(32, 224, mem[_32791])
                                                                if Mask(32, 224, mem[_32791]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        if not arg2:
                                                            revert with 0, 'ERC721: balance query for the zero address'
                                                        tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                        stor152[arg3] = balanceOf[address(arg2)]
                                                        approved[arg3] = 0
                                                        if not ownerOf[arg3]:
                                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                                        emit Approval(ownerOf[arg3], 0, arg3);
                                                        if balanceOf[address(arg1)] < 1:
                                                            revert with 0, 17
                                                        balanceOf[address(arg1)]--
                                                        if balanceOf[address(arg2)] > -2:
                                                            revert with 0, 17
                                                        balanceOf[address(arg2)]++
                                                        mem[0] = arg3
                                                        mem[32] = 103
                                                        ownerOf[arg3] = arg2
                                                        emit Transfer(arg1, arg2, arg3);
                                                        if ext_code.size(arg2):
                                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = msg.sender
                                                            mem[mem[64] + 36] = arg1
                                                            mem[mem[64] + 68] = arg3
                                                            mem[mem[64] + 100] = 128
                                                            mem[mem[64] + 132] = mem[96]
                                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                            if ceil32(mem[96]) <= mem[96]:
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _32580 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_32580] == Mask(32, 224, mem[_32580])
                                                                if Mask(32, 224, mem[_32580]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            else:
                                                                mem[mem[64] + mem[96] + 164] = 0
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _32792 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_32792] == Mask(32, 224, mem[_32792])
                                                                if Mask(32, 224, mem[_32792]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    if tokenByIndex.length < 1:
                                                        revert with 0, 17
                                                    if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                        revert with 0, 50
                                                    if stor154[arg3] >= tokenByIndex.length:
                                                        revert with 0, 50
                                                    tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                    stor154[stor153[stor153.length]] = stor154[arg3]
                                                    stor154[arg3] = 0
                                                    if not tokenByIndex.length:
                                                        revert with 0, 49
                                                    tokenByIndex[tokenByIndex.length] = 0
                                                    tokenByIndex.length--
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _32582 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_32582] == Mask(32, 224, mem[_32582])
                                                            if Mask(32, 224, mem[_32582]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[64] + mem[96] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _32793 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_32793] == Mask(32, 224, mem[_32793])
                                                            if Mask(32, 224, mem[_32793]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                tokenOfOwnerByIndex[address(arg1)][stor152[arg3]] = tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1]
                                                stor152[stor151[address(arg1)][stor104[address(arg1)] - 1]] = stor152[arg3]
                                                stor152[arg3] = 0
                                                tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                                                if arg2:
                                                    if arg2 == arg1:
                                                        approved[arg3] = 0
                                                        if not ownerOf[arg3]:
                                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                                        emit Approval(ownerOf[arg3], 0, arg3);
                                                        if balanceOf[address(arg1)] < 1:
                                                            revert with 0, 17
                                                        balanceOf[address(arg1)]--
                                                        if balanceOf[address(arg2)] > -2:
                                                            revert with 0, 17
                                                        balanceOf[address(arg2)]++
                                                        mem[0] = arg3
                                                        mem[32] = 103
                                                        ownerOf[arg3] = arg2
                                                        emit Transfer(arg1, arg2, arg3);
                                                        if ext_code.size(arg2):
                                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = msg.sender
                                                            mem[mem[64] + 36] = arg1
                                                            mem[mem[64] + 68] = arg3
                                                            mem[mem[64] + 100] = 128
                                                            mem[mem[64] + 132] = mem[96]
                                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                            if ceil32(mem[96]) <= mem[96]:
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _32584 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_32584] == Mask(32, 224, mem[_32584])
                                                                if Mask(32, 224, mem[_32584]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            else:
                                                                mem[mem[64] + mem[96] + 164] = 0
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _32794 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_32794] == Mask(32, 224, mem[_32794])
                                                                if Mask(32, 224, mem[_32794]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        if not arg2:
                                                            revert with 0, 'ERC721: balance query for the zero address'
                                                        tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                        stor152[arg3] = balanceOf[address(arg2)]
                                                        approved[arg3] = 0
                                                        if not ownerOf[arg3]:
                                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                                        emit Approval(ownerOf[arg3], 0, arg3);
                                                        if balanceOf[address(arg1)] < 1:
                                                            revert with 0, 17
                                                        balanceOf[address(arg1)]--
                                                        if balanceOf[address(arg2)] > -2:
                                                            revert with 0, 17
                                                        balanceOf[address(arg2)]++
                                                        mem[0] = arg3
                                                        mem[32] = 103
                                                        ownerOf[arg3] = arg2
                                                        emit Transfer(arg1, arg2, arg3);
                                                        if ext_code.size(arg2):
                                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = msg.sender
                                                            mem[mem[64] + 36] = arg1
                                                            mem[mem[64] + 68] = arg3
                                                            mem[mem[64] + 100] = 128
                                                            mem[mem[64] + 132] = mem[96]
                                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                            if ceil32(mem[96]) <= mem[96]:
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _32586 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_32586] == Mask(32, 224, mem[_32586])
                                                                if Mask(32, 224, mem[_32586]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            else:
                                                                mem[mem[64] + mem[96] + 164] = 0
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _32795 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_32795] == Mask(32, 224, mem[_32795])
                                                                if Mask(32, 224, mem[_32795]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    if tokenByIndex.length < 1:
                                                        revert with 0, 17
                                                    if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                        revert with 0, 50
                                                    if stor154[arg3] >= tokenByIndex.length:
                                                        revert with 0, 50
                                                    tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                    stor154[stor153[stor153.length]] = stor154[arg3]
                                                    stor154[arg3] = 0
                                                    if not tokenByIndex.length:
                                                        revert with 0, 49
                                                    tokenByIndex[tokenByIndex.length] = 0
                                                    tokenByIndex.length--
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _32588 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_32588] == Mask(32, 224, mem[_32588])
                                                            if Mask(32, 224, mem[_32588]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[64] + mem[96] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _32796 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_32796] == Mask(32, 224, mem[_32796])
                                                            if Mask(32, 224, mem[_32796]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                else:
                                    mem[ceil32(ceil32(arg4.length)) + ceil32(return_data.size) + 129 len 32 * balanceOf[address(arg2)]] = call.data[calldata.size len 32 * balanceOf[address(arg2)]]
                                    idx = 0
                                    while idx < balanceOf[address(arg2)]:
                                        if not arg2:
                                            revert with 0, 'ERC721: balance query for the zero address'
                                        if idx >= balanceOf[address(arg2)]:
                                            revert with 0, 'ERC721Enumerable: owner index out of bounds'
                                        if tokenOfOwnerByIndex[address(arg2)][idx] <= 0:
                                            revert with 0, 'Troops: Id must be higher than zero'
                                        mem[0] = tokenOfOwnerByIndex[address(arg2)][idx]
                                        mem[32] = 552
                                        _16262 = mem[64]
                                        mem[64] = mem[64] + 256
                                        mem[_16262] = stor552[stor151[address(arg2)][idx]].field_0
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                                revert with 0, 34
                                            _17767 = mem[64]
                                            mem[64] = mem[64] + ceil32(uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) + 32
                                            mem[_17767] = uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                                if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                                    revert with 0, 34
                                                if Mask(256, -1, stor552[stor151[address(arg2)][idx]].field_256):
                                                    if 31 >= uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5:
                                                        mem[_17767 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                    else:
                                                        mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                        mem[_17767 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                        s = _17767 + 32
                                                        t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                        while _17767 + (uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) > s:
                                                            mem[s + 32] = stor1[t].field_0
                                                            s = s + 32
                                                            t = t + 1
                                                            continue 
                                            else:
                                                if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                                    revert with 0, 34
                                                if stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                    if 31 >= stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                        mem[_17767 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                    else:
                                                        mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                        mem[_17767 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                        s = _17767 + 32
                                                        t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                        while _17767 + stor552[stor151[address(arg2)][idx]].field_257 % 128 > s:
                                                            mem[s + 32] = stor1[t].field_0
                                                            s = s + 32
                                                            t = t + 1
                                                            continue 
                                            mem[_16262 + 32] = _17767
                                        else:
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                                revert with 0, 34
                                            _17815 = mem[64]
                                            mem[64] = mem[64] + ceil32(stor552[stor151[address(arg2)][idx]].field_257 % 128) + 32
                                            mem[_17815] = stor552[stor151[address(arg2)][idx]].field_257 % 128
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                                if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                                    revert with 0, 34
                                                if Mask(256, -1, stor552[stor151[address(arg2)][idx]].field_256):
                                                    if 31 >= uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5:
                                                        mem[_17815 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                    else:
                                                        mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                        mem[_17815 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                        s = _17815 + 32
                                                        t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                        while _17815 + (uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) > s:
                                                            mem[s + 32] = stor1[t].field_0
                                                            s = s + 32
                                                            t = t + 1
                                                            continue 
                                            else:
                                                if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                                    revert with 0, 34
                                                if stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                    if 31 >= stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                        mem[_17815 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                    else:
                                                        mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                        mem[_17815 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                        s = _17815 + 32
                                                        t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                        while _17815 + stor552[stor151[address(arg2)][idx]].field_257 % 128 > s:
                                                            mem[s + 32] = stor1[t].field_0
                                                            s = s + 32
                                                            t = t + 1
                                                            continue 
                                            mem[_16262 + 32] = _17815
                                        mem[_16262 + 64] = stor552[stor151[address(arg2)][idx]].field_512
                                        mem[_16262 + 96] = stor552[stor151[address(arg2)][idx]].field_768
                                        mem[_16262 + 128] = stor552[stor151[address(arg2)][idx]].field_1024
                                        mem[_16262 + 160] = stor552[stor151[address(arg2)][idx]].field_1280
                                        mem[_16262 + 192] = bool(uint8(stor552[stor151[address(arg2)][idx]].field_1536))
                                        mem[_16262 + 224] = bool(uint8(stor552[stor151[address(arg2)][idx]].field_1544))
                                        require uint8(stor552[stor151[address(arg2)][idx]].field_1536)
                                        if idx >= mem[ceil32(ceil32(arg4.length)) + ceil32(return_data.size) + 97]:
                                            revert with 0, 50
                                        mem[(32 * idx) + ceil32(ceil32(arg4.length)) + ceil32(return_data.size) + 129] = tokenOfOwnerByIndex[address(arg2)][idx]
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        continue 
                                    idx = 0
                                    s = 0
                                    while idx < mem[ceil32(ceil32(arg4.length)) + ceil32(return_data.size) + 97]:
                                        if idx >= mem[ceil32(ceil32(arg4.length)) + ceil32(return_data.size) + 97]:
                                            revert with 0, 50
                                        mem[0] = mem[(32 * idx) + ceil32(ceil32(arg4.length)) + ceil32(return_data.size) + 129]
                                        mem[32] = 552
                                        if not uint8(stor552[mem[(32 * idx) + ceil32(ceil32(arg4.length)) + ceil32(return_data.size) + 129]].field_1544):
                                            if idx == -1:
                                                revert with 0, 17
                                            idx = idx + 1
                                            s = s
                                            continue 
                                        if s == -1:
                                            revert with 0, 17
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = s + 1
                                        continue 
                                    if s >= 2:
                                        revert with 0, 'Each holder can not hold more than 2 Gladiators'
                                    if not arg1:
                                        stor154[arg3] = tokenByIndex.length
                                        tokenByIndex.length++
                                        stor72A1[stor153.length] = arg3
                                        if arg2:
                                            if arg2 == arg1:
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32614 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32614] == Mask(32, 224, mem[_32614])
                                                        if Mask(32, 224, mem[_32614]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[64] + mem[96] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32809 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32809] == Mask(32, 224, mem[_32809])
                                                        if Mask(32, 224, mem[_32809]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if not arg2:
                                                    revert with 0, 'ERC721: balance query for the zero address'
                                                tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                stor152[arg3] = balanceOf[address(arg2)]
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32616 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32616] == Mask(32, 224, mem[_32616])
                                                        if Mask(32, 224, mem[_32616]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[64] + mem[96] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32810 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32810] == Mask(32, 224, mem[_32810])
                                                        if Mask(32, 224, mem[_32810]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            if tokenByIndex.length < 1:
                                                revert with 0, 17
                                            if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                revert with 0, 50
                                            if stor154[arg3] >= tokenByIndex.length:
                                                revert with 0, 50
                                            tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                            stor154[stor153[stor153.length]] = stor154[arg3]
                                            stor154[arg3] = 0
                                            if not tokenByIndex.length:
                                                revert with 0, 49
                                            tokenByIndex[tokenByIndex.length] = 0
                                            tokenByIndex.length--
                                            approved[arg3] = 0
                                            if not ownerOf[arg3]:
                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                            emit Approval(ownerOf[arg3], 0, arg3);
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            balanceOf[address(arg1)]--
                                            if balanceOf[address(arg2)] > -2:
                                                revert with 0, 17
                                            balanceOf[address(arg2)]++
                                            mem[0] = arg3
                                            mem[32] = 103
                                            ownerOf[arg3] = arg2
                                            emit Transfer(arg1, arg2, arg3);
                                            if ext_code.size(arg2):
                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = msg.sender
                                                mem[mem[64] + 36] = arg1
                                                mem[mem[64] + 68] = arg3
                                                mem[mem[64] + 100] = 128
                                                mem[mem[64] + 132] = mem[96]
                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                if ceil32(mem[96]) <= mem[96]:
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _32618 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_32618] == Mask(32, 224, mem[_32618])
                                                    if Mask(32, 224, mem[_32618]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    mem[mem[64] + mem[96] + 164] = 0
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _32811 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_32811] == Mask(32, 224, mem[_32811])
                                                    if Mask(32, 224, mem[_32811]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                    else:
                                        if arg1 == arg2:
                                            if arg2:
                                                if arg2 == arg1:
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _32596 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_32596] == Mask(32, 224, mem[_32596])
                                                            if Mask(32, 224, mem[_32596]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[64] + mem[96] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _32800 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_32800] == Mask(32, 224, mem[_32800])
                                                            if Mask(32, 224, mem[_32800]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    if not arg2:
                                                        revert with 0, 'ERC721: balance query for the zero address'
                                                    tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                    stor152[arg3] = balanceOf[address(arg2)]
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _32598 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_32598] == Mask(32, 224, mem[_32598])
                                                            if Mask(32, 224, mem[_32598]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[64] + mem[96] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _32801 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_32801] == Mask(32, 224, mem[_32801])
                                                            if Mask(32, 224, mem[_32801]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if tokenByIndex.length < 1:
                                                    revert with 0, 17
                                                if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                    revert with 0, 50
                                                if stor154[arg3] >= tokenByIndex.length:
                                                    revert with 0, 50
                                                tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                stor154[stor153[stor153.length]] = stor154[arg3]
                                                stor154[arg3] = 0
                                                if not tokenByIndex.length:
                                                    revert with 0, 49
                                                tokenByIndex[tokenByIndex.length] = 0
                                                tokenByIndex.length--
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32600 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32600] == Mask(32, 224, mem[_32600])
                                                        if Mask(32, 224, mem[_32600]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[64] + mem[96] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32802 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32802] == Mask(32, 224, mem[_32802])
                                                        if Mask(32, 224, mem[_32802]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            if not arg1:
                                                revert with 0, 'ERC721: balance query for the zero address'
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            if balanceOf[address(arg1)] - 1 == stor152[arg3]:
                                                stor152[arg3] = 0
                                                tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                                                if arg2:
                                                    if arg2 == arg1:
                                                        approved[arg3] = 0
                                                        if not ownerOf[arg3]:
                                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                                        emit Approval(ownerOf[arg3], 0, arg3);
                                                        if balanceOf[address(arg1)] < 1:
                                                            revert with 0, 17
                                                        balanceOf[address(arg1)]--
                                                        if balanceOf[address(arg2)] > -2:
                                                            revert with 0, 17
                                                        balanceOf[address(arg2)]++
                                                        mem[0] = arg3
                                                        mem[32] = 103
                                                        ownerOf[arg3] = arg2
                                                        emit Transfer(arg1, arg2, arg3);
                                                        if ext_code.size(arg2):
                                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = msg.sender
                                                            mem[mem[64] + 36] = arg1
                                                            mem[mem[64] + 68] = arg3
                                                            mem[mem[64] + 100] = 128
                                                            mem[mem[64] + 132] = mem[96]
                                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                            if ceil32(mem[96]) <= mem[96]:
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _32602 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_32602] == Mask(32, 224, mem[_32602])
                                                                if Mask(32, 224, mem[_32602]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            else:
                                                                mem[mem[64] + mem[96] + 164] = 0
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _32803 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_32803] == Mask(32, 224, mem[_32803])
                                                                if Mask(32, 224, mem[_32803]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        if not arg2:
                                                            revert with 0, 'ERC721: balance query for the zero address'
                                                        tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                        stor152[arg3] = balanceOf[address(arg2)]
                                                        approved[arg3] = 0
                                                        if not ownerOf[arg3]:
                                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                                        emit Approval(ownerOf[arg3], 0, arg3);
                                                        if balanceOf[address(arg1)] < 1:
                                                            revert with 0, 17
                                                        balanceOf[address(arg1)]--
                                                        if balanceOf[address(arg2)] > -2:
                                                            revert with 0, 17
                                                        balanceOf[address(arg2)]++
                                                        mem[0] = arg3
                                                        mem[32] = 103
                                                        ownerOf[arg3] = arg2
                                                        emit Transfer(arg1, arg2, arg3);
                                                        if ext_code.size(arg2):
                                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = msg.sender
                                                            mem[mem[64] + 36] = arg1
                                                            mem[mem[64] + 68] = arg3
                                                            mem[mem[64] + 100] = 128
                                                            mem[mem[64] + 132] = mem[96]
                                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                            if ceil32(mem[96]) <= mem[96]:
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _32604 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_32604] == Mask(32, 224, mem[_32604])
                                                                if Mask(32, 224, mem[_32604]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            else:
                                                                mem[mem[64] + mem[96] + 164] = 0
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _32804 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_32804] == Mask(32, 224, mem[_32804])
                                                                if Mask(32, 224, mem[_32804]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    if tokenByIndex.length < 1:
                                                        revert with 0, 17
                                                    if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                        revert with 0, 50
                                                    if stor154[arg3] >= tokenByIndex.length:
                                                        revert with 0, 50
                                                    tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                    stor154[stor153[stor153.length]] = stor154[arg3]
                                                    stor154[arg3] = 0
                                                    if not tokenByIndex.length:
                                                        revert with 0, 49
                                                    tokenByIndex[tokenByIndex.length] = 0
                                                    tokenByIndex.length--
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _32606 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_32606] == Mask(32, 224, mem[_32606])
                                                            if Mask(32, 224, mem[_32606]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[64] + mem[96] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _32805 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_32805] == Mask(32, 224, mem[_32805])
                                                            if Mask(32, 224, mem[_32805]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                tokenOfOwnerByIndex[address(arg1)][stor152[arg3]] = tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1]
                                                stor152[stor151[address(arg1)][stor104[address(arg1)] - 1]] = stor152[arg3]
                                                stor152[arg3] = 0
                                                tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                                                if arg2:
                                                    if arg2 == arg1:
                                                        approved[arg3] = 0
                                                        if not ownerOf[arg3]:
                                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                                        emit Approval(ownerOf[arg3], 0, arg3);
                                                        if balanceOf[address(arg1)] < 1:
                                                            revert with 0, 17
                                                        balanceOf[address(arg1)]--
                                                        if balanceOf[address(arg2)] > -2:
                                                            revert with 0, 17
                                                        balanceOf[address(arg2)]++
                                                        mem[0] = arg3
                                                        mem[32] = 103
                                                        ownerOf[arg3] = arg2
                                                        emit Transfer(arg1, arg2, arg3);
                                                        if ext_code.size(arg2):
                                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = msg.sender
                                                            mem[mem[64] + 36] = arg1
                                                            mem[mem[64] + 68] = arg3
                                                            mem[mem[64] + 100] = 128
                                                            mem[mem[64] + 132] = mem[96]
                                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                            if ceil32(mem[96]) <= mem[96]:
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _32608 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_32608] == Mask(32, 224, mem[_32608])
                                                                if Mask(32, 224, mem[_32608]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            else:
                                                                mem[mem[64] + mem[96] + 164] = 0
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _32806 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_32806] == Mask(32, 224, mem[_32806])
                                                                if Mask(32, 224, mem[_32806]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        if not arg2:
                                                            revert with 0, 'ERC721: balance query for the zero address'
                                                        tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                        stor152[arg3] = balanceOf[address(arg2)]
                                                        approved[arg3] = 0
                                                        if not ownerOf[arg3]:
                                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                                        emit Approval(ownerOf[arg3], 0, arg3);
                                                        if balanceOf[address(arg1)] < 1:
                                                            revert with 0, 17
                                                        balanceOf[address(arg1)]--
                                                        if balanceOf[address(arg2)] > -2:
                                                            revert with 0, 17
                                                        balanceOf[address(arg2)]++
                                                        mem[0] = arg3
                                                        mem[32] = 103
                                                        ownerOf[arg3] = arg2
                                                        emit Transfer(arg1, arg2, arg3);
                                                        if ext_code.size(arg2):
                                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = msg.sender
                                                            mem[mem[64] + 36] = arg1
                                                            mem[mem[64] + 68] = arg3
                                                            mem[mem[64] + 100] = 128
                                                            mem[mem[64] + 132] = mem[96]
                                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                            if ceil32(mem[96]) <= mem[96]:
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _32610 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_32610] == Mask(32, 224, mem[_32610])
                                                                if Mask(32, 224, mem[_32610]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            else:
                                                                mem[mem[64] + mem[96] + 164] = 0
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _32807 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_32807] == Mask(32, 224, mem[_32807])
                                                                if Mask(32, 224, mem[_32807]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    if tokenByIndex.length < 1:
                                                        revert with 0, 17
                                                    if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                        revert with 0, 50
                                                    if stor154[arg3] >= tokenByIndex.length:
                                                        revert with 0, 50
                                                    tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                    stor154[stor153[stor153.length]] = stor154[arg3]
                                                    stor154[arg3] = 0
                                                    if not tokenByIndex.length:
                                                        revert with 0, 49
                                                    tokenByIndex[tokenByIndex.length] = 0
                                                    tokenByIndex.length--
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _32612 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_32612] == Mask(32, 224, mem[_32612])
                                                            if Mask(32, 224, mem[_32612]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[64] + mem[96] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _32808 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_32808] == Mask(32, 224, mem[_32808])
                                                            if Mask(32, 224, mem[_32808]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
        else:
            if not stor106[stor103[arg3]][address(msg.sender)]:
                revert with 0, 'ERC721: transfer caller is not owner nor approved'
            if not ownerOf[arg3]:
                revert with 0, 'ERC721: owner query for nonexistent token'
            if ownerOf[arg3] != arg1:
                revert with 0, 'ERC721: transfer from incorrect owner'
            if not arg2:
                revert with 0, 'ERC721: transfer to the zero address'
            if owner == arg2:
                if not arg1:
                    stor154[arg3] = tokenByIndex.length
                    tokenByIndex.length++
                    stor72A1[stor153.length] = arg3
                else:
                    if arg1 != arg2:
                        if not arg1:
                            revert with 0, 'ERC721: balance query for the zero address'
                        if balanceOf[address(arg1)] < 1:
                            revert with 0, 17
                        if balanceOf[address(arg1)] - 1 != stor152[arg3]:
                            tokenOfOwnerByIndex[address(arg1)][stor152[arg3]] = tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1]
                            stor152[stor151[address(arg1)][stor104[address(arg1)] - 1]] = stor152[arg3]
                        stor152[arg3] = 0
                        tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                if arg2:
                    if arg2 != arg1:
                        if not arg2:
                            revert with 0, 'ERC721: balance query for the zero address'
                        tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                        stor152[arg3] = balanceOf[address(arg2)]
                else:
                    if tokenByIndex.length < 1:
                        revert with 0, 17
                    if tokenByIndex.length - 1 >= tokenByIndex.length:
                        revert with 0, 50
                    if stor154[arg3] >= tokenByIndex.length:
                        revert with 0, 50
                    tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                    stor154[stor153[stor153.length]] = stor154[arg3]
                    stor154[arg3] = 0
                    if not tokenByIndex.length:
                        revert with 0, 49
                    tokenByIndex[tokenByIndex.length] = 0
                    tokenByIndex.length--
                approved[arg3] = 0
                if not ownerOf[arg3]:
                    revert with 0, 'ERC721: owner query for nonexistent token'
                emit Approval(ownerOf[arg3], 0, arg3);
                if balanceOf[address(arg1)] < 1:
                    revert with 0, 17
                balanceOf[address(arg1)]--
                if balanceOf[address(arg2)] > -2:
                    revert with 0, 17
                balanceOf[address(arg2)]++
                ownerOf[arg3] = arg2
                emit Transfer(arg1, arg2, arg3);
                if ext_code.size(arg2):
                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                         gas gas_remaining wei
                        args msg.sender, address(arg1), arg3, Array(len=arg4.length, data=arg4[all])
                    if not ext_call.success:
                        if not return_data.size:
                            if not arg4.length:
                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                            revert with arg4[all]
                        if not return_data.size:
                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                    if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
            else:
                if bool(uint8(stor552[arg3].field_1536)) != 1:
                    if not arg1:
                        stor154[arg3] = tokenByIndex.length
                        tokenByIndex.length++
                        stor72A1[stor153.length] = arg3
                    else:
                        if arg1 != arg2:
                            if not arg1:
                                revert with 0, 'ERC721: balance query for the zero address'
                            if balanceOf[address(arg1)] < 1:
                                revert with 0, 17
                            if balanceOf[address(arg1)] - 1 != stor152[arg3]:
                                tokenOfOwnerByIndex[address(arg1)][stor152[arg3]] = tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1]
                                stor152[stor151[address(arg1)][stor104[address(arg1)] - 1]] = stor152[arg3]
                            stor152[arg3] = 0
                            tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                    if arg2:
                        if arg2 != arg1:
                            if not arg2:
                                revert with 0, 'ERC721: balance query for the zero address'
                            tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                            stor152[arg3] = balanceOf[address(arg2)]
                    else:
                        if tokenByIndex.length < 1:
                            revert with 0, 17
                        if tokenByIndex.length - 1 >= tokenByIndex.length:
                            revert with 0, 50
                        if stor154[arg3] >= tokenByIndex.length:
                            revert with 0, 50
                        tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                        stor154[stor153[stor153.length]] = stor154[arg3]
                        stor154[arg3] = 0
                        if not tokenByIndex.length:
                            revert with 0, 49
                        tokenByIndex[tokenByIndex.length] = 0
                        tokenByIndex.length--
                    approved[arg3] = 0
                    if not ownerOf[arg3]:
                        revert with 0, 'ERC721: owner query for nonexistent token'
                    emit Approval(ownerOf[arg3], 0, arg3);
                    if balanceOf[address(arg1)] < 1:
                        revert with 0, 17
                    balanceOf[address(arg1)]--
                    if balanceOf[address(arg2)] > -2:
                        revert with 0, 17
                    balanceOf[address(arg2)]++
                    ownerOf[arg3] = arg2
                    emit Transfer(arg1, arg2, arg3);
                    if ext_code.size(arg2):
                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                             gas gas_remaining wei
                            args msg.sender, address(arg1), arg3, Array(len=arg4.length, data=arg4[all])
                        if not ext_call.success:
                            if not return_data.size:
                                if not arg4.length:
                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                revert with arg4[all]
                            if not return_data.size:
                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                        if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                else:
                    if bool(uint8(stor552[arg3].field_1544)) != 1:
                        if not arg1:
                            stor154[arg3] = tokenByIndex.length
                            tokenByIndex.length++
                            stor72A1[stor153.length] = arg3
                        else:
                            if arg1 != arg2:
                                if not arg1:
                                    revert with 0, 'ERC721: balance query for the zero address'
                                if balanceOf[address(arg1)] < 1:
                                    revert with 0, 17
                                if balanceOf[address(arg1)] - 1 != stor152[arg3]:
                                    tokenOfOwnerByIndex[address(arg1)][stor152[arg3]] = tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1]
                                    stor152[stor151[address(arg1)][stor104[address(arg1)] - 1]] = stor152[arg3]
                                stor152[arg3] = 0
                                tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                        if arg2:
                            if arg2 != arg1:
                                if not arg2:
                                    revert with 0, 'ERC721: balance query for the zero address'
                                tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                stor152[arg3] = balanceOf[address(arg2)]
                        else:
                            if tokenByIndex.length < 1:
                                revert with 0, 17
                            if tokenByIndex.length - 1 >= tokenByIndex.length:
                                revert with 0, 50
                            if stor154[arg3] >= tokenByIndex.length:
                                revert with 0, 50
                            tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                            stor154[stor153[stor153.length]] = stor154[arg3]
                            stor154[arg3] = 0
                            if not tokenByIndex.length:
                                revert with 0, 49
                            tokenByIndex[tokenByIndex.length] = 0
                            tokenByIndex.length--
                        approved[arg3] = 0
                        if not ownerOf[arg3]:
                            revert with 0, 'ERC721: owner query for nonexistent token'
                        emit Approval(ownerOf[arg3], 0, arg3);
                        if balanceOf[address(arg1)] < 1:
                            revert with 0, 17
                        balanceOf[address(arg1)]--
                        if balanceOf[address(arg2)] > -2:
                            revert with 0, 17
                        balanceOf[address(arg2)]++
                        ownerOf[arg3] = arg2
                        emit Transfer(arg1, arg2, arg3);
                        if ext_code.size(arg2):
                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args msg.sender, address(arg1), arg3, Array(len=arg4.length, data=arg4[all])
                            if not ext_call.success:
                                if not return_data.size:
                                    if not arg4.length:
                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                    revert with arg4[all]
                                if not return_data.size:
                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                            if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                    else:
                        if not liquidityPoolManagerImplementationAddress:
                            if not arg2:
                                revert with 0, 'ERC721: balance query for the zero address'
                            if balanceOf[address(arg2)] > test266151307():
                                revert with 0, 65
                            mem[ceil32(ceil32(arg4.length)) + 97] = balanceOf[address(arg2)]
                            mem[64] = ceil32(ceil32(arg4.length)) + (32 * balanceOf[address(arg2)]) + 129
                            if not balanceOf[address(arg2)]:
                                idx = 0
                                while idx < balanceOf[address(arg2)]:
                                    if not arg2:
                                        revert with 0, 'ERC721: balance query for the zero address'
                                    if idx >= balanceOf[address(arg2)]:
                                        revert with 0, 'ERC721Enumerable: owner index out of bounds'
                                    if tokenOfOwnerByIndex[address(arg2)][idx] <= 0:
                                        revert with 0, 'Troops: Id must be higher than zero'
                                    mem[0] = tokenOfOwnerByIndex[address(arg2)][idx]
                                    mem[32] = 552
                                    _16481 = mem[64]
                                    mem[64] = mem[64] + 256
                                    mem[_16481] = stor552[stor151[address(arg2)][idx]].field_0
                                    if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                            revert with 0, 34
                                        _17769 = mem[64]
                                        mem[64] = mem[64] + ceil32(uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) + 32
                                        mem[_17769] = uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                                revert with 0, 34
                                            if Mask(256, -1, stor552[stor151[address(arg2)][idx]].field_256):
                                                if 31 >= uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5:
                                                    mem[_17769 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                else:
                                                    mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                    mem[_17769 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                    s = _17769 + 32
                                                    t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                    while _17769 + (uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) > s:
                                                        mem[s + 32] = stor1[t].field_0
                                                        s = s + 32
                                                        t = t + 1
                                                        continue 
                                        else:
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                                revert with 0, 34
                                            if stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                if 31 >= stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                    mem[_17769 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                else:
                                                    mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                    mem[_17769 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                    s = _17769 + 32
                                                    t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                    while _17769 + stor552[stor151[address(arg2)][idx]].field_257 % 128 > s:
                                                        mem[s + 32] = stor1[t].field_0
                                                        s = s + 32
                                                        t = t + 1
                                                        continue 
                                        mem[_16481 + 32] = _17769
                                    else:
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                            revert with 0, 34
                                        _17820 = mem[64]
                                        mem[64] = mem[64] + ceil32(stor552[stor151[address(arg2)][idx]].field_257 % 128) + 32
                                        mem[_17820] = stor552[stor151[address(arg2)][idx]].field_257 % 128
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                                revert with 0, 34
                                            if Mask(256, -1, stor552[stor151[address(arg2)][idx]].field_256):
                                                if 31 >= uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5:
                                                    mem[_17820 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                else:
                                                    mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                    mem[_17820 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                    s = _17820 + 32
                                                    t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                    while _17820 + (uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) > s:
                                                        mem[s + 32] = stor1[t].field_0
                                                        s = s + 32
                                                        t = t + 1
                                                        continue 
                                        else:
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                                revert with 0, 34
                                            if stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                if 31 >= stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                    mem[_17820 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                else:
                                                    mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                    mem[_17820 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                    s = _17820 + 32
                                                    t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                    while _17820 + stor552[stor151[address(arg2)][idx]].field_257 % 128 > s:
                                                        mem[s + 32] = stor1[t].field_0
                                                        s = s + 32
                                                        t = t + 1
                                                        continue 
                                        mem[_16481 + 32] = _17820
                                    mem[_16481 + 64] = stor552[stor151[address(arg2)][idx]].field_512
                                    mem[_16481 + 96] = stor552[stor151[address(arg2)][idx]].field_768
                                    mem[_16481 + 128] = stor552[stor151[address(arg2)][idx]].field_1024
                                    mem[_16481 + 160] = stor552[stor151[address(arg2)][idx]].field_1280
                                    mem[_16481 + 192] = bool(uint8(stor552[stor151[address(arg2)][idx]].field_1536))
                                    mem[_16481 + 224] = bool(uint8(stor552[stor151[address(arg2)][idx]].field_1544))
                                    require uint8(stor552[stor151[address(arg2)][idx]].field_1536)
                                    if idx >= mem[ceil32(ceil32(arg4.length)) + 97]:
                                        revert with 0, 50
                                    mem[(32 * idx) + ceil32(ceil32(arg4.length)) + 129] = tokenOfOwnerByIndex[address(arg2)][idx]
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    continue 
                                idx = 0
                                s = 0
                                while idx < mem[ceil32(ceil32(arg4.length)) + 97]:
                                    if idx >= mem[ceil32(ceil32(arg4.length)) + 97]:
                                        revert with 0, 50
                                    mem[0] = mem[(32 * idx) + ceil32(ceil32(arg4.length)) + 129]
                                    mem[32] = 552
                                    if not uint8(stor552[mem[(32 * idx) + ceil32(ceil32(arg4.length)) + 129]].field_1544):
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = s
                                        continue 
                                    if s == -1:
                                        revert with 0, 17
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    s = s + 1
                                    continue 
                                if s >= 2:
                                    revert with 0, 'Each holder can not hold more than 2 Gladiators'
                                if not arg1:
                                    stor154[arg3] = tokenByIndex.length
                                    tokenByIndex.length++
                                    stor72A1[stor153.length] = arg3
                                    if arg2:
                                        if arg2 == arg1:
                                            approved[arg3] = 0
                                            if not ownerOf[arg3]:
                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                            emit Approval(ownerOf[arg3], 0, arg3);
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            balanceOf[address(arg1)]--
                                            if balanceOf[address(arg2)] > -2:
                                                revert with 0, 17
                                            balanceOf[address(arg2)]++
                                            mem[0] = arg3
                                            mem[32] = 103
                                            ownerOf[arg3] = arg2
                                            emit Transfer(arg1, arg2, arg3);
                                            if ext_code.size(arg2):
                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = msg.sender
                                                mem[mem[64] + 36] = arg1
                                                mem[mem[64] + 68] = arg3
                                                mem[mem[64] + 100] = 128
                                                mem[mem[64] + 132] = mem[96]
                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                if ceil32(mem[96]) <= mem[96]:
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _32638 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_32638] == Mask(32, 224, mem[_32638])
                                                    if Mask(32, 224, mem[_32638]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    mem[mem[64] + mem[96] + 164] = 0
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _32821 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_32821] == Mask(32, 224, mem[_32821])
                                                    if Mask(32, 224, mem[_32821]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            if not arg2:
                                                revert with 0, 'ERC721: balance query for the zero address'
                                            tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                            stor152[arg3] = balanceOf[address(arg2)]
                                            approved[arg3] = 0
                                            if not ownerOf[arg3]:
                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                            emit Approval(ownerOf[arg3], 0, arg3);
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            balanceOf[address(arg1)]--
                                            if balanceOf[address(arg2)] > -2:
                                                revert with 0, 17
                                            balanceOf[address(arg2)]++
                                            mem[0] = arg3
                                            mem[32] = 103
                                            ownerOf[arg3] = arg2
                                            emit Transfer(arg1, arg2, arg3);
                                            if ext_code.size(arg2):
                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = msg.sender
                                                mem[mem[64] + 36] = arg1
                                                mem[mem[64] + 68] = arg3
                                                mem[mem[64] + 100] = 128
                                                mem[mem[64] + 132] = mem[96]
                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                if ceil32(mem[96]) <= mem[96]:
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _32640 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_32640] == Mask(32, 224, mem[_32640])
                                                    if Mask(32, 224, mem[_32640]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    mem[mem[64] + mem[96] + 164] = 0
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _32822 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_32822] == Mask(32, 224, mem[_32822])
                                                    if Mask(32, 224, mem[_32822]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                    else:
                                        if tokenByIndex.length < 1:
                                            revert with 0, 17
                                        if tokenByIndex.length - 1 >= tokenByIndex.length:
                                            revert with 0, 50
                                        if stor154[arg3] >= tokenByIndex.length:
                                            revert with 0, 50
                                        tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                        stor154[stor153[stor153.length]] = stor154[arg3]
                                        stor154[arg3] = 0
                                        if not tokenByIndex.length:
                                            revert with 0, 49
                                        tokenByIndex[tokenByIndex.length] = 0
                                        tokenByIndex.length--
                                        approved[arg3] = 0
                                        if not ownerOf[arg3]:
                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                        emit Approval(ownerOf[arg3], 0, arg3);
                                        if balanceOf[address(arg1)] < 1:
                                            revert with 0, 17
                                        balanceOf[address(arg1)]--
                                        if balanceOf[address(arg2)] > -2:
                                            revert with 0, 17
                                        balanceOf[address(arg2)]++
                                        mem[0] = arg3
                                        mem[32] = 103
                                        ownerOf[arg3] = arg2
                                        emit Transfer(arg1, arg2, arg3);
                                        if ext_code.size(arg2):
                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = msg.sender
                                            mem[mem[64] + 36] = arg1
                                            mem[mem[64] + 68] = arg3
                                            mem[mem[64] + 100] = 128
                                            mem[mem[64] + 132] = mem[96]
                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                            if ceil32(mem[96]) <= mem[96]:
                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    if not return_data.size:
                                                        if not mem[96]:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with memory
                                                          from 128
                                                           len mem[96]
                                                    if not return_data.size:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _32642 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                require mem[_32642] == Mask(32, 224, mem[_32642])
                                                if Mask(32, 224, mem[_32642]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                mem[mem[64] + mem[96] + 164] = 0
                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    if not return_data.size:
                                                        if not mem[96]:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with memory
                                                          from 128
                                                           len mem[96]
                                                    if not return_data.size:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _32823 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                require mem[_32823] == Mask(32, 224, mem[_32823])
                                                if Mask(32, 224, mem[_32823]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                else:
                                    if arg1 == arg2:
                                        if arg2:
                                            if arg2 == arg1:
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32620 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32620] == Mask(32, 224, mem[_32620])
                                                        if Mask(32, 224, mem[_32620]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[64] + mem[96] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32812 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32812] == Mask(32, 224, mem[_32812])
                                                        if Mask(32, 224, mem[_32812]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if not arg2:
                                                    revert with 0, 'ERC721: balance query for the zero address'
                                                tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                stor152[arg3] = balanceOf[address(arg2)]
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32622 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32622] == Mask(32, 224, mem[_32622])
                                                        if Mask(32, 224, mem[_32622]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[64] + mem[96] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32813 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32813] == Mask(32, 224, mem[_32813])
                                                        if Mask(32, 224, mem[_32813]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            if tokenByIndex.length < 1:
                                                revert with 0, 17
                                            if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                revert with 0, 50
                                            if stor154[arg3] >= tokenByIndex.length:
                                                revert with 0, 50
                                            tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                            stor154[stor153[stor153.length]] = stor154[arg3]
                                            stor154[arg3] = 0
                                            if not tokenByIndex.length:
                                                revert with 0, 49
                                            tokenByIndex[tokenByIndex.length] = 0
                                            tokenByIndex.length--
                                            approved[arg3] = 0
                                            if not ownerOf[arg3]:
                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                            emit Approval(ownerOf[arg3], 0, arg3);
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            balanceOf[address(arg1)]--
                                            if balanceOf[address(arg2)] > -2:
                                                revert with 0, 17
                                            balanceOf[address(arg2)]++
                                            mem[0] = arg3
                                            mem[32] = 103
                                            ownerOf[arg3] = arg2
                                            emit Transfer(arg1, arg2, arg3);
                                            if ext_code.size(arg2):
                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = msg.sender
                                                mem[mem[64] + 36] = arg1
                                                mem[mem[64] + 68] = arg3
                                                mem[mem[64] + 100] = 128
                                                mem[mem[64] + 132] = mem[96]
                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                if ceil32(mem[96]) <= mem[96]:
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _32624 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_32624] == Mask(32, 224, mem[_32624])
                                                    if Mask(32, 224, mem[_32624]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    mem[mem[64] + mem[96] + 164] = 0
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _32814 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_32814] == Mask(32, 224, mem[_32814])
                                                    if Mask(32, 224, mem[_32814]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                    else:
                                        if not arg1:
                                            revert with 0, 'ERC721: balance query for the zero address'
                                        if balanceOf[address(arg1)] < 1:
                                            revert with 0, 17
                                        if balanceOf[address(arg1)] - 1 == stor152[arg3]:
                                            stor152[arg3] = 0
                                            tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                                            if arg2:
                                                if arg2 == arg1:
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _32626 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_32626] == Mask(32, 224, mem[_32626])
                                                            if Mask(32, 224, mem[_32626]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[64] + mem[96] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _32815 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_32815] == Mask(32, 224, mem[_32815])
                                                            if Mask(32, 224, mem[_32815]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    if not arg2:
                                                        revert with 0, 'ERC721: balance query for the zero address'
                                                    tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                    stor152[arg3] = balanceOf[address(arg2)]
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _32628 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_32628] == Mask(32, 224, mem[_32628])
                                                            if Mask(32, 224, mem[_32628]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[64] + mem[96] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _32816 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_32816] == Mask(32, 224, mem[_32816])
                                                            if Mask(32, 224, mem[_32816]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if tokenByIndex.length < 1:
                                                    revert with 0, 17
                                                if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                    revert with 0, 50
                                                if stor154[arg3] >= tokenByIndex.length:
                                                    revert with 0, 50
                                                tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                stor154[stor153[stor153.length]] = stor154[arg3]
                                                stor154[arg3] = 0
                                                if not tokenByIndex.length:
                                                    revert with 0, 49
                                                tokenByIndex[tokenByIndex.length] = 0
                                                tokenByIndex.length--
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32630 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32630] == Mask(32, 224, mem[_32630])
                                                        if Mask(32, 224, mem[_32630]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[64] + mem[96] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32817 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32817] == Mask(32, 224, mem[_32817])
                                                        if Mask(32, 224, mem[_32817]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            tokenOfOwnerByIndex[address(arg1)][stor152[arg3]] = tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1]
                                            stor152[stor151[address(arg1)][stor104[address(arg1)] - 1]] = stor152[arg3]
                                            stor152[arg3] = 0
                                            tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                                            if arg2:
                                                if arg2 == arg1:
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _32632 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_32632] == Mask(32, 224, mem[_32632])
                                                            if Mask(32, 224, mem[_32632]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[64] + mem[96] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _32818 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_32818] == Mask(32, 224, mem[_32818])
                                                            if Mask(32, 224, mem[_32818]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    if not arg2:
                                                        revert with 0, 'ERC721: balance query for the zero address'
                                                    tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                    stor152[arg3] = balanceOf[address(arg2)]
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _32634 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_32634] == Mask(32, 224, mem[_32634])
                                                            if Mask(32, 224, mem[_32634]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[64] + mem[96] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _32819 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_32819] == Mask(32, 224, mem[_32819])
                                                            if Mask(32, 224, mem[_32819]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if tokenByIndex.length < 1:
                                                    revert with 0, 17
                                                if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                    revert with 0, 50
                                                if stor154[arg3] >= tokenByIndex.length:
                                                    revert with 0, 50
                                                tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                stor154[stor153[stor153.length]] = stor154[arg3]
                                                stor154[arg3] = 0
                                                if not tokenByIndex.length:
                                                    revert with 0, 49
                                                tokenByIndex[tokenByIndex.length] = 0
                                                tokenByIndex.length--
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32636 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32636] == Mask(32, 224, mem[_32636])
                                                        if Mask(32, 224, mem[_32636]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[64] + mem[96] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32820 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32820] == Mask(32, 224, mem[_32820])
                                                        if Mask(32, 224, mem[_32820]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                            else:
                                mem[ceil32(ceil32(arg4.length)) + 129 len 32 * balanceOf[address(arg2)]] = call.data[calldata.size len 32 * balanceOf[address(arg2)]]
                                idx = 0
                                while idx < balanceOf[address(arg2)]:
                                    if not arg2:
                                        revert with 0, 'ERC721: balance query for the zero address'
                                    if idx >= balanceOf[address(arg2)]:
                                        revert with 0, 'ERC721Enumerable: owner index out of bounds'
                                    if tokenOfOwnerByIndex[address(arg2)][idx] <= 0:
                                        revert with 0, 'Troops: Id must be higher than zero'
                                    mem[0] = tokenOfOwnerByIndex[address(arg2)][idx]
                                    mem[32] = 552
                                    _16484 = mem[64]
                                    mem[64] = mem[64] + 256
                                    mem[_16484] = stor552[stor151[address(arg2)][idx]].field_0
                                    if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                            revert with 0, 34
                                        _17771 = mem[64]
                                        mem[64] = mem[64] + ceil32(uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) + 32
                                        mem[_17771] = uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                                revert with 0, 34
                                            if Mask(256, -1, stor552[stor151[address(arg2)][idx]].field_256):
                                                if 31 >= uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5:
                                                    mem[_17771 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                else:
                                                    mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                    mem[_17771 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                    s = _17771 + 32
                                                    t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                    while _17771 + (uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) > s:
                                                        mem[s + 32] = stor1[t].field_0
                                                        s = s + 32
                                                        t = t + 1
                                                        continue 
                                        else:
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                                revert with 0, 34
                                            if stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                if 31 >= stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                    mem[_17771 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                else:
                                                    mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                    mem[_17771 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                    s = _17771 + 32
                                                    t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                    while _17771 + stor552[stor151[address(arg2)][idx]].field_257 % 128 > s:
                                                        mem[s + 32] = stor1[t].field_0
                                                        s = s + 32
                                                        t = t + 1
                                                        continue 
                                        mem[_16484 + 32] = _17771
                                    else:
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                            revert with 0, 34
                                        _17825 = mem[64]
                                        mem[64] = mem[64] + ceil32(stor552[stor151[address(arg2)][idx]].field_257 % 128) + 32
                                        mem[_17825] = stor552[stor151[address(arg2)][idx]].field_257 % 128
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                                revert with 0, 34
                                            if Mask(256, -1, stor552[stor151[address(arg2)][idx]].field_256):
                                                if 31 >= uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5:
                                                    mem[_17825 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                else:
                                                    mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                    mem[_17825 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                    s = _17825 + 32
                                                    t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                    while _17825 + (uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) > s:
                                                        mem[s + 32] = stor1[t].field_0
                                                        s = s + 32
                                                        t = t + 1
                                                        continue 
                                        else:
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                                revert with 0, 34
                                            if stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                if 31 >= stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                    mem[_17825 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                else:
                                                    mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                    mem[_17825 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                    s = _17825 + 32
                                                    t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                    while _17825 + stor552[stor151[address(arg2)][idx]].field_257 % 128 > s:
                                                        mem[s + 32] = stor1[t].field_0
                                                        s = s + 32
                                                        t = t + 1
                                                        continue 
                                        mem[_16484 + 32] = _17825
                                    mem[_16484 + 64] = stor552[stor151[address(arg2)][idx]].field_512
                                    mem[_16484 + 96] = stor552[stor151[address(arg2)][idx]].field_768
                                    mem[_16484 + 128] = stor552[stor151[address(arg2)][idx]].field_1024
                                    mem[_16484 + 160] = stor552[stor151[address(arg2)][idx]].field_1280
                                    mem[_16484 + 192] = bool(uint8(stor552[stor151[address(arg2)][idx]].field_1536))
                                    mem[_16484 + 224] = bool(uint8(stor552[stor151[address(arg2)][idx]].field_1544))
                                    require uint8(stor552[stor151[address(arg2)][idx]].field_1536)
                                    if idx >= mem[ceil32(ceil32(arg4.length)) + 97]:
                                        revert with 0, 50
                                    mem[(32 * idx) + ceil32(ceil32(arg4.length)) + 129] = tokenOfOwnerByIndex[address(arg2)][idx]
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    continue 
                                idx = 0
                                s = 0
                                while idx < mem[ceil32(ceil32(arg4.length)) + 97]:
                                    if idx >= mem[ceil32(ceil32(arg4.length)) + 97]:
                                        revert with 0, 50
                                    mem[0] = mem[(32 * idx) + ceil32(ceil32(arg4.length)) + 129]
                                    mem[32] = 552
                                    if not uint8(stor552[mem[(32 * idx) + ceil32(ceil32(arg4.length)) + 129]].field_1544):
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = s
                                        continue 
                                    if s == -1:
                                        revert with 0, 17
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    s = s + 1
                                    continue 
                                if s >= 2:
                                    revert with 0, 'Each holder can not hold more than 2 Gladiators'
                                if not arg1:
                                    stor154[arg3] = tokenByIndex.length
                                    tokenByIndex.length++
                                    stor72A1[stor153.length] = arg3
                                    if arg2:
                                        if arg2 == arg1:
                                            approved[arg3] = 0
                                            if not ownerOf[arg3]:
                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                            emit Approval(ownerOf[arg3], 0, arg3);
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            balanceOf[address(arg1)]--
                                            if balanceOf[address(arg2)] > -2:
                                                revert with 0, 17
                                            balanceOf[address(arg2)]++
                                            mem[0] = arg3
                                            mem[32] = 103
                                            ownerOf[arg3] = arg2
                                            emit Transfer(arg1, arg2, arg3);
                                            if ext_code.size(arg2):
                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = msg.sender
                                                mem[mem[64] + 36] = arg1
                                                mem[mem[64] + 68] = arg3
                                                mem[mem[64] + 100] = 128
                                                mem[mem[64] + 132] = mem[96]
                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                if ceil32(mem[96]) <= mem[96]:
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _32662 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_32662] == Mask(32, 224, mem[_32662])
                                                    if Mask(32, 224, mem[_32662]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    mem[mem[64] + mem[96] + 164] = 0
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _32833 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_32833] == Mask(32, 224, mem[_32833])
                                                    if Mask(32, 224, mem[_32833]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            if not arg2:
                                                revert with 0, 'ERC721: balance query for the zero address'
                                            tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                            stor152[arg3] = balanceOf[address(arg2)]
                                            approved[arg3] = 0
                                            if not ownerOf[arg3]:
                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                            emit Approval(ownerOf[arg3], 0, arg3);
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            balanceOf[address(arg1)]--
                                            if balanceOf[address(arg2)] > -2:
                                                revert with 0, 17
                                            balanceOf[address(arg2)]++
                                            mem[0] = arg3
                                            mem[32] = 103
                                            ownerOf[arg3] = arg2
                                            emit Transfer(arg1, arg2, arg3);
                                            if ext_code.size(arg2):
                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = msg.sender
                                                mem[mem[64] + 36] = arg1
                                                mem[mem[64] + 68] = arg3
                                                mem[mem[64] + 100] = 128
                                                mem[mem[64] + 132] = mem[96]
                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                if ceil32(mem[96]) <= mem[96]:
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _32664 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_32664] == Mask(32, 224, mem[_32664])
                                                    if Mask(32, 224, mem[_32664]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    mem[mem[64] + mem[96] + 164] = 0
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _32834 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_32834] == Mask(32, 224, mem[_32834])
                                                    if Mask(32, 224, mem[_32834]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                    else:
                                        if tokenByIndex.length < 1:
                                            revert with 0, 17
                                        if tokenByIndex.length - 1 >= tokenByIndex.length:
                                            revert with 0, 50
                                        if stor154[arg3] >= tokenByIndex.length:
                                            revert with 0, 50
                                        tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                        stor154[stor153[stor153.length]] = stor154[arg3]
                                        stor154[arg3] = 0
                                        if not tokenByIndex.length:
                                            revert with 0, 49
                                        tokenByIndex[tokenByIndex.length] = 0
                                        tokenByIndex.length--
                                        approved[arg3] = 0
                                        if not ownerOf[arg3]:
                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                        emit Approval(ownerOf[arg3], 0, arg3);
                                        if balanceOf[address(arg1)] < 1:
                                            revert with 0, 17
                                        balanceOf[address(arg1)]--
                                        if balanceOf[address(arg2)] > -2:
                                            revert with 0, 17
                                        balanceOf[address(arg2)]++
                                        mem[0] = arg3
                                        mem[32] = 103
                                        ownerOf[arg3] = arg2
                                        emit Transfer(arg1, arg2, arg3);
                                        if ext_code.size(arg2):
                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = msg.sender
                                            mem[mem[64] + 36] = arg1
                                            mem[mem[64] + 68] = arg3
                                            mem[mem[64] + 100] = 128
                                            mem[mem[64] + 132] = mem[96]
                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                            if ceil32(mem[96]) <= mem[96]:
                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    if not return_data.size:
                                                        if not mem[96]:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with memory
                                                          from 128
                                                           len mem[96]
                                                    if not return_data.size:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _32666 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                require mem[_32666] == Mask(32, 224, mem[_32666])
                                                if Mask(32, 224, mem[_32666]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                mem[mem[64] + mem[96] + 164] = 0
                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    if not return_data.size:
                                                        if not mem[96]:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with memory
                                                          from 128
                                                           len mem[96]
                                                    if not return_data.size:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _32835 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                require mem[_32835] == Mask(32, 224, mem[_32835])
                                                if Mask(32, 224, mem[_32835]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                else:
                                    if arg1 == arg2:
                                        if arg2:
                                            if arg2 == arg1:
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32644 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32644] == Mask(32, 224, mem[_32644])
                                                        if Mask(32, 224, mem[_32644]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[64] + mem[96] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32824 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32824] == Mask(32, 224, mem[_32824])
                                                        if Mask(32, 224, mem[_32824]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if not arg2:
                                                    revert with 0, 'ERC721: balance query for the zero address'
                                                tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                stor152[arg3] = balanceOf[address(arg2)]
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32646 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32646] == Mask(32, 224, mem[_32646])
                                                        if Mask(32, 224, mem[_32646]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[64] + mem[96] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32825 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32825] == Mask(32, 224, mem[_32825])
                                                        if Mask(32, 224, mem[_32825]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            if tokenByIndex.length < 1:
                                                revert with 0, 17
                                            if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                revert with 0, 50
                                            if stor154[arg3] >= tokenByIndex.length:
                                                revert with 0, 50
                                            tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                            stor154[stor153[stor153.length]] = stor154[arg3]
                                            stor154[arg3] = 0
                                            if not tokenByIndex.length:
                                                revert with 0, 49
                                            tokenByIndex[tokenByIndex.length] = 0
                                            tokenByIndex.length--
                                            approved[arg3] = 0
                                            if not ownerOf[arg3]:
                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                            emit Approval(ownerOf[arg3], 0, arg3);
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            balanceOf[address(arg1)]--
                                            if balanceOf[address(arg2)] > -2:
                                                revert with 0, 17
                                            balanceOf[address(arg2)]++
                                            mem[0] = arg3
                                            mem[32] = 103
                                            ownerOf[arg3] = arg2
                                            emit Transfer(arg1, arg2, arg3);
                                            if ext_code.size(arg2):
                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = msg.sender
                                                mem[mem[64] + 36] = arg1
                                                mem[mem[64] + 68] = arg3
                                                mem[mem[64] + 100] = 128
                                                mem[mem[64] + 132] = mem[96]
                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                if ceil32(mem[96]) <= mem[96]:
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _32648 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_32648] == Mask(32, 224, mem[_32648])
                                                    if Mask(32, 224, mem[_32648]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    mem[mem[64] + mem[96] + 164] = 0
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _32826 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_32826] == Mask(32, 224, mem[_32826])
                                                    if Mask(32, 224, mem[_32826]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                    else:
                                        if not arg1:
                                            revert with 0, 'ERC721: balance query for the zero address'
                                        if balanceOf[address(arg1)] < 1:
                                            revert with 0, 17
                                        if balanceOf[address(arg1)] - 1 == stor152[arg3]:
                                            stor152[arg3] = 0
                                            tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                                            if arg2:
                                                if arg2 == arg1:
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _32650 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_32650] == Mask(32, 224, mem[_32650])
                                                            if Mask(32, 224, mem[_32650]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[64] + mem[96] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _32827 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_32827] == Mask(32, 224, mem[_32827])
                                                            if Mask(32, 224, mem[_32827]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    if not arg2:
                                                        revert with 0, 'ERC721: balance query for the zero address'
                                                    tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                    stor152[arg3] = balanceOf[address(arg2)]
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _32652 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_32652] == Mask(32, 224, mem[_32652])
                                                            if Mask(32, 224, mem[_32652]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[64] + mem[96] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _32828 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_32828] == Mask(32, 224, mem[_32828])
                                                            if Mask(32, 224, mem[_32828]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if tokenByIndex.length < 1:
                                                    revert with 0, 17
                                                if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                    revert with 0, 50
                                                if stor154[arg3] >= tokenByIndex.length:
                                                    revert with 0, 50
                                                tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                stor154[stor153[stor153.length]] = stor154[arg3]
                                                stor154[arg3] = 0
                                                if not tokenByIndex.length:
                                                    revert with 0, 49
                                                tokenByIndex[tokenByIndex.length] = 0
                                                tokenByIndex.length--
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32654 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32654] == Mask(32, 224, mem[_32654])
                                                        if Mask(32, 224, mem[_32654]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[64] + mem[96] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32829 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32829] == Mask(32, 224, mem[_32829])
                                                        if Mask(32, 224, mem[_32829]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            tokenOfOwnerByIndex[address(arg1)][stor152[arg3]] = tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1]
                                            stor152[stor151[address(arg1)][stor104[address(arg1)] - 1]] = stor152[arg3]
                                            stor152[arg3] = 0
                                            tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                                            if arg2:
                                                if arg2 == arg1:
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _32656 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_32656] == Mask(32, 224, mem[_32656])
                                                            if Mask(32, 224, mem[_32656]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[64] + mem[96] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _32830 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_32830] == Mask(32, 224, mem[_32830])
                                                            if Mask(32, 224, mem[_32830]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    if not arg2:
                                                        revert with 0, 'ERC721: balance query for the zero address'
                                                    tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                    stor152[arg3] = balanceOf[address(arg2)]
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _32658 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_32658] == Mask(32, 224, mem[_32658])
                                                            if Mask(32, 224, mem[_32658]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[64] + mem[96] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _32831 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_32831] == Mask(32, 224, mem[_32831])
                                                            if Mask(32, 224, mem[_32831]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if tokenByIndex.length < 1:
                                                    revert with 0, 17
                                                if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                    revert with 0, 50
                                                if stor154[arg3] >= tokenByIndex.length:
                                                    revert with 0, 50
                                                tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                stor154[stor153[stor153.length]] = stor154[arg3]
                                                stor154[arg3] = 0
                                                if not tokenByIndex.length:
                                                    revert with 0, 49
                                                tokenByIndex[tokenByIndex.length] = 0
                                                tokenByIndex.length--
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32660 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32660] == Mask(32, 224, mem[_32660])
                                                        if Mask(32, 224, mem[_32660]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[64] + mem[96] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32832 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32832] == Mask(32, 224, mem[_32832])
                                                        if Mask(32, 224, mem[_32832]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                        else:
                            mem[ceil32(ceil32(arg4.length)) + 101] = arg2
                            staticcall liquidityPoolManagerImplementationAddress.0xb278110f with:
                                    gas gas_remaining wei
                                   args arg2
                            mem[ceil32(ceil32(arg4.length)) + 97] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            if ext_call.return_data[0]:
                                if not arg1:
                                    stor154[arg3] = tokenByIndex.length
                                    tokenByIndex.length++
                                    stor72A1[stor153.length] = arg3
                                else:
                                    if arg1 != arg2:
                                        if not arg1:
                                            revert with 0, 'ERC721: balance query for the zero address'
                                        if balanceOf[address(arg1)] < 1:
                                            revert with 0, 17
                                        if balanceOf[address(arg1)] - 1 != stor152[arg3]:
                                            tokenOfOwnerByIndex[address(arg1)][stor152[arg3]] = tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1]
                                            stor152[stor151[address(arg1)][stor104[address(arg1)] - 1]] = stor152[arg3]
                                        stor152[arg3] = 0
                                        tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                                if arg2:
                                    if arg2 != arg1:
                                        if not arg2:
                                            revert with 0, 'ERC721: balance query for the zero address'
                                        tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                        stor152[arg3] = balanceOf[address(arg2)]
                                else:
                                    if tokenByIndex.length < 1:
                                        revert with 0, 17
                                    if tokenByIndex.length - 1 >= tokenByIndex.length:
                                        revert with 0, 50
                                    if stor154[arg3] >= tokenByIndex.length:
                                        revert with 0, 50
                                    tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                    stor154[stor153[stor153.length]] = stor154[arg3]
                                    stor154[arg3] = 0
                                    if not tokenByIndex.length:
                                        revert with 0, 49
                                    tokenByIndex[tokenByIndex.length] = 0
                                    tokenByIndex.length--
                                approved[arg3] = 0
                                if not ownerOf[arg3]:
                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                emit Approval(ownerOf[arg3], 0, arg3);
                                if balanceOf[address(arg1)] < 1:
                                    revert with 0, 17
                                balanceOf[address(arg1)]--
                                if balanceOf[address(arg2)] > -2:
                                    revert with 0, 17
                                balanceOf[address(arg2)]++
                                ownerOf[arg3] = arg2
                                emit Transfer(arg1, arg2, arg3);
                                if ext_code.size(arg2):
                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args msg.sender, address(arg1), arg3, Array(len=arg4.length, data=arg4[all])
                                    if not ext_call.success:
                                        if not return_data.size:
                                            if not arg4.length:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            revert with arg4[all]
                                        if not return_data.size:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                    if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                            else:
                                if not arg2:
                                    revert with 0, 'ERC721: balance query for the zero address'
                                if balanceOf[address(arg2)] > test266151307():
                                    revert with 0, 65
                                mem[ceil32(ceil32(arg4.length)) + ceil32(return_data.size) + 97] = balanceOf[address(arg2)]
                                mem[64] = ceil32(ceil32(arg4.length)) + ceil32(return_data.size) + (32 * balanceOf[address(arg2)]) + 129
                                if not balanceOf[address(arg2)]:
                                    idx = 0
                                    while idx < balanceOf[address(arg2)]:
                                        if not arg2:
                                            revert with 0, 'ERC721: balance query for the zero address'
                                        if idx >= balanceOf[address(arg2)]:
                                            revert with 0, 'ERC721Enumerable: owner index out of bounds'
                                        if tokenOfOwnerByIndex[address(arg2)][idx] <= 0:
                                            revert with 0, 'Troops: Id must be higher than zero'
                                        mem[0] = tokenOfOwnerByIndex[address(arg2)][idx]
                                        mem[32] = 552
                                        _16559 = mem[64]
                                        mem[64] = mem[64] + 256
                                        mem[_16559] = stor552[stor151[address(arg2)][idx]].field_0
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                                revert with 0, 34
                                            _17773 = mem[64]
                                            mem[64] = mem[64] + ceil32(uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) + 32
                                            mem[_17773] = uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                                if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                                    revert with 0, 34
                                                if Mask(256, -1, stor552[stor151[address(arg2)][idx]].field_256):
                                                    if 31 >= uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5:
                                                        mem[_17773 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                    else:
                                                        mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                        mem[_17773 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                        s = _17773 + 32
                                                        t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                        while _17773 + (uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) > s:
                                                            mem[s + 32] = stor1[t].field_0
                                                            s = s + 32
                                                            t = t + 1
                                                            continue 
                                            else:
                                                if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                                    revert with 0, 34
                                                if stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                    if 31 >= stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                        mem[_17773 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                    else:
                                                        mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                        mem[_17773 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                        s = _17773 + 32
                                                        t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                        while _17773 + stor552[stor151[address(arg2)][idx]].field_257 % 128 > s:
                                                            mem[s + 32] = stor1[t].field_0
                                                            s = s + 32
                                                            t = t + 1
                                                            continue 
                                            mem[_16559 + 32] = _17773
                                        else:
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                                revert with 0, 34
                                            _17830 = mem[64]
                                            mem[64] = mem[64] + ceil32(stor552[stor151[address(arg2)][idx]].field_257 % 128) + 32
                                            mem[_17830] = stor552[stor151[address(arg2)][idx]].field_257 % 128
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                                if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                                    revert with 0, 34
                                                if Mask(256, -1, stor552[stor151[address(arg2)][idx]].field_256):
                                                    if 31 >= uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5:
                                                        mem[_17830 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                    else:
                                                        mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                        mem[_17830 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                        s = _17830 + 32
                                                        t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                        while _17830 + (uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) > s:
                                                            mem[s + 32] = stor1[t].field_0
                                                            s = s + 32
                                                            t = t + 1
                                                            continue 
                                            else:
                                                if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                                    revert with 0, 34
                                                if stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                    if 31 >= stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                        mem[_17830 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                    else:
                                                        mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                        mem[_17830 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                        s = _17830 + 32
                                                        t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                        while _17830 + stor552[stor151[address(arg2)][idx]].field_257 % 128 > s:
                                                            mem[s + 32] = stor1[t].field_0
                                                            s = s + 32
                                                            t = t + 1
                                                            continue 
                                            mem[_16559 + 32] = _17830
                                        mem[_16559 + 64] = stor552[stor151[address(arg2)][idx]].field_512
                                        mem[_16559 + 96] = stor552[stor151[address(arg2)][idx]].field_768
                                        mem[_16559 + 128] = stor552[stor151[address(arg2)][idx]].field_1024
                                        mem[_16559 + 160] = stor552[stor151[address(arg2)][idx]].field_1280
                                        mem[_16559 + 192] = bool(uint8(stor552[stor151[address(arg2)][idx]].field_1536))
                                        mem[_16559 + 224] = bool(uint8(stor552[stor151[address(arg2)][idx]].field_1544))
                                        require uint8(stor552[stor151[address(arg2)][idx]].field_1536)
                                        if idx >= mem[ceil32(ceil32(arg4.length)) + ceil32(return_data.size) + 97]:
                                            revert with 0, 50
                                        mem[(32 * idx) + ceil32(ceil32(arg4.length)) + ceil32(return_data.size) + 129] = tokenOfOwnerByIndex[address(arg2)][idx]
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        continue 
                                    idx = 0
                                    s = 0
                                    while idx < mem[ceil32(ceil32(arg4.length)) + ceil32(return_data.size) + 97]:
                                        if idx >= mem[ceil32(ceil32(arg4.length)) + ceil32(return_data.size) + 97]:
                                            revert with 0, 50
                                        mem[0] = mem[(32 * idx) + ceil32(ceil32(arg4.length)) + ceil32(return_data.size) + 129]
                                        mem[32] = 552
                                        if not uint8(stor552[mem[(32 * idx) + ceil32(ceil32(arg4.length)) + ceil32(return_data.size) + 129]].field_1544):
                                            if idx == -1:
                                                revert with 0, 17
                                            idx = idx + 1
                                            s = s
                                            continue 
                                        if s == -1:
                                            revert with 0, 17
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = s + 1
                                        continue 
                                    if s >= 2:
                                        revert with 0, 'Each holder can not hold more than 2 Gladiators'
                                    if not arg1:
                                        stor154[arg3] = tokenByIndex.length
                                        tokenByIndex.length++
                                        stor72A1[stor153.length] = arg3
                                        if arg2:
                                            if arg2 == arg1:
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32686 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32686] == Mask(32, 224, mem[_32686])
                                                        if Mask(32, 224, mem[_32686]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[64] + mem[96] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32845 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32845] == Mask(32, 224, mem[_32845])
                                                        if Mask(32, 224, mem[_32845]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if not arg2:
                                                    revert with 0, 'ERC721: balance query for the zero address'
                                                tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                stor152[arg3] = balanceOf[address(arg2)]
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32688 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32688] == Mask(32, 224, mem[_32688])
                                                        if Mask(32, 224, mem[_32688]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[64] + mem[96] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32846 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32846] == Mask(32, 224, mem[_32846])
                                                        if Mask(32, 224, mem[_32846]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            if tokenByIndex.length < 1:
                                                revert with 0, 17
                                            if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                revert with 0, 50
                                            if stor154[arg3] >= tokenByIndex.length:
                                                revert with 0, 50
                                            tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                            stor154[stor153[stor153.length]] = stor154[arg3]
                                            stor154[arg3] = 0
                                            if not tokenByIndex.length:
                                                revert with 0, 49
                                            tokenByIndex[tokenByIndex.length] = 0
                                            tokenByIndex.length--
                                            approved[arg3] = 0
                                            if not ownerOf[arg3]:
                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                            emit Approval(ownerOf[arg3], 0, arg3);
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            balanceOf[address(arg1)]--
                                            if balanceOf[address(arg2)] > -2:
                                                revert with 0, 17
                                            balanceOf[address(arg2)]++
                                            mem[0] = arg3
                                            mem[32] = 103
                                            ownerOf[arg3] = arg2
                                            emit Transfer(arg1, arg2, arg3);
                                            if ext_code.size(arg2):
                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = msg.sender
                                                mem[mem[64] + 36] = arg1
                                                mem[mem[64] + 68] = arg3
                                                mem[mem[64] + 100] = 128
                                                mem[mem[64] + 132] = mem[96]
                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                if ceil32(mem[96]) <= mem[96]:
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _32690 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_32690] == Mask(32, 224, mem[_32690])
                                                    if Mask(32, 224, mem[_32690]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    mem[mem[64] + mem[96] + 164] = 0
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _32847 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_32847] == Mask(32, 224, mem[_32847])
                                                    if Mask(32, 224, mem[_32847]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                    else:
                                        if arg1 == arg2:
                                            if arg2:
                                                if arg2 == arg1:
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _32668 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_32668] == Mask(32, 224, mem[_32668])
                                                            if Mask(32, 224, mem[_32668]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[64] + mem[96] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _32836 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_32836] == Mask(32, 224, mem[_32836])
                                                            if Mask(32, 224, mem[_32836]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    if not arg2:
                                                        revert with 0, 'ERC721: balance query for the zero address'
                                                    tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                    stor152[arg3] = balanceOf[address(arg2)]
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _32670 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_32670] == Mask(32, 224, mem[_32670])
                                                            if Mask(32, 224, mem[_32670]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[64] + mem[96] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _32837 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_32837] == Mask(32, 224, mem[_32837])
                                                            if Mask(32, 224, mem[_32837]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if tokenByIndex.length < 1:
                                                    revert with 0, 17
                                                if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                    revert with 0, 50
                                                if stor154[arg3] >= tokenByIndex.length:
                                                    revert with 0, 50
                                                tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                stor154[stor153[stor153.length]] = stor154[arg3]
                                                stor154[arg3] = 0
                                                if not tokenByIndex.length:
                                                    revert with 0, 49
                                                tokenByIndex[tokenByIndex.length] = 0
                                                tokenByIndex.length--
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32672 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32672] == Mask(32, 224, mem[_32672])
                                                        if Mask(32, 224, mem[_32672]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[64] + mem[96] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32838 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32838] == Mask(32, 224, mem[_32838])
                                                        if Mask(32, 224, mem[_32838]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            if not arg1:
                                                revert with 0, 'ERC721: balance query for the zero address'
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            if balanceOf[address(arg1)] - 1 == stor152[arg3]:
                                                stor152[arg3] = 0
                                                tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                                                if arg2:
                                                    if arg2 == arg1:
                                                        approved[arg3] = 0
                                                        if not ownerOf[arg3]:
                                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                                        emit Approval(ownerOf[arg3], 0, arg3);
                                                        if balanceOf[address(arg1)] < 1:
                                                            revert with 0, 17
                                                        balanceOf[address(arg1)]--
                                                        if balanceOf[address(arg2)] > -2:
                                                            revert with 0, 17
                                                        balanceOf[address(arg2)]++
                                                        mem[0] = arg3
                                                        mem[32] = 103
                                                        ownerOf[arg3] = arg2
                                                        emit Transfer(arg1, arg2, arg3);
                                                        if ext_code.size(arg2):
                                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = msg.sender
                                                            mem[mem[64] + 36] = arg1
                                                            mem[mem[64] + 68] = arg3
                                                            mem[mem[64] + 100] = 128
                                                            mem[mem[64] + 132] = mem[96]
                                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                            if ceil32(mem[96]) <= mem[96]:
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _32674 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_32674] == Mask(32, 224, mem[_32674])
                                                                if Mask(32, 224, mem[_32674]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            else:
                                                                mem[mem[64] + mem[96] + 164] = 0
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _32839 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_32839] == Mask(32, 224, mem[_32839])
                                                                if Mask(32, 224, mem[_32839]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        if not arg2:
                                                            revert with 0, 'ERC721: balance query for the zero address'
                                                        tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                        stor152[arg3] = balanceOf[address(arg2)]
                                                        approved[arg3] = 0
                                                        if not ownerOf[arg3]:
                                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                                        emit Approval(ownerOf[arg3], 0, arg3);
                                                        if balanceOf[address(arg1)] < 1:
                                                            revert with 0, 17
                                                        balanceOf[address(arg1)]--
                                                        if balanceOf[address(arg2)] > -2:
                                                            revert with 0, 17
                                                        balanceOf[address(arg2)]++
                                                        mem[0] = arg3
                                                        mem[32] = 103
                                                        ownerOf[arg3] = arg2
                                                        emit Transfer(arg1, arg2, arg3);
                                                        if ext_code.size(arg2):
                                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = msg.sender
                                                            mem[mem[64] + 36] = arg1
                                                            mem[mem[64] + 68] = arg3
                                                            mem[mem[64] + 100] = 128
                                                            mem[mem[64] + 132] = mem[96]
                                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                            if ceil32(mem[96]) <= mem[96]:
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _32676 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_32676] == Mask(32, 224, mem[_32676])
                                                                if Mask(32, 224, mem[_32676]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            else:
                                                                mem[mem[64] + mem[96] + 164] = 0
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _32840 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_32840] == Mask(32, 224, mem[_32840])
                                                                if Mask(32, 224, mem[_32840]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    if tokenByIndex.length < 1:
                                                        revert with 0, 17
                                                    if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                        revert with 0, 50
                                                    if stor154[arg3] >= tokenByIndex.length:
                                                        revert with 0, 50
                                                    tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                    stor154[stor153[stor153.length]] = stor154[arg3]
                                                    stor154[arg3] = 0
                                                    if not tokenByIndex.length:
                                                        revert with 0, 49
                                                    tokenByIndex[tokenByIndex.length] = 0
                                                    tokenByIndex.length--
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _32678 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_32678] == Mask(32, 224, mem[_32678])
                                                            if Mask(32, 224, mem[_32678]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[64] + mem[96] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _32841 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_32841] == Mask(32, 224, mem[_32841])
                                                            if Mask(32, 224, mem[_32841]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                tokenOfOwnerByIndex[address(arg1)][stor152[arg3]] = tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1]
                                                stor152[stor151[address(arg1)][stor104[address(arg1)] - 1]] = stor152[arg3]
                                                stor152[arg3] = 0
                                                tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                                                if arg2:
                                                    if arg2 == arg1:
                                                        approved[arg3] = 0
                                                        if not ownerOf[arg3]:
                                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                                        emit Approval(ownerOf[arg3], 0, arg3);
                                                        if balanceOf[address(arg1)] < 1:
                                                            revert with 0, 17
                                                        balanceOf[address(arg1)]--
                                                        if balanceOf[address(arg2)] > -2:
                                                            revert with 0, 17
                                                        balanceOf[address(arg2)]++
                                                        mem[0] = arg3
                                                        mem[32] = 103
                                                        ownerOf[arg3] = arg2
                                                        emit Transfer(arg1, arg2, arg3);
                                                        if ext_code.size(arg2):
                                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = msg.sender
                                                            mem[mem[64] + 36] = arg1
                                                            mem[mem[64] + 68] = arg3
                                                            mem[mem[64] + 100] = 128
                                                            mem[mem[64] + 132] = mem[96]
                                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                            if ceil32(mem[96]) <= mem[96]:
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _32680 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_32680] == Mask(32, 224, mem[_32680])
                                                                if Mask(32, 224, mem[_32680]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            else:
                                                                mem[mem[64] + mem[96] + 164] = 0
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _32842 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_32842] == Mask(32, 224, mem[_32842])
                                                                if Mask(32, 224, mem[_32842]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        if not arg2:
                                                            revert with 0, 'ERC721: balance query for the zero address'
                                                        tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                        stor152[arg3] = balanceOf[address(arg2)]
                                                        approved[arg3] = 0
                                                        if not ownerOf[arg3]:
                                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                                        emit Approval(ownerOf[arg3], 0, arg3);
                                                        if balanceOf[address(arg1)] < 1:
                                                            revert with 0, 17
                                                        balanceOf[address(arg1)]--
                                                        if balanceOf[address(arg2)] > -2:
                                                            revert with 0, 17
                                                        balanceOf[address(arg2)]++
                                                        mem[0] = arg3
                                                        mem[32] = 103
                                                        ownerOf[arg3] = arg2
                                                        emit Transfer(arg1, arg2, arg3);
                                                        if ext_code.size(arg2):
                                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = msg.sender
                                                            mem[mem[64] + 36] = arg1
                                                            mem[mem[64] + 68] = arg3
                                                            mem[mem[64] + 100] = 128
                                                            mem[mem[64] + 132] = mem[96]
                                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                            if ceil32(mem[96]) <= mem[96]:
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _32682 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_32682] == Mask(32, 224, mem[_32682])
                                                                if Mask(32, 224, mem[_32682]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            else:
                                                                mem[mem[64] + mem[96] + 164] = 0
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _32843 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_32843] == Mask(32, 224, mem[_32843])
                                                                if Mask(32, 224, mem[_32843]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    if tokenByIndex.length < 1:
                                                        revert with 0, 17
                                                    if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                        revert with 0, 50
                                                    if stor154[arg3] >= tokenByIndex.length:
                                                        revert with 0, 50
                                                    tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                    stor154[stor153[stor153.length]] = stor154[arg3]
                                                    stor154[arg3] = 0
                                                    if not tokenByIndex.length:
                                                        revert with 0, 49
                                                    tokenByIndex[tokenByIndex.length] = 0
                                                    tokenByIndex.length--
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _32684 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_32684] == Mask(32, 224, mem[_32684])
                                                            if Mask(32, 224, mem[_32684]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[64] + mem[96] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _32844 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_32844] == Mask(32, 224, mem[_32844])
                                                            if Mask(32, 224, mem[_32844]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                else:
                                    mem[ceil32(ceil32(arg4.length)) + ceil32(return_data.size) + 129 len 32 * balanceOf[address(arg2)]] = call.data[calldata.size len 32 * balanceOf[address(arg2)]]
                                    idx = 0
                                    while idx < balanceOf[address(arg2)]:
                                        if not arg2:
                                            revert with 0, 'ERC721: balance query for the zero address'
                                        if idx >= balanceOf[address(arg2)]:
                                            revert with 0, 'ERC721Enumerable: owner index out of bounds'
                                        if tokenOfOwnerByIndex[address(arg2)][idx] <= 0:
                                            revert with 0, 'Troops: Id must be higher than zero'
                                        mem[0] = tokenOfOwnerByIndex[address(arg2)][idx]
                                        mem[32] = 552
                                        _16562 = mem[64]
                                        mem[64] = mem[64] + 256
                                        mem[_16562] = stor552[stor151[address(arg2)][idx]].field_0
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                                revert with 0, 34
                                            _17775 = mem[64]
                                            mem[64] = mem[64] + ceil32(uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) + 32
                                            mem[_17775] = uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                                if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                                    revert with 0, 34
                                                if Mask(256, -1, stor552[stor151[address(arg2)][idx]].field_256):
                                                    if 31 >= uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5:
                                                        mem[_17775 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                    else:
                                                        mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                        mem[_17775 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                        s = _17775 + 32
                                                        t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                        while _17775 + (uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) > s:
                                                            mem[s + 32] = stor1[t].field_0
                                                            s = s + 32
                                                            t = t + 1
                                                            continue 
                                            else:
                                                if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                                    revert with 0, 34
                                                if stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                    if 31 >= stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                        mem[_17775 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                    else:
                                                        mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                        mem[_17775 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                        s = _17775 + 32
                                                        t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                        while _17775 + stor552[stor151[address(arg2)][idx]].field_257 % 128 > s:
                                                            mem[s + 32] = stor1[t].field_0
                                                            s = s + 32
                                                            t = t + 1
                                                            continue 
                                            mem[_16562 + 32] = _17775
                                        else:
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                                revert with 0, 34
                                            _17835 = mem[64]
                                            mem[64] = mem[64] + ceil32(stor552[stor151[address(arg2)][idx]].field_257 % 128) + 32
                                            mem[_17835] = stor552[stor151[address(arg2)][idx]].field_257 % 128
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                                if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                                    revert with 0, 34
                                                if Mask(256, -1, stor552[stor151[address(arg2)][idx]].field_256):
                                                    if 31 >= uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5:
                                                        mem[_17835 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                    else:
                                                        mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                        mem[_17835 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                        s = _17835 + 32
                                                        t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                        while _17835 + (uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) > s:
                                                            mem[s + 32] = stor1[t].field_0
                                                            s = s + 32
                                                            t = t + 1
                                                            continue 
                                            else:
                                                if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                                    revert with 0, 34
                                                if stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                    if 31 >= stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                        mem[_17835 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                    else:
                                                        mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                        mem[_17835 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                        s = _17835 + 32
                                                        t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                        while _17835 + stor552[stor151[address(arg2)][idx]].field_257 % 128 > s:
                                                            mem[s + 32] = stor1[t].field_0
                                                            s = s + 32
                                                            t = t + 1
                                                            continue 
                                            mem[_16562 + 32] = _17835
                                        mem[_16562 + 64] = stor552[stor151[address(arg2)][idx]].field_512
                                        mem[_16562 + 96] = stor552[stor151[address(arg2)][idx]].field_768
                                        mem[_16562 + 128] = stor552[stor151[address(arg2)][idx]].field_1024
                                        mem[_16562 + 160] = stor552[stor151[address(arg2)][idx]].field_1280
                                        mem[_16562 + 192] = bool(uint8(stor552[stor151[address(arg2)][idx]].field_1536))
                                        mem[_16562 + 224] = bool(uint8(stor552[stor151[address(arg2)][idx]].field_1544))
                                        require uint8(stor552[stor151[address(arg2)][idx]].field_1536)
                                        if idx >= mem[ceil32(ceil32(arg4.length)) + ceil32(return_data.size) + 97]:
                                            revert with 0, 50
                                        mem[(32 * idx) + ceil32(ceil32(arg4.length)) + ceil32(return_data.size) + 129] = tokenOfOwnerByIndex[address(arg2)][idx]
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        continue 
                                    idx = 0
                                    s = 0
                                    while idx < mem[ceil32(ceil32(arg4.length)) + ceil32(return_data.size) + 97]:
                                        if idx >= mem[ceil32(ceil32(arg4.length)) + ceil32(return_data.size) + 97]:
                                            revert with 0, 50
                                        mem[0] = mem[(32 * idx) + ceil32(ceil32(arg4.length)) + ceil32(return_data.size) + 129]
                                        mem[32] = 552
                                        if not uint8(stor552[mem[(32 * idx) + ceil32(ceil32(arg4.length)) + ceil32(return_data.size) + 129]].field_1544):
                                            if idx == -1:
                                                revert with 0, 17
                                            idx = idx + 1
                                            s = s
                                            continue 
                                        if s == -1:
                                            revert with 0, 17
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = s + 1
                                        continue 
                                    if s >= 2:
                                        revert with 0, 'Each holder can not hold more than 2 Gladiators'
                                    if not arg1:
                                        stor154[arg3] = tokenByIndex.length
                                        tokenByIndex.length++
                                        stor72A1[stor153.length] = arg3
                                        if arg2:
                                            if arg2 == arg1:
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32710 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32710] == Mask(32, 224, mem[_32710])
                                                        if Mask(32, 224, mem[_32710]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[64] + mem[96] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32857 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32857] == Mask(32, 224, mem[_32857])
                                                        if Mask(32, 224, mem[_32857]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if not arg2:
                                                    revert with 0, 'ERC721: balance query for the zero address'
                                                tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                stor152[arg3] = balanceOf[address(arg2)]
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32712 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32712] == Mask(32, 224, mem[_32712])
                                                        if Mask(32, 224, mem[_32712]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[64] + mem[96] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32858 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32858] == Mask(32, 224, mem[_32858])
                                                        if Mask(32, 224, mem[_32858]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            if tokenByIndex.length < 1:
                                                revert with 0, 17
                                            if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                revert with 0, 50
                                            if stor154[arg3] >= tokenByIndex.length:
                                                revert with 0, 50
                                            tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                            stor154[stor153[stor153.length]] = stor154[arg3]
                                            stor154[arg3] = 0
                                            if not tokenByIndex.length:
                                                revert with 0, 49
                                            tokenByIndex[tokenByIndex.length] = 0
                                            tokenByIndex.length--
                                            approved[arg3] = 0
                                            if not ownerOf[arg3]:
                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                            emit Approval(ownerOf[arg3], 0, arg3);
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            balanceOf[address(arg1)]--
                                            if balanceOf[address(arg2)] > -2:
                                                revert with 0, 17
                                            balanceOf[address(arg2)]++
                                            mem[0] = arg3
                                            mem[32] = 103
                                            ownerOf[arg3] = arg2
                                            emit Transfer(arg1, arg2, arg3);
                                            if ext_code.size(arg2):
                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = msg.sender
                                                mem[mem[64] + 36] = arg1
                                                mem[mem[64] + 68] = arg3
                                                mem[mem[64] + 100] = 128
                                                mem[mem[64] + 132] = mem[96]
                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                if ceil32(mem[96]) <= mem[96]:
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _32714 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_32714] == Mask(32, 224, mem[_32714])
                                                    if Mask(32, 224, mem[_32714]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    mem[mem[64] + mem[96] + 164] = 0
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _32859 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_32859] == Mask(32, 224, mem[_32859])
                                                    if Mask(32, 224, mem[_32859]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                    else:
                                        if arg1 == arg2:
                                            if arg2:
                                                if arg2 == arg1:
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _32692 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_32692] == Mask(32, 224, mem[_32692])
                                                            if Mask(32, 224, mem[_32692]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[64] + mem[96] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _32848 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_32848] == Mask(32, 224, mem[_32848])
                                                            if Mask(32, 224, mem[_32848]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    if not arg2:
                                                        revert with 0, 'ERC721: balance query for the zero address'
                                                    tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                    stor152[arg3] = balanceOf[address(arg2)]
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _32694 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_32694] == Mask(32, 224, mem[_32694])
                                                            if Mask(32, 224, mem[_32694]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[64] + mem[96] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _32849 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_32849] == Mask(32, 224, mem[_32849])
                                                            if Mask(32, 224, mem[_32849]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if tokenByIndex.length < 1:
                                                    revert with 0, 17
                                                if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                    revert with 0, 50
                                                if stor154[arg3] >= tokenByIndex.length:
                                                    revert with 0, 50
                                                tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                stor154[stor153[stor153.length]] = stor154[arg3]
                                                stor154[arg3] = 0
                                                if not tokenByIndex.length:
                                                    revert with 0, 49
                                                tokenByIndex[tokenByIndex.length] = 0
                                                tokenByIndex.length--
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32696 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32696] == Mask(32, 224, mem[_32696])
                                                        if Mask(32, 224, mem[_32696]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[64] + mem[96] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _32850 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_32850] == Mask(32, 224, mem[_32850])
                                                        if Mask(32, 224, mem[_32850]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            if not arg1:
                                                revert with 0, 'ERC721: balance query for the zero address'
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            if balanceOf[address(arg1)] - 1 == stor152[arg3]:
                                                stor152[arg3] = 0
                                                tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                                                if arg2:
                                                    if arg2 == arg1:
                                                        approved[arg3] = 0
                                                        if not ownerOf[arg3]:
                                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                                        emit Approval(ownerOf[arg3], 0, arg3);
                                                        if balanceOf[address(arg1)] < 1:
                                                            revert with 0, 17
                                                        balanceOf[address(arg1)]--
                                                        if balanceOf[address(arg2)] > -2:
                                                            revert with 0, 17
                                                        balanceOf[address(arg2)]++
                                                        mem[0] = arg3
                                                        mem[32] = 103
                                                        ownerOf[arg3] = arg2
                                                        emit Transfer(arg1, arg2, arg3);
                                                        if ext_code.size(arg2):
                                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = msg.sender
                                                            mem[mem[64] + 36] = arg1
                                                            mem[mem[64] + 68] = arg3
                                                            mem[mem[64] + 100] = 128
                                                            mem[mem[64] + 132] = mem[96]
                                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                            if ceil32(mem[96]) <= mem[96]:
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _32698 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_32698] == Mask(32, 224, mem[_32698])
                                                                if Mask(32, 224, mem[_32698]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            else:
                                                                mem[mem[64] + mem[96] + 164] = 0
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _32851 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_32851] == Mask(32, 224, mem[_32851])
                                                                if Mask(32, 224, mem[_32851]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        if not arg2:
                                                            revert with 0, 'ERC721: balance query for the zero address'
                                                        tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                        stor152[arg3] = balanceOf[address(arg2)]
                                                        approved[arg3] = 0
                                                        if not ownerOf[arg3]:
                                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                                        emit Approval(ownerOf[arg3], 0, arg3);
                                                        if balanceOf[address(arg1)] < 1:
                                                            revert with 0, 17
                                                        balanceOf[address(arg1)]--
                                                        if balanceOf[address(arg2)] > -2:
                                                            revert with 0, 17
                                                        balanceOf[address(arg2)]++
                                                        mem[0] = arg3
                                                        mem[32] = 103
                                                        ownerOf[arg3] = arg2
                                                        emit Transfer(arg1, arg2, arg3);
                                                        if ext_code.size(arg2):
                                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = msg.sender
                                                            mem[mem[64] + 36] = arg1
                                                            mem[mem[64] + 68] = arg3
                                                            mem[mem[64] + 100] = 128
                                                            mem[mem[64] + 132] = mem[96]
                                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                            if ceil32(mem[96]) <= mem[96]:
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _32700 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_32700] == Mask(32, 224, mem[_32700])
                                                                if Mask(32, 224, mem[_32700]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            else:
                                                                mem[mem[64] + mem[96] + 164] = 0
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _32852 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_32852] == Mask(32, 224, mem[_32852])
                                                                if Mask(32, 224, mem[_32852]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    if tokenByIndex.length < 1:
                                                        revert with 0, 17
                                                    if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                        revert with 0, 50
                                                    if stor154[arg3] >= tokenByIndex.length:
                                                        revert with 0, 50
                                                    tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                    stor154[stor153[stor153.length]] = stor154[arg3]
                                                    stor154[arg3] = 0
                                                    if not tokenByIndex.length:
                                                        revert with 0, 49
                                                    tokenByIndex[tokenByIndex.length] = 0
                                                    tokenByIndex.length--
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _32702 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_32702] == Mask(32, 224, mem[_32702])
                                                            if Mask(32, 224, mem[_32702]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[64] + mem[96] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _32853 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_32853] == Mask(32, 224, mem[_32853])
                                                            if Mask(32, 224, mem[_32853]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                tokenOfOwnerByIndex[address(arg1)][stor152[arg3]] = tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1]
                                                stor152[stor151[address(arg1)][stor104[address(arg1)] - 1]] = stor152[arg3]
                                                stor152[arg3] = 0
                                                tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                                                if arg2:
                                                    if arg2 == arg1:
                                                        approved[arg3] = 0
                                                        if not ownerOf[arg3]:
                                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                                        emit Approval(ownerOf[arg3], 0, arg3);
                                                        if balanceOf[address(arg1)] < 1:
                                                            revert with 0, 17
                                                        balanceOf[address(arg1)]--
                                                        if balanceOf[address(arg2)] > -2:
                                                            revert with 0, 17
                                                        balanceOf[address(arg2)]++
                                                        mem[0] = arg3
                                                        mem[32] = 103
                                                        ownerOf[arg3] = arg2
                                                        emit Transfer(arg1, arg2, arg3);
                                                        if ext_code.size(arg2):
                                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = msg.sender
                                                            mem[mem[64] + 36] = arg1
                                                            mem[mem[64] + 68] = arg3
                                                            mem[mem[64] + 100] = 128
                                                            mem[mem[64] + 132] = mem[96]
                                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                            if ceil32(mem[96]) <= mem[96]:
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _32704 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_32704] == Mask(32, 224, mem[_32704])
                                                                if Mask(32, 224, mem[_32704]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            else:
                                                                mem[mem[64] + mem[96] + 164] = 0
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _32854 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_32854] == Mask(32, 224, mem[_32854])
                                                                if Mask(32, 224, mem[_32854]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        if not arg2:
                                                            revert with 0, 'ERC721: balance query for the zero address'
                                                        tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                        stor152[arg3] = balanceOf[address(arg2)]
                                                        approved[arg3] = 0
                                                        if not ownerOf[arg3]:
                                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                                        emit Approval(ownerOf[arg3], 0, arg3);
                                                        if balanceOf[address(arg1)] < 1:
                                                            revert with 0, 17
                                                        balanceOf[address(arg1)]--
                                                        if balanceOf[address(arg2)] > -2:
                                                            revert with 0, 17
                                                        balanceOf[address(arg2)]++
                                                        mem[0] = arg3
                                                        mem[32] = 103
                                                        ownerOf[arg3] = arg2
                                                        emit Transfer(arg1, arg2, arg3);
                                                        if ext_code.size(arg2):
                                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = msg.sender
                                                            mem[mem[64] + 36] = arg1
                                                            mem[mem[64] + 68] = arg3
                                                            mem[mem[64] + 100] = 128
                                                            mem[mem[64] + 132] = mem[96]
                                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                            if ceil32(mem[96]) <= mem[96]:
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _32706 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_32706] == Mask(32, 224, mem[_32706])
                                                                if Mask(32, 224, mem[_32706]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            else:
                                                                mem[mem[64] + mem[96] + 164] = 0
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _32855 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_32855] == Mask(32, 224, mem[_32855])
                                                                if Mask(32, 224, mem[_32855]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    if tokenByIndex.length < 1:
                                                        revert with 0, 17
                                                    if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                        revert with 0, 50
                                                    if stor154[arg3] >= tokenByIndex.length:
                                                        revert with 0, 50
                                                    tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                    stor154[stor153[stor153.length]] = stor154[arg3]
                                                    stor154[arg3] = 0
                                                    if not tokenByIndex.length:
                                                        revert with 0, 49
                                                    tokenByIndex[tokenByIndex.length] = 0
                                                    tokenByIndex.length--
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _32708 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_32708] == Mask(32, 224, mem[_32708])
                                                            if Mask(32, 224, mem[_32708]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[64] + mem[96] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _32856 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_32856] == Mask(32, 224, mem[_32856])
                                                            if Mask(32, 224, mem[_32856]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
}



}
